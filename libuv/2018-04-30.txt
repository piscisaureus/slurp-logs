{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-04-30T00:45:14.571Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-04-30T10:25:09.249Z","type":"quit"}
{"nick":"mylesborins","date":"2018-04-30T10:25:39.718Z","type":"join"}
{"nick":"ryzokuken","date":"2018-04-30T11:44:20.732Z","type":"join"}
{"nick":"AtumT","date":"2018-04-30T13:14:36.435Z","type":"join"}
{"nick":"whitlockjc","date":"2018-04-30T16:18:08.067Z","type":"join"}
{"nick":"whitlockjc","message":"Hello all!","date":"2018-04-30T16:18:13.256Z","type":"message"}
{"nick":"whitlockjc","reason":"Quit: Page closed","date":"2018-04-30T16:28:35.658Z","type":"quit"}
{"nick":"whitlockjc","date":"2018-04-30T17:03:03.963Z","type":"join"}
{"nick":"erikj","reason":"Ping timeout: 245 seconds","date":"2018-04-30T19:08:32.044Z","type":"quit"}
{"nick":"erikj","date":"2018-04-30T19:14:25.291Z","type":"join"}
{"nick":"erikj","reason":"Changing host","date":"2018-04-30T19:14:25.502Z","type":"quit"}
{"nick":"erikj","date":"2018-04-30T19:14:25.502Z","type":"join"}
{"nick":"omninonsense","reason":"Read error: Connection reset by peer","date":"2018-04-30T19:15:01.977Z","type":"quit"}
{"nick":"whitlockjc","reason":"Quit: Page closed","date":"2018-04-30T20:54:25.178Z","type":"quit"}
{"nick":"brett19","reason":"Ping timeout: 264 seconds","date":"2018-04-30T22:54:22.042Z","type":"quit"}
{"nick":"brett19","date":"2018-04-30T22:59:18.468Z","type":"join"}
{"nick":"whitlockjc","date":"2018-04-30T23:12:24.970Z","type":"join"}
{"nick":"cjihrig","date":"2018-04-30T23:17:27.477Z","type":"join"}
{"nick":"cjihrig","message":"whitlockjc ping","date":"2018-04-30T23:18:16.208Z","type":"message"}
{"nick":"whitlockjc","message":"pong","date":"2018-04-30T23:18:24.483Z","type":"message"}
{"nick":"whitlockjc","message":"So...on non-OS X *nix boxes, the btime test is always failing.  I'm trying to have someone else look into this to see if I'm wrong but I think that `uv_fs_req_cleanup` isn't doing what it's suppose to.","date":"2018-04-30T23:18:59.987Z","type":"message"}
{"nick":"cjihrig","message":"i saw an email, but then the comment was deleted, and then another comment. do you mean the statbuf?","date":"2018-04-30T23:19:28.725Z","type":"message"}
{"nick":"whitlockjc","message":"https://github.com/libuv/libuv/pull/590/files#diff-54b530892931c350c937210c2284374eR710","date":"2018-04-30T23:19:38.433Z","type":"message"}
{"nick":"whitlockjc","message":"Yes.  I think since we are reusing the same req for all tests that a previous statbuf is lingering so when stat is called during the test, it's getting details from a previous call.","date":"2018-04-30T23:20:08.265Z","type":"message"}
{"nick":"whitlockjc","message":"On non-macOS *nix, there is NO WAY that the birthtime should ever be altered so the stat should show the original birthtime...but it's not.","date":"2018-04-30T23:20:35.324Z","type":"message"}
{"nick":"cjihrig","message":"the statbuf isn't a pointer, just a struct holding a bunch of numbers. it's not cleaned up between calls. i would have thought that subsequent calls would overwrite it though","date":"2018-04-30T23:22:19.612Z","type":"message"}
{"nick":"whitlockjc","message":"That's what I saw but it _seems_ to be lingering only because when calling `uv_fs_utime_ex` before, the same btime passed is in the `uv_fs_stat` call.","date":"2018-04-30T23:23:29.257Z","type":"message"}
{"nick":"joocain2","reason":"Ping timeout: 255 seconds","date":"2018-04-30T23:24:43.928Z","type":"quit"}
{"nick":"whitlockjc","message":"I could be wrong but there is no way this should be happening.","date":"2018-04-30T23:27:18.167Z","type":"message"}
{"nick":"whitlockjc","message":"I'm not sure how `uv_fs_stat` can come up with a value that isn't possible.  If I use stat from the CLI, it shows the appropriate time that is not what the test was attempting to set.  In fact, the test can try to set whatever it wants but for non-macOS *nix, utime is used and it doesn't use btime nor can it alter it.","date":"2018-04-30T23:28:12.341Z","type":"message"}
{"nick":"whitlockjc","message":"Super confusing.","date":"2018-04-30T23:28:14.940Z","type":"message"}
{"nick":"whitlockjc","message":"What's interesting is on Windows it appears to be failing due to the same thing.","date":"2018-04-30T23:28:48.012Z","type":"message"}
{"nick":"whitlockjc","message":"And since I copied the working uv_utime and uv_futime tests, I would figure it would just work.  It did before merging to master.  ;)","date":"2018-04-30T23:29:24.580Z","type":"message"}
{"nick":"whitlockjc","message":"s/merge/rebasing/","date":"2018-04-30T23:29:40.500Z","type":"message"}
{"nick":"ryzokuken","reason":"Remote host closed the connection","date":"2018-04-30T23:29:55.766Z","type":"quit"}
{"nick":"whitlockjc","message":"I hope it's something stupid I did.  :)","date":"2018-04-30T23:30:01.054Z","type":"message"}
{"nick":"cjihrig","message":"is NAN getting passed anywhere it shouldn't be?","date":"2018-04-30T23:31:52.120Z","type":"message"}
{"nick":"whitlockjc","message":"No.  I've updated the tests to no longer use math.h since other OSes didn't support it properly (SmartOS, ...).  I'm using -1 now.","date":"2018-04-30T23:32:40.480Z","type":"message"}
{"nick":"whitlockjc","message":"In the CI builds, some *nix boxes were complaining about NAN and/or isnan.  Just simplified things to remove it.","date":"2018-04-30T23:33:54.769Z","type":"message"}
{"nick":"whitlockjc","message":"It was only used once, by this new function for checking utime results.","date":"2018-04-30T23:34:08.428Z","type":"message"}
{"nick":"joocain2","date":"2018-04-30T23:34:08.754Z","type":"join"}
{"nick":"cjihrig","message":"just out of curiosity, do the tests pass if you don't reuse the same request struct?","date":"2018-04-30T23:38:16.335Z","type":"message"}
{"nick":"whitlockjc","message":"I think I was wrong about that.  Looking at it, check_utime_ex runs its own `uv_fs_stat` and does not reuse the `req`.  But...that should be impossible.","date":"2018-04-30T23:39:48.005Z","type":"message"}
{"nick":"cjihrig","message":"nothing is jumping out at me at the moment. i'm not really in a position to try to debug too much right now (on vacation), but i'm happy to work through this with you if you can't get to the bottom of it","date":"2018-04-30T23:48:57.320Z","type":"message"}
{"nick":"whitlockjc","message":"No worries.  I've been stumped on this for a bit.  I've tried various things and I don't see an execution path that makes this even possible, yet it's happening.  ;)","date":"2018-04-30T23:49:37.303Z","type":"message"}
{"nick":"whitlockjc","message":"Enjoy your vacation.","date":"2018-04-30T23:49:40.978Z","type":"message"}
{"nick":"cjihrig","message":"thanks :-D","date":"2018-04-30T23:49:49.246Z","type":"message"}
