{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-15T00:34:17.804Z","type":"quit"}
{"nick":"sgimeno","reason":"Ping timeout: 240 seconds","date":"2018-03-15T05:23:33.152Z","type":"quit"}
{"nick":"sgimeno","date":"2018-03-15T05:30:34.212Z","type":"join"}
{"nick":"qard","date":"2018-03-15T05:56:33.352Z","type":"join"}
{"nick":"qard","reason":"Ping timeout: 260 seconds","date":"2018-03-15T06:01:49.333Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-15T10:25:10.458Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-15T10:25:41.047Z","type":"join"}
{"nick":"listenmore","reason":"Remote host closed the connection","date":"2018-03-15T10:43:34.647Z","type":"quit"}
{"nick":"listenmore","date":"2018-03-15T10:44:05.680Z","type":"join"}
{"nick":"toxedvirus","date":"2018-03-15T11:25:31.795Z","type":"join"}
{"nick":"txdv","reason":"Ping timeout: 260 seconds","date":"2018-03-15T11:28:55.036Z","type":"quit"}
{"nick":"listenmore","reason":"Remote host closed the connection","date":"2018-03-15T11:32:04.977Z","type":"quit"}
{"nick":"listenmore","date":"2018-03-15T11:32:41.366Z","type":"join"}
{"nick":"AtumT","date":"2018-03-15T12:21:48.289Z","type":"join"}
{"nick":"listenmore","reason":"Read error: Connection reset by peer","date":"2018-03-15T13:41:40.662Z","type":"quit"}
{"nick":"listenmore","date":"2018-03-15T13:42:08.544Z","type":"join"}
{"nick":"qard","date":"2018-03-15T16:18:20.330Z","type":"join"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-15T17:25:27.239Z","type":"quit"}
{"nick":"qard","date":"2018-03-15T17:37:33.994Z","type":"join"}
{"nick":"qard","reason":"Client Quit","date":"2018-03-15T17:40:32.394Z","type":"quit"}
{"nick":"qard","date":"2018-03-15T17:42:16.748Z","type":"join"}
{"nick":"qard","reason":"Ping timeout: 240 seconds","date":"2018-03-15T19:18:57.829Z","type":"quit"}
{"nick":"listenmore","reason":"Remote host closed the connection","date":"2018-03-15T21:31:39.750Z","type":"quit"}
{"nick":"listenmore","date":"2018-03-15T21:32:10.959Z","type":"join"}
{"nick":"sandro","date":"2018-03-15T22:19:58.951Z","type":"join"}
{"nick":"sandro","message":"hi","date":"2018-03-15T22:20:02.106Z","type":"message"}
{"nick":"sandro","message":"I'm getting a crash in uv__run_timers() >> uv_timer_again() >> uv_timer_start() >> heap_insert()","date":"2018-03-15T22:21:14.600Z","type":"message"}
{"nick":"sandro","message":"the crash happens upon *child = newnode because child is 0x8. if I do (gdb) p *heap gives $7 = {min = 0x0, nelts = 2}","date":"2018-03-15T22:22:28.832Z","type":"message"}
{"nick":"indutny","message":"sandro: use after free?","date":"2018-03-15T23:36:42.767Z","type":"message"}
{"nick":"indutny","message":"could it be that you're freeing the `uv_timer_t` too early?","date":"2018-03-15T23:36:50.115Z","type":"message"}
{"nick":"indutny","message":"try running it with ASAN or under valgrind","date":"2018-03-15T23:36:56.201Z","type":"message"}
{"nick":"sandro","message":"i have been suspecting that","date":"2018-03-15T23:49:37.048Z","type":"message"}
{"nick":"sandro","message":"i ran with the latest valgring and the latest gcc 7.3's asan","date":"2018-03-15T23:49:51.971Z","type":"message"}
{"nick":"sandro","message":"nothing until it happens","date":"2018-03-15T23:49:59.315Z","type":"message"}
{"nick":"sandro","message":"i wonder if it could be some timer handle that i have on the stack","date":"2018-03-15T23:50:35.347Z","type":"message"}
{"nick":"sandro","message":"in my tests","date":"2018-03-15T23:50:40.311Z","type":"message"}
{"nick":"sandro","message":"maybe now the timing has changed with my latest code change","date":"2018-03-15T23:50:50.940Z","type":"message"}
{"nick":"sandro","message":"and the timers don't expire before the stack gets unrolled","date":"2018-03-15T23:50:59.789Z","type":"message"}
{"nick":"sandro","message":"i should malloc all of my handles","date":"2018-03-15T23:53:21.292Z","type":"message"}
