{"nick":"drorb","reason":"Ping timeout: 272 seconds","date":"2019-08-16T00:03:02.624Z","type":"quit"}
{"nick":"SferaDev","reason":"Ping timeout: 245 seconds","date":"2019-08-16T00:03:47.167Z","type":"quit"}
{"nick":"leatherface416","date":"2019-08-16T00:04:11.451Z","type":"join"}
{"nick":"heyitsra_","reason":"Ping timeout: 268 seconds","date":"2019-08-16T00:04:26.602Z","type":"quit"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2019-08-16T00:05:41.084Z","type":"quit"}
{"nick":"leatherface416","reason":"Client Quit","date":"2019-08-16T00:06:13.075Z","type":"quit"}
{"nick":"heyitsrama","date":"2019-08-16T00:06:48.077Z","type":"join"}
{"nick":"OnkelTem","reason":"Quit: WeeChat 1.9.1","date":"2019-08-16T00:06:48.203Z","type":"quit"}
{"nick":"Lcfvs","message":"I tried to use it but even if my cachedData isn't rejected, I don't see any change with/without it","date":"2019-08-16T00:12:00.841Z","type":"message"}
{"nick":"ensyde_","date":"2019-08-16T00:12:28.123Z","type":"join"}
{"nick":"Sven_vB","message":"why would eslint trigger \"26:2   error  Extra semicolon               semi\" in my package.json (which only has 25 lines btw) but not foo.json? https://travis-ci.org/mk-pmb/try-eslint-plugin-package-json-privacy-mgmt-js/jobs/572532710","date":"2019-08-16T00:13:03.315Z","type":"message"}
{"nick":"Sven_vB","message":"Lcfvs, what's the \"script\" object?","date":"2019-08-16T00:14:00.845Z","type":"message"}
{"nick":"Lcfvs","message":"Sven_vB it's an instance of vm.Script ;)","date":"2019-08-16T00:14:55.343Z","type":"message"}
{"nick":"Sven_vB","message":"oh so this one https://nodejs.org/api/vm.html#vm_script_createcacheddata","date":"2019-08-16T00:15:36.375Z","type":"message"}
{"nick":"ensyde","reason":"Ping timeout: 264 seconds","date":"2019-08-16T00:15:40.071Z","type":"quit"}
{"nick":"Lcfvs","message":"yep","date":"2019-08-16T00:15:43.663Z","type":"message"}
{"nick":"Lcfvs","message":"Sven_vB for your eslint problems, in your IDE, you can configure it to fix all at once, in your entire project","date":"2019-08-16T00:16:24.352Z","type":"message"}
{"nick":"Lcfvs","message":";)","date":"2019-08-16T00:16:26.649Z","type":"message"}
{"nick":"Lcfvs","message":"automatically","date":"2019-08-16T00:16:40.583Z","type":"message"}
{"nick":"Sven_vB","message":"it's not useful to change the quotes in my package.json to single quotes. :P","date":"2019-08-16T00:16:50.178Z","type":"message"}
{"nick":"Sven_vB","message":"neither to add a semicolon at the end","date":"2019-08-16T00:17:09.439Z","type":"message"}
{"nick":"Sven_vB","message":"oh wait actually there is none.","date":"2019-08-16T00:17:18.109Z","type":"message"}
{"nick":"falafel","reason":"Ping timeout: 244 seconds","date":"2019-08-16T00:17:29.544Z","type":"quit"}
{"nick":"Sven_vB","message":"it complains about too much semicolon still","date":"2019-08-16T00:17:37.195Z","type":"message"}
{"nick":"Lcfvs","message":"oh, sorry, misread","date":"2019-08-16T00:17:55.427Z","type":"message"}
{"nick":"Sven_vB","message":"Lcfvs, did you supply the cached buffer alongside your script code?","date":"2019-08-16T00:18:04.945Z","type":"message"}
{"nick":"Lcfvs","message":"yes, and the `script.cachedDataRejected === false`","date":"2019-08-16T00:19:08.622Z","type":"message"}
{"nick":"Lcfvs","message":"then not rejected","date":"2019-08-16T00:19:15.361Z","type":"message"}
{"nick":"Sven_vB","message":"afaik you should supply either code or a cachedData.","date":"2019-08-16T00:19:38.032Z","type":"message"}
{"nick":"Sven_vB","message":"it's basically save game + load game; if you load a previous game you don't need init code.","date":"2019-08-16T00:20:24.583Z","type":"message"}
{"nick":"Cabanossi","reason":"Quit: Bye, bye...","date":"2019-08-16T00:22:09.475Z","type":"quit"}
{"nick":"Lcfvs","message":"but my incremental test restarts to 0, even with/without cached","date":"2019-08-16T00:22:10.696Z","type":"message"}
{"nick":"Sven_vB","message":"that's odd. could you share the code?","date":"2019-08-16T00:22:46.079Z","type":"message"}
{"nick":"Lcfvs","message":"sorry for the delay, it's what I'm preparing ^^ https://hastebin.com/igiviquyet.js","date":"2019-08-16T00:23:48.948Z","type":"message"}
{"nick":"Lcfvs","message":"don't worry about the `cwd` module, it's just a `fs` wrapper","date":"2019-08-16T00:25:04.185Z","type":"message"}
{"nick":"heyitsra_","date":"2019-08-16T00:25:04.272Z","type":"join"}
{"nick":"Lcfvs","message":";)","date":"2019-08-16T00:25:07.879Z","type":"message"}
{"nick":"Lcfvs","message":"and the comments are a trick to make a switch, by adding/removing a `/` to the first comment line","date":"2019-08-16T00:26:07.782Z","type":"message"}
{"nick":"lord|","reason":"Quit: WeeChat 2.5","date":"2019-08-16T00:26:54.557Z","type":"quit"}
{"nick":"Sven_vB","message":"can't see it anyway here. their \"just text\" button has no effect, so I'd probably need a full browser to get the plaintext version. very thoughtful webmaster.","date":"2019-08-16T00:26:54.724Z","type":"message"}
{"nick":"Lcfvs","message":"`//*` runs the first code block and `/*` runs the second in place of the first","date":"2019-08-16T00:28:07.290Z","type":"message"}
{"nick":"Lcfvs","message":"hastebin doesn't works for you ?","date":"2019-08-16T00:28:41.878Z","type":"message"}
{"nick":"renlolol","date":"2019-08-16T00:28:43.895Z","type":"join"}
{"nick":"Lcfvs","message":"https://hastebin.com/raw/igiviquyet","date":"2019-08-16T00:29:00.519Z","type":"message"}
{"nick":"Lcfvs","message":"(the raw)","date":"2019-08-16T00:29:15.480Z","type":"message"}
{"nick":"lord|","date":"2019-08-16T00:29:17.399Z","type":"join"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2019-08-16T00:29:19.081Z","type":"quit"}
{"nick":"heyitsra_","reason":"Ping timeout: 245 seconds","date":"2019-08-16T00:29:37.211Z","type":"quit"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T00:29:42.346Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T00:29:58.959Z","type":"join"}
{"nick":"Cabanossi","date":"2019-08-16T00:30:23.592Z","type":"join"}
{"nick":"Sven_vB","message":"thanks! yeah that one works. I'll add it to my workarounds list. :)","date":"2019-08-16T00:30:51.831Z","type":"message"}
{"nick":"Lcfvs","message":":)","date":"2019-08-16T00:31:08.754Z","type":"message"}
{"nick":"SunWuKung","date":"2019-08-16T00:31:47.775Z","type":"join"}
{"nick":"Sven_vB","message":"what's file after the assignment? have you double-checked it's a buffer and has the same length as you'd expect? i.e. no UTF-8 magic?","date":"2019-08-16T00:32:14.365Z","type":"message"}
{"nick":"fatalhalt","date":"2019-08-16T00:32:59.144Z","type":"join"}
{"nick":"Lcfvs","message":"I tried as `utf-8` and as `binary`, no changes","date":"2019-08-16T00:33:09.884Z","type":"message"}
{"nick":"Sven_vB","message":"is the buffer's .length the same as the file size according to your fs?","date":"2019-08-16T00:33:54.721Z","type":"message"}
{"nick":"lucasb","reason":"Quit: Connection closed for inactivity","date":"2019-08-16T00:34:08.126Z","type":"quit"}
{"nick":"Lcfvs","message":"sec, checking","date":"2019-08-16T00:34:12.855Z","type":"message"}
{"nick":"Lcfvs","message":";)","date":"2019-08-16T00:34:15.233Z","type":"message"}
{"nick":"conyers","reason":"Quit: ZZZzzz…","date":"2019-08-16T00:34:16.669Z","type":"quit"}
{"nick":"heyitsrama","date":"2019-08-16T00:34:17.502Z","type":"join"}
{"nick":"Sven_vB","message":"also verify Buffer.isBuffer","date":"2019-08-16T00:34:21.398Z","type":"message"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T00:36:01.989Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T00:36:17.380Z","type":"join"}
{"nick":"heyitsrama","reason":"Ping timeout: 245 seconds","date":"2019-08-16T00:38:48.486Z","type":"quit"}
{"nick":"supernovah","reason":"Ping timeout: 272 seconds","date":"2019-08-16T00:39:08.634Z","type":"quit"}
{"nick":"SunWuKung","reason":"Quit: Sleeping in 武當山","date":"2019-08-16T00:39:23.610Z","type":"quit"}
{"nick":"kakashiAL","date":"2019-08-16T00:40:04.635Z","type":"join"}
{"nick":"Lcfvs","message":"[392, true] in both cases","date":"2019-08-16T00:41:29.737Z","type":"message"}
{"nick":"Lcfvs","message":"`[length, isBuffer]`","date":"2019-08-16T00:42:00.331Z","type":"message"}
{"nick":"nomoney4me__","date":"2019-08-16T00:43:04.433Z","type":"join"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T00:43:04.694Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T00:43:21.719Z","type":"join"}
{"nick":"Sven_vB","message":"what's your 2nd, commented-out script.runInContext() for? you use it to reset i?","date":"2019-08-16T00:43:22.338Z","type":"message"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-08-16T00:45:36.784Z","type":"quit"}
{"nick":"Lcfvs","message":"I tried several things, run the same script, or not... logically, I think if I reuse the same script, it probably resets the `i`.. but each other script (like an empty script) rejects the cache","date":"2019-08-16T00:47:13.139Z","type":"message"}
{"nick":"Sven_vB","message":"oh ok then it probably actually wants to see the code again and verifies some checksum or sth.","date":"2019-08-16T00:48:05.359Z","type":"message"}
{"nick":"SunWuKung","date":"2019-08-16T00:48:10.708Z","type":"join"}
{"nick":"Sven_vB","message":"I guess there won't be a visible difference then, it's just a bit faster because it can skip compiling the script.","date":"2019-08-16T00:48:31.543Z","type":"message"}
{"nick":"Sven_vB","message":"I guess it's really just a code cache then, not entire saved state.","date":"2019-08-16T00:49:28.472Z","type":"message"}
{"nick":"nomoney4me__","reason":"Ping timeout: 245 seconds","date":"2019-08-16T00:49:38.353Z","type":"quit"}
{"nick":"Sven_vB","message":"maybe the V8 docs explain this better.","date":"2019-08-16T00:50:35.408Z","type":"message"}
{"nick":"Lcfvs","message":"if it doesn't save the state, I don't understand the `const cacheWithX = script.createCachedData();` https://nodejs.org/docs/latest/api/vm.html#vm_script_createcacheddata","date":"2019-08-16T00:51:57.728Z","type":"message"}
{"nick":"Lcfvs","message":"(to be clear, the diff between with/without `x0`)","date":"2019-08-16T00:53:39.007Z","type":"message"}
{"nick":"Lcfvs","message":"* `x`","date":"2019-08-16T00:53:46.952Z","type":"message"}
{"nick":"Sven_vB","message":"indeed","date":"2019-08-16T00:54:59.537Z","type":"message"}
{"nick":"tsujp","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-16T00:57:58.801Z","type":"quit"}
{"nick":"Lcfvs","message":"I'm trying that to avoid the needed analysis to build my 50Mo of immutable objects at each run","date":"2019-08-16T01:03:16.240Z","type":"message"}
{"nick":"def_jam","new_nick":"eb0t","date":"2019-08-16T01:04:13.715Z","type":"nick"}
{"nick":"Lcfvs","message":"(and preserve their building history","date":"2019-08-16T01:04:13.867Z","type":"message"}
{"nick":"Lcfvs","message":"(by prototype)","date":"2019-08-16T01:04:22.789Z","type":"message"}
{"nick":"Sven_vB","message":"I refactored your example so it doesn't need file magic at least. https://gist.github.com/mk-pmb/4a0e0c045b74206793c1b92a6b543f44","date":"2019-08-16T01:06:17.250Z","type":"message"}
{"nick":"Lcfvs","message":"checking... ;)","date":"2019-08-16T01:08:06.759Z","type":"message"}
{"nick":"supernovah","date":"2019-08-16T01:08:39.563Z","type":"join"}
{"nick":"kfoonamalik","reason":"Ping timeout: 245 seconds","date":"2019-08-16T01:09:38.440Z","type":"quit"}
{"nick":"jaawerth","message":"weird:","date":"2019-08-16T01:09:56.007Z","type":"message"}
{"nick":"jaawerth","message":"n> var vm = require('vm'), script = new vm.Script(`const x = 10;`); script.runInThisContext(); var cachedData = script.createCachedData(); var script2 = new vm.Script('console.log(\"x:\", x)', { cachedData }); console.log(script2.cachedDataRejected); console.log('rejected:', script2.cachedDataRejected); script2.runInThisContext();","date":"2019-08-16T01:09:59.297Z","type":"message"}
{"nick":"jellobot","message":"(okay) true rejected: true x: 10 undefined","date":"2019-08-16T01:10:00.257Z","type":"message"}
{"nick":"jaawerth","message":"the undefined and (okay) true is normal but interesting that cachedDataRejected is true but it still appears to work","date":"2019-08-16T01:10:33.025Z","type":"message"}
{"nick":"Sven_vB","message":"jaawerth, it probably works because you use the same context for both scripts","date":"2019-08-16T01:11:11.169Z","type":"message"}
{"nick":"jaawerth","message":"ah yeah","date":"2019-08-16T01:11:15.837Z","type":"message"}
{"nick":"jaawerth","message":"durrr","date":"2019-08-16T01:11:20.837Z","type":"message"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T01:11:40.687Z","type":"quit"}
{"nick":"Sven_vB","message":"Lcfvs, I doubt your one context's prototypes would be valid in another context. so unless you can share the context, you probably have to rebuild them.","date":"2019-08-16T01:11:56.578Z","type":"message"}
{"nick":"pknull","date":"2019-08-16T01:11:57.731Z","type":"join"}
{"nick":"jaawerth","message":"n> var vm = require('vm'), script = new vm.Script('const x = 5'), script2 = new vm.Script('console.log(x)'); script.runInThisContext(); script2.runInThisContext()","date":"2019-08-16T01:12:24.697Z","type":"message"}
{"nick":"jellobot","message":"(okay) 5 undefined","date":"2019-08-16T01:12:25.696Z","type":"message"}
{"nick":"jaawerth","message":"yep that's it haha","date":"2019-08-16T01:12:29.992Z","type":"message"}
{"nick":"jaawerth","message":"forgot that's what the context was all about","date":"2019-08-16T01:12:40.494Z","type":"message"}
{"nick":"jaawerth","message":"So probably the use of cached data is for initialization and then rerunning of the same script","date":"2019-08-16T01:13:05.399Z","type":"message"}
{"nick":"orbyt_","date":"2019-08-16T01:13:42.843Z","type":"join"}
{"nick":"Lcfvs","message":"Sven_vB your example works, yes, but your `i` has always the same value too","date":"2019-08-16T01:14:25.881Z","type":"message"}
{"nick":"supernovah","reason":"Ping timeout: 268 seconds","date":"2019-08-16T01:14:44.603Z","type":"quit"}
{"nick":"Lcfvs","message":"the value isn't cached, then","date":"2019-08-16T01:15:35.044Z","type":"message"}
{"nick":"Sven_vB","message":"yes","date":"2019-08-16T01:16:38.435Z","type":"message"}
{"nick":"Sven_vB","message":"that's what surprised me","date":"2019-08-16T01:16:44.967Z","type":"message"}
{"nick":"Lcfvs","message":"^^","date":"2019-08-16T01:16:51.033Z","type":"message"}
{"nick":"Sven_vB","message":"jaawerth, yeah I guess it caches just the code. my example demonstrates you can run it in another context later.","date":"2019-08-16T01:17:29.168Z","type":"message"}
{"nick":"Sven_vB","message":"Lcfvs, maybe it's enough to just share a wrapper object that holds your immutable data, instead of the entire sandbox.","date":"2019-08-16T01:18:06.473Z","type":"message"}
{"nick":"supernovah","date":"2019-08-16T01:18:38.428Z","type":"join"}
{"nick":"rainmanj_","date":"2019-08-16T01:19:07.016Z","type":"join"}
{"nick":"Sven_vB","message":"like you make a suitcase object and put that in both sandboxes","date":"2019-08-16T01:19:11.591Z","type":"message"}
{"nick":"publio","reason":"Ping timeout: 272 seconds","date":"2019-08-16T01:19:40.691Z","type":"quit"}
{"nick":"Lcfvs","message":"the problem is that : my immutable object aren't data... it's a lot of prototypes (with their methods) prepared to just be derivated","date":"2019-08-16T01:19:41.603Z","type":"message"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2019-08-16T01:20:01.442Z","type":"quit"}
{"nick":"ed209","date":"2019-08-16T01:20:08.338Z","type":"join"}
{"nick":"nomoney4me__","date":"2019-08-16T01:20:55.044Z","type":"join"}
{"nick":"rainmanjam","reason":"Ping timeout: 245 seconds","date":"2019-08-16T01:21:43.837Z","type":"quit"}
{"nick":"Sven_vB","message":"maybe it works still","date":"2019-08-16T01:22:28.650Z","type":"message"}
{"nick":"Sven_vB","message":"the stuff in the sandbox is live after all.","date":"2019-08-16T01:23:14.015Z","type":"message"}
{"nick":"b44","date":"2019-08-16T01:23:14.015Z","type":"join"}
{"nick":"Sven_vB","message":"actually I just assume that. I'll better check.","date":"2019-08-16T01:23:36.690Z","type":"message"}
{"nick":"orbyt_","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-08-16T01:23:56.885Z","type":"quit"}
{"nick":"Lcfvs","message":"sorry, I don't see how :$","date":"2019-08-16T01:24:32.686Z","type":"message"}
{"nick":"Sven_vB","message":"looks like it is. https://gist.github.com/mk-pmb/4a0e0c045b74206793c1b92a6b543f44","date":"2019-08-16T01:26:56.553Z","type":"message"}
{"nick":"nomoney4me__","reason":"Ping timeout: 258 seconds","date":"2019-08-16T01:26:57.968Z","type":"quit"}
{"nick":"Sven_vB","message":"I can call my func from outside the sandbox and it has access to the inner stuff.","date":"2019-08-16T01:27:20.539Z","type":"message"}
{"nick":"Sven_vB","message":"oh that doesn't show what I meant to show.","date":"2019-08-16T01:28:04.079Z","type":"message"}
{"nick":"b44","reason":"Ping timeout: 268 seconds","date":"2019-08-16T01:28:18.604Z","type":"quit"}
{"nick":"nomoney4me__","date":"2019-08-16T01:28:37.091Z","type":"join"}
{"nick":"jaawerth","message":"Lcfvs: out of curiosity what's the overall usecase here? Like what does the script do?","date":"2019-08-16T01:28:53.041Z","type":"message"}
{"nick":"jaawerth","message":"I'm guessing you can't avoid this by keeping it running as a daemon and having another script that tells it to do stuff but I'm curious now lol","date":"2019-08-16T01:29:14.011Z","type":"message"}
{"nick":"Lcfvs","message":"jaawerth I'm creating an engine to make a machine-to-machine data exchange \"protocol\", based on collection+json, schema.orgully extensible engine","date":"2019-08-16T01:31:11.156Z","type":"message"}
{"nick":"Lcfvs","message":"* schema.org, and my fully extensible engine","date":"2019-08-16T01:31:43.919Z","type":"message"}
{"nick":"jaawerth","message":"ah","date":"2019-08-16T01:31:57.368Z","type":"message"}
{"nick":"Lcfvs","message":"an extension example : https://hastebin.com/raw/ehiqayasil","date":"2019-08-16T01:31:59.637Z","type":"message"}
{"nick":"R0b0t-X","date":"2019-08-16T01:32:14.105Z","type":"join"}
{"nick":"jaawerth","message":"and daemon isn't an option eh","date":"2019-08-16T01:32:18.326Z","type":"message"}
{"nick":"Lcfvs","message":"nope","date":"2019-08-16T01:32:24.315Z","type":"message"}
{"nick":"jaawerth","message":"oh well. sounds interesting though","date":"2019-08-16T01:32:32.728Z","type":"message"}
{"nick":"Lcfvs","message":":)","date":"2019-08-16T01:32:38.838Z","type":"message"}
{"nick":"nomoney4me__","reason":"Remote host closed the connection","date":"2019-08-16T01:32:48.723Z","type":"quit"}
{"nick":"SunWuKung","reason":"Quit: Sleeping in 武當山","date":"2019-08-16T01:32:55.477Z","type":"quit"}
{"nick":"Frobozz","date":"2019-08-16T01:32:58.707Z","type":"join"}
{"nick":"nomoney4me__","date":"2019-08-16T01:33:06.060Z","type":"join"}
{"nick":"Lcfvs","message":"the engine extensions are declared by an authority (JSON)","date":"2019-08-16T01:33:07.560Z","type":"message"}
{"nick":"jaawerth","message":"I wonder if there are any native extensions that let you just dump variable contents to a binary file or buffer","date":"2019-08-16T01:33:20.474Z","type":"message"}
{"nick":"Lcfvs","message":"it autobuilds with them","date":"2019-08-16T01:33:24.077Z","type":"message"}
{"nick":"jaawerth","message":"like it MIGHT be possible to do that in or out of a vm on the C++ side","date":"2019-08-16T01:33:47.915Z","type":"message"}
{"nick":"jaawerth","message":"the prototypes could complicate even that though","date":"2019-08-16T01:34:24.317Z","type":"message"}
{"nick":"Lcfvs","message":"then it calls the targeted serveur to gets its object types, validators, query builders, etc., dynamically, all as prototypes","date":"2019-08-16T01:34:34.979Z","type":"message"}
{"nick":"jaawerth","message":"not sure how exactly v8 deals with those on the native end","date":"2019-08-16T01:34:35.435Z","type":"message"}
{"nick":"jaawerth","message":"ah neat","date":"2019-08-16T01:34:57.557Z","type":"message"}
{"nick":"etupat","date":"2019-08-16T01:35:20.719Z","type":"join"}
{"nick":"jaawerth","message":"almost sounds kinda like a JSON-powered SOAP for node","date":"2019-08-16T01:35:24.624Z","type":"message"}
{"nick":"jaawerth","message":"but... more","date":"2019-08-16T01:35:30.993Z","type":"message"}
{"nick":"Lcfvs","message":"yeah, a few like","date":"2019-08-16T01:35:45.257Z","type":"message"}
{"nick":"dreamsandcode","date":"2019-08-16T01:35:54.716Z","type":"join"}
{"nick":"renlolol","reason":"Ping timeout: 250 seconds","date":"2019-08-16T01:35:55.758Z","type":"quit"}
{"nick":"Lcfvs","message":"and to avoid a lot of factory methods to build the data-based objects, I've created a lot of prototypes to simply derivate them","date":"2019-08-16T01:38:21.808Z","type":"message"}
{"nick":"nomoney4me__","reason":"Ping timeout: 258 seconds","date":"2019-08-16T01:39:13.944Z","type":"quit"}
{"nick":"Lcfvs","message":"and, a goal is to optionally be able to restrict the `.extend()` call after the system warmup","date":"2019-08-16T01:39:37.768Z","type":"message"}
{"nick":"Sven_vB","message":"now I inject a function from another sandbox and that function keeps its bindings. https://gist.github.com/mk-pmb/4a0e0c045b74206793c1b92a6b543f44","date":"2019-08-16T01:39:45.104Z","type":"message"}
{"nick":"drorb","date":"2019-08-16T01:40:19.432Z","type":"join"}
{"nick":"Lcfvs","message":"jaawerth but, yeah, that's what I dream `I wonder if there are any native extensions that let you just dump variable contents to a binary file or buffer`","date":"2019-08-16T01:41:24.725Z","type":"message"}
{"nick":"Sven_vB","message":"jaawerth, as soon as that dumped structure has memory pointers, it's probably useless in another process, even on the same machine.","date":"2019-08-16T01:41:32.079Z","type":"message"}
{"nick":"jaawerth","message":"yeah that's true","date":"2019-08-16T01:41:41.792Z","type":"message"}
{"nick":"jaawerth","message":"you'd have to save the whole state or nothing","date":"2019-08-16T01:41:51.732Z","type":"message"}
{"nick":"jaawerth","message":"and even then...","date":"2019-08-16T01:42:14.129Z","type":"message"}
{"nick":"Sven_vB","message":"you could basically run that node process in a docker and move that docker between machines.","date":"2019-08-16T01:42:18.712Z","type":"message"}
{"nick":"KempfCreative","date":"2019-08-16T01:42:26.969Z","type":"join"}
{"nick":"Lcfvs","message":"by why that memory pointer doens't be dynamics, when restored ?","date":"2019-08-16T01:42:54.375Z","type":"message"}
{"nick":"ensyde_","reason":"Quit: Leaving","date":"2019-08-16T01:42:56.802Z","type":"quit"}
{"nick":"mihaele","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-16T01:43:01.969Z","type":"quit"}
{"nick":"conyers","date":"2019-08-16T01:43:13.136Z","type":"join"}
{"nick":"ensyde","date":"2019-08-16T01:43:14.819Z","type":"join"}
{"nick":"Sven_vB","message":"Address space layout randomization will probably try to stop you.","date":"2019-08-16T01:43:23.092Z","type":"message"}
{"nick":"jaawerth","message":"it'd probably point to the wrong part of memory even if you rerun the same script later come to think of it","date":"2019-08-16T01:43:26.293Z","type":"message"}
{"nick":"jaawerth","message":"that's probably why it doesn't persist data","date":"2019-08-16T01:43:57.432Z","type":"message"}
{"nick":"Sven_vB","message":"also swap","date":"2019-08-16T01:44:00.674Z","type":"message"}
{"nick":"jaawerth","message":"the createCachedData, I mean","date":"2019-08-16T01:44:11.555Z","type":"message"}
{"nick":"Sven_vB","message":"oh yeah","date":"2019-08-16T01:44:21.987Z","type":"message"}
{"nick":"Sven_vB","message":"well V8 could serialize the stuff, as V8 knows what it means.","date":"2019-08-16T01:44:37.433Z","type":"message"}
{"nick":"drorb","reason":"Ping timeout: 245 seconds","date":"2019-08-16T01:44:38.483Z","type":"quit"}
{"nick":"jaawerth","message":"true","date":"2019-08-16T01:44:45.247Z","type":"message"}
{"nick":"Lcfvs","message":"I think too","date":"2019-08-16T01:45:13.465Z","type":"message"}
{"nick":"Sven_vB","message":"I don't really understand the usecase of that schema.org engine thingy though.","date":"2019-08-16T01:45:20.759Z","type":"message"}
{"nick":"Sven_vB","message":"if you just want to exchange data, where's the problem?","date":"2019-08-16T01:45:51.076Z","type":"message"}
{"nick":"mihaele","date":"2019-08-16T01:46:42.768Z","type":"join"}
{"nick":"Lcfvs","message":"Sven_vB the schema.org is used to describe the data on HTML rendering and to instructs the data relationships","date":"2019-08-16T01:46:44.053Z","type":"message"}
{"nick":"Sven_vB","message":"oh ic now you try to load plugins dynamically but don't want to compile the plugins each time?","date":"2019-08-16T01:46:49.166Z","type":"message"}
{"nick":"Lcfvs","message":"yep","date":"2019-08-16T01:46:57.048Z","type":"message"}
{"nick":"Lcfvs","message":"the plugins AND all the data types objects","date":"2019-08-16T01:47:25.595Z","type":"message"}
{"nick":"Lcfvs","message":"declared by the targeted API","date":"2019-08-16T01:47:44.311Z","type":"message"}
{"nick":"Sven_vB","message":"you can probably store the factory function in that cachedData. and that should be enough.","date":"2019-08-16T01:47:56.464Z","type":"message"}
{"nick":"jaawerth","message":"this does seem unsafe though since you can break out of the vm context and do remote code execution","date":"2019-08-16T01:48:39.583Z","type":"message"}
{"nick":"jaawerth","message":"unless you're supposed to trust the remote node","date":"2019-08-16T01:48:46.589Z","type":"message"}
{"nick":"SunWuKung","date":"2019-08-16T01:49:52.392Z","type":"join"}
{"nick":"Sven_vB","message":"I guess there would be a whitelist of acceptable plugins and the remote client only sends the plugin name","date":"2019-08-16T01:49:53.309Z","type":"message"}
{"nick":"Sven_vB","message":"the server would then use its stored code","date":"2019-08-16T01:50:05.072Z","type":"message"}
{"nick":"orbyt_","date":"2019-08-16T01:50:19.114Z","type":"join"}
{"nick":"jaawerth","message":"then it'd be kinda like SOAP or EDN where it ends the data and, like, namespaced tags with any extensions for non-built-in data types","date":"2019-08-16T01:50:22.059Z","type":"message"}
{"nick":"Sven_vB","message":"yeah","date":"2019-08-16T01:50:32.731Z","type":"message"}
{"nick":"Sven_vB","message":"and the VM problem would go away because the server process can just have the plugins live in its memory","date":"2019-08-16T01:50:50.494Z","type":"message"}
{"nick":"Kosingas","reason":"Quit: Leaving","date":"2019-08-16T01:50:59.687Z","type":"quit"}
{"nick":"Lcfvs","message":"here, for my extensions (plugins), I use SRI validation","date":"2019-08-16T01:51:00.852Z","type":"message"}
{"nick":"Sven_vB","message":"what's SRI?","date":"2019-08-16T01:51:13.883Z","type":"message"}
{"nick":"Lcfvs","message":"Sub-Resource-Integrity","date":"2019-08-16T01:51:31.544Z","type":"message"}
{"nick":"Lcfvs","message":";)","date":"2019-08-16T01:51:35.881Z","type":"message"}
{"nick":"Sven_vB","message":"wat","date":"2019-08-16T01:51:40.131Z","type":"message"}
{"nick":"jaawerth","message":"that just protects against middleman tampering though, right?","date":"2019-08-16T01:51:46.776Z","type":"message"}
{"nick":"jaawerth","message":"do you always trust the sender?","date":"2019-08-16T01:51:50.706Z","type":"message"}
{"nick":"Sven_vB","message":"sounds overly complicated","date":"2019-08-16T01:51:51.309Z","type":"message"}
{"nick":"Lcfvs","message":"https://developer.mozilla.org/fr/docs/Web/Security/Subresource_Integrity","date":"2019-08-16T01:52:04.161Z","type":"message"}
{"nick":"Sven_vB","message":"you mean the website SRI? https://en.wikipedia.org/wiki/Subresource_Integrity","date":"2019-08-16T01:52:20.995Z","type":"message"}
{"nick":"marthinal","date":"2019-08-16T01:52:23.577Z","type":"join"}
{"nick":"Sven_vB","message":"seems like yes","date":"2019-08-16T01:52:25.457Z","type":"message"}
{"nick":"jaawerth","message":"if you always trust the sender that'd work","date":"2019-08-16T01:52:42.822Z","type":"message"}
{"nick":"Lcfvs","message":"jaawerth the authority is local","date":"2019-08-16T01:53:04.265Z","type":"message"}
{"nick":"Sven_vB","message":"it sounds totally weird though. why wouldn't you just store the extension source on the server?","date":"2019-08-16T01:53:18.308Z","type":"message"}
{"nick":"Lcfvs","message":"then must be controlled before","date":"2019-08-16T01:53:22.175Z","type":"message"}
{"nick":"jaawerth","message":"ahh I see the hash is generated locally and compare against what's provided by the sender","date":"2019-08-16T01:53:35.935Z","type":"message"}
{"nick":"Lcfvs","message":"yep","date":"2019-08-16T01:53:43.308Z","type":"message"}
{"nick":"Lcfvs","message":"the idea is simple, the extensions can have multiple sources which don't need to know them","date":"2019-08-16T01:54:37.612Z","type":"message"}
{"nick":"Sven_vB","message":"still the server needs to have that source code, so why not store it there?","date":"2019-08-16T01:55:20.537Z","type":"message"}
{"nick":"jaawerth","message":"that sould save a lot of wire transfer","date":"2019-08-16T01:55:36.252Z","type":"message"}
{"nick":"trevor","date":"2019-08-16T01:56:02.599Z","type":"join"}
{"nick":"jaawerth","message":"I suppose you might want to be able to not have every server node actually contain all the extensions, just some kind of authority store with all the hashes to save installation","date":"2019-08-16T01:56:05.580Z","type":"message"}
{"nick":"Lcfvs","message":"I can create an API, provide some extensions to build the engine, but you can extend my service with your own extensions, replacing/extending mines, or some other external extensions","date":"2019-08-16T01:56:09.360Z","type":"message"}
{"nick":"Kaivo","reason":"Quit: Leaving","date":"2019-08-16T01:56:20.337Z","type":"quit"}
{"nick":"Sven_vB","message":"Lcfvs, so I can run my extension on your server?","date":"2019-08-16T01:56:35.893Z","type":"message"}
{"nick":"marthinal","reason":"Ping timeout: 244 seconds","date":"2019-08-16T01:56:41.508Z","type":"quit"}
{"nick":"Lcfvs","message":"nope, only on yours and on some other servers extending yours","date":"2019-08-16T01:57:10.790Z","type":"message"}
{"nick":"jaawerth","message":"yeah that's the curious bit - either you can run your extension on someone else's server or they'd all have to have the same extension knowledge in order to talk, n which case they can al just have teh extensions installed","date":"2019-08-16T01:57:21.555Z","type":"message"}
{"nick":"Lcfvs","message":"as a cascade, then","date":"2019-08-16T01:57:25.895Z","type":"message"}
{"nick":"trevor","reason":"Client Quit","date":"2019-08-16T01:57:37.243Z","type":"quit"}
{"nick":"Sven_vB","message":"still I don't see why the server's can't just npm install the missing extensions from a trusted tarball URL with additional signed hash.","date":"2019-08-16T01:57:54.976Z","type":"message"}
{"nick":"jaawerth","message":"yeah that'd cut down a lot of data transfer","date":"2019-08-16T01:58:12.997Z","type":"message"}
{"nick":"jaawerth","message":"and probably be worth doing the build of the live data structure locally","date":"2019-08-16T01:58:22.772Z","type":"message"}
{"nick":"Sven_vB","message":"it's also less vulnerable probably","date":"2019-08-16T01:58:26.580Z","type":"message"}
{"nick":"jaawerth","message":"but I could be missing something about the usecase here","date":"2019-08-16T01:58:42.123Z","type":"message"}
{"nick":"Sven_vB","message":"to fetch code you're gonna execute, it's usually a good idea to use battle-tested methods.","date":"2019-08-16T01:58:55.978Z","type":"message"}
{"nick":"jaawerth","message":"I THINK I get it but ¯\\_(ツ)_/¯ it sounds like you know what you're doing even if I don't quite see it","date":"2019-08-16T01:58:59.341Z","type":"message"}
{"nick":"tsujp","date":"2019-08-16T01:59:16.935Z","type":"join"}
{"nick":"Lcfvs","message":"yes, my system doesn't break the possibility to use it as a package, it's what I made... but I wish to doens't be dependant to a package manager","date":"2019-08-16T01:59:40.351Z","type":"message"}
{"nick":"Sven_vB","message":"well people could bundle their extensions so you can run just a single JS file.","date":"2019-08-16T02:00:23.136Z","type":"message"}
{"nick":"etupat","reason":"Remote host closed the connection","date":"2019-08-16T02:00:46.208Z","type":"quit"}
{"nick":"Lcfvs","message":"yes, I don't make anything against that ;)","date":"2019-08-16T02:01:07.005Z","type":"message"}
{"nick":"Sven_vB","message":"you could even require they use AMD format then all you need to provide to your sandbox is a define() function","date":"2019-08-16T02:01:11.630Z","type":"message"}
{"nick":"Lcfvs","message":"but, as a module or not, single file or not, it doesn't solves the memory cost","date":"2019-08-16T02:01:54.114Z","type":"message"}
{"nick":"Sven_vB","message":"RAM or disk?","date":"2019-08-16T02:02:05.498Z","type":"message"}
{"nick":"Lcfvs","message":"RAM, and the delay","date":"2019-08-16T02:02:23.250Z","type":"message"}
{"nick":"jaawerth","message":"there's also a pure-js version of MDN that can live-install things in-memory from CND npm registries","date":"2019-08-16T02:02:26.495Z","type":"message"}
{"nick":"jaawerth","message":"I forget what it's called","date":"2019-08-16T02:02:35.374Z","type":"message"}
{"nick":"Sven_vB","message":"Lcfvs, so is it about swapping unused extensions out of your node.js's memory footprint?","date":"2019-08-16T02:03:11.799Z","type":"message"}
{"nick":"Lcfvs","message":"because ok, the extensions can be merged to a single script... but not the data type prototypes, because they are dynamics","date":"2019-08-16T02:03:12.741Z","type":"message"}
{"nick":"Lcfvs","message":"not exactly","date":"2019-08-16T02:04:17.371Z","type":"message"}
{"nick":"Lcfvs","message":"the process :","date":"2019-08-16T02:04:24.330Z","type":"message"}
{"nick":"Sven_vB","message":"then what's the actual problem you're trying to solve?","date":"2019-08-16T02:04:27.877Z","type":"message"}
{"nick":"jaawerth","message":"are you gonna publish this when your done? I'm curious enough now that I'll have to remember to look at the final product if so","date":"2019-08-16T02:04:36.118Z","type":"message"}
{"nick":"jaawerth","message":"you're*","date":"2019-08-16T02:04:42.122Z","type":"message"}
{"nick":"Lcfvs","message":"1) build the engine with the extensions (full local, full dynamic, whatever), it creates a lot of system prototypes","date":"2019-08-16T02:05:31.303Z","type":"message"}
{"nick":"Lcfvs","message":"2) gets the types from the server, dynamically, and create some new prototypes from the system prototypes","date":"2019-08-16T02:06:21.356Z","type":"message"}
{"nick":"Lcfvs","message":"3) warmup ends, runtime","date":"2019-08-16T02:06:40.825Z","type":"message"}
{"nick":"jaawerth","message":"ah I think I'm starting to see","date":"2019-08-16T02:06:54.868Z","type":"message"}
{"nick":"Lcfvs","message":"4) waiting server interactions","date":"2019-08-16T02:06:58.419Z","type":"message"}
{"nick":"Sven_vB","action":"has no idea still","date":"2019-08-16T02:07:26.586Z","type":"action"}
{"nick":"Sven_vB","message":"what kind of engine, anyway?","date":"2019-08-16T02:08:36.530Z","type":"message"}
{"nick":"Lcfvs","message":"the problem is to save the 2) to be able to get it as is for a future execution","date":"2019-08-16T02:09:04.469Z","type":"message"}
{"nick":"Lcfvs","message":"the engine is basically made to provide HOW 2 systems can exchange some data, how to describe some data, how to validate the data, how build the queries, ... automatically","date":"2019-08-16T02:11:02.342Z","type":"message"}
{"nick":"Sven_vB","message":"maybe you could pause a docker container while it's waiting to receive next instructions from stdin, then duplicate it, resume, provide instructions as required.","date":"2019-08-16T02:11:04.973Z","type":"message"}
{"nick":"Lcfvs","message":"Sven_vB yes, it's an idea","date":"2019-08-16T02:11:39.800Z","type":"message"}
{"nick":"Sven_vB","message":"or you could go to the nitty-gritty details of how to pause/dump/resume just your node.js process","date":"2019-08-16T02:11:55.733Z","type":"message"}
{"nick":"Lcfvs","message":"but the pause/wakeup risks to be very slow, no ?","date":"2019-08-16T02:12:25.909Z","type":"message"}
{"nick":"Sven_vB","message":"no idea about that. copying the process memory from a dump is probably one of the fastest methods to get it into your RAM.","date":"2019-08-16T02:13:11.786Z","type":"message"}
{"nick":"nomoney4me__","date":"2019-08-16T02:13:19.957Z","type":"join"}
{"nick":"Sven_vB","message":"if it works, that is. you might want to disable ASLR.","date":"2019-08-16T02:13:26.934Z","type":"message"}
{"nick":"Lcfvs","message":"ok","date":"2019-08-16T02:13:59.453Z","type":"message"}
{"nick":"Sven_vB","message":"however my cristall ball firmly believes that the true solution here is to take a big step back and re-design the entire architecture so your service doesn't need to pile up as much data in the first place.","date":"2019-08-16T02:14:24.337Z","type":"message"}
{"nick":"renlolol","date":"2019-08-16T02:14:46.459Z","type":"join"}
{"nick":"Sven_vB","message":"the fact that you want to duplicate huge amounts of data that one process has prepared, is a sign that it probably has too much to care about that isn't really individual to that process and thus shouldn't be there.","date":"2019-08-16T02:15:36.252Z","type":"message"}
{"nick":"Sven_vB","message":"maybe you could put the things you need that code for into a microservice instead.","date":"2019-08-16T02:16:28.760Z","type":"message"}
{"nick":"Sven_vB","message":"(the \"micro\" is optional)","date":"2019-08-16T02:16:50.859Z","type":"message"}
{"nick":"Sven_vB","message":"separation of concerns right?","date":"2019-08-16T02:17:16.435Z","type":"message"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T02:17:24.960Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T02:17:40.258Z","type":"join"}
{"nick":"dreamsandcode","reason":"Remote host closed the connection","date":"2019-08-16T02:18:38.474Z","type":"quit"}
{"nick":"Lcfvs","message":"actually, my project uses 50Mo of RAM but it's because I runs all of my 276 extensions and all the schemas from schema.org, but in real projects you never use all, don't worry ;)","date":"2019-08-16T02:18:51.817Z","type":"message"}
{"nick":"nomoney4me__","reason":"Ping timeout: 248 seconds","date":"2019-08-16T02:19:16.258Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 252 seconds","date":"2019-08-16T02:20:22.103Z","type":"quit"}
{"nick":"Sven_vB","message":"ok then what was the RAM concern about?","date":"2019-08-16T02:20:37.477Z","type":"message"}
{"nick":"Lcfvs","message":"hum, in fact, I don't know if it's really a huge cost... the real problem is the delay to create all of that","date":"2019-08-16T02:22:15.039Z","type":"message"}
{"nick":"Lcfvs","message":"2-3s on each start","date":"2019-08-16T02:22:31.989Z","type":"message"}
{"nick":"Lcfvs","message":"it's very slow, during the development phase","date":"2019-08-16T02:23:15.270Z","type":"message"}
{"nick":"distraktd","reason":"Ping timeout: 260 seconds","date":"2019-08-16T02:23:23.733Z","type":"quit"}
{"nick":"Sven_vB","message":"I expect V8 to have some API to hibernate a script and rewake it. you can probably compile a modified node.js that can resume V8 hibernation files as alternative to run a script.","date":"2019-08-16T02:23:53.366Z","type":"message"}
{"nick":"Sven_vB","message":"but again, maybe the better way is to factor out the stuff that takes so long to initialize, and have it on stand-by as a daemon.","date":"2019-08-16T02:25:00.748Z","type":"message"}
{"nick":"distraktd","date":"2019-08-16T02:25:21.707Z","type":"join"}
{"nick":"Lcfvs","message":"yes, you're right","date":"2019-08-16T02:25:43.543Z","type":"message"}
{"nick":"distraktd","reason":"Remote host closed the connection","date":"2019-08-16T02:26:03.535Z","type":"quit"}
{"nick":"Sven_vB","message":"if you want crazy-fast interaction with the daemon, you could try and survive EMS. :-) https://github.com/SyntheticSemantics/ems/issues/25","date":"2019-08-16T02:27:06.244Z","type":"message"}
{"nick":"Cabanossi","date":"2019-08-16T02:27:23.291Z","type":"join"}
{"nick":"Sven_vB","message":"err, revive.","date":"2019-08-16T02:27:30.685Z","type":"message"}
{"nick":"Sven_vB","message":"well, and survive the attempt to revive it. :D","date":"2019-08-16T02:27:50.800Z","type":"message"}
{"nick":"Lcfvs","message":"interesting","date":"2019-08-16T02:28:39.391Z","type":"message"}
{"nick":"Lcfvs","message":":D","date":"2019-08-16T02:28:41.563Z","type":"message"}
{"nick":"Sven_vB","message":"anyway, gotta go. maybe I'll be back later. :)","date":"2019-08-16T02:29:49.094Z","type":"message"}
{"nick":"Lcfvs","message":"yeah, thanks  :)","date":"2019-08-16T02:30:20.041Z","type":"message"}
{"nick":"etupat","date":"2019-08-16T02:34:49.900Z","type":"join"}
{"nick":"supernovah","reason":"Ping timeout: 258 seconds","date":"2019-08-16T02:38:16.038Z","type":"quit"}
{"nick":"etupat","reason":"Ping timeout: 272 seconds","date":"2019-08-16T02:40:06.764Z","type":"quit"}
{"nick":"tm","reason":"Ping timeout: 245 seconds","date":"2019-08-16T02:43:47.368Z","type":"quit"}
{"nick":"igemnace","reason":"Quit: WeeChat 2.5","date":"2019-08-16T02:46:20.416Z","type":"quit"}
{"nick":"tm","date":"2019-08-16T02:47:34.800Z","type":"join"}
{"nick":"R0b0t-X","reason":"Disconnected by services","date":"2019-08-16T02:47:48.386Z","type":"quit"}
{"nick":"X-51","date":"2019-08-16T02:47:48.473Z","type":"join"}
{"nick":"sgen","date":"2019-08-16T03:00:05.751Z","type":"join"}
{"nick":"chowmeined","date":"2019-08-16T03:01:48.805Z","type":"join"}
{"nick":"perrier-jouet","reason":"Quit: WeeChat 2.5","date":"2019-08-16T03:02:15.949Z","type":"quit"}
{"nick":"rainmanjam","date":"2019-08-16T03:03:31.762Z","type":"join"}
{"nick":"rainmanj_","reason":"Ping timeout: 264 seconds","date":"2019-08-16T03:06:40.167Z","type":"quit"}
{"nick":"zxrod","date":"2019-08-16T03:07:06.630Z","type":"quit"}
{"nick":"kakashiAL","reason":"Ping timeout: 272 seconds","date":"2019-08-16T03:08:36.729Z","type":"quit"}
{"nick":"dublin","date":"2019-08-16T03:10:49.034Z","type":"join"}
{"nick":"sgen","reason":"Ping timeout: 250 seconds","date":"2019-08-16T03:11:15.727Z","type":"quit"}
{"nick":"nomoney4me__","date":"2019-08-16T03:13:25.035Z","type":"join"}
{"nick":"drorb","date":"2019-08-16T03:18:17.941Z","type":"join"}
{"nick":"nomoney4me__","reason":"Ping timeout: 258 seconds","date":"2019-08-16T03:19:39.998Z","type":"quit"}
{"nick":"nomoney4me__","date":"2019-08-16T03:20:49.895Z","type":"join"}
{"nick":"drorb","reason":"Ping timeout: 248 seconds","date":"2019-08-16T03:22:43.866Z","type":"quit"}
{"nick":"nortonandrews","reason":"Ping timeout: 264 seconds","date":"2019-08-16T03:22:52.138Z","type":"quit"}
{"nick":"nortonandrews","date":"2019-08-16T03:24:32.751Z","type":"join"}
{"nick":"EyePulp","reason":"Remote host closed the connection","date":"2019-08-16T03:24:44.399Z","type":"quit"}
{"nick":"nomoney4me__","reason":"Ping timeout: 248 seconds","date":"2019-08-16T03:26:59.911Z","type":"quit"}
{"nick":"supernovah","date":"2019-08-16T03:27:27.639Z","type":"join"}
{"nick":"rainmanj_","date":"2019-08-16T03:27:42.597Z","type":"join"}
{"nick":"rainmanjam","reason":"Read error: Connection reset by peer","date":"2019-08-16T03:28:15.607Z","type":"quit"}
{"nick":"nomoney4me__","date":"2019-08-16T03:33:00.725Z","type":"join"}
{"nick":"duderonomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-16T03:34:20.483Z","type":"quit"}
{"nick":"tsujp","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-16T03:34:35.400Z","type":"quit"}
{"nick":"tsujp","date":"2019-08-16T03:36:05.656Z","type":"join"}
{"nick":"igemnace","date":"2019-08-16T03:39:09.563Z","type":"join"}
{"nick":"nomoney4me__","reason":"Ping timeout: 272 seconds","date":"2019-08-16T03:39:38.718Z","type":"quit"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T03:40:27.433Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T03:40:42.313Z","type":"join"}
{"nick":"kakashiAL","date":"2019-08-16T03:43:55.601Z","type":"join"}
{"nick":"Roughy","reason":"Quit: Meadow Fresh milk","date":"2019-08-16T03:44:08.291Z","type":"quit"}
{"nick":"mir100","date":"2019-08-16T03:45:31.036Z","type":"join"}
{"nick":"igemnace","reason":"Quit: WeeChat 2.5","date":"2019-08-16T03:46:41.578Z","type":"quit"}
{"nick":"fatalhalt","reason":"Quit: fatal halt","date":"2019-08-16T03:46:55.525Z","type":"quit"}
{"nick":"kakashiAL","reason":"Ping timeout: 268 seconds","date":"2019-08-16T03:48:54.600Z","type":"quit"}
{"nick":"shoky_","reason":"Ping timeout: 245 seconds","date":"2019-08-16T03:52:57.211Z","type":"quit"}
{"nick":"shoky","date":"2019-08-16T03:54:39.599Z","type":"join"}
{"nick":"renlolol","reason":"Ping timeout: 244 seconds","date":"2019-08-16T03:57:04.577Z","type":"quit"}
{"nick":"supernovah","reason":"Ping timeout: 245 seconds","date":"2019-08-16T03:57:57.180Z","type":"quit"}
{"nick":"renlolol","date":"2019-08-16T04:00:49.429Z","type":"join"}
{"nick":"conyers","reason":"Read error: Connection reset by peer","date":"2019-08-16T04:00:52.434Z","type":"quit"}
{"nick":"SferaDev","date":"2019-08-16T04:01:44.685Z","type":"join"}
{"nick":"igemnace","date":"2019-08-16T04:04:31.343Z","type":"join"}
{"nick":"mdutra","date":"2019-08-16T04:06:19.140Z","type":"join"}
{"nick":"marthinal","date":"2019-08-16T04:06:52.926Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 248 seconds","date":"2019-08-16T04:11:15.880Z","type":"quit"}
{"nick":"mihaele","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-16T04:14:07.293Z","type":"quit"}
{"nick":"duderonomy","date":"2019-08-16T04:15:00.158Z","type":"join"}
{"nick":"dmitri","date":"2019-08-16T04:15:47.905Z","type":"join"}
{"nick":"marthinal","date":"2019-08-16T04:17:46.720Z","type":"join"}
{"nick":"mdutra","reason":"Remote host closed the connection","date":"2019-08-16T04:19:16.587Z","type":"quit"}
{"nick":"mdutra","date":"2019-08-16T04:19:45.604Z","type":"join"}
{"nick":"rainmanj_","reason":"Ping timeout: 245 seconds","date":"2019-08-16T04:20:02.301Z","type":"quit"}
{"nick":"rainmanjam","date":"2019-08-16T04:21:43.616Z","type":"join"}
{"nick":"b44","date":"2019-08-16T04:23:27.721Z","type":"join"}
{"nick":"salerace","date":"2019-08-16T04:26:13.513Z","type":"join"}
{"nick":"b44","reason":"Ping timeout: 245 seconds","date":"2019-08-16T04:27:57.184Z","type":"quit"}
{"nick":"mihaele","date":"2019-08-16T04:29:36.019Z","type":"join"}
{"nick":"duderonomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-16T04:30:55.946Z","type":"quit"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T04:34:47.729Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T04:35:00.375Z","type":"join"}
{"nick":"lpin","date":"2019-08-16T04:40:40.195Z","type":"join"}
{"nick":"salerace","reason":"Quit: salerace","date":"2019-08-16T04:51:18.628Z","type":"quit"}
{"nick":"keith_miller","date":"2019-08-16T04:51:34.071Z","type":"join"}
{"nick":"sillyslux","reason":"Ping timeout: 245 seconds","date":"2019-08-16T04:57:58.421Z","type":"quit"}
{"nick":"SunWuKung","reason":"Quit: Sleeping in 武當山","date":"2019-08-16T04:59:10.604Z","type":"quit"}
{"nick":"plexigras","date":"2019-08-16T04:59:16.890Z","type":"join"}
{"nick":"ensyde","reason":"Ping timeout: 250 seconds","date":"2019-08-16T05:03:03.750Z","type":"quit"}
{"nick":"futs","reason":"Ping timeout: 248 seconds","date":"2019-08-16T05:03:31.902Z","type":"quit"}
{"nick":"drorb","date":"2019-08-16T05:03:43.633Z","type":"join"}
{"nick":"eb0t_","new_nick":"eblip","date":"2019-08-16T05:03:43.749Z","type":"nick"}
{"nick":"gli","date":"2019-08-16T05:04:16.905Z","type":"join"}
{"nick":"futs","date":"2019-08-16T05:05:18.637Z","type":"join"}
{"nick":"renlolol","reason":"Ping timeout: 245 seconds","date":"2019-08-16T05:06:18.468Z","type":"quit"}
{"nick":"renlolol","date":"2019-08-16T05:06:58.263Z","type":"join"}
{"nick":"abf_","reason":"Quit: Leaving","date":"2019-08-16T05:08:43.716Z","type":"quit"}
{"nick":"drorb","reason":"Ping timeout: 272 seconds","date":"2019-08-16T05:08:56.624Z","type":"quit"}
{"nick":"devc`","reason":"Remote host closed the connection","date":"2019-08-16T05:09:46.331Z","type":"quit"}
{"nick":"Gopa","reason":"Quit: Connection closed for inactivity","date":"2019-08-16T05:11:32.315Z","type":"quit"}
{"nick":"dmitri","reason":"Quit: This computer has gone to sleep","date":"2019-08-16T05:11:37.034Z","type":"quit"}
{"nick":"nomoney4me__","date":"2019-08-16T05:13:25.896Z","type":"join"}
{"nick":"SunWuKung","date":"2019-08-16T05:14:13.572Z","type":"join"}
{"nick":"SunWuKung","reason":"Client Quit","date":"2019-08-16T05:16:49.137Z","type":"quit"}
{"nick":"KempfCreative","reason":"Ping timeout: 248 seconds","date":"2019-08-16T05:19:31.921Z","type":"quit"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T05:20:01.439Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T05:20:26.402Z","type":"join"}
{"nick":"dmitri","date":"2019-08-16T05:24:14.713Z","type":"join"}
{"nick":"pknull","reason":"Client Quit","date":"2019-08-16T05:24:28.771Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T05:24:46.375Z","type":"join"}
{"nick":"X-51","reason":"Ping timeout: 245 seconds","date":"2019-08-16T05:27:08.424Z","type":"quit"}
{"nick":"mdutra","reason":"Remote host closed the connection","date":"2019-08-16T05:27:34.140Z","type":"quit"}
{"nick":"rainmanjam","reason":"Ping timeout: 268 seconds","date":"2019-08-16T05:30:39.616Z","type":"quit"}
{"nick":"nomoney4me__","reason":"Read error: Connection reset by peer","date":"2019-08-16T05:31:02.915Z","type":"quit"}
{"nick":"dublin","reason":"Remote host closed the connection","date":"2019-08-16T05:33:28.456Z","type":"quit"}
{"nick":"sauvin","date":"2019-08-16T05:39:17.621Z","type":"join"}
{"nick":"kjartan","date":"2019-08-16T05:41:28.775Z","type":"join"}
{"nick":"kakashiAL","date":"2019-08-16T05:44:49.013Z","type":"join"}
{"nick":"renlolol","reason":"Ping timeout: 250 seconds","date":"2019-08-16T05:46:49.803Z","type":"quit"}
{"nick":"duderonomy","date":"2019-08-16T05:47:02.094Z","type":"join"}
{"nick":"kakashiAL","reason":"Ping timeout: 248 seconds","date":"2019-08-16T05:49:23.904Z","type":"quit"}
{"nick":"mihaele","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-16T05:51:03.889Z","type":"quit"}
{"nick":"JerVoo","reason":"Ping timeout: 246 seconds","date":"2019-08-16T05:51:37.348Z","type":"quit"}
{"nick":"kakashiAL","date":"2019-08-16T05:51:38.906Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2019-08-16T05:53:09.563Z","type":"quit"}
{"nick":"craigo","date":"2019-08-16T05:53:10.662Z","type":"join"}
{"nick":"dmitri","reason":"Quit: This computer has gone to sleep","date":"2019-08-16T05:54:18.511Z","type":"quit"}
{"nick":"JerVoo","date":"2019-08-16T05:56:02.954Z","type":"join"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T06:00:50.614Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T06:01:10.726Z","type":"join"}
{"nick":"shiron","reason":"Ping timeout: 258 seconds","date":"2019-08-16T06:02:34.930Z","type":"quit"}
{"nick":"shiron","date":"2019-08-16T06:04:37.764Z","type":"join"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-16T06:04:48.034Z","type":"quit"}
{"nick":"nav2002_","date":"2019-08-16T06:06:22.277Z","type":"join"}
{"nick":"pknull","reason":"Quit: Departing.","date":"2019-08-16T06:07:11.786Z","type":"quit"}
{"nick":"kevireilly","reason":"Ping timeout: 245 seconds","date":"2019-08-16T06:07:33.452Z","type":"quit"}
{"nick":"pknull","date":"2019-08-16T06:08:08.536Z","type":"join"}
{"nick":"renlolol","date":"2019-08-16T06:11:51.261Z","type":"join"}
{"nick":"heyitsrama","date":"2019-08-16T06:11:54.357Z","type":"join"}
{"nick":"renlolol","reason":"Ping timeout: 264 seconds","date":"2019-08-16T06:16:52.051Z","type":"quit"}
{"nick":"led_dark_1","reason":"Quit: led_dark_1","date":"2019-08-16T06:18:11.588Z","type":"quit"}
{"nick":"Noti","date":"2019-08-16T06:18:40.396Z","type":"join"}
{"nick":"led_dark_1","date":"2019-08-16T06:20:24.365Z","type":"join"}
{"nick":"kpattich__","date":"2019-08-16T06:20:44.137Z","type":"join"}
{"nick":"groom","date":"2019-08-16T06:24:44.605Z","type":"join"}
{"nick":"kpattich__","reason":"Ping timeout: 258 seconds","date":"2019-08-16T06:38:36.970Z","type":"quit"}
{"nick":"SteffanW","date":"2019-08-16T06:40:04.613Z","type":"join"}
{"nick":"Noti","reason":"Ping timeout: 268 seconds","date":"2019-08-16T06:40:57.604Z","type":"quit"}
{"nick":"dmitri","date":"2019-08-16T06:46:26.022Z","type":"join"}
{"nick":"kpattich__","date":"2019-08-16T06:47:57.575Z","type":"join"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2019-08-16T06:48:07.523Z","type":"quit"}
{"nick":"heyitsrama","date":"2019-08-16T06:49:22.491Z","type":"join"}
{"nick":"dmitri","reason":"Ping timeout: 258 seconds","date":"2019-08-16T06:51:16.098Z","type":"quit"}
{"nick":"heyitsrama","reason":"Ping timeout: 245 seconds","date":"2019-08-16T06:54:13.532Z","type":"quit"}
{"nick":"dmitri","date":"2019-08-16T06:57:29.963Z","type":"join"}
{"nick":"SteffanW","reason":"Ping timeout: 268 seconds","date":"2019-08-16T06:58:13.605Z","type":"quit"}
{"nick":"SteffanW","date":"2019-08-16T07:02:55.457Z","type":"join"}
{"nick":"futs","reason":"Ping timeout: 272 seconds","date":"2019-08-16T07:04:50.719Z","type":"quit"}
{"nick":"joepie91","message":"Intelo: stored procedures are not composable (nor really dynamic at all), you don't get to benefit from JS' module system, and frankly I've never heard anyone provide a meaningful benefit of stored procedures in application development *at all*","date":"2019-08-16T07:05:49.220Z","type":"message"}
{"nick":"futs","date":"2019-08-16T07:06:36.625Z","type":"join"}
{"nick":"Chuguniy","date":"2019-08-16T07:06:46.371Z","type":"join"}
{"nick":"heyitsrama","date":"2019-08-16T07:08:42.330Z","type":"join"}
{"nick":"chowmein__","date":"2019-08-16T07:11:54.539Z","type":"join"}
{"nick":"renlolol","date":"2019-08-16T07:12:33.247Z","type":"join"}
{"nick":"chowmeined","reason":"Ping timeout: 244 seconds","date":"2019-08-16T07:14:57.466Z","type":"quit"}
{"nick":"krikun","date":"2019-08-16T07:15:24.699Z","type":"join"}
{"nick":"heyitsrama","reason":"Ping timeout: 268 seconds","date":"2019-08-16T07:16:06.601Z","type":"quit"}
{"nick":"Cu5tosL1m3n","message":"hi","date":"2019-08-16T07:16:48.182Z","type":"message"}
{"nick":"renlolol","reason":"Ping timeout: 250 seconds","date":"2019-08-16T07:17:23.747Z","type":"quit"}
{"nick":"Cu5tosL1m3n","message":"maybe not the best place to ask - but is there some current solution to resolving imports from browser to node_modules (via remapping of course so it reads via webserver) ?","date":"2019-08-16T07:17:26.219Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"Something like this: https://medium.com/chialab-open-source/a-study-about-how-to-improve-frontend-dev-experience-without-a-bundler-1b4c3a461a35","date":"2019-08-16T07:17:36.656Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-16T07:18:09.065Z","type":"quit"}
{"nick":"reber","date":"2019-08-16T07:18:44.735Z","type":"join"}
{"nick":"Cu5tosL1m3n","message":"I see this: https://github.com/pikapkg/web","date":"2019-08-16T07:21:20.456Z","type":"message"}
{"nick":"paulcarroty","date":"2019-08-16T07:21:52.915Z","type":"join"}
{"nick":"SteffanW","reason":"Read error: Connection reset by peer","date":"2019-08-16T07:22:09.319Z","type":"quit"}
{"nick":"SteffanW","date":"2019-08-16T07:22:21.539Z","type":"join"}
{"nick":"joepie91","message":"Cu5tosL1m3n: that blog post about it seems like a lot of words to basically say \"it's like Parcel, but not Parcel\"","date":"2019-08-16T07:24:30.273Z","type":"message"}
{"nick":"joepie91","message":"I don't really see the point of this...","date":"2019-08-16T07:24:42.247Z","type":"message"}
{"nick":"joepie91","message":"the most it seems to do is introduce more limitations","date":"2019-08-16T07:24:52.028Z","type":"message"}
{"nick":"joepie91","message":"waaaaait a moment.","date":"2019-08-16T07:25:08.865Z","type":"message"}
{"nick":"joepie91","message":"does it actually runtime-load every module over the network?","date":"2019-08-16T07:25:15.220Z","type":"message"}
{"nick":"joepie91","message":"yeah, this is a terrible idea :|","date":"2019-08-16T07:25:41.833Z","type":"message"}
{"nick":"mgol","date":"2019-08-16T07:25:43.854Z","type":"join"}
{"nick":"Cu5tosL1m3n","message":"okay","date":"2019-08-16T07:25:49.907Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"maybe","date":"2019-08-16T07:25:51.653Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"still not quite like parcel","date":"2019-08-16T07:25:57.560Z","type":"message"}
{"nick":"Hal9k","date":"2019-08-16T07:26:04.671Z","type":"quit"}
{"nick":"Cu5tosL1m3n","message":"and it is out of date","date":"2019-08-16T07:26:07.851Z","type":"message"}
{"nick":"joepie91","message":"it actually has the worst of both worlds; it both introduces a bundling step and\u000f runtime-loads dependencies","date":"2019-08-16T07:26:11.965Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"pikapkg/web is similar but maintained","date":"2019-08-16T07:26:15.003Z","type":"message"}
{"nick":"joepie91","message":"and seems to completely ignore the existence of bundle splitting","date":"2019-08-16T07:26:24.493Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"joepie91: there is no bundling step","date":"2019-08-16T07:26:24.761Z","type":"message"}
{"nick":"joepie91","message":"yes there is","date":"2019-08-16T07:26:31.510Z","type":"message"}
{"nick":"joepie91","message":"it's just hidden","date":"2019-08-16T07:26:35.044Z","type":"message"}
{"nick":"joepie91","message":"see https://www.pika.dev/blog/pika-web-a-future-without-webpack/#%40pika%2Fweb%3A-web-apps-without-the-bundler","date":"2019-08-16T07:26:47.584Z","type":"message"}
{"nick":"joepie91","message":"it's literally just a bundler that works differently","date":"2019-08-16T07:26:58.189Z","type":"message"}
{"nick":"joepie91","message":"worse, I'd argue","date":"2019-08-16T07:27:05.819Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"okay pika has yes","date":"2019-08-16T07:27:58.465Z","type":"message"}
{"nick":"joepie91","message":"I'm sure that this thing will accumulate its share of fanboys, as any misleadingly-marketed Super Easy(tm) tool does, but from a technical perspective this is nonsnse","date":"2019-08-16T07:28:01.264Z","type":"message"}
{"nick":"joepie91","message":"nonsense*","date":"2019-08-16T07:28:01.948Z","type":"message"}
{"nick":"SDr","message":"hey #Node.js , what are your daily websites / outlets / online watercoolers for tech stuff?","date":"2019-08-16T07:28:17.372Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"I was talking about unchained","date":"2019-08-16T07:28:17.729Z","type":"message"}
{"nick":"pandem","message":"SDr: irc","date":"2019-08-16T07:28:27.171Z","type":"message"}
{"nick":"SDr","message":"pandem, what about port 443? :)","date":"2019-08-16T07:28:44.864Z","type":"message"}
{"nick":"joepie91","message":"Cu5tosL1m3n: you've not mentioned anything named that before","date":"2019-08-16T07:28:48.854Z","type":"message"}
{"nick":"joepie91","message":"Cu5tosL1m3n: and the same thing generally applies: there's a very good reason we use bundlers","date":"2019-08-16T07:29:05.619Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"joepie91: this is referring to unchained: https://medium.com/chialab-open-source/a-study-about-how-to-improve-frontend-dev-experience-without-a-bundler-1b4c3a461a35","date":"2019-08-16T07:29:08.211Z","type":"message"}
{"nick":"SteffanW","reason":"Ping timeout: 245 seconds","date":"2019-08-16T07:29:13.612Z","type":"quit"}
{"nick":"joepie91","message":"namely: traversing a dependency graph over the network is a terrible idea as it is inherently slow","date":"2019-08-16T07:29:15.500Z","type":"message"}
{"nick":"joepie91","message":"this is an inherent tradeoff","date":"2019-08-16T07:29:22.559Z","type":"message"}
{"nick":"joepie91","message":"you /can/ load modules over the network, sure. it's just a terrible idea, which is why we bundle","date":"2019-08-16T07:29:35.136Z","type":"message"}
{"nick":"joepie91","message":"therefore: I don't see the point","date":"2019-08-16T07:30:02.405Z","type":"message"}
{"nick":"Booster2ooo","date":"2019-08-16T07:30:42.393Z","type":"join"}
{"nick":"joepie91","message":"like, to rephrase things, assuming that you use modules, \"avoiding bundlers\" basically means that you're causing delays for *all* of your users because *you* didn't want to install/start a development tool","date":"2019-08-16T07:30:55.655Z","type":"message"}
{"nick":"joepie91","message":"which, well, I hope I don't have to explain how that is unprofessional :|","date":"2019-08-16T07:31:29.325Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"joepie91: I don't want to use it in production","date":"2019-08-16T07:35:57.035Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"joepie91: and if you don't know - it is easier to write: \"I don't know\"","date":"2019-08-16T07:36:07.457Z","type":"message"}
{"nick":"Cu5tosL1m3n","message":"joepie91: or just not answer","date":"2019-08-16T07:36:11.213Z","type":"message"}
{"nick":"null4bl3","reason":"Quit: Leaving","date":"2019-08-16T07:36:23.881Z","type":"quit"}
{"nick":"joepie91","message":"Cu5tosL1m3n: what? I'm explaining to you why what you want to do is a terrible idea, that has nothing to do with \"not knowing\"","date":"2019-08-16T07:37:35.777Z","type":"message"}
{"nick":"heyitsrama","date":"2019-08-16T07:39:34.591Z","type":"join"}
{"nick":"sQVe","date":"2019-08-16T07:39:51.614Z","type":"join"}
{"nick":"DuckyDev","message":"Hi guys. for some reason is it just impossible ( for me ) to get winston and winston-mongodb to work for me, I can see that it creates the collection in mongodb, and the error.log file but it refuses to write to it?! I keep getting this error ( https://termbin.com/oq86 )","date":"2019-08-16T07:42:25.983Z","type":"message"}
{"nick":"DuckyDev","message":"and this is the code ( https://termbin.com/tctm ) small project.","date":"2019-08-16T07:43:01.505Z","type":"message"}
{"nick":"DuckyDev","message":"anyone with an idea here?! this is driving me nuts.","date":"2019-08-16T07:44:07.555Z","type":"message"}
{"nick":"heyitsrama","reason":"Ping timeout: 246 seconds","date":"2019-08-16T07:46:46.300Z","type":"quit"}
{"nick":"jolav","date":"2019-08-16T07:48:23.764Z","type":"join"}
{"nick":"heyitsrama","date":"2019-08-16T07:48:43.110Z","type":"join"}
{"nick":"heyitsrama","reason":"Ping timeout: 244 seconds","date":"2019-08-16T07:55:15.564Z","type":"quit"}
{"nick":"dmitri","reason":"Quit: This computer has gone to sleep","date":"2019-08-16T07:55:53.596Z","type":"quit"}
{"nick":"SteffanW","date":"2019-08-16T07:57:59.363Z","type":"join"}
