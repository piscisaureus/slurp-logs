{"nick":"kakashiA1","date":"2019-05-17T00:03:05.050Z","type":"join"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T00:03:23.444Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 255 seconds","date":"2019-05-17T00:04:01.426Z","type":"quit"}
{"nick":"Nicmavr","date":"2019-05-17T00:04:26.455Z","type":"join"}
{"nick":"carif","date":"2019-05-17T00:07:07.356Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2019-05-17T00:09:42.964Z","type":"quit"}
{"nick":"sctskw","date":"2019-05-17T00:15:48.512Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T00:15:59.911Z","type":"quit"}
{"nick":"electronicmaji","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2019-05-17T00:16:00.786Z","type":"quit"}
{"nick":"piyer","date":"2019-05-17T00:16:49.294Z","type":"join"}
{"nick":"haivron","reason":"Read error: Connection reset by peer","date":"2019-05-17T00:16:50.716Z","type":"quit"}
{"nick":"shush","reason":"Remote host closed the connection","date":"2019-05-17T00:19:58.653Z","type":"quit"}
{"nick":"sctskw","reason":"Ping timeout: 255 seconds","date":"2019-05-17T00:20:40.650Z","type":"quit"}
{"nick":"geoffo","reason":"Read error: Connection reset by peer","date":"2019-05-17T00:20:53.127Z","type":"quit"}
{"nick":"geoffo","date":"2019-05-17T00:21:57.586Z","type":"join"}
{"nick":"zacts","date":"2019-05-17T00:22:18.330Z","type":"join"}
{"nick":"cyberjpn","reason":"Ping timeout: 258 seconds","date":"2019-05-17T00:22:45.034Z","type":"quit"}
{"nick":"NomadJim_","date":"2019-05-17T00:23:25.158Z","type":"join"}
{"nick":"nomoney4u","reason":"Ping timeout: 252 seconds","date":"2019-05-17T00:24:24.429Z","type":"quit"}
{"nick":"trevor","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T00:24:32.277Z","type":"quit"}
{"nick":"downer06","reason":"Ping timeout: 245 seconds","date":"2019-05-17T00:25:03.431Z","type":"quit"}
{"nick":"NomadJim","reason":"Ping timeout: 258 seconds","date":"2019-05-17T00:25:49.028Z","type":"quit"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T00:25:49.294Z","type":"quit"}
{"nick":"piyer","reason":"Read error: Connection reset by peer","date":"2019-05-17T00:28:32.856Z","type":"quit"}
{"nick":"zacts","reason":"Ping timeout: 246 seconds","date":"2019-05-17T00:28:34.285Z","type":"quit"}
{"nick":"piyer","date":"2019-05-17T00:29:05.482Z","type":"join"}
{"nick":"zacts","date":"2019-05-17T00:29:29.479Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 244 seconds","date":"2019-05-17T00:29:47.352Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T00:30:10.129Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T00:30:10.391Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T00:30:10.464Z","type":"join"}
{"nick":"jottr","date":"2019-05-17T00:32:13.348Z","type":"join"}
{"nick":"sozuba","date":"2019-05-17T00:37:54.465Z","type":"join"}
{"nick":"electronicmaji","date":"2019-05-17T00:39:35.356Z","type":"join"}
{"nick":"edge563","reason":"Quit: edge563","date":"2019-05-17T00:39:49.976Z","type":"quit"}
{"nick":"mat001_","reason":"Read error: Connection reset by peer","date":"2019-05-17T00:39:50.447Z","type":"quit"}
{"nick":"zacts","reason":"Quit: WeeChat 2.4","date":"2019-05-17T00:39:55.063Z","type":"quit"}
{"nick":"trevor","date":"2019-05-17T00:40:21.772Z","type":"join"}
{"nick":"Jay_","reason":"Ping timeout: 250 seconds","date":"2019-05-17T00:44:21.733Z","type":"quit"}
{"nick":"jottr","reason":"Ping timeout: 258 seconds","date":"2019-05-17T00:47:17.069Z","type":"quit"}
{"nick":"mat001","date":"2019-05-17T00:52:02.396Z","type":"join"}
{"nick":"carif","date":"2019-05-17T00:52:20.004Z","type":"join"}
{"nick":"platonic","date":"2019-05-17T00:53:34.352Z","type":"join"}
{"nick":"platonic","reason":"Ping timeout: 246 seconds","date":"2019-05-17T00:58:19.384Z","type":"quit"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2019-05-17T00:58:22.788Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 258 seconds","date":"2019-05-17T00:58:24.047Z","type":"quit"}
{"nick":"piyer","date":"2019-05-17T00:59:50.423Z","type":"join"}
{"nick":"zacts","date":"2019-05-17T01:00:08.167Z","type":"join"}
{"nick":"EyePulp","reason":"Remote host closed the connection","date":"2019-05-17T01:00:18.134Z","type":"quit"}
{"nick":"EyePulp","date":"2019-05-17T01:00:37.434Z","type":"join"}
{"nick":"cyberjpn","date":"2019-05-17T01:00:38.012Z","type":"join"}
{"nick":"piyer","reason":"Ping timeout: 246 seconds","date":"2019-05-17T01:04:09.064Z","type":"quit"}
{"nick":"zacts","reason":"Client Quit","date":"2019-05-17T01:04:13.762Z","type":"quit"}
{"nick":"hyperisco","reason":"Ping timeout: 258 seconds","date":"2019-05-17T01:07:35.907Z","type":"quit"}
{"nick":"nahtnam","reason":"Quit: Connection closed for inactivity","date":"2019-05-17T01:07:36.019Z","type":"quit"}
{"nick":"EyePulp","reason":"Remote host closed the connection","date":"2019-05-17T01:08:06.995Z","type":"quit"}
{"nick":"MarkyC","reason":"Read error: Connection reset by peer","date":"2019-05-17T01:08:09.553Z","type":"quit"}
{"nick":"hyperisco","date":"2019-05-17T01:09:10.392Z","type":"join"}
{"nick":"hallcyon_","reason":"Ping timeout: 256 seconds","date":"2019-05-17T01:09:29.251Z","type":"quit"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T01:10:43.897Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T01:10:56.386Z","type":"join"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2019-05-17T01:16:28.044Z","type":"quit"}
{"nick":"ferlzc","reason":"Ping timeout: 252 seconds","date":"2019-05-17T01:16:50.413Z","type":"quit"}
{"nick":"hyperisco","reason":"Ping timeout: 255 seconds","date":"2019-05-17T01:17:22.490Z","type":"quit"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2019-05-17T01:20:00.856Z","type":"quit"}
{"nick":"ed209","date":"2019-05-17T01:20:14.428Z","type":"join"}
{"nick":"piyer","date":"2019-05-17T01:20:14.690Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 246 seconds","date":"2019-05-17T01:20:22.334Z","type":"quit"}
{"nick":"mat001","reason":"Remote host closed the connection","date":"2019-05-17T01:21:22.163Z","type":"quit"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T01:25:29.575Z","type":"quit"}
{"nick":"kjartan","reason":"Read error: Connection reset by peer","date":"2019-05-17T01:27:41.639Z","type":"quit"}
{"nick":"EyePulp","date":"2019-05-17T01:29:39.160Z","type":"join"}
{"nick":"Kkiro","date":"2019-05-17T01:30:18.035Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T01:30:18.220Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T01:30:18.293Z","type":"join"}
{"nick":"heyitsrama","date":"2019-05-17T01:30:38.988Z","type":"join"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2019-05-17T01:31:36.879Z","type":"quit"}
{"nick":"kjartan","date":"2019-05-17T01:32:43.212Z","type":"join"}
{"nick":"heyitsrama","date":"2019-05-17T01:33:16.441Z","type":"join"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2019-05-17T01:33:18.535Z","type":"quit"}
{"nick":"tomru_","date":"2019-05-17T01:33:22.271Z","type":"join"}
{"nick":"hyperisco","date":"2019-05-17T01:34:04.437Z","type":"join"}
{"nick":"hdon","reason":"Ping timeout: 257 seconds","date":"2019-05-17T01:34:29.105Z","type":"quit"}
{"nick":"tomru","reason":"Ping timeout: 264 seconds","date":"2019-05-17T01:36:39.999Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-05-17T01:41:02.609Z","type":"join"}
{"nick":"keith_mi_","reason":"Client Quit","date":"2019-05-17T01:41:38.803Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-05-17T01:42:28.229Z","type":"join"}
{"nick":"keith_mi_","reason":"Client Quit","date":"2019-05-17T01:43:38.982Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T01:44:02.055Z","type":"join"}
{"nick":"slajax","date":"2019-05-17T01:44:19.338Z","type":"join"}
{"nick":"hyperisco","reason":"Read error: Connection reset by peer","date":"2019-05-17T01:49:01.694Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 246 seconds","date":"2019-05-17T01:49:39.062Z","type":"quit"}
{"nick":"slajax","reason":"Ping timeout: 246 seconds","date":"2019-05-17T01:53:16.373Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T01:56:37.059Z","type":"join"}
{"nick":"digitalnomad91","reason":"Ping timeout: 258 seconds","date":"2019-05-17T01:56:39.960Z","type":"quit"}
{"nick":"mantid","reason":"Ping timeout: 246 seconds","date":"2019-05-17T01:58:24.049Z","type":"quit"}
{"nick":"gli","date":"2019-05-17T01:59:20.459Z","type":"join"}
{"nick":"feelextra","reason":"Ping timeout: 258 seconds","date":"2019-05-17T02:02:01.995Z","type":"quit"}
{"nick":"esrse","date":"2019-05-17T02:03:23.975Z","type":"join"}
{"nick":"marthinal","date":"2019-05-17T02:04:02.541Z","type":"join"}
{"nick":"gli","reason":"Ping timeout: 255 seconds","date":"2019-05-17T02:04:37.431Z","type":"quit"}
{"nick":"Llama052","reason":"Quit: Connection closed for inactivity","date":"2019-05-17T02:07:05.433Z","type":"quit"}
{"nick":"akiva","reason":"Ping timeout: 246 seconds","date":"2019-05-17T02:08:40.331Z","type":"quit"}
{"nick":"marthinal","reason":"Ping timeout: 255 seconds","date":"2019-05-17T02:08:40.443Z","type":"quit"}
{"nick":"Roughy","reason":"Quit: Meadow Fresh milk","date":"2019-05-17T02:11:50.002Z","type":"quit"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2019-05-17T02:13:55.155Z","type":"quit"}
{"nick":"gli","date":"2019-05-17T02:16:00.447Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 246 seconds","date":"2019-05-17T02:16:36.054Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-05-17T02:17:14.298Z","type":"join"}
{"nick":"sctskw","date":"2019-05-17T02:17:15.989Z","type":"join"}
{"nick":"keith_mi_","reason":"Client Quit","date":"2019-05-17T02:18:46.541Z","type":"quit"}
{"nick":"Nes173","date":"2019-05-17T02:20:50.013Z","type":"join"}
{"nick":"sctskw","reason":"Ping timeout: 246 seconds","date":"2019-05-17T02:21:29.996Z","type":"quit"}
{"nick":"hdon","date":"2019-05-17T02:25:50.374Z","type":"join"}
{"nick":"electronicmaji","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2019-05-17T02:28:02.158Z","type":"quit"}
{"nick":"hemstock","reason":"Remote host closed the connection","date":"2019-05-17T02:28:18.943Z","type":"quit"}
{"nick":"hemstock","date":"2019-05-17T02:28:31.312Z","type":"join"}
{"nick":"carif","date":"2019-05-17T02:30:04.768Z","type":"join"}
{"nick":"Jessidhia","reason":"Disconnected by services","date":"2019-05-17T02:32:03.020Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-05-17T02:32:18.091Z","type":"join"}
{"nick":"TikityTik","date":"2019-05-17T02:36:38.273Z","type":"join"}
{"nick":"electronicmaji","date":"2019-05-17T02:38:07.042Z","type":"join"}
{"nick":"Jessidhia","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T02:38:35.275Z","type":"quit"}
{"nick":"cyberjpn","reason":"Ping timeout: 258 seconds","date":"2019-05-17T02:38:49.972Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-05-17T02:39:55.124Z","type":"join"}
{"nick":"trevor","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T02:40:10.189Z","type":"quit"}
{"nick":"mastema","date":"2019-05-17T02:41:31.384Z","type":"join"}
{"nick":"KempfCreative","reason":"Ping timeout: 255 seconds","date":"2019-05-17T02:41:31.470Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 268 seconds","date":"2019-05-17T02:41:52.705Z","type":"quit"}
{"nick":"KempfCreative","date":"2019-05-17T02:43:20.432Z","type":"join"}
{"nick":"jottr","date":"2019-05-17T02:44:00.004Z","type":"join"}
{"nick":"factor","reason":"Quit: Leaving","date":"2019-05-17T02:45:36.710Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T02:48:36.490Z","type":"join"}
{"nick":"EyePulp","reason":"Remote host closed the connection","date":"2019-05-17T02:49:01.267Z","type":"quit"}
{"nick":"jottr","reason":"Ping timeout: 268 seconds","date":"2019-05-17T02:49:53.734Z","type":"quit"}
{"nick":"prometh","reason":"Quit: 🤤🛌💤","date":"2019-05-17T02:50:42.462Z","type":"quit"}
{"nick":"wprl","date":"2019-05-17T02:51:31.293Z","type":"join"}
{"nick":"lucid-lullaby","reason":"Ping timeout: 258 seconds","date":"2019-05-17T02:53:00.914Z","type":"quit"}
{"nick":"w0ng","reason":"Quit: leaving","date":"2019-05-17T02:53:03.870Z","type":"quit"}
{"nick":"w0ng","date":"2019-05-17T02:53:27.385Z","type":"join"}
{"nick":"wprl","reason":"Remote host closed the connection","date":"2019-05-17T02:53:49.916Z","type":"quit"}
{"nick":"jlipps","date":"2019-05-17T02:54:06.302Z","type":"join"}
{"nick":"d3x0r","reason":"Read error: Connection reset by peer","date":"2019-05-17T02:56:07.315Z","type":"quit"}
{"nick":"d3x0r","date":"2019-05-17T02:56:18.915Z","type":"join"}
{"nick":"scapegoatee","date":"2019-05-17T03:02:16.890Z","type":"join"}
{"nick":"scapegoa_","date":"2019-05-17T03:02:50.264Z","type":"join"}
{"nick":"scapegoatee","reason":"Quit: Leaving...","date":"2019-05-17T03:04:13.965Z","type":"quit"}
{"nick":"Kestrel-029","date":"2019-05-17T03:04:27.461Z","type":"join"}
{"nick":"scapegoa_","reason":"Client Quit","date":"2019-05-17T03:04:31.949Z","type":"quit"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T03:04:38.484Z","type":"quit"}
{"nick":"braincrash","reason":"Quit: bye bye","date":"2019-05-17T03:05:37.458Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 255 seconds","date":"2019-05-17T03:08:31.456Z","type":"quit"}
{"nick":"Jessidhia","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T03:08:47.748Z","type":"quit"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T03:10:20.580Z","type":"quit"}
{"nick":"braincrash","date":"2019-05-17T03:10:21.349Z","type":"join"}
{"nick":"Jessidhia","date":"2019-05-17T03:10:59.941Z","type":"join"}
{"nick":"alexge50","reason":"Ping timeout: 245 seconds","date":"2019-05-17T03:11:43.504Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T03:14:09.353Z","type":"join"}
{"nick":"keith_mi_","date":"2019-05-17T03:15:24.386Z","type":"join"}
{"nick":"Kkiro","date":"2019-05-17T03:15:31.151Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T03:15:31.413Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T03:15:31.486Z","type":"join"}
{"nick":"slajax","date":"2019-05-17T03:16:01.517Z","type":"join"}
{"nick":"piyer","date":"2019-05-17T03:16:10.743Z","type":"join"}
{"nick":"duderonomy","date":"2019-05-17T03:18:39.048Z","type":"join"}
{"nick":"Nicmavr","date":"2019-05-17T03:19:26.430Z","type":"join"}
{"nick":"mynick","date":"2019-05-17T03:19:36.350Z","type":"join"}
{"nick":"Kestrel-029","reason":"Ping timeout: 245 seconds","date":"2019-05-17T03:19:38.427Z","type":"quit"}
{"nick":"mynick","new_nick":"Guest18155","date":"2019-05-17T03:20:00.047Z","type":"nick"}
{"nick":"jlipps","reason":"Quit: My comp has gone to sleep. ZZZzzz…","date":"2019-05-17T03:21:24.272Z","type":"quit"}
{"nick":"gli","reason":"Ping timeout: 255 seconds","date":"2019-05-17T03:23:22.530Z","type":"quit"}
{"nick":"Guest18155","reason":"Ping timeout: 244 seconds","date":"2019-05-17T03:23:54.350Z","type":"quit"}
{"nick":"hdon","reason":"Ping timeout: 245 seconds","date":"2019-05-17T03:24:13.294Z","type":"quit"}
{"nick":"alexge50","date":"2019-05-17T03:24:59.973Z","type":"join"}
{"nick":"versatiletech","date":"2019-05-17T03:25:49.354Z","type":"join"}
{"nick":"cyberjpn","date":"2019-05-17T03:26:10.536Z","type":"join"}
{"nick":"jlipps","date":"2019-05-17T03:26:16.639Z","type":"join"}
{"nick":"arunkumar413","date":"2019-05-17T03:27:08.479Z","type":"join"}
{"nick":"slajax","reason":"Ping timeout: 258 seconds","date":"2019-05-17T03:30:11.892Z","type":"quit"}
{"nick":"d3x0r","reason":"Read error: Connection reset by peer","date":"2019-05-17T03:31:38.516Z","type":"quit"}
{"nick":"d3x0r","date":"2019-05-17T03:32:06.917Z","type":"join"}
{"nick":"mantid","date":"2019-05-17T03:33:08.361Z","type":"join"}
{"nick":"EyePulp","date":"2019-05-17T03:33:36.654Z","type":"join"}
{"nick":"igemnace","reason":"Quit: WeeChat 2.4","date":"2019-05-17T03:34:37.647Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 246 seconds","date":"2019-05-17T03:35:07.372Z","type":"quit"}
{"nick":"igemnace","date":"2019-05-17T03:35:09.865Z","type":"join"}
{"nick":"platonic","date":"2019-05-17T03:35:41.353Z","type":"join"}
{"nick":"EyePulp","reason":"Remote host closed the connection","date":"2019-05-17T03:35:44.754Z","type":"quit"}
{"nick":"EyePulp","date":"2019-05-17T03:35:58.756Z","type":"join"}
{"nick":"gli","date":"2019-05-17T03:36:37.432Z","type":"join"}
{"nick":"cyberjpn","reason":"Ping timeout: 245 seconds","date":"2019-05-17T03:36:43.506Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T03:39:07.330Z","type":"quit"}
{"nick":"cyberjpn","date":"2019-05-17T03:39:44.090Z","type":"join"}
{"nick":"platonic","reason":"Ping timeout: 246 seconds","date":"2019-05-17T03:40:01.306Z","type":"quit"}
{"nick":"rad","date":"2019-05-17T03:42:46.986Z","type":"join"}
{"nick":"s00pcan","reason":"Ping timeout: 268 seconds","date":"2019-05-17T03:45:23.835Z","type":"quit"}
{"nick":"Sharaal","date":"2019-05-17T03:48:09.410Z","type":"join"}
{"nick":"carif","date":"2019-05-17T03:48:32.305Z","type":"join"}
{"nick":"awgh","date":"2019-05-17T03:48:43.015Z","type":"join"}
{"nick":"geoffo","reason":"Read error: Connection reset by peer","date":"2019-05-17T03:49:04.031Z","type":"quit"}
{"nick":"geoffo","date":"2019-05-17T03:50:05.148Z","type":"join"}
{"nick":"rad","reason":"Quit: Lost terminal","date":"2019-05-17T03:51:45.364Z","type":"quit"}
{"nick":"Sharaal","reason":"Ping timeout: 245 seconds","date":"2019-05-17T03:52:33.328Z","type":"quit"}
{"nick":"fatalhalt","date":"2019-05-17T03:53:25.811Z","type":"join"}
{"nick":"hemstock","date":"2019-05-17T03:54:02.177Z","type":"quit"}
{"nick":"sozuba","reason":"Ping timeout: 246 seconds","date":"2019-05-17T03:57:24.040Z","type":"quit"}
{"nick":"mven_","date":"2019-05-17T03:58:44.204Z","type":"join"}
{"nick":"Arcaelyx","reason":"Ping timeout: 244 seconds","date":"2019-05-17T03:59:02.354Z","type":"quit"}
{"nick":"mven","reason":"Ping timeout: 268 seconds","date":"2019-05-17T03:59:34.739Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 246 seconds","date":"2019-05-17T03:59:58.317Z","type":"quit"}
{"nick":"mantid","reason":"Ping timeout: 246 seconds","date":"2019-05-17T04:01:01.283Z","type":"quit"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T04:03:48.596Z","type":"quit"}
{"nick":"Nicmavr","date":"2019-05-17T04:04:26.523Z","type":"join"}
{"nick":"ricekrispie2","reason":"Read error: Connection reset by peer","date":"2019-05-17T04:08:04.756Z","type":"quit"}
{"nick":"electronicmaji","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2019-05-17T04:09:51.919Z","type":"quit"}
{"nick":"electronicmaji","date":"2019-05-17T04:10:14.550Z","type":"join"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T04:10:15.019Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T04:10:36.476Z","type":"join"}
{"nick":"electronicmaji","reason":"Client Quit","date":"2019-05-17T04:10:40.274Z","type":"quit"}
{"nick":"electronicmaji","date":"2019-05-17T04:10:57.847Z","type":"join"}
{"nick":"electronicmaji","reason":"Client Quit","date":"2019-05-17T04:11:27.672Z","type":"quit"}
{"nick":"marthinal","date":"2019-05-17T04:13:16.018Z","type":"join"}
{"nick":"Kkiro","date":"2019-05-17T04:15:30.046Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T04:15:30.222Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T04:15:30.222Z","type":"join"}
{"nick":"sctskw","date":"2019-05-17T04:17:50.278Z","type":"join"}
{"nick":"KempfCreative","reason":"Ping timeout: 252 seconds","date":"2019-05-17T04:18:42.437Z","type":"quit"}
{"nick":"Kestrel-029","date":"2019-05-17T04:19:28.481Z","type":"join"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T04:19:38.475Z","type":"quit"}
{"nick":"altigraph","date":"2019-05-17T04:22:02.352Z","type":"join"}
{"nick":"s00pcan","date":"2019-05-17T04:22:18.054Z","type":"join"}
{"nick":"sctskw","reason":"Ping timeout: 246 seconds","date":"2019-05-17T04:22:22.326Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 255 seconds","date":"2019-05-17T04:24:07.437Z","type":"quit"}
{"nick":"s00pcan","reason":"Ping timeout: 246 seconds","date":"2019-05-17T04:27:09.037Z","type":"quit"}
{"nick":"EyePulp","reason":"Remote host closed the connection","date":"2019-05-17T04:29:29.350Z","type":"quit"}
{"nick":"briny","reason":"Remote host closed the connection","date":"2019-05-17T04:33:03.599Z","type":"quit"}
{"nick":"platonic","date":"2019-05-17T04:36:35.363Z","type":"join"}
{"nick":"carif","date":"2019-05-17T04:37:34.483Z","type":"join"}
{"nick":"s00pcan","date":"2019-05-17T04:38:17.790Z","type":"join"}
{"nick":"platonic","reason":"Ping timeout: 246 seconds","date":"2019-05-17T04:40:55.288Z","type":"quit"}
{"nick":"cyberjpn","reason":"Ping timeout: 246 seconds","date":"2019-05-17T04:41:09.070Z","type":"quit"}
{"nick":"envex","reason":"Ping timeout: 245 seconds","date":"2019-05-17T04:42:58.501Z","type":"quit"}
{"nick":"envex","date":"2019-05-17T04:45:17.796Z","type":"join"}
{"nick":"jottr","date":"2019-05-17T04:45:54.217Z","type":"join"}
{"nick":"s00pcan","reason":"Ping timeout: 268 seconds","date":"2019-05-17T04:47:03.770Z","type":"quit"}
{"nick":"s00pcan","date":"2019-05-17T04:48:44.956Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 255 seconds","date":"2019-05-17T04:48:52.565Z","type":"quit"}
{"nick":"Nicmavr","date":"2019-05-17T04:49:26.539Z","type":"join"}
{"nick":"Kestrel-029","reason":"Ping timeout: 245 seconds","date":"2019-05-17T04:49:38.475Z","type":"quit"}
{"nick":"jottr","reason":"Ping timeout: 258 seconds","date":"2019-05-17T04:50:41.976Z","type":"quit"}
{"nick":"hakatashi1","reason":"Read error: Connection reset by peer","date":"2019-05-17T04:51:27.102Z","type":"quit"}
{"nick":"led_dark_1","reason":"Quit: led_dark_1","date":"2019-05-17T04:52:32.059Z","type":"quit"}
{"nick":"hakatashi","date":"2019-05-17T04:52:55.802Z","type":"join"}
{"nick":"led_dark_1","date":"2019-05-17T04:55:27.061Z","type":"join"}
{"nick":"hakatashi","reason":"Read error: Connection reset by peer","date":"2019-05-17T04:55:33.488Z","type":"quit"}
{"nick":"hakatashi","date":"2019-05-17T04:55:50.354Z","type":"join"}
{"nick":"lpin","date":"2019-05-17T04:59:46.815Z","type":"join"}
{"nick":"TikityTik","reason":"Ping timeout: 268 seconds","date":"2019-05-17T05:00:00.747Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T05:01:56.441Z","type":"join"}
{"nick":"sillyslux","reason":"Read error: Connection reset by peer","date":"2019-05-17T05:02:24.390Z","type":"quit"}
{"nick":"Anthaas","reason":"Ping timeout: 245 seconds","date":"2019-05-17T05:03:23.570Z","type":"quit"}
{"nick":"Anthaas","date":"2019-05-17T05:04:59.585Z","type":"join"}
{"nick":"DeltaHeavy","date":"2019-05-17T05:05:18.088Z","type":"join"}
{"nick":"arunkumar413","message":"Is there an official bootstrap module for use with reactjs","date":"2019-05-17T05:08:33.138Z","type":"message"}
{"nick":"cyberjpn","date":"2019-05-17T05:09:47.573Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2019-05-17T05:10:41.820Z","type":"quit"}
{"nick":"altigraph","reason":"Remote host closed the connection","date":"2019-05-17T05:11:04.524Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 245 seconds","date":"2019-05-17T05:12:08.458Z","type":"quit"}
{"nick":"alexge50","reason":"Ping timeout: 258 seconds","date":"2019-05-17T05:12:09.974Z","type":"quit"}
{"nick":"dre_","date":"2019-05-17T05:12:24.340Z","type":"join"}
{"nick":"piyer","date":"2019-05-17T05:12:30.628Z","type":"join"}
{"nick":"mat001","date":"2019-05-17T05:15:48.722Z","type":"join"}
{"nick":"sauvin","date":"2019-05-17T05:16:56.453Z","type":"join"}
{"nick":"piyer","reason":"Ping timeout: 246 seconds","date":"2019-05-17T05:16:58.271Z","type":"quit"}
{"nick":"_bamdad","date":"2019-05-17T05:24:44.061Z","type":"join"}
{"nick":"_bamdad","reason":"Client Quit","date":"2019-05-17T05:24:46.753Z","type":"quit"}
{"nick":"alexge50","date":"2019-05-17T05:25:47.037Z","type":"join"}
{"nick":"carif","date":"2019-05-17T05:25:56.399Z","type":"join"}
{"nick":"ycon_","date":"2019-05-17T05:26:15.019Z","type":"join"}
{"nick":"cyberjpn","reason":"Ping timeout: 246 seconds","date":"2019-05-17T05:26:25.318Z","type":"quit"}
{"nick":"ycon_","message":"HI all, i'm trying to run lint in a script on my nodejs file.","date":"2019-05-17T05:26:27.593Z","type":"message"}
{"nick":"ycon_","message":"Bascially I've got a script that runs before my app, and creates the migration files. I want it to lint onlyn those newly created files","date":"2019-05-17T05:27:08.460Z","type":"message"}
{"nick":"slajax","date":"2019-05-17T05:27:56.443Z","type":"join"}
{"nick":"ycon_","message":"Strangely, running \" src/createMigration.js && eslint --stdin --fix src/migrationFolder\" does not lin tthe files","date":"2019-05-17T05:28:01.190Z","type":"message"}
{"nick":"FozzWorth","reason":"Ping timeout: 250 seconds","date":"2019-05-17T05:30:21.722Z","type":"quit"}
{"nick":"ycon_","reason":"Remote host closed the connection","date":"2019-05-17T05:32:33.672Z","type":"quit"}
{"nick":"hoijui","date":"2019-05-17T05:33:23.243Z","type":"join"}
{"nick":"cyberjpn","date":"2019-05-17T05:33:43.529Z","type":"join"}
{"nick":"Sharaal","date":"2019-05-17T05:36:12.405Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 252 seconds","date":"2019-05-17T05:38:38.375Z","type":"quit"}
{"nick":"Sharaal","reason":"Ping timeout: 255 seconds","date":"2019-05-17T05:40:37.509Z","type":"quit"}
{"nick":"kjartan","reason":"Read error: Connection reset by peer","date":"2019-05-17T05:40:37.619Z","type":"quit"}
{"nick":"cyberjpn","reason":"Ping timeout: 258 seconds","date":"2019-05-17T05:41:17.921Z","type":"quit"}
{"nick":"slajax","reason":"Ping timeout: 258 seconds","date":"2019-05-17T05:44:25.140Z","type":"quit"}
{"nick":"GreenJello","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2019-05-17T05:45:28.016Z","type":"quit"}
{"nick":"kjartan","date":"2019-05-17T05:45:34.162Z","type":"join"}
{"nick":"mantid","date":"2019-05-17T05:45:36.884Z","type":"join"}
{"nick":"xjsx","date":"2019-05-17T05:46:55.056Z","type":"join"}
{"nick":"xjsx","message":"Using rxjs, how do you handle a deadlock properly?  https://jsfiddle.net/1hk5ufqp/","date":"2019-05-17T05:47:19.297Z","type":"message"}
{"nick":"earendel","date":"2019-05-17T05:49:33.943Z","type":"join"}
{"nick":"bamdads","date":"2019-05-17T05:49:50.178Z","type":"join"}
{"nick":"mantid","reason":"Ping timeout: 268 seconds","date":"2019-05-17T05:50:34.703Z","type":"quit"}
{"nick":"ycon_","date":"2019-05-17T05:51:18.357Z","type":"join"}
{"nick":"carif","date":"2019-05-17T05:52:20.066Z","type":"join"}
{"nick":"ycon_","message":"Hi all, am I trying to lint a file that gets created but my package.json is not doing it (and getting no errors). Any ideas?","date":"2019-05-17T05:54:21.939Z","type":"message"}
{"nick":"ycon_","message":"\"run migraion\": \" src/createMigration.js && eslint --stdin --fix src/migrationFolder\"","date":"2019-05-17T05:54:38.632Z","type":"message"}
{"nick":"bamdads","reason":"Quit: bamdads","date":"2019-05-17T05:55:00.627Z","type":"quit"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T05:55:11.084Z","type":"quit"}
{"nick":"jlipps","reason":"Quit: My comp has gone to sleep. ZZZzzz…","date":"2019-05-17T05:55:26.783Z","type":"quit"}
{"nick":"bamdads","date":"2019-05-17T05:55:56.018Z","type":"join"}
{"nick":"bamdads","reason":"Client Quit","date":"2019-05-17T05:55:58.311Z","type":"quit"}
{"nick":"bamdads","date":"2019-05-17T05:56:17.116Z","type":"join"}
{"nick":"dre_","reason":"Remote host closed the connection","date":"2019-05-17T05:58:26.167Z","type":"quit"}
{"nick":"bamdads","reason":"Remote host closed the connection","date":"2019-05-17T05:59:26.728Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T06:00:06.194Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T06:00:06.369Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T06:00:06.442Z","type":"join"}
{"nick":"bamdads","date":"2019-05-17T06:00:38.002Z","type":"join"}
{"nick":"goodenough","date":"2019-05-17T06:00:48.316Z","type":"join"}
{"nick":"bamdads","reason":"Remote host closed the connection","date":"2019-05-17T06:02:15.074Z","type":"quit"}
{"nick":"\\mSg","reason":"Ping timeout: 246 seconds","date":"2019-05-17T06:02:42.146Z","type":"quit"}
{"nick":"bamdads","date":"2019-05-17T06:03:28.492Z","type":"join"}
{"nick":"keepLearning512","date":"2019-05-17T06:04:08.659Z","type":"join"}
{"nick":"keepLearning512","reason":"Remote host closed the connection","date":"2019-05-17T06:04:21.112Z","type":"quit"}
{"nick":"keepLearning512","date":"2019-05-17T06:04:34.623Z","type":"join"}
{"nick":"gambl0re","reason":"Ping timeout: 250 seconds","date":"2019-05-17T06:04:35.748Z","type":"quit"}
{"nick":"mordof","reason":"Remote host closed the connection","date":"2019-05-17T06:05:00.082Z","type":"quit"}
{"nick":"ycon_","reason":"Remote host closed the connection","date":"2019-05-17T06:05:15.442Z","type":"quit"}
{"nick":"earendel","date":"2019-05-17T06:05:33.065Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 258 seconds","date":"2019-05-17T06:06:36.037Z","type":"quit"}
{"nick":"bigcake","date":"2019-05-17T06:06:37.932Z","type":"join"}
{"nick":"bigcake","reason":"Changing host","date":"2019-05-17T06:06:56.796Z","type":"quit"}
{"nick":"bigcake","date":"2019-05-17T06:06:56.869Z","type":"join"}
{"nick":"bigcake","reason":"Changing host","date":"2019-05-17T06:06:56.869Z","type":"quit"}
{"nick":"bigcake","date":"2019-05-17T06:06:56.869Z","type":"join"}
{"nick":"altigraph","date":"2019-05-17T06:08:06.322Z","type":"join"}
{"nick":"balestrino","date":"2019-05-17T06:09:37.806Z","type":"join"}
{"nick":"Nes173","reason":"Ping timeout: 258 seconds","date":"2019-05-17T06:10:02.923Z","type":"quit"}
{"nick":"kakashiA1","reason":"Ping timeout: 258 seconds","date":"2019-05-17T06:10:48.930Z","type":"quit"}
{"nick":"groom","date":"2019-05-17T06:12:20.779Z","type":"join"}
{"nick":"lightstalker","reason":"Ping timeout: 245 seconds","date":"2019-05-17T06:12:58.480Z","type":"quit"}
{"nick":"AbedB","date":"2019-05-17T06:15:04.798Z","type":"join"}
{"nick":"versatiletech","reason":"Quit: versatiletech","date":"2019-05-17T06:15:47.235Z","type":"quit"}
{"nick":"Dbugger","date":"2019-05-17T06:16:16.053Z","type":"join"}
{"nick":"lightstalker","date":"2019-05-17T06:19:06.286Z","type":"join"}
{"nick":"Noti","date":"2019-05-17T06:19:24.942Z","type":"join"}
{"nick":"carif","date":"2019-05-17T06:19:25.028Z","type":"join"}
{"nick":"cyberjpn","date":"2019-05-17T06:21:18.575Z","type":"join"}
{"nick":"bigcake","new_nick":"earende1","date":"2019-05-17T06:23:11.253Z","type":"nick"}
{"nick":"AbedB","reason":"Quit: Leaving","date":"2019-05-17T06:27:27.829Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2019-05-17T06:27:58.247Z","type":"quit"}
{"nick":"AbedB","date":"2019-05-17T06:28:31.042Z","type":"join"}
{"nick":"Sharaal","date":"2019-05-17T06:30:55.075Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 258 seconds","date":"2019-05-17T06:31:07.908Z","type":"quit"}
{"nick":"darkSeid","date":"2019-05-17T06:33:03.791Z","type":"join"}
{"nick":"Sharaal","reason":"Ping timeout: 246 seconds","date":"2019-05-17T06:35:15.061Z","type":"quit"}
{"nick":"goodenough","reason":"Read error: Connection reset by peer","date":"2019-05-17T06:36:40.318Z","type":"quit"}
{"nick":"led_dark_1","reason":"Quit: led_dark_1","date":"2019-05-17T06:37:38.175Z","type":"quit"}
{"nick":"goodenough","date":"2019-05-17T06:37:42.736Z","type":"join"}
{"nick":"goodenough","reason":"Remote host closed the connection","date":"2019-05-17T06:40:28.938Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T06:43:58.451Z","type":"join"}
{"nick":"Ergo","date":"2019-05-17T06:44:29.703Z","type":"join"}
{"nick":"kakashiA1","date":"2019-05-17T06:44:36.739Z","type":"join"}
{"nick":"jottr","date":"2019-05-17T06:46:48.918Z","type":"join"}
{"nick":"userx","reason":"Quit: userx","date":"2019-05-17T06:47:08.631Z","type":"quit"}
{"nick":"GreenJello","date":"2019-05-17T06:50:51.011Z","type":"join"}
{"nick":"cyberjpn","reason":"Ping timeout: 246 seconds","date":"2019-05-17T06:51:42.041Z","type":"quit"}
{"nick":"jottr","reason":"Ping timeout: 255 seconds","date":"2019-05-17T06:51:43.424Z","type":"quit"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T06:55:14.742Z","type":"quit"}
{"nick":"AbedB","reason":"Read error: Connection reset by peer","date":"2019-05-17T06:55:57.659Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 252 seconds","date":"2019-05-17T06:58:56.466Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T06:59:55.009Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T06:59:55.185Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T06:59:55.258Z","type":"join"}
{"nick":"Jessidhia","reason":"Ping timeout: 268 seconds","date":"2019-05-17T07:05:48.741Z","type":"quit"}
{"nick":"Alina-malina","reason":"Ping timeout: 246 seconds","date":"2019-05-17T07:09:40.339Z","type":"quit"}
{"nick":"Alina-malina","date":"2019-05-17T07:11:04.064Z","type":"join"}
{"nick":"Jessidhia","date":"2019-05-17T07:11:30.479Z","type":"join"}
{"nick":"carif","date":"2019-05-17T07:12:39.448Z","type":"join"}
{"nick":"linux_dr","date":"2019-05-17T07:12:47.662Z","type":"join"}
{"nick":"Jessidhia","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T07:17:24.034Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-05-17T07:18:12.215Z","type":"join"}
{"nick":"chargen","date":"2019-05-17T07:19:26.417Z","type":"join"}
{"nick":"Motoservo","date":"2019-05-17T07:23:04.828Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 252 seconds","date":"2019-05-17T07:26:26.436Z","type":"quit"}
{"nick":"bamdads","reason":"Quit: bamdads","date":"2019-05-17T07:29:02.250Z","type":"quit"}
{"nick":"nnyk","date":"2019-05-17T07:29:13.272Z","type":"join"}
{"nick":"bamdads","date":"2019-05-17T07:30:31.176Z","type":"join"}
{"nick":"mat001","reason":"Ping timeout: 250 seconds","date":"2019-05-17T07:31:15.710Z","type":"quit"}
{"nick":"bamdads","reason":"Client Quit","date":"2019-05-17T07:31:20.339Z","type":"quit"}
{"nick":"bamdads","date":"2019-05-17T07:31:40.984Z","type":"join"}
{"nick":"DanZimm","date":"2019-05-17T07:32:18.477Z","type":"join"}
{"nick":"bamdads","reason":"Client Quit","date":"2019-05-17T07:33:37.125Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-05-17T07:33:43.177Z","type":"join"}
{"nick":"bamdads","date":"2019-05-17T07:33:56.090Z","type":"join"}
{"nick":"Dbugger","reason":"Ping timeout: 264 seconds","date":"2019-05-17T07:34:16.061Z","type":"quit"}
{"nick":"Vonor_","date":"2019-05-17T07:37:04.058Z","type":"join"}
{"nick":"cyberjpn","date":"2019-05-17T07:37:04.232Z","type":"join"}
{"nick":"carif","date":"2019-05-17T07:40:25.010Z","type":"join"}
{"nick":"nnyk","reason":"Ping timeout: 258 seconds","date":"2019-05-17T07:40:34.123Z","type":"quit"}
{"nick":"slajax","date":"2019-05-17T07:42:32.762Z","type":"join"}
{"nick":"shush","date":"2019-05-17T07:43:18.364Z","type":"join"}
{"nick":"ahmedelgabri","date":"2019-05-17T07:43:53.725Z","type":"join"}
{"nick":"nahtnam","date":"2019-05-17T07:44:27.433Z","type":"join"}
{"nick":"nahtnam","message":"If I do `module.exports = {}`and export a bunch of functions inside that object, is it possible for the inner functions to access each other?","date":"2019-05-17T07:44:46.772Z","type":"message"}
{"nick":"nahtnam","message":"if so how?","date":"2019-05-17T07:44:48.394Z","type":"message"}
{"nick":"nahtnam","message":"I tried `this.` and it didnt work","date":"2019-05-17T07:44:57.541Z","type":"message"}
{"nick":"aneon","date":"2019-05-17T07:45:01.132Z","type":"join"}
{"nick":"nahtnam","message":"`module.exports.set();` seems to work","date":"2019-05-17T07:45:22.972Z","type":"message"}
{"nick":"nahtnam","message":"is this the best way?","date":"2019-05-17T07:45:28.042Z","type":"message"}
{"nick":"bamdads","reason":"Quit: bamdads","date":"2019-05-17T07:45:32.147Z","type":"quit"}
{"nick":"mantid","date":"2019-05-17T07:45:42.464Z","type":"join"}
{"nick":"bamdads","date":"2019-05-17T07:45:50.364Z","type":"join"}
{"nick":"altigraph","reason":"Remote host closed the connection","date":"2019-05-17T07:46:56.611Z","type":"quit"}
{"nick":"igemnace","message":"you can simply define the functions outside the object","date":"2019-05-17T07:46:57.266Z","type":"message"}
{"nick":"aneon","message":"hi, I need some pointers regarding product customization such as a color picker and then coloring the template or changing the color","date":"2019-05-17T07:47:42.889Z","type":"message"}
{"nick":"aneon","message":"is there any tool or plugin for this?","date":"2019-05-17T07:48:03.630Z","type":"message"}
{"nick":"groom1","date":"2019-05-17T07:48:35.311Z","type":"join"}
{"nick":"groom","reason":"Ping timeout: 268 seconds","date":"2019-05-17T07:48:58.867Z","type":"quit"}
{"nick":"kakashiA1","reason":"Ping timeout: 250 seconds","date":"2019-05-17T07:49:01.675Z","type":"quit"}
{"nick":"mantid","reason":"Ping timeout: 245 seconds","date":"2019-05-17T07:50:03.297Z","type":"quit"}
{"nick":"piyer","date":"2019-05-17T07:50:24.684Z","type":"join"}
{"nick":"GreenJello","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2019-05-17T07:51:25.979Z","type":"quit"}
{"nick":"joepie91","message":"nahtnam: define the functions outside of the object literal, and then just reference them from within the object literal. a function defined as part of an object property is a function *expression*, rather than a function *statement*, and as a result it won't assign the function to a same-named variable in scope. by defining 'standalone functions', you make them function *statements* and then that works","date":"2019-05-17T07:52:12.577Z","type":"message"}
{"nick":"carif","reason":"Ping timeout: 258 seconds","date":"2019-05-17T07:54:19.038Z","type":"quit"}
{"nick":"sz0","date":"2019-05-17T07:55:09.412Z","type":"join"}
{"nick":"piyer","reason":"Ping timeout: 255 seconds","date":"2019-05-17T07:55:10.415Z","type":"quit"}
{"nick":"cyberjpn","reason":"Ping timeout: 245 seconds","date":"2019-05-17T07:56:18.539Z","type":"quit"}
{"nick":"fairuz","date":"2019-05-17T07:56:25.653Z","type":"join"}
{"nick":"aneon","message":"I need helppppppppppppp","date":"2019-05-17T07:57:06.993Z","type":"message"}
{"nick":"Venemo","date":"2019-05-17T08:00:29.451Z","type":"join"}
{"nick":"Venemo","reason":"Client Quit","date":"2019-05-17T08:00:30.805Z","type":"quit"}
{"nick":"jottr","date":"2019-05-17T08:00:34.349Z","type":"join"}
{"nick":"Sharaal","date":"2019-05-17T08:03:44.067Z","type":"join"}
{"nick":"gajus","message":"new pkg https://github.com/gajus/coordinate-grid","date":"2019-05-17T08:04:04.028Z","type":"message"}
{"nick":"cyberjpn","date":"2019-05-17T08:04:30.122Z","type":"join"}
{"nick":"joepie91","message":"gajus: typo in your package keywords: coodinate -> coordinate","date":"2019-05-17T08:06:03.205Z","type":"message"}
{"nick":"joepie91","message":"also, would recommend adding 'terminal' :)","date":"2019-05-17T08:06:09.140Z","type":"message"}
{"nick":"carif","date":"2019-05-17T08:07:01.198Z","type":"join"}
{"nick":"gajus","message":"thank you","date":"2019-05-17T08:07:17.502Z","type":"message"}
{"nick":"userx","date":"2019-05-17T08:07:32.419Z","type":"join"}
{"nick":"joepie91","message":"looks interesting otherwise","date":"2019-05-17T08:07:40.434Z","type":"message"}
{"nick":"setpill","date":"2019-05-17T08:07:43.368Z","type":"join"}
{"nick":"is_null","date":"2019-05-17T08:07:52.748Z","type":"join"}
{"nick":"joepie91","message":"dunno if I have a usecase for it yet, but seems like a good package to have on the pile of CLI formatting packages","date":"2019-05-17T08:08:00.571Z","type":"message"}
{"nick":"Sharaal","reason":"Ping timeout: 258 seconds","date":"2019-05-17T08:08:06.989Z","type":"quit"}
{"nick":"gajus","message":"I need this surprisingly often, but then ... I work with a lot of theatrical data","date":"2019-05-17T08:08:51.225Z","type":"message"}
{"nick":"userx","reason":"Client Quit","date":"2019-05-17T08:09:01.847Z","type":"quit"}
{"nick":"floppydh","date":"2019-05-17T08:09:14.068Z","type":"join"}
{"nick":"userx","date":"2019-05-17T08:09:33.855Z","type":"join"}
{"nick":"shiron","reason":"Ping timeout: 244 seconds","date":"2019-05-17T08:09:37.353Z","type":"quit"}
{"nick":"setpill","reason":"Client Quit","date":"2019-05-17T08:09:47.391Z","type":"quit"}
{"nick":"userx","reason":"Client Quit","date":"2019-05-17T08:09:47.869Z","type":"quit"}
{"nick":"userx","date":"2019-05-17T08:10:14.394Z","type":"join"}
{"nick":"joepie91","message":"gajus: ahhh, seat maps? :)","date":"2019-05-17T08:10:15.995Z","type":"message"}
{"nick":"userx","reason":"Client Quit","date":"2019-05-17T08:10:34.013Z","type":"quit"}
{"nick":"michael_mbp","reason":"Ping timeout: 244 seconds","date":"2019-05-17T08:10:39.355Z","type":"quit"}
{"nick":"Sharaal","date":"2019-05-17T08:10:46.179Z","type":"join"}
{"nick":"wonko7","reason":"Ping timeout: 252 seconds","date":"2019-05-17T08:11:10.357Z","type":"quit"}
{"nick":"userx","date":"2019-05-17T08:11:14.203Z","type":"join"}
{"nick":"userx","reason":"Client Quit","date":"2019-05-17T08:11:20.189Z","type":"quit"}
{"nick":"userx","date":"2019-05-17T08:11:51.203Z","type":"join"}
{"nick":"Vonor_","message":"when writing a module it seems as though that the module's global require()s are executed the moment the module is loaded with require() too. increasing the execution time drastically. putting the require()s into the actual function that needs it seems to speed it up","date":"2019-05-17T08:12:06.449Z","type":"message"}
{"nick":"userx","reason":"Client Quit","date":"2019-05-17T08:12:06.914Z","type":"quit"}
{"nick":"shiron","date":"2019-05-17T08:12:08.951Z","type":"join"}
{"nick":"userx","date":"2019-05-17T08:12:28.331Z","type":"join"}
{"nick":"joepie91","message":"Vonor_: with \"global require()s\", do you mean \"require()s at the top of the file\"?","date":"2019-05-17T08:12:45.661Z","type":"message"}
{"nick":"Vonor_","message":"joepie91, yes","date":"2019-05-17T08:12:54.794Z","type":"message"}
{"nick":"joepie91","message":"Vonor_: then yes, that is correct; when you require() a JS file, it is parsed and executed from start to end right at that moment, including any top-level require() calls... and require() will synchronously read from disk","date":"2019-05-17T08:13:29.112Z","type":"message"}
{"nick":"joepie91","message":"this only affects startup time, however","date":"2019-05-17T08:13:37.940Z","type":"message"}
{"nick":"joepie91","message":"moving the require()s into functions doesn't change the total execution time, it just moves the loading time from startup to function execution","date":"2019-05-17T08:13:56.873Z","type":"message"}
{"nick":"setpill","date":"2019-05-17T08:14:09.338Z","type":"join"}
{"nick":"Vonor_","message":"yeah startup time for a cli app is important :)","date":"2019-05-17T08:14:11.696Z","type":"message"}
{"nick":"keepLearning512","reason":"Read error: Connection reset by peer","date":"2019-05-17T08:14:26.449Z","type":"quit"}
{"nick":"joepie91","message":"Vonor_: right, but then you'll have to be very careful about what you load where","date":"2019-05-17T08:14:38.902Z","type":"message"}
{"nick":"dino82","reason":"Remote host closed the connection","date":"2019-05-17T08:14:41.303Z","type":"quit"}
{"nick":"joepie91","message":"and ensure that you really /are/ only ever loading what's needed","date":"2019-05-17T08:14:49.367Z","type":"message"}
{"nick":"fairuz","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T08:14:50.657Z","type":"quit"}
{"nick":"joepie91","message":"and even then the difference won't be super big","date":"2019-05-17T08:15:02.128Z","type":"message"}
{"nick":"kapilp","date":"2019-05-17T08:15:09.315Z","type":"join"}
{"nick":"Vonor_","message":"yeah. but don't need to wait for ages to just print the version or help menu","date":"2019-05-17T08:15:12.225Z","type":"message"}
{"nick":"joepie91","message":"requiring modules shouldn't take 'ages' to begin with :P","date":"2019-05-17T08:15:35.634Z","type":"message"}
{"nick":"Vonor_","message":"joepie91, real    0m0,299s versus real    0m3,568s","date":"2019-05-17T08:15:37.644Z","type":"message"}
{"nick":"mastema","date":"2019-05-17T08:15:43.339Z","type":"part"}
{"nick":"joepie91","message":"that's not a significant difference though","date":"2019-05-17T08:16:04.603Z","type":"message"}
{"nick":"hussam","reason":"Quit: Connection closed for inactivity","date":"2019-05-17T08:16:05.176Z","type":"quit"}
{"nick":"nnyk","date":"2019-05-17T08:16:25.191Z","type":"join"}
{"nick":"userx","reason":"Ping timeout: 248 seconds","date":"2019-05-17T08:16:59.349Z","type":"quit"}
{"nick":"slajax","reason":"Ping timeout: 250 seconds","date":"2019-05-17T08:17:37.796Z","type":"quit"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T08:18:23.450Z","type":"quit"}
{"nick":"sctskw","date":"2019-05-17T08:19:14.097Z","type":"join"}
{"nick":"Nicmavr","date":"2019-05-17T08:19:26.464Z","type":"join"}
{"nick":"Vonor_","message":"joepie91, considering that in this example the call of the node app is not doing anything (no options or commands handed over) the difference is quite big> $ date +%H:%M:%S ; node ytc.js ;date +%H:%M:%S => 10:17:25 - 10:17:29 / $ date +%H:%M:%S ; node ytc.js ;date +%H:%M:%S => 10:18:02 - 10:18:02","date":"2019-05-17T08:19:53.915Z","type":"message"}
{"nick":"cebor","reason":"Quit: bye!","date":"2019-05-17T08:19:54.596Z","type":"quit"}
{"nick":"gajus","message":"joepie91: yeah, seat maps","date":"2019-05-17T08:20:21.894Z","type":"message"}
{"nick":"aLeSD","date":"2019-05-17T08:20:23.001Z","type":"join"}
{"nick":"cebor","date":"2019-05-17T08:20:32.376Z","type":"join"}
{"nick":"gajus","message":"otherwise I need to copy JSON to a web app, which gets mundane after you do it thousands of times","date":"2019-05-17T08:20:44.776Z","type":"message"}
{"nick":"carif","reason":"Ping timeout: 258 seconds","date":"2019-05-17T08:20:49.116Z","type":"quit"}
{"nick":"joepie91","message":"Vonor_: that seems weirdly slow...","date":"2019-05-17T08:20:59.279Z","type":"message"}
{"nick":"joepie91","message":"gajus: I assume you're taking into account double/connected seats?","date":"2019-05-17T08:21:07.706Z","type":"message"}
{"nick":"gajus","message":"I couldn't figure out how to pass information using URLs because the URL length does not allow to communicate all the necessary info","date":"2019-05-17T08:21:08.721Z","type":"message"}
{"nick":"gajus","message":"joepie91: not in the CLI version","date":"2019-05-17T08:21:17.871Z","type":"message"}
{"nick":"gajus","message":"but otherwise yes","date":"2019-05-17T08:21:20.601Z","type":"message"}
{"nick":"joepie91","message":"right :)","date":"2019-05-17T08:21:25.068Z","type":"message"}
{"nick":"Vonor_","message":"joepie91, but yeah, since i can fix it by simply moving the requires into the function that needs them, all is good. just took me a bit to figure it out :)","date":"2019-05-17T08:21:45.163Z","type":"message"}
{"nick":"b44","date":"2019-05-17T08:22:16.677Z","type":"join"}
{"nick":"sctskw","reason":"Ping timeout: 258 seconds","date":"2019-05-17T08:24:12.903Z","type":"quit"}
{"nick":"michael_mbp","date":"2019-05-17T08:24:21.237Z","type":"join"}
{"nick":"hussam","date":"2019-05-17T08:25:09.589Z","type":"join"}
{"nick":"b44","reason":"Remote host closed the connection","date":"2019-05-17T08:25:39.353Z","type":"quit"}
{"nick":"b44","date":"2019-05-17T08:26:12.104Z","type":"join"}
{"nick":"alem0lars","date":"2019-05-17T08:27:22.991Z","type":"join"}
{"nick":"cyberjpn","reason":"Ping timeout: 246 seconds","date":"2019-05-17T08:27:43.288Z","type":"quit"}
{"nick":"alem0lars","reason":"Remote host closed the connection","date":"2019-05-17T08:28:02.093Z","type":"quit"}
{"nick":"Hoffmann","date":"2019-05-17T08:30:12.063Z","type":"join"}
{"nick":"Hoffman","reason":"Ping timeout: 256 seconds","date":"2019-05-17T08:31:25.817Z","type":"quit"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T08:31:26.512Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T08:31:39.942Z","type":"join"}
{"nick":"alem0lars_","date":"2019-05-17T08:31:50.663Z","type":"join"}
{"nick":"bamdads","reason":"Quit: bamdads","date":"2019-05-17T08:32:04.891Z","type":"quit"}
{"nick":"bamdads","date":"2019-05-17T08:32:24.068Z","type":"join"}
{"nick":"Sharaal","date":"2019-05-17T08:32:41.855Z","type":"join"}
{"nick":"AlolaPikachu","date":"2019-05-17T08:33:38.035Z","type":"join"}
{"nick":"Kestrel-029","date":"2019-05-17T08:34:33.444Z","type":"join"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T08:34:38.403Z","type":"quit"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T08:40:26.392Z","type":"quit"}
{"nick":"td-kros","reason":"Ping timeout: 255 seconds","date":"2019-05-17T08:40:37.482Z","type":"quit"}
{"nick":"GreenJello","date":"2019-05-17T08:41:11.274Z","type":"join"}
{"nick":"td-kros","date":"2019-05-17T08:42:24.294Z","type":"join"}
{"nick":"Lope","date":"2019-05-17T08:43:17.062Z","type":"join"}
{"nick":"Lope","message":"I want to choose between using ES6 Promises or Async/Await.","date":"2019-05-17T08:43:53.808Z","type":"message"}
{"nick":"Kkiro","date":"2019-05-17T08:45:07.116Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T08:45:07.377Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T08:45:07.450Z","type":"join"}
{"nick":"bamdads","reason":"Quit: bamdads","date":"2019-05-17T08:45:13.917Z","type":"quit"}
{"nick":"Lope","message":"I don't know much about async await. it looks to me like you can basically declare any function async, then you just run a promise with the await keyword, and the containing function pauses until the awaited promise completes?","date":"2019-05-17T08:45:23.438Z","type":"message"}
{"nick":"bamdads","date":"2019-05-17T08:45:34.375Z","type":"join"}
{"nick":"Lope","message":"But now one issue I see with using Async/Await is how do you run multiple promises at the same time?","date":"2019-05-17T08:45:45.524Z","type":"message"}
{"nick":"michael_mbp","reason":"Ping timeout: 244 seconds","date":"2019-05-17T08:45:47.817Z","type":"quit"}
{"nick":"hoijui","reason":"Ping timeout: 248 seconds","date":"2019-05-17T08:46:19.268Z","type":"quit"}
{"nick":"Lope","message":"Let's say something like Promise.all( newCollections.map( newCollectionName => db.createCollection(newCollectionName) ) ).then","date":"2019-05-17T08:46:23.749Z","type":"message"}
{"nick":"Lope","message":"That's running all the promises at the same time.","date":"2019-05-17T08:46:31.210Z","type":"message"}
{"nick":"Lope","message":"Is that even possible with Async await?","date":"2019-05-17T08:46:39.313Z","type":"message"}
{"nick":"Lope","message":"I suppose you'd somehow write await Promise.all().then ?","date":"2019-05-17T08:46:56.563Z","type":"message"}
{"nick":"Lope","message":"So am I right in thinking that Promises and async/await have a close relationship?","date":"2019-05-17T08:47:20.812Z","type":"message"}
{"nick":"Lope","message":"*can have a close relationship.","date":"2019-05-17T08:47:31.565Z","type":"message"}
{"nick":"carif","reason":"Ping timeout: 258 seconds","date":"2019-05-17T08:48:45.009Z","type":"quit"}
{"nick":"joepie91","message":"Lope: async/await are syntactic sugar for ES6 Promises, so you are using ES6 Promises either way.","date":"2019-05-17T08:49:32.807Z","type":"message"}
{"nick":"joepie91","message":"(also, I recommend avoiding async/await, for a number of reasons)","date":"2019-05-17T08:49:43.765Z","type":"message"}
{"nick":"joepie91","message":"async/await doesn't replace things like Promise.all","date":"2019-05-17T08:49:49.391Z","type":"message"}
{"nick":"joepie91","message":"so you'd end up doing something like `await Promise.all(...)`","date":"2019-05-17T08:50:10.915Z","type":"message"}
{"nick":"zava","date":"2019-05-17T08:50:14.391Z","type":"join"}
{"nick":"michael_mbp","date":"2019-05-17T08:50:30.091Z","type":"join"}
{"nick":"Lope","message":"\"so you'd end up doing something like `await Promise.all(...)`\" but that's okay with me... ?","date":"2019-05-17T08:50:38.071Z","type":"message"}
{"nick":"joepie91","message":"however, async/await will limit you to using synchronous catch, which can't filter for error types; that's in and of itself enough reason to recommend against it (or against using ES6 Promises in application code, which have the same problem)","date":"2019-05-17T08:50:45.922Z","type":"message"}
{"nick":"shush","reason":"Ping timeout: 252 seconds","date":"2019-05-17T08:50:46.392Z","type":"quit"}
{"nick":"joepie91","message":"it'll also produce misleading code that /looks/ synchronous but that /behaves/ asynchronously, increasing the chance of race conditions","date":"2019-05-17T08:51:03.880Z","type":"message"}
{"nick":"Lope","message":"joepie91, yes, I remember you're a fan of error types.","date":"2019-05-17T08:51:12.330Z","type":"message"}
{"nick":"joepie91","message":"\"fan of\"? they're a basic component of proper error handling in an application","date":"2019-05-17T08:51:30.018Z","type":"message"}
{"nick":"joepie91","message":"that's not something to be a 'fan of', that's something to be assumed as a baseline :)","date":"2019-05-17T08:51:38.102Z","type":"message"}
{"nick":"Lope","message":"Can you give an example of how you could get a race condition where await is used?","date":"2019-05-17T08:51:44.675Z","type":"message"}
{"nick":"joepie91","message":"any tool that does not support distinguishing between error types in some way, is broken","date":"2019-05-17T08:51:47.031Z","type":"message"}
{"nick":"Lope","message":"joepie91, you're unique in assuming there should be different error types, given the fact that it's not standard in Node.js","date":"2019-05-17T08:52:20.852Z","type":"message"}
{"nick":"Lope","message":"Millions of devs don't use it.","date":"2019-05-17T08:52:28.640Z","type":"message"}
{"nick":"Lope","message":"Especially not the people designing node.js","date":"2019-05-17T08:52:35.375Z","type":"message"}
{"nick":"joepie91","message":"Lope: and unsurprisingly, error handling is virtually always broken in JS code","date":"2019-05-17T08:52:39.950Z","type":"message"}
{"nick":"joepie91","message":"literally everywhere that isn't JS, handling errors by type is standard","date":"2019-05-17T08:52:47.994Z","type":"message"}
{"nick":"joepie91","message":"even PHP","date":"2019-05-17T08:52:49.499Z","type":"message"}
{"nick":"joepie91","message":"it's *just* JS that's fucking up here","date":"2019-05-17T08:52:57.030Z","type":"message"}
{"nick":"Lope","message":"haha cough cough, even PHP","date":"2019-05-17T08:53:01.061Z","type":"message"}
{"nick":"Lope","message":"So what's so bad about catch (err) { if (something about err ?","date":"2019-05-17T08:53:30.543Z","type":"message"}
{"nick":"Lope","message":"You can still handle different error types with if statements?","date":"2019-05-17T08:53:52.657Z","type":"message"}
{"nick":"Lope","message":"switch (err.type)","date":"2019-05-17T08:54:03.345Z","type":"message"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T08:54:11.639Z","type":"quit"}
{"nick":"Lope","message":"errHandler[err.type](err) ^.^","date":"2019-05-17T08:54:38.875Z","type":"message"}
{"nick":"joepie91","message":"Lope: also, like with all race conditions, it's difficult to produce a concrete example that makes sense and is still relatively small. but conceptually, I can explain it: in JS, you can normally assume that functions will \"run to completion\", ie. when you run a function then nothing else will run until that function's code has finished executing. `await` breaks that assumption, by 'suspending execution' of a function and potentially running other","date":"2019-05-17T08:54:39.119Z","type":"message"}
{"nick":"joepie91","message":"code in the meantime, which means that between two parts of a function's body that *look* like they should be atomic (and run after each other uninterrupted), something else could actually be run that modifies some sort of shared state that this function relies on, producing unexpected behaviour","date":"2019-05-17T08:54:40.582Z","type":"message"}
{"nick":"joepie91","message":"usage of .then etc. makes this explicit, by clearly visually marking where an atomic block of code starts and ends","date":"2019-05-17T08:54:55.590Z","type":"message"}
{"nick":"Vonor_","message":"joepie91, erm, i just ran into an issue with requiring inside a function. https://gist.github.com/Vonor/68b0e0d310a45b026698c5959425bd5a","date":"2019-05-17T08:55:08.179Z","type":"message"}
{"nick":"Sharaal","date":"2019-05-17T08:55:09.095Z","type":"join"}
{"nick":"joepie91","message":"[10:53] <Lope> You can still handle different error types with if statements?","date":"2019-05-17T08:55:11.818Z","type":"message"}
{"nick":"Lope","message":"(i was joking about that last line of code, could be a bad idea if you don't think of every err.type)","date":"2019-05-17T08:55:13.501Z","type":"message"}
{"nick":"joepie91","message":"yes, you can, but this is full of footguns","date":"2019-05-17T08:55:17.953Z","type":"message"}
{"nick":"joepie91","message":"you are very likely to either a) forget to check for the error type, or b) check for the error type and forget to rethrow in the remaining cases","date":"2019-05-17T08:55:42.818Z","type":"message"}
{"nick":"joepie91","message":"these are both fail-open scenarios, ie. it fails by silently doing the wrong thing","date":"2019-05-17T08:55:56.037Z","type":"message"}
{"nick":"joepie91","message":"which is precisely what you want to avoid in error handling","date":"2019-05-17T08:56:05.279Z","type":"message"}
{"nick":"Lope","message":"okay, that's a pretty big problem \"Lope: also, like with all race conditions, it's difficult to produce a concrete example that makes sense and is still relatively small. but conceptually, I can explain it: in JS, you can normally assume that functions will \"run to completion\", ie. when you run a function then nothing else will run until that function's code has finished executing. `await` breaks that assumption, by 'suspending execution' of a","date":"2019-05-17T08:56:09.079Z","type":"message"}
{"nick":"Lope","message":"function and potentially running other\"","date":"2019-05-17T08:56:09.563Z","type":"message"}
{"nick":"joepie91","message":"(Bluebird's .catch does not *entirely* solve A, it just reduces it, as you can technically still omit the filter, but it does make it more obvious... and B is prevented)","date":"2019-05-17T08:56:35.973Z","type":"message"}
{"nick":"Lope","message":"so that means when you run async stuff, you must be very careful if you mutate global stuff","date":"2019-05-17T08:56:42.347Z","type":"message"}
{"nick":"joepie91","message":"not just global stuff","date":"2019-05-17T08:56:48.595Z","type":"message"}
{"nick":"joepie91","message":"any kind of state outside of that function","date":"2019-05-17T08:56:52.250Z","type":"message"}
{"nick":"Lope","message":"What state outside the function if it's not global?","date":"2019-05-17T08:57:04.850Z","type":"message"}
{"nick":"joepie91","message":"to be clear, this is already true when you do any kind of async stuff","date":"2019-05-17T08:57:07.837Z","type":"message"}
{"nick":"joepie91","message":"the problem with `await` is that it hides that fact","date":"2019-05-17T08:57:14.700Z","type":"message"}
{"nick":"joepie91","message":"instead of leaving it obvious","date":"2019-05-17T08:57:23.604Z","type":"message"}
{"nick":"Lope","message":"well, yes, it becomes an extra gotcha.","date":"2019-05-17T08:57:30.411Z","type":"message"}
{"nick":"joepie91","message":"Lope: well, for example, state in a surrounding scope","date":"2019-05-17T08:57:40.551Z","type":"message"}
{"nick":"Lope","message":"Because if you only run promises, the gotcha is inside the then()","date":"2019-05-17T08:57:44.955Z","type":"message"}
{"nick":"joepie91","message":"function() { ... state here ... function() { .... logic here ... } }","date":"2019-05-17T08:57:51.148Z","type":"message"}
{"nick":"Lope","message":"But with async await, the gotcha is everything after the await","date":"2019-05-17T08:58:00.595Z","type":"message"}
{"nick":"joepie91","message":"right","date":"2019-05-17T08:58:04.063Z","type":"message"}
{"nick":"Lope","message":"However is it not the same, still 1 gotcha?","date":"2019-05-17T08:58:23.939Z","type":"message"}
{"nick":"joepie91","message":"yes, like I said, the failure mode is the same, the difference is in how obvious it is","date":"2019-05-17T08:58:35.732Z","type":"message"}
{"nick":"Lope","message":"Because with await, you move the gotcha to under the await line, vs being wrapped inside the then.","date":"2019-05-17T08:58:38.355Z","type":"message"}
{"nick":"Gopa","date":"2019-05-17T08:58:39.621Z","type":"join"}
{"nick":"Lope","message":"So you're just moving the gotcha to a place where it's more readable?","date":"2019-05-17T08:58:47.871Z","type":"message"}
{"nick":"joepie91","message":"`await` pretends that your code is synchronous (and therefore atomic) when it is really not","date":"2019-05-17T08:58:47.944Z","type":"message"}
{"nick":"joepie91","message":"`.then` makes it really obvious that hey, a function ends here, and a new function starts,, there's probably a boundary there","date":"2019-05-17T08:58:58.271Z","type":"message"}
{"nick":"Lope","message":"But the only issue, is it's not what programmers are ACCUSTOMED to.","date":"2019-05-17T08:59:02.584Z","type":"message"}
{"nick":"joepie91","message":"no, it's not just about familiarity","date":"2019-05-17T08:59:17.717Z","type":"message"}
{"nick":"joepie91","message":"one of the main ways to reduce error rates in software, from a language design perspective, is by giving developers 'absolute truths', things about the language's semantics that they can assume to be consistently and predictably true","date":"2019-05-17T08:59:50.293Z","type":"message"}
{"nick":"joepie91","message":"until the introduction of yield/await, one of those truths, and a very important one, was \"a function always runs to completion\"","date":"2019-05-17T09:00:07.518Z","type":"message"}
{"nick":"Lope","message":"yeah \"joepie91> Lope: well, for example, state in a surrounding scope\" for sure.","date":"2019-05-17T09:00:12.144Z","type":"message"}
{"nick":"joepie91","message":"it will run from the first to the last line without interruption","date":"2019-05-17T09:00:18.400Z","type":"message"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T09:00:26.866Z","type":"quit"}
{"nick":"joepie91","message":"that truth no longer exists once you start using await/yield","date":"2019-05-17T09:00:29.136Z","type":"message"}
{"nick":"joepie91","message":"and that requires a developer to reevaluate and review a lot of things","date":"2019-05-17T09:00:39.940Z","type":"message"}
{"nick":"Lope","message":"hmm, that's a good point.","date":"2019-05-17T09:00:53.589Z","type":"message"}
{"nick":"wonko7","date":"2019-05-17T09:01:02.704Z","type":"join"}
{"nick":"Lope","message":"Because I started wondering when looking at async/await why not declare EVERY function async.","date":"2019-05-17T09:01:11.511Z","type":"message"}
{"nick":"Lope","message":"But you've just made it obvious.","date":"2019-05-17T09:01:18.023Z","type":"message"}
{"nick":"hoijui","date":"2019-05-17T09:01:20.698Z","type":"join"}
{"nick":"Firas","date":"2019-05-17T09:01:22.242Z","type":"join"}
{"nick":"ahmed_elgabri","date":"2019-05-17T09:01:26.648Z","type":"join"}
{"nick":"carif","date":"2019-05-17T09:01:30.625Z","type":"join"}
{"nick":"Lope","message":"the async keyword is basically \"warning fuckers\"","date":"2019-05-17T09:01:30.698Z","type":"message"}
{"nick":"Lope","message":"hahah","date":"2019-05-17T09:01:33.020Z","type":"message"}
{"nick":"joepie91","message":"(incidentally, that very truth of run-to-completion was the main selling point for single-threaded event loops over multithreading :P)","date":"2019-05-17T09:01:36.058Z","type":"message"}
{"nick":"joepie91","message":"(as that's what provides the simplicity in reasoning about async code)","date":"2019-05-17T09:01:47.557Z","type":"message"}
{"nick":"aLeSD","reason":"Ping timeout: 246 seconds","date":"2019-05-17T09:01:54.030Z","type":"quit"}
{"nick":"Lope","message":"Although the await keyword could arguably be warning enough.","date":"2019-05-17T09:01:57.254Z","type":"message"}
{"nick":"joepie91","message":"if you notice it","date":"2019-05-17T09:02:02.698Z","type":"message"}
{"nick":"Sharaal","date":"2019-05-17T09:02:05.890Z","type":"join"}
{"nick":"joepie91","message":"it looks like any other identifier, if you're lucky your editor has a special color for it","date":"2019-05-17T09:02:14.938Z","type":"message"}
{"nick":"Lope","message":"Maybe code editors should highlight await with a different background colour.","date":"2019-05-17T09:02:18.167Z","type":"message"}
{"nick":"joepie91","message":"sure, you can't rely on that though","date":"2019-05-17T09:02:26.487Z","type":"message"}
{"nick":"Lope","message":"Because Await is such a gamechanger.","date":"2019-05-17T09:02:26.662Z","type":"message"}
{"nick":"joepie91","message":"I don't think it is, to be honest","date":"2019-05-17T09:02:32.180Z","type":"message"}
{"nick":"darkSeid","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T09:02:33.580Z","type":"quit"}
{"nick":"aLeSD","date":"2019-05-17T09:02:42.464Z","type":"join"}
{"nick":"Lope","message":"I mean await is a gamechanger in the sense that it changes how functions behave.","date":"2019-05-17T09:02:49.593Z","type":"message"}
{"nick":"joepie91","message":"unlike in eg. Rust, where it is positively painful to deal with future chains typing-wise, it changes very little in JS","date":"2019-05-17T09:02:55.380Z","type":"message"}
{"nick":"joepie91","message":"oh, right","date":"2019-05-17T09:02:58.255Z","type":"message"}
{"nick":"joepie91","message":"yeah then I agree","date":"2019-05-17T09:03:00.956Z","type":"message"}
{"nick":"keepLear_","date":"2019-05-17T09:03:15.539Z","type":"join"}
{"nick":"ahmedelgabri","reason":"Ping timeout: 250 seconds","date":"2019-05-17T09:03:59.693Z","type":"quit"}
{"nick":"Lope","message":"Okay, so basically I can mix promises and await","date":"2019-05-17T09:04:23.041Z","type":"message"}
{"nick":"Nicmavr","date":"2019-05-17T09:04:31.456Z","type":"join"}
{"nick":"Lope","message":"In fact if I want to use await, I have to use promises.","date":"2019-05-17T09:04:35.838Z","type":"message"}
{"nick":"Kestrel-029","reason":"Ping timeout: 245 seconds","date":"2019-05-17T09:04:38.441Z","type":"quit"}
{"nick":"joepie91","message":"sort of, and yes, respectively","date":"2019-05-17T09:04:42.991Z","type":"message"}
{"nick":"EdwardIII","date":"2019-05-17T09:04:49.446Z","type":"join"}
{"nick":"joepie91","message":"you can 'mix promises and await' in the sense that await uses ES6 Promises, and therefore it's all interoperable according to Promises/A+","date":"2019-05-17T09:05:01.809Z","type":"message"}
{"nick":"Lope","message":"Okay, I'll give it a try and see if I like it.","date":"2019-05-17T09:05:02.024Z","type":"message"}
{"nick":"joepie91","message":"the 'sort of' being because `await` will forcibly turn your Promises into ES6 Promises","date":"2019-05-17T09:05:13.396Z","type":"message"}
{"nick":"EdwardIII","message":"i'm sure once someone linked to something on the dnode repo as an example of how to convert exceptions in express controllers to 500 responses for the browser, but i can't for the life of me find it now","date":"2019-05-17T09:05:20.950Z","type":"message"}
{"nick":"joepie91","message":"which means you don't get niceties like Bluebird's error handling","date":"2019-05-17T09:05:22.589Z","type":"message"}
{"nick":"Lope","message":"Well, I only use ES6 promises anyway","date":"2019-05-17T09:05:27.301Z","type":"message"}
{"nick":"joepie91","message":"(unless you use Promise.try or equivalent)","date":"2019-05-17T09:05:27.797Z","type":"message"}
{"nick":"EdwardIII","message":"i've looked for like \"dnode utils\" and gone through substack's repos one-by-one","date":"2019-05-17T09:05:33.115Z","type":"message"}
{"nick":"joepie91","message":"EdwardIII: http://cryto.net/~joepie91/blog/2015/05/14/using-promises-bluebird-with-express/ ?","date":"2019-05-17T09:05:53.019Z","type":"message"}
{"nick":"joepie91","message":"probably not the same","date":"2019-05-17T09:06:02.355Z","type":"message"}
{"nick":"joepie91","message":"but it addresses that question, more or less","date":"2019-05-17T09:06:06.212Z","type":"message"}
{"nick":"joepie91","message":"Lope: I would recommend reconsidering that :D","date":"2019-05-17T09:06:19.181Z","type":"message"}
{"nick":"jottr","reason":"Ping timeout: 258 seconds","date":"2019-05-17T09:06:45.901Z","type":"quit"}
{"nick":"Gazooo","date":"2019-05-17T09:07:02.415Z","type":"join"}
{"nick":"EdwardIII","message":"joepie91: yeah that exact thing, thanks i can look at how that lib does it. although that dnode utils lib is nipping at my mind now :D","date":"2019-05-17T09:08:31.781Z","type":"message"}
{"nick":"joepie91","message":"EdwardIII: why not just use the lib? :P","date":"2019-05-17T09:08:59.300Z","type":"message"}
{"nick":"joepie91","message":"or was this just a curiosity question?","date":"2019-05-17T09:09:06.368Z","type":"message"}
{"nick":"zava","reason":"Ping timeout: 246 seconds","date":"2019-05-17T09:09:22.326Z","type":"quit"}
{"nick":"EdwardIII","message":"joepie91: i'll look at how the lib works and use it to sort the problem, but it's also a curiosity question","date":"2019-05-17T09:09:59.551Z","type":"message"}
{"nick":"joepie91","message":"but... why replicate yourself what a lib already does?","date":"2019-05-17T09:10:16.535Z","type":"message"}
{"nick":"EdwardIII","message":"i mean i'll use the lib","date":"2019-05-17T09:10:30.247Z","type":"message"}
{"nick":"joepie91","message":"oh","date":"2019-05-17T09:10:39.645Z","type":"message"}
{"nick":"Lope","message":"joepie91, I'm not as enthusiastic about syntactic error handling as you, but thanks for the recommendation :)","date":"2019-05-17T09:10:40.432Z","type":"message"}
{"nick":"joepie91","message":"sorry","date":"2019-05-17T09:10:41.163Z","type":"message"}
{"nick":"joepie91","message":"I misinterpreted :)","date":"2019-05-17T09:10:43.354Z","type":"message"}
{"nick":"joepie91","message":"I think I need more coffee","date":"2019-05-17T09:10:53.303Z","type":"message"}
{"nick":"Lope","message":"I appreciate your passion for the subject anyway :)","date":"2019-05-17T09:10:55.334Z","type":"message"}
{"nick":"Lope","message":"Good call","date":"2019-05-17T09:10:59.840Z","type":"message"}
{"nick":"bamdads","reason":"Quit: bamdads","date":"2019-05-17T09:11:14.558Z","type":"quit"}
{"nick":"joepie91","message":"Lope: it's not /just/ about the error handling, that's just the one that most obviously has a reliability benefit (as opposed to an ergonomic benefit, which is harder to argue towards people unless they've actually used something)","date":"2019-05-17T09:11:18.807Z","type":"message"}
{"nick":"Firas","reason":"Quit: Page closed","date":"2019-05-17T09:11:42.435Z","type":"quit"}
{"nick":"joepie91","message":"things like .map, .settle, .filter, .promisifyAll, etc. are all fairly invaluable imo from a perspective of ergonomically writing async code","date":"2019-05-17T09:11:53.548Z","type":"message"}
{"nick":"cyberjpn","date":"2019-05-17T09:11:57.261Z","type":"join"}
{"nick":"Lope","message":"Cool, well once I'm very familiar with promises, perhaps I'll upgrade to bluebird.","date":"2019-05-17T09:12:39.191Z","type":"message"}
{"nick":"Lope","message":"I've been using callbacks until now haha","date":"2019-05-17T09:12:48.032Z","type":"message"}
{"nick":"Lope","message":"I mean promises are fairly simple, but I'll wait until it's 2nd nature.","date":"2019-05-17T09:13:07.377Z","type":"message"}
{"nick":"Lope","message":"Surely if Bluebird is so great the node.js devs would implement the features?","date":"2019-05-17T09:13:54.028Z","type":"message"}
{"nick":"piyer","date":"2019-05-17T09:14:06.528Z","type":"join"}
{"nick":"Lope","message":"(I know that's a dumb comment, but had to say it)","date":"2019-05-17T09:14:11.761Z","type":"message"}
{"nick":"Lope","message":"The creator of node.js said it was a mistake to reject promises for as long as he did.","date":"2019-05-17T09:14:27.927Z","type":"message"}
{"nick":"joepie91","message":"Lope: well, so, that's the thing","date":"2019-05-17T09:15:52.679Z","type":"message"}
{"nick":"joepie91","message":"[11:13] <Lope> Surely if Bluebird is so great the node.js devs would implement the features?","date":"2019-05-17T09:15:59.325Z","type":"message"}
{"nick":"joepie91","message":"they wouldn't","date":"2019-05-17T09:16:01.639Z","type":"message"}
{"nick":"joepie91","message":"there are a few different factors at play here:","date":"2019-05-17T09:16:05.822Z","type":"message"}
{"nick":"joepie91","message":"a) Promises are defined by the language, not by the runtime (ie. by JS, not by Node.js)","date":"2019-05-17T09:16:16.121Z","type":"message"}
{"nick":"mezod","date":"2019-05-17T09:16:19.151Z","type":"join"}
{"nick":"joepie91","message":"b) their specification in the language serves as a building block for other specs like window.fetch, which need a concrete implementation to refer to when they say \"returns a Promise\", it does *not* serve as a utility to developers","date":"2019-05-17T09:16:56.391Z","type":"message"}
{"nick":"carif","reason":"Ping timeout: 252 seconds","date":"2019-05-17T09:16:59.571Z","type":"quit"}
{"nick":"jottr","date":"2019-05-17T09:17:47.283Z","type":"join"}
{"nick":"joepie91","message":"c) because of that, and the general impossibility of ever changing anything you add to the language/core, the Promises implementation in core is pretty much as small as possible, only extensive enough to support 1) what the specs need, and 2) what must be implemented on a runtime level and cannot be implemented in userland","date":"2019-05-17T09:17:48.536Z","type":"message"}
{"nick":"joepie91","message":"and so you end with a severely limited implementation of promises, like ES6 Promises","date":"2019-05-17T09:18:07.368Z","type":"message"}
{"nick":"joepie91","message":"which wouldn't have been an issue, if people didn't hype it as a replacement for existing Promise libraries, which they're explicitly not","date":"2019-05-17T09:18:23.180Z","type":"message"}
{"nick":"piyer","reason":"Ping timeout: 246 seconds","date":"2019-05-17T09:18:28.349Z","type":"quit"}
{"nick":"joepie91","message":"it's a *good thing* that the JS spec doesn't include all the Bluebird features, because the Bluebird features should be free to evolve over time, as the ecosystem evolves, and something that's part of the language cannot do that","date":"2019-05-17T09:19:07.747Z","type":"message"}
{"nick":"joepie91","message":"but that also means that people need to be aware that the language implementation does not replace the userland implementations","date":"2019-05-17T09:19:23.766Z","type":"message"}
{"nick":"joepie91","message":"and that it serves a different purpose than the userland implementations","date":"2019-05-17T09:19:30.905Z","type":"message"}
{"nick":"joepie91","message":"ES6 Promises are a standardization building block, a well-specified type that can be assumed to exist by the runtime. while Bluebird and other Promise implementations are end-user libraries for actually *working with* async operations represented by Promises. you'd use them together","date":"2019-05-17T09:20:35.573Z","type":"message"}
{"nick":"joepie91","message":"(I actually even think that ES6 Promises have slightly *too much* functionality, like eg. .catch, and that this is part of why people believe it to be a replacement for userland libraries)","date":"2019-05-17T09:21:16.744Z","type":"message"}
{"nick":"gloomy","date":"2019-05-17T09:23:15.555Z","type":"join"}
{"nick":"lundibundi","date":"2019-05-17T09:23:51.445Z","type":"join"}
{"nick":"Lope","message":"Okay, fair enough.","date":"2019-05-17T09:24:31.620Z","type":"message"}
{"nick":"Lope","message":"I just read this and now I'm sold on async/await https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9","date":"2019-05-17T09:24:45.898Z","type":"message"}
{"nick":"joepie91","message":"let's see if that article does what most articles do...","date":"2019-05-17T09:25:07.486Z","type":"message"}
{"nick":"joepie91","message":"yep, it does","date":"2019-05-17T09:25:50.781Z","type":"message"}
{"nick":"joepie91","message":"it's comparing async/await-based code to poorly-structured non-async/await-based code","date":"2019-05-17T09:26:02.353Z","type":"message"}
{"nick":"joepie91","message":"this is a bad comparison :)","date":"2019-05-17T09:26:12.568Z","type":"message"}
{"nick":"joepie91","message":"it's not difficult to argue that A is better by comparing it with a crappy version of B","date":"2019-05-17T09:26:25.501Z","type":"message"}
{"nick":"joepie91","message":"also, point 2 is nonsense for the reasons I already described (error handling isn't actually better), point 1 is misleading at the very least, as it implies that the code you're omitting was 'unnecessary', when it really wasn't (for the reasons I've described before, regarding run-to-completion)","date":"2019-05-17T09:27:18.231Z","type":"message"}
{"nick":"Lope","message":"Well run-to-completion isn't necessary.","date":"2019-05-17T09:27:56.464Z","type":"message"}
{"nick":"joepie91","message":"point 5 is nonsense, this is why eg. Bluebird has long stacktraces","date":"2019-05-17T09:28:01.964Z","type":"message"}
{"nick":"Lope","message":"It's just an old assumption that doesn't apply to code that uses async/await.","date":"2019-05-17T09:28:10.911Z","type":"message"}
{"nick":"joepie91","message":"again comparing with the crappy version","date":"2019-05-17T09:28:10.984Z","type":"message"}
{"nick":"joepie91","message":"Lope: like I explained, it's a valuable truth.","date":"2019-05-17T09:28:20.314Z","type":"message"}
{"nick":"joepie91","message":"and the callbacks communicate clearly where the boundaries are","date":"2019-05-17T09:28:34.439Z","type":"message"}
{"nick":"joepie91","message":"they're not 'boilerplate', they serve a clear purpose","date":"2019-05-17T09:28:41.981Z","type":"message"}
{"nick":"Lope","message":"well await also explains where the boundary is","date":"2019-05-17T09:28:48.132Z","type":"message"}
{"nick":"joepie91","message":"it's not visually clear","date":"2019-05-17T09:28:53.899Z","type":"message"}
{"nick":"joepie91","message":"I've already gone over all of this :)","date":"2019-05-17T09:28:57.207Z","type":"message"}
{"nick":"joepie91","message":"the arguments haven't changed","date":"2019-05-17T09:29:04.273Z","type":"message"}
{"nick":"Lope","message":"I only agree for those unfamiliar","date":"2019-05-17T09:29:07.000Z","type":"message"}
{"nick":"tokam","date":"2019-05-17T09:29:17.111Z","type":"join"}
{"nick":"Lope","message":"But they need to learn async/await or not use it","date":"2019-05-17T09:29:17.830Z","type":"message"}
{"nick":"joepie91","message":"you're just repeating all the points that I've already addressed","date":"2019-05-17T09:29:49.399Z","type":"message"}
{"nick":"Lope","message":"Also what about the error handling where async errors are handled in the same catch as non async errors","date":"2019-05-17T09:29:58.083Z","type":"message"}
{"nick":"joepie91","message":"[10:59] <joepie91> no, it's not just about familiarity","date":"2019-05-17T09:30:00.551Z","type":"message"}
{"nick":"joepie91","message":"[10:59] <joepie91> one of the main ways to reduce error rates in software, from a language design perspective, is by giving developers 'absolute truths', things about the language's semantics that they can assume to be consistently and predictably true","date":"2019-05-17T09:30:02.004Z","type":"message"}
{"nick":"Lope","message":"I think that's very nice and clean... ?","date":"2019-05-17T09:30:04.608Z","type":"message"}
{"nick":"joepie91","message":"Lope: that is already true when you're using Promises.","date":"2019-05-17T09:30:11.079Z","type":"message"}
{"nick":"jzl","reason":"Ping timeout: 244 seconds","date":"2019-05-17T09:30:13.360Z","type":"quit"}
{"nick":"joepie91","message":"at least, when using something like Promise.try","date":"2019-05-17T09:30:22.730Z","type":"message"}
{"nick":"joepie91","message":"http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/","date":"2019-05-17T09:30:28.206Z","type":"message"}
{"nick":"joepie91","message":"this isn't a new feature in async/await","date":"2019-05-17T09:30:34.592Z","type":"message"}
{"nick":"joepie91","message":"hell, half the original premise of promises was to unify sync/async error handling!","date":"2019-05-17T09:30:49.415Z","type":"message"}
{"nick":"Lope","message":"Well, in their example they had to use 2 error handlers. One in the catch and one in the .catch","date":"2019-05-17T09:30:51.839Z","type":"message"}
{"nick":"joepie91","message":"yes, that is because their example is bad","date":"2019-05-17T09:31:06.928Z","type":"message"}
{"nick":"joepie91","message":"this is what I meant with \"comparing with crappy code\"","date":"2019-05-17T09:31:12.099Z","type":"message"}
{"nick":"joepie91","message":"I never have to do that, because *I use Promise.try*","date":"2019-05-17T09:31:24.012Z","type":"message"}
{"nick":"joepie91","message":"this has been a solved problem for some time now :)","date":"2019-05-17T09:31:33.228Z","type":"message"}
{"nick":"joepie91","message":"this is a recurring theme in these \"look at how great async/await is!\" articles","date":"2019-05-17T09:31:42.532Z","type":"message"}
{"nick":"joepie91","message":"they always compare to really poorly-written/structured promises code","date":"2019-05-17T09:31:49.739Z","type":"message"}
{"nick":"joepie91","message":"never to well-written promises code","date":"2019-05-17T09:31:55.100Z","type":"message"}
{"nick":"linux_dr","reason":"Quit: Connection closed for inactivity","date":"2019-05-17T09:32:25.326Z","type":"quit"}
{"nick":"Cabanossi","reason":"Quit: Bye, bye...","date":"2019-05-17T09:34:10.828Z","type":"quit"}
{"nick":"Lope","message":"joepie91, in your code: \"return Promise.try(function() {\"","date":"2019-05-17T09:34:48.333Z","type":"message"}
{"nick":"Lope","message":"Why do you use full functions instead of ES6 functions?","date":"2019-05-17T09:35:01.257Z","type":"message"}
{"nick":"joepie91","message":"Lope: where is that from?","date":"2019-05-17T09:35:08.047Z","type":"message"}
{"nick":"ffx_","date":"2019-05-17T09:35:14.873Z","type":"join"}
{"nick":"Lope","message":"http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/","date":"2019-05-17T09:35:16.178Z","type":"message"}
{"nick":"joepie91","message":"ah, I think that predates widespread usage/support of rES6","date":"2019-05-17T09:35:35.050Z","type":"message"}
{"nick":"joepie91","message":"ES6 *","date":"2019-05-17T09:35:36.904Z","type":"message"}
{"nick":"joepie91","message":"see also the `var`","date":"2019-05-17T09:35:47.070Z","type":"message"}
{"nick":"Lope","message":"okay. Just wondered if you needed full functions for scope, like this","date":"2019-05-17T09:35:59.828Z","type":"message"}
{"nick":"joepie91","message":"there's no specific reason to use regular functions there, arrow functions are normally what you want","date":"2019-05-17T09:36:00.905Z","type":"message"}
{"nick":"joepie91","message":"see eg. https://gist.github.com/joepie91/b0c8f9a9309f5398080eab84482d58a4","date":"2019-05-17T09:36:08.365Z","type":"message"}
{"nick":"Lope","message":"okay","date":"2019-05-17T09:36:12.461Z","type":"message"}
{"nick":"joepie91","message":"(arrow functions, because then you can keep referring to `this` from within your async code)","date":"2019-05-17T09:36:30.502Z","type":"message"}
{"nick":"joepie91","message":"Lope: I kept using ES5 in my various examples/posts for a while after ES6 came out, basically, until the ecosystem as a whole had transitioned over to ES6... to prevent readers getting confused by unfamiliar syntax that was unrelated to the topic of the article/example :)","date":"2019-05-17T09:38:46.966Z","type":"message"}
{"nick":"Lope","message":"Just reading thru your article still.","date":"2019-05-17T09:39:03.166Z","type":"message"}
{"nick":"Lope","message":"So are you saying you run everything through Promise.try always?","date":"2019-05-17T09:39:14.164Z","type":"message"}
{"nick":"Hoffmann","new_nick":"Hoffman","date":"2019-05-17T09:39:15.157Z","type":"nick"}
{"nick":"joepie91","message":"Lope: the only (popular) ES6 features you'll see me actively avoiding are classes and modules, pretty much, for any other ES5-y things you can assume that it's just a matter of outdated syntax","date":"2019-05-17T09:39:32.087Z","type":"message"}
{"nick":"joepie91","message":"Lope: well, start every chain with Promise.try always*, yeah","date":"2019-05-17T09:39:48.151Z","type":"message"}
{"nick":"OKTAVIUS","date":"2019-05-17T09:39:52.449Z","type":"join"}
{"nick":"joepie91","message":"or occasionally Promise.map if that happens to be at the start of a chain, since it has functionally the same effect","date":"2019-05-17T09:39:59.535Z","type":"message"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T09:40:07.744Z","type":"quit"}
{"nick":"joepie91","message":"same Bluebird guarantee, same alignment, everything","date":"2019-05-17T09:40:13.242Z","type":"message"}
{"nick":"Lope","message":"joepie91, okay, that's nice. Yes I think OO is dumb. I always have.","date":"2019-05-17T09:40:16.640Z","type":"message"}
{"nick":"joepie91","message":"classes != OO :)","date":"2019-05-17T09:40:22.935Z","type":"message"}
{"nick":"joepie91","message":"classes are terrible, inheritance in general is terrible, OO is fine but it's not what people often think it is","date":"2019-05-17T09:40:36.381Z","type":"message"}
{"nick":"joepie91","message":"https://eev.ee/blog/2013/03/03/the-controller-pattern-is-awful-and-other-oo-heresy/ is a great article about that","date":"2019-05-17T09:40:47.492Z","type":"message"}
{"nick":"joepie91","message":"under 'Some context'","date":"2019-05-17T09:40:59.124Z","type":"message"}
{"nick":"carif","date":"2019-05-17T09:41:04.073Z","type":"join"}
{"nick":"platonic","date":"2019-05-17T09:41:23.013Z","type":"join"}
{"nick":"Lope","message":"Well, I like a very narrow subset of OO. For example I like JS's concept of objects.","date":"2019-05-17T09:41:24.515Z","type":"message"}
{"nick":"joepie91","message":"prototypes are slightly less terrible than classes but it's still inheritance","date":"2019-05-17T09:41:27.685Z","type":"message"}
{"nick":"Lope","message":"But I think blackboxing and information hiding and unnecessary getters and setters is just stupid.","date":"2019-05-17T09:41:39.184Z","type":"message"}
{"nick":"Lope","message":"I prefer data oriented programming vs class oriented.","date":"2019-05-17T09:41:52.362Z","type":"message"}
{"nick":"GreenJello","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2019-05-17T09:42:11.233Z","type":"quit"}
{"nick":"Lope","message":"classes are dumb for so many reasons I won't go into.","date":"2019-05-17T09:42:16.274Z","type":"message"}
{"nick":"joepie91","message":"Lope: right, so \"JS' concept of objects\" is basically what OOP *is*, all the other crap (blackboxing, information hiding, getters, setters) is all cruft that doesn't really have anything to do with OOP at all","date":"2019-05-17T09:42:43.375Z","type":"message"}
{"nick":"joepie91","message":"but rather just language-specific machinery","date":"2019-05-17T09:42:51.297Z","type":"message"}
{"nick":"joepie91","message":"OOP is just about bundling state and logic","date":"2019-05-17T09:43:01.746Z","type":"message"}
{"nick":"Gustavo6046","reason":"Quit: Non video lux in futurum.","date":"2019-05-17T09:43:10.171Z","type":"quit"}
{"nick":"gli","reason":"Remote host closed the connection","date":"2019-05-17T09:43:11.857Z","type":"quit"}
{"nick":"joepie91","message":"(that's what that article goes into)","date":"2019-05-17T09:43:20.972Z","type":"message"}
{"nick":"joepie91","message":"and various languages have various different ways to specify objects","date":"2019-05-17T09:43:40.332Z","type":"message"}
{"nick":"Lope","message":"I like that we can add functionality to stuff like String","date":"2019-05-17T09:43:41.057Z","type":"message"}
{"nick":"Lope","message":"I hax all my stuff.","date":"2019-05-17T09:43:50.244Z","type":"message"}
{"nick":"joepie91","message":"JS has literals and prototypes, various languages have classes, Rust has traits","date":"2019-05-17T09:43:51.486Z","type":"message"}
{"nick":"Lope","message":"'foo bar'.cleanName()","date":"2019-05-17T09:44:03.842Z","type":"message"}
{"nick":"Lope","message":"stuff like that","date":"2019-05-17T09:44:09.013Z","type":"message"}
{"nick":"yakiza","date":"2019-05-17T09:44:09.300Z","type":"join"}
{"nick":"joepie91","message":"Lope: I hate that actually, though part of that hate is because we don't have a composable alternative yet","date":"2019-05-17T09:44:09.631Z","type":"message"}
{"nick":"joepie91","message":"the pipeline operator really needs to happen","date":"2019-05-17T09:44:17.482Z","type":"message"}
{"nick":"Gustavo6046","date":"2019-05-17T09:44:27.429Z","type":"join"}
{"nick":"joepie91","message":"modifying types you don't own is a Really Bad Idea","date":"2019-05-17T09:44:32.096Z","type":"message"}
{"nick":"Lope","message":"Dunno what a pipeline operator.","date":"2019-05-17T09:44:37.188Z","type":"message"}
{"nick":"joepie91","message":"but to be able to ergonomically compose operations, we need that pipeline operator","date":"2019-05-17T09:44:40.176Z","type":"message"}
{"nick":"Lope","message":"I disagree","date":"2019-05-17T09:44:40.612Z","type":"message"}
{"nick":"keepLear_","reason":"Remote host closed the connection","date":"2019-05-17T09:44:40.724Z","type":"quit"}
{"nick":"joepie91","message":"sec","date":"2019-05-17T09:44:41.730Z","type":"message"}
{"nick":"joepie91","message":"Lope: https://github.com/tc39/proposal-pipeline-operator","date":"2019-05-17T09:44:47.166Z","type":"message"}
{"nick":"Cabanossi","date":"2019-05-17T09:44:54.822Z","type":"join"}
{"nick":"Kkiro","date":"2019-05-17T09:45:01.244Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T09:45:01.539Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T09:45:01.612Z","type":"join"}
{"nick":"joepie91","message":"the point here being that it's not inherently *necessary* to modify a type you don't own","date":"2019-05-17T09:45:08.166Z","type":"message"}
{"nick":"joepie91","message":"to chain methods onto it","date":"2019-05-17T09:45:10.411Z","type":"message"}
{"nick":"kakashiA1","date":"2019-05-17T09:45:11.090Z","type":"join"}
{"nick":"Lope","message":"I prefer 'foo bar'.cleanName() vs cleanName('foo bar')","date":"2019-05-17T09:45:17.334Z","type":"message"}
{"nick":"joepie91","message":"like, the only reason people do that, is because there's no other ergonomic syntax","date":"2019-05-17T09:45:22.996Z","type":"message"}
{"nick":"Lope","message":"It makes chaining much cleaner and more readable.","date":"2019-05-17T09:45:24.954Z","type":"message"}
{"nick":"joepie91","message":"Lope: yes, but this is my point","date":"2019-05-17T09:45:26.680Z","type":"message"}
{"nick":"joepie91","message":"the pipeline operator gives you that","date":"2019-05-17T09:45:30.190Z","type":"message"}
{"nick":"Alina-malina_","date":"2019-05-17T09:45:34.591Z","type":"join"}
{"nick":"joepie91","message":"*without* the problems of modifying external prototypes","date":"2019-05-17T09:45:35.915Z","type":"message"}
{"nick":"platonic","reason":"Ping timeout: 246 seconds","date":"2019-05-17T09:45:39.003Z","type":"quit"}
{"nick":"Alina-malina","reason":"Ping timeout: 264 seconds","date":"2019-05-17T09:45:40.060Z","type":"quit"}
{"nick":"fastman","message":":<","date":"2019-05-17T09:45:45.851Z","type":"message"}
{"nick":"joepie91","message":"modifying external prototypes is still a bad idea, even if the objective is otherwise desirable","date":"2019-05-17T09:45:51.895Z","type":"message"}
{"nick":"joepie91","message":"and we really need a better way to get at that objective","date":"2019-05-17T09:45:58.255Z","type":"message"}
{"nick":"joepie91","message":"without the downsides","date":"2019-05-17T09:46:05.093Z","type":"message"}
{"nick":"fastman","message":"joepie91: just create a new object that extends the prorotype?","date":"2019-05-17T09:46:33.575Z","type":"message"}
{"nick":"keepLearning512","date":"2019-05-17T09:46:40.592Z","type":"join"}
{"nick":"joepie91","message":"fastman: there are no ways that both 1) are safe and 2) work consistently for all types","date":"2019-05-17T09:46:54.703Z","type":"message"}
{"nick":"joepie91","message":"believe me, I've tried","date":"2019-05-17T09:46:56.900Z","type":"message"}
{"nick":"joepie91","message":":p","date":"2019-05-17T09:46:58.503Z","type":"message"}
{"nick":"fastman","message":"that's the whole point of hmm.. prototyping?","date":"2019-05-17T09:47:00.321Z","type":"message"}
{"nick":"killown","message":"I am using const lineReader = require('readline').createInterface({  lineReader.on('line', async function (line) { ...... but I would like to wait N seconds in every line iteration, I have this function to await delay(ms); https://bpaste.net/show/02795bb82871 but only the last iteration that the delay function is being called","date":"2019-05-17T09:47:02.982Z","type":"message"}
{"nick":"joepie91","message":"JS has a variety of 'special types' that don't play nice with prototypical inheritance","date":"2019-05-17T09:47:15.797Z","type":"message"}
{"nick":"fastman","message":"if you don't like that apporach dont change the language itself but the language you're using","date":"2019-05-17T09:47:37.341Z","type":"message"}
{"nick":"joepie91","message":"killown: are you trying to split something by lines?","date":"2019-05-17T09:47:44.833Z","type":"message"}
{"nick":"fastman","message":"i don't get the idea of putting *everything* into JS","date":"2019-05-17T09:47:48.814Z","type":"message"}
{"nick":"Lope","message":"joepie91, so |> basically means run the right hand function on the left hand operand?","date":"2019-05-17T09:47:49.441Z","type":"message"}
{"nick":"killown","message":"joepie91, a file by lines","date":"2019-05-17T09:47:57.551Z","type":"message"}
{"nick":"joepie91","message":"Lope: yeah, so you get the chaining-like interface, without modifying the original value/prototype","date":"2019-05-17T09:48:07.026Z","type":"message"}
{"nick":"Lope","message":"joepie91, it's a bit of an ugly operator, but I like it in principle","date":"2019-05-17T09:48:10.681Z","type":"message"}
{"nick":"joepie91","message":"killown: okay, avoid readline, the docs are wrong, use the `split` module from npm with an fs.createReadStream instead","date":"2019-05-17T09:48:21.567Z","type":"message"}
{"nick":"joepie91","message":"readline is unnecessarily complex and doesn't interoperate with any other stream","date":"2019-05-17T09:48:37.971Z","type":"message"}
{"nick":"Lope","message":"joepie91, why not use something more readable like a double dot?","date":"2019-05-17T09:48:51.183Z","type":"message"}
{"nick":"fastman","message":"joepie91: so just don't modyfiy the origignal prototype - problem solved :)","date":"2019-05-17T09:48:52.889Z","type":"message"}
{"nick":"joepie91","message":"killown: but createReadStream + split will give you a normal stream pipeline that you can use with any other Node streams","date":"2019-05-17T09:49:04.565Z","type":"message"}
{"nick":"Lope","message":"more readable and more similar to a dot.","date":"2019-05-17T09:49:12.064Z","type":"message"}
{"nick":"joepie91","message":"Lope: yeah, I'm not a big fan of the syntax either. there's plenty of bikeshedding about it on the issue tracker","date":"2019-05-17T09:49:18.510Z","type":"message"}
{"nick":"killown","message":"I am using input: require('fs').createReadStream('file.txt');","date":"2019-05-17T09:49:23.093Z","type":"message"}
{"nick":"fastman","message":"JS \"","date":"2019-05-17T09:49:30.677Z","type":"message"}
{"nick":"joepie91","message":"killown: right, then use that `split` module with that :)","date":"2019-05-17T09:49:38.389Z","type":"message"}
{"nick":"joepie91","message":"and just pretend that `readline` doesn't exist","date":"2019-05-17T09:49:42.781Z","type":"message"}
{"nick":"fastman","message":"JS \"community\" drives the langueage into PHP state (in my opiinon)","date":"2019-05-17T09:49:49.473Z","type":"message"}
{"nick":"kakashiA1","reason":"Ping timeout: 258 seconds","date":"2019-05-17T09:50:05.027Z","type":"quit"}
{"nick":"Lope","message":"\"hello\"..doublesay..capitalize..exclaim is a lot nicer than \"hello\"|>doubleSay|>capitalize|>exclaim","date":"2019-05-17T09:50:27.073Z","type":"message"}
{"nick":"Lope","message":"That's a fuckup of readability if I've ever seen one.","date":"2019-05-17T09:50:39.860Z","type":"message"}
{"nick":"fastman","message":"Lope: true","date":"2019-05-17T09:50:41.068Z","type":"message"}
{"nick":"joepie91","message":"fastman: the point of the pipeline operator is to provide a generic way to interact with standard types, that doesn't require constantly adding shit to those types on a language/runtime level","date":"2019-05-17T09:50:45.063Z","type":"message"}
{"nick":"joepie91","message":"Lope: add spaces :)","date":"2019-05-17T09:50:58.771Z","type":"message"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T09:51:02.366Z","type":"quit"}
{"nick":"joepie91","message":"Lope: anyway, I've been messing with an experimental library that's a bit similar","date":"2019-05-17T09:51:30.658Z","type":"message"}
{"nick":"Lope","message":"Spaces are a poor fix for horrible syntax.","date":"2019-05-17T09:51:31.739Z","type":"message"}
{"nick":"joepie91","message":"sec","date":"2019-05-17T09:51:32.091Z","type":"message"}
{"nick":"fastman","message":"joepie91: what's wrong with functions then ?: )","date":"2019-05-17T09:51:40.616Z","type":"message"}
{"nick":"killown","message":"joepie91, https://bpaste.net/show/69433ef8c575","date":"2019-05-17T09:51:56.828Z","type":"message"}
{"nick":"fastman","message":"so called \"readability\"?","date":"2019-05-17T09:51:59.377Z","type":"message"}
{"nick":"joepie91","message":"fastman: I'm sure that Lope will be happy to explain to you what's wrong with exclaim(capitalize(doubleSay(\"hello\"))) :)","date":"2019-05-17T09:52:00.405Z","type":"message"}
{"nick":"fastman","message":"joepie91: LGTM","date":"2019-05-17T09:52:17.148Z","type":"message"}
{"nick":"fastman","message":"Lope: hit me :P","date":"2019-05-17T09:52:21.506Z","type":"message"}
{"nick":"keepLearning512","reason":"Remote host closed the connection","date":"2019-05-17T09:52:22.739Z","type":"quit"}
{"nick":"Lope","message":"it's shit. it looks like PHP","date":"2019-05-17T09:52:22.920Z","type":"message"}
{"nick":"Lope","message":"The english speaking human being reads the names of the functions in the reverse order to which they happen.","date":"2019-05-17T09:52:52.362Z","type":"message"}
{"nick":"Lope","message":"And that's a bad example.","date":"2019-05-17T09:52:56.471Z","type":"message"}
{"nick":"joepie91","message":"Lope: https://gist.github.com/joepie91/1be1515034d21ed43b45dfffd16da668","date":"2019-05-17T09:53:05.669Z","type":"message"}
{"nick":"Lope","message":"In real code that is much longer, you have to read far more complex thing before the next function call.","date":"2019-05-17T09:53:13.983Z","type":"message"}
{"nick":"joepie91","message":"Lope: that's a userland implementation of this concept","date":"2019-05-17T09:53:17.692Z","type":"message"}
{"nick":"nahtnam","reason":"Quit: Connection closed for inactivity","date":"2019-05-17T09:53:18.642Z","type":"quit"}
{"nick":"fastman","message":"function MyString () { String.apply(this, arguments) }; MyString.prototype = Object.create(String.prototype);","date":"2019-05-17T09:53:22.838Z","type":"message"}
{"nick":"fastman","message":"and add any _shit_ you want","date":"2019-05-17T09:53:33.353Z","type":"message"}
{"nick":"joepie91","message":"Lope: this is a somewhat crappy example since it doesn't use the original input value","date":"2019-05-17T09:53:37.231Z","type":"message"}
{"nick":"joepie91","message":"Lope: but you could leave out the first step, and call msUntilNextMinute(getTime()) instead of msUntilNextMinute() and get the same result","date":"2019-05-17T09:53:55.570Z","type":"message"}
{"nick":"Lope","message":"When you read bullshit like exclaim(capitalize(doubleSay(\"hello\")))  you have to burden your short term memory with every function that you read and remember that it will be called at the close bracket, but then you need your short term memory for processing all the crap that comes between the function and the close bracket.","date":"2019-05-17T09:54:11.059Z","type":"message"}
{"nick":"Lope","message":"So it's a huge fuckup, both in terms of usability and readability.","date":"2019-05-17T09:54:25.438Z","type":"message"}
{"nick":"joepie91","message":"Lope: the implementation is very simple, albeit untested: https://gist.github.com/joepie91/30ff1e2e04e22b61eaf0ee3757572b23?ts=4","date":"2019-05-17T09:54:33.789Z","type":"message"}
{"nick":"Lope","message":"The human short term memory can only easily hold 5-7 items","date":"2019-05-17T09:54:41.977Z","type":"message"}
{"nick":"Lope","message":"Generally speaking","date":"2019-05-17T09:54:52.143Z","type":"message"}
{"nick":"Lope","message":"It's like crippling yourself.","date":"2019-05-17T09:55:02.775Z","type":"message"}
{"nick":"fastman","message":"joepie91: like this solution","date":"2019-05-17T09:55:07.321Z","type":"message"}
{"nick":"Lope","message":"Imagine walking around all day holding a basketball under your arm","date":"2019-05-17T09:55:14.235Z","type":"message"}
{"nick":"Lope","message":"how it would handicap you","date":"2019-05-17T09:55:19.747Z","type":"message"}
{"nick":"Lope","message":"Same thing","date":"2019-05-17T09:55:22.381Z","type":"message"}
{"nick":"fastman","message":"so you end up with something like doShit('my-string', xxx, aaa, bbb)","date":"2019-05-17T09:55:26.108Z","type":"message"}
{"nick":"fastman","message":"correct?","date":"2019-05-17T09:55:38.958Z","type":"message"}
{"nick":"joepie91","message":"fastman: not sure I get what you mean","date":"2019-05-17T09:55:50.230Z","type":"message"}
{"nick":"Gustavo6046","reason":"Ping timeout: 252 seconds","date":"2019-05-17T09:56:02.452Z","type":"quit"}
{"nick":"fastman","message":"you can do sometyhing like chainCalls(\"hello\", doubleSay, capitalize, exclaim)","date":"2019-05-17T09:56:37.320Z","type":"message"}
{"nick":"joepie91","message":"well no, it'd rather be `let doStuff = chainCalls([doubleSay, capitalize, exclaim])` and then you could do `doStuff(\"hello\")`","date":"2019-05-17T09:57:10.051Z","type":"message"}
{"nick":"fastman","message":"true true, but the idea is still the same","date":"2019-05-17T09:57:32.785Z","type":"message"}
{"nick":"joepie91","message":"right","date":"2019-05-17T09:57:35.009Z","type":"message"}
{"nick":"fastman","message":"\\m/","date":"2019-05-17T09:57:46.432Z","type":"message"}
{"nick":"joepie91","message":"it'","date":"2019-05-17T09:57:54.578Z","type":"message"}
{"nick":"joepie91","message":"oops","date":"2019-05-17T09:57:56.140Z","type":"message"}
{"nick":"joepie91","message":"it's pretty much a form of pipeline-based function composition *","date":"2019-05-17T09:58:05.313Z","type":"message"}
{"nick":"Lope","message":"wrap","date":"2019-05-17T09:58:15.086Z","type":"message"}
{"nick":"joepie91","message":"the main problem I see with this is that it's probably not super performant","date":"2019-05-17T09:58:32.416Z","type":"message"}
{"nick":"joepie91","message":"like","date":"2019-05-17T09:58:42.927Z","type":"message"}
{"nick":"joepie91","message":"it won't be /slow/","date":"2019-05-17T09:58:45.043Z","type":"message"}
{"nick":"cyberjpn","reason":"Ping timeout: 245 seconds","date":"2019-05-17T09:58:48.514Z","type":"quit"}
{"nick":"joepie91","message":"but it probably also won't be so fast that it could replace regular function calls","date":"2019-05-17T09:58:53.318Z","type":"message"}
{"nick":"joepie91","message":"kind of the same problem as Promises had - Promises weren't slow, but they were for some time slow enough that creating thousands of them (as any reasonable application might) would take a while","date":"2019-05-17T09:59:21.322Z","type":"message"}
{"nick":"joepie91","message":"just because they are so commonly used","date":"2019-05-17T09:59:27.528Z","type":"message"}
{"nick":"joepie91","message":"so you'd probably still want language-level support for this, a la pipeline operator, just to remove overhead of a core language feature","date":"2019-05-17T09:59:41.897Z","type":"message"}
{"nick":"killown","message":"trying this https://www.npmjs.com/package/n-readlines","date":"2019-05-17T10:00:10.048Z","type":"message"}
{"nick":"joepie91","message":"killown: oops, sorry, I forgot about your paste","date":"2019-05-17T10:00:23.194Z","type":"message"}
{"nick":"fastman","message":"you see, the case here is not the language limitation but the multiple ways you can implement this using solution that we already have","date":"2019-05-17T10:00:28.156Z","type":"message"}
{"nick":"fastman","message":"like \"funcitons\" :_)","date":"2019-05-17T10:00:33.630Z","type":"message"}
{"nick":"abbiya","date":"2019-05-17T10:00:57.565Z","type":"join"}
{"nick":"joepie91","message":"killown: I'm a bit lost. I told you several times what module to look at, but you're still trying to use readline?","date":"2019-05-17T10:00:59.227Z","type":"message"}
{"nick":"joepie91","message":"also, n-readlines is synchronous, so that's a bad idea","date":"2019-05-17T10:01:41.246Z","type":"message"}
{"nick":"killown","message":"ok I just want a thing which quick work","date":"2019-05-17T10:02:42.120Z","type":"message"}
{"nick":"killown","message":"and working now","date":"2019-05-17T10:02:45.169Z","type":"message"}
{"nick":"killown","message":"thank you","date":"2019-05-17T10:02:49.406Z","type":"message"}
{"nick":"joepie91","message":"time for my workday to start","date":"2019-05-17T10:07:07.552Z","type":"message"}
{"nick":"Lope","message":"joepie91, what is this chaincalls thing and what is the underscore inside the ()? https://gist.github.com/joepie91/1be1515034d21ed43b45dfffd16da668","date":"2019-05-17T10:07:24.416Z","type":"message"}
{"nick":"Lope","message":"is chaincalls a way to eliminate all the returns and then then() syntax?","date":"2019-05-17T10:07:47.003Z","type":"message"}
{"nick":"Lope","message":"*the then() syntax","date":"2019-05-17T10:07:58.465Z","type":"message"}
{"nick":"joepie91","message":"Lope: my second gist was the implementation of chainCalls :)","date":"2019-05-17T10:08:38.602Z","type":"message"}
{"nick":"joepie91","message":"it's fully synchronous","date":"2019-05-17T10:08:42.592Z","type":"message"}
{"nick":"joepie91","message":"no promises support","date":"2019-05-17T10:08:44.896Z","type":"message"}
{"nick":"joepie91","message":"it's just a userland equivalent of that pipeline operator","date":"2019-05-17T10:08:53.206Z","type":"message"}
{"nick":"Lope","message":"ohh, okay","date":"2019-05-17T10:08:59.279Z","type":"message"}
{"nick":"joepie91","message":"the arrow functions with underscore work the same as in the pipeline proposal","date":"2019-05-17T10:09:03.391Z","type":"message"}
{"nick":"Lope","message":"is (_) some special JS syntax?","date":"2019-05-17T10:09:22.576Z","type":"message"}
{"nick":"Lope","message":"or your own creation?","date":"2019-05-17T10:09:25.654Z","type":"message"}
{"nick":"joepie91","message":"nope, it's just an arrow function","date":"2019-05-17T10:09:33.159Z","type":"message"}
{"nick":"joepie91","message":"and the argument is called _","date":"2019-05-17T10:09:37.731Z","type":"message"}
{"nick":"Lope","message":"alrighty then","date":"2019-05-17T10:09:47.270Z","type":"message"}
{"nick":"joepie91","message":"it's just a way to make obvious where the argument goes :)","date":"2019-05-17T10:10:02.671Z","type":"message"}
{"nick":"joepie91","message":"anyway, you could use this to chain calls on stuff without modifying their prototype","date":"2019-05-17T10:10:54.231Z","type":"message"}
{"nick":"joepie91","message":"or well, sort-of-chain","date":"2019-05-17T10:11:05.961Z","type":"message"}
{"nick":"carif","reason":"Ping timeout: 246 seconds","date":"2019-05-17T10:11:33.097Z","type":"quit"}
{"nick":"hoijui","reason":"Remote host closed the connection","date":"2019-05-17T10:12:46.687Z","type":"quit"}
{"nick":"darkSeid","date":"2019-05-17T10:13:41.824Z","type":"join"}
{"nick":"aLeSD","reason":"Ping timeout: 255 seconds","date":"2019-05-17T10:14:40.421Z","type":"quit"}
{"nick":"slajax","date":"2019-05-17T10:15:07.925Z","type":"join"}
{"nick":"Sharaal","date":"2019-05-17T10:15:45.343Z","type":"join"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T10:16:02.816Z","type":"quit"}
{"nick":"joepie91","message":"Lope: btw, I *am* also working on a Promise-based streams implementation, that could in some cases significantly reduce code complexity, but that's a separate project","date":"2019-05-17T10:17:40.545Z","type":"message"}
{"nick":"keepLearning512","date":"2019-05-17T10:17:43.691Z","type":"join"}
{"nick":"joepie91","message":"and not done yet :P","date":"2019-05-17T10:17:59.176Z","type":"message"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T10:18:23.461Z","type":"quit"}
{"nick":"mezod","reason":"Ping timeout: 246 seconds","date":"2019-05-17T10:18:53.991Z","type":"quit"}
{"nick":"Nicmavr","date":"2019-05-17T10:19:32.424Z","type":"join"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2019-05-17T10:20:00.599Z","type":"quit"}
{"nick":"ed209","date":"2019-05-17T10:20:07.110Z","type":"join"}
{"nick":"sctskw","date":"2019-05-17T10:20:33.723Z","type":"join"}
{"nick":"aLeSD","date":"2019-05-17T10:21:09.696Z","type":"join"}
{"nick":"Lope","message":"joepie91, okay so you have convinced me that Bluebird is better than ES6 promises because you can handle sync and async errors in 1 place.","date":"2019-05-17T10:21:26.568Z","type":"message"}
{"nick":"Lope","message":"And you've convinced me that Bluebird is a decent option.","date":"2019-05-17T10:21:34.015Z","type":"message"}
{"nick":"Lope","message":"But you haven't convinced me that there's anything wrong with the code here: https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9","date":"2019-05-17T10:21:48.874Z","type":"message"}
{"nick":"Lope","message":"For example the async code at Section 3","date":"2019-05-17T10:22:11.000Z","type":"message"}
{"nick":"esrse","reason":"Ping timeout: 252 seconds","date":"2019-05-17T10:22:26.427Z","type":"quit"}
{"nick":"Lope","message":"And BTW you also convinced me that the article is an unfair comparison and it's showing bad promises code, etc.","date":"2019-05-17T10:22:32.230Z","type":"message"}
{"nick":"Lope","message":"But that doesn't change the fact that I've not seen any reason why async await is bad.","date":"2019-05-17T10:22:46.601Z","type":"message"}
{"nick":"Lope","message":"And in fact, async await syntax is much cleaner.","date":"2019-05-17T10:22:55.527Z","type":"message"}
{"nick":"Lope","message":"Much less functions and brackets etc.","date":"2019-05-17T10:23:02.962Z","type":"message"}
{"nick":"joepie91","message":"'cleaner' isn't a desirable property, what matters is 'readable', and async/await is *less* readable - readability is about conveying the intention and behaviour of code, 1) efficiently and 2) accurately","date":"2019-05-17T10:23:31.011Z","type":"message"}
{"nick":"user1452","date":"2019-05-17T10:23:36.271Z","type":"join"}
{"nick":"Ultrasauce","reason":"Quit: Ultrasauce","date":"2019-05-17T10:23:37.648Z","type":"quit"}
{"nick":"joepie91","message":"async/await falls down on point 2 because of the misleadingness","date":"2019-05-17T10:23:40.663Z","type":"message"}
{"nick":"Lope","message":"The cleanliness of the code is a huge upside, and can make up for your concern about the human not noticing the async and await keywords. (which I disagree with)","date":"2019-05-17T10:23:52.922Z","type":"message"}
{"nick":"joepie91","message":"I really do have to get to work though, so if you want to discuss this further, it'll have to be later :P","date":"2019-05-17T10:23:53.979Z","type":"message"}
{"nick":"joepie91","message":"no, cleanliness is an aesthetic concern, it's irrelevant","date":"2019-05-17T10:24:13.571Z","type":"message"}
{"nick":"Ultrasauce","date":"2019-05-17T10:24:21.446Z","type":"join"}
{"nick":"Lope","message":"joepie91, alright, I understand. Thank you very much for taking the time to explain your valuable perspective to me. I really appreciate it.","date":"2019-05-17T10:24:41.485Z","type":"message"}
{"nick":"Lope","message":"And if that's all you've got then I'll go ahead and try some async await.","date":"2019-05-17T10:24:58.051Z","type":"message"}
{"nick":"carif","date":"2019-05-17T10:24:59.986Z","type":"join"}
{"nick":"sctskw","reason":"Ping timeout: 252 seconds","date":"2019-05-17T10:25:00.655Z","type":"quit"}
{"nick":"nodz","date":"2019-05-17T10:25:02.389Z","type":"join"}
{"nick":"Lope","message":"The dark side muahahahaha","date":"2019-05-17T10:25:02.865Z","type":"message"}
{"nick":"joepie91","message":"lol","date":"2019-05-17T10:25:11.342Z","type":"message"}
{"nick":"Lope","message":"Excuse the pun","date":"2019-05-17T10:25:11.430Z","type":"message"}
{"nick":"Lope","message":"\"try some async await\"","date":"2019-05-17T10:25:18.105Z","type":"message"}
{"nick":"GreenJello","date":"2019-05-17T10:26:20.717Z","type":"join"}
{"nick":"Lope","message":"I think async await might convey the intention efficiently and accurately. But I'd have to try get used to it first and then see.","date":"2019-05-17T10:26:29.353Z","type":"message"}
{"nick":"Lope","message":"good luck with your Promises streams implementation","date":"2019-05-17T10:27:04.511Z","type":"message"}
{"nick":"joepie91","message":"Lope: thanks :) example here: https://gist.github.com/joepie91/78d8981fed2b22a5f31fb1fe468bd4b3","date":"2019-05-17T10:29:51.246Z","type":"message"}
{"nick":"DeltaHeavy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T10:30:34.021Z","type":"quit"}
{"nick":"Lope","message":"Cool","date":"2019-05-17T10:30:45.321Z","type":"message"}
{"nick":"Lope","message":"You seem to be more open minded than the last time we discussed promises many months ago.","date":"2019-05-17T10:31:04.091Z","type":"message"}
{"nick":"DeltaHeavy","date":"2019-05-17T10:31:20.734Z","type":"join"}
{"nick":"Lope","message":"Although you still firmly believe you're right, you present your arguments in a very good manner and seem to consider counter arguments fairly-ish.","date":"2019-05-17T10:31:45.954Z","type":"message"}
{"nick":"Lope","message":"Nothing to complain about though. Weakly held strong opinions are good.","date":"2019-05-17T10:32:06.299Z","type":"message"}
{"nick":"DeltaHeavy","reason":"Client Quit","date":"2019-05-17T10:32:52.269Z","type":"quit"}
{"nick":"joepie91","message":"Lope: hmm, I don't think I've changed much in my approach over time. possibly you caught me at a bad time back then","date":"2019-05-17T10:33:35.169Z","type":"message"}
{"nick":"joepie91","message":"I *have* been taking more breaks from IRC lately when I'm in a bad mood :)","date":"2019-05-17T10:33:56.946Z","type":"message"}
{"nick":"carif","reason":"Ping timeout: 258 seconds","date":"2019-05-17T10:34:32.928Z","type":"quit"}
{"nick":"Lope","message":"What the hell kind of syntax is this?","date":"2019-05-17T10:34:38.804Z","type":"message"}
{"nick":"Lope","message":".then(([value1, value2]) => {","date":"2019-05-17T10:34:39.559Z","type":"message"}
{"nick":"joepie91","message":"array destructuring","date":"2019-05-17T10:34:45.200Z","type":"message"}
{"nick":"joepie91","message":"let [value1, value2] = ...","date":"2019-05-17T10:34:52.763Z","type":"message"}
{"nick":"joepie91","message":"but inline, in a function argument","date":"2019-05-17T10:34:57.702Z","type":"message"}
{"nick":"Lope","message":"I've seen ({foo,bar}) but not the array","date":"2019-05-17T10:34:59.461Z","type":"message"}
{"nick":"Lope","message":"I see.","date":"2019-05-17T10:35:08.737Z","type":"message"}
{"nick":"joepie91","message":"right, works basically the same, but indexed rather than named","date":"2019-05-17T10:35:11.391Z","type":"message"}
{"nick":"Lope","message":"So it's the same as (arr) { let v0 = arr[0], v1 = arr[1];","date":"2019-05-17T10:35:50.621Z","type":"message"}
{"nick":"joepie91","message":"yeah","date":"2019-05-17T10:36:00.082Z","type":"message"}
{"nick":"joepie91","message":"well","date":"2019-05-17T10:36:05.104Z","type":"message"}
{"nick":"joepie91","message":"v0 -> value1 and v1 -> value 2","date":"2019-05-17T10:36:10.729Z","type":"message"}
{"nick":"joepie91","message":"but I think that's what you meant","date":"2019-05-17T10:36:15.626Z","type":"message"}
{"nick":"joepie91","message":":p","date":"2019-05-17T10:36:17.116Z","type":"message"}
{"nick":"Lope","message":"Is this as old as object destructuring?","date":"2019-05-17T10:36:17.339Z","type":"message"}
{"nick":"Lope","message":"No, it's not","date":"2019-05-17T10:36:21.786Z","type":"message"}
{"nick":"Lope","message":"What is -> ?","date":"2019-05-17T10:36:24.339Z","type":"message"}
{"nick":"joepie91","message":"I don't mean it as JS","date":"2019-05-17T10:36:29.568Z","type":"message"}
{"nick":"joepie91","message":"I mean it as in","date":"2019-05-17T10:36:31.053Z","type":"message"}
{"nick":"Lope","message":"Looks like C++ haha","date":"2019-05-17T10:36:40.752Z","type":"message"}
{"nick":"joepie91","message":"(arr) { let value1 = arr[0], value2 = arr[2] }","date":"2019-05-17T10:36:44.526Z","type":"message"}
{"nick":"Kaivo","message":"you should have wrote `s/v0/value1` :P","date":"2019-05-17T10:36:44.612Z","type":"message"}
{"nick":"joepie91","message":"what","date":"2019-05-17T10:36:53.432Z","type":"message"}
{"nick":"joepie91","message":"(arr) { let value1 = arr[0], value2 = arr[1] }","date":"2019-05-17T10:36:55.120Z","type":"message"}
{"nick":"joepie91","message":"wtf fingers","date":"2019-05-17T10:36:56.594Z","type":"message"}
{"nick":"Lope","message":"joepie91, oh yes, I just abbreviated and cleaned it up.","date":"2019-05-17T10:37:10.658Z","type":"message"}
{"nick":"Lope","message":"Because of the indexes etc.","date":"2019-05-17T10:37:19.180Z","type":"message"}
{"nick":"joepie91","message":"Lope: object and array destructuring were both introduced in ES6 I believe, but iirc array destructuring support was implemented a bit earlier in most placeds","date":"2019-05-17T10:37:20.070Z","type":"message"}
{"nick":"joepie91","message":"places*","date":"2019-05-17T10:37:22.310Z","type":"message"}
{"nick":"joepie91","message":"Kaivo: even less people understand that!","date":"2019-05-17T10:37:35.242Z","type":"message"}
{"nick":"joepie91","message":":p","date":"2019-05-17T10:37:36.740Z","type":"message"}
{"nick":"Lope","message":"Odd. Okay, nice to know that array destructuring is available.","date":"2019-05-17T10:37:46.073Z","type":"message"}
{"nick":"Kaivo","message":"isn't regex universally understood?","date":"2019-05-17T10:37:53.282Z","type":"message"}
{"nick":"Kaivo","message":":P","date":"2019-05-17T10:37:56.160Z","type":"message"}
{"nick":"plutoniix","date":"2019-05-17T10:38:01.356Z","type":"join"}
{"nick":"joepie91","message":"Kaivo: wellll that is technically sed syntax, not regex","date":"2019-05-17T10:38:08.521Z","type":"message"}
{"nick":"Kaivo","message":"I mean sed replace syntax or wtv it's called","date":"2019-05-17T10:38:10.957Z","type":"message"}
{"nick":"joepie91","message":":P","date":"2019-05-17T10:38:19.046Z","type":"message"}
{"nick":"Lope","message":"sed is what real men use","date":"2019-05-17T10:38:21.830Z","type":"message"}
{"nick":"joepie91","message":"pffft","date":"2019-05-17T10:38:26.718Z","type":"message"}
{"nick":"Lope","message":"becuse real men use linux","date":"2019-05-17T10:38:31.032Z","type":"message"}
{"nick":"joepie91","action":"deposits 'real men' sentiment into trashbin","date":"2019-05-17T10:38:31.904Z","type":"action"}
{"nick":"Lope","message":"no pressure :P","date":"2019-05-17T10:38:44.112Z","type":"message"}
{"nick":"Kaivo","message":"pfff, try to code using just ex or ed, now we can talk","date":"2019-05-17T10:38:47.078Z","type":"message"}
{"nick":"joepie91","message":"Kaivo: also, surprisingly, I've even found some non-technical people to intuitively understand s/ syntax","date":"2019-05-17T10:38:55.085Z","type":"message"}
{"nick":"joepie91","message":"I'm not sure how that works","date":"2019-05-17T10:38:59.851Z","type":"message"}
{"nick":"Lope","message":"i dunno what ex or ed is","date":"2019-05-17T10:39:00.503Z","type":"message"}
{"nick":"avu","message":"M-x C-x butterfly","date":"2019-05-17T10:39:00.576Z","type":"message"}
{"nick":"joepie91","message":"may have something to do with Skype once having it as syntax","date":"2019-05-17T10:39:19.667Z","type":"message"}
{"nick":"joepie91","message":"as in, you could use it in Skype to edit messages","date":"2019-05-17T10:39:26.833Z","type":"message"}
{"nick":"Kaivo","message":"imagine coding just through commands you do with `:` in vim, without the buffer displayed","date":"2019-05-17T10:39:36.577Z","type":"message"}
{"nick":"joepie91","message":"I think that's been ripped out of it by now though","date":"2019-05-17T10:39:41.299Z","type":"message"}
{"nick":"Lope","message":"joepie91, i understood it before I knew sed, and never used it in skype.","date":"2019-05-17T10:39:52.491Z","type":"message"}
{"nick":"Lope","message":"It's just intuitive.","date":"2019-05-17T10:39:56.973Z","type":"message"}
{"nick":"Lope","message":"Almost everyone knows search replace","date":"2019-05-17T10:40:06.763Z","type":"message"}
{"nick":"joepie91","message":"mm","date":"2019-05-17T10:40:19.446Z","type":"message"}
{"nick":"Kaivo","message":"So yeah, destructuring a nice feature.","date":"2019-05-17T10:40:35.179Z","type":"message"}
{"nick":"Lope","action":"spraypaints async await on joepie's wall and then runs away","date":"2019-05-17T10:40:35.911Z","type":"action"}
{"nick":"joepie91","message":"doesn't matter, my wall disappeared before you could finish","date":"2019-05-17T10:40:56.456Z","type":"message"}
{"nick":"joepie91","message":"race condition","date":"2019-05-17T10:40:58.276Z","type":"message"}
{"nick":"Lope","message":"now that's one nerdy dad joke","date":"2019-05-17T10:41:23.422Z","type":"message"}
{"nick":"joepie91","message":"pffffft, why is VS Code's autocomplete so slow","date":"2019-05-17T10:41:45.094Z","type":"message"}
{"nick":"platonic","date":"2019-05-17T10:42:05.356Z","type":"join"}
{"nick":"joepie91","message":"I'm still annoyed that it doesn't block input while autocompletion is processed","date":"2019-05-17T10:42:16.467Z","type":"message"}
{"nick":"Kaivo","message":"joepie91: I ditched it recently to go for neovim + coc.nvim which uses all the backend of vscode for plugin, much faster. VSCode felt slower and slower the past few months.","date":"2019-05-17T10:42:28.426Z","type":"message"}
{"nick":"joepie91","message":"means that when I muscle-memory a snippet, I often accidentally don't insert it because I was faster than the autocomplete","date":"2019-05-17T10:42:33.094Z","type":"message"}
{"nick":"joepie91","message":"very annoying","date":"2019-05-17T10:42:34.616Z","type":"message"}
{"nick":"joepie91","message":"Kaivo: dunno, I don't really have performance complaints about it otherwise","date":"2019-05-17T10:42:59.719Z","type":"message"}
{"nick":"joepie91","message":"it's just the combination of (perceived-)slow autocomplete, and not blocking input","date":"2019-05-17T10:43:10.092Z","type":"message"}
{"nick":"joepie91","message":"that grinds my gears","date":"2019-05-17T10:43:12.709Z","type":"message"}
{"nick":"s00pcan","reason":"Ping timeout: 258 seconds","date":"2019-05-17T10:43:21.951Z","type":"quit"}
{"nick":"joepie91","message":"Atom may have overall been slower, but it got this right","date":"2019-05-17T10:43:31.133Z","type":"message"}
{"nick":"Kaivo","message":"joepie91: Me neither, but they must have done something with the auto-complete because a year ago it didn't feel that slow.","date":"2019-05-17T10:43:32.710Z","type":"message"}
{"nick":"dadinn","date":"2019-05-17T10:43:34.396Z","type":"join"}
{"nick":"joepie91","message":"anyway, if I get an option to block input on autocomplete, I'll stop complaining","date":"2019-05-17T10:43:58.541Z","type":"message"}
{"nick":"s00pcan","date":"2019-05-17T10:43:58.716Z","type":"join"}
{"nick":"joepie91","message":":P","date":"2019-05-17T10:43:59.999Z","type":"message"}
{"nick":"joepie91","message":"I just want to be able to muscle-memory my autocompletion....","date":"2019-05-17T10:44:12.022Z","type":"message"}
{"nick":"joepie91","message":"and/or type ahead","date":"2019-05-17T10:44:22.851Z","type":"message"}
{"nick":"platonic","reason":"Ping timeout: 245 seconds","date":"2019-05-17T10:46:18.419Z","type":"quit"}
{"nick":"Lope","message":"joepie91, i really doubt you can beat example 4 here: https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9","date":"2019-05-17T10:46:20.023Z","type":"message"}
{"nick":"fastman","message":"like always, I'll say, what's wrong with callback? :)","date":"2019-05-17T10:47:28.326Z","type":"message"}
{"nick":"slajax","reason":"Ping timeout: 258 seconds","date":"2019-05-17T10:47:34.959Z","type":"quit"}
{"nick":"keepLearning512","reason":"Remote host closed the connection","date":"2019-05-17T10:47:41.774Z","type":"quit"}
{"nick":"aneon","message":"Can someone please help? I need a product configurator for my Jute bags in order to allow people can select designs and drap the selection on template.","date":"2019-05-17T10:48:18.986Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2019-05-17T10:48:24.223Z","type":"quit"}
{"nick":"fastman","message":"It all boils down to the fact, the there's too low entry point for becoming a \"programmer\"","date":"2019-05-17T10:48:55.309Z","type":"message"}
{"nick":"Lope","message":"fastman, I used callbacks until now. But I was trying out promises because they are built in.","date":"2019-05-17T10:49:08.292Z","type":"message"}
{"nick":"aneon","message":"there are 12 patterns for customization.","date":"2019-05-17T10:49:12.098Z","type":"message"}
{"nick":"Lope","message":"If you need to wait for multiple callbacks you have to count your callbacks which is less clean than Promise.all","date":"2019-05-17T10:49:39.155Z","type":"message"}
{"nick":"fastman","message":"there's still.a.callback.in.promise","date":"2019-05-17T10:49:46.540Z","type":"message"}
{"nick":"fastman","message":"maybe.","date":"2019-05-17T10:50:02.879Z","type":"message"}
{"nick":"Lope","message":"Nobody's arguing that, dude.","date":"2019-05-17T10:50:04.618Z","type":"message"}
{"nick":"fastman","message":"whatever suits you","date":"2019-05-17T10:50:15.929Z","type":"message"}
{"nick":"Lope","message":"callbacks have the worst error handling situation. I've used callbacks exclusively and I'll freely admit that.","date":"2019-05-17T10:51:30.214Z","type":"message"}
{"nick":"carif","date":"2019-05-17T10:51:48.065Z","type":"join"}
{"nick":"igemnace","reason":"Remote host closed the connection","date":"2019-05-17T10:52:55.877Z","type":"quit"}
{"nick":"fastman","message":"callback have the best error handling situation ever, cause you have to handle each error individually and take care of it and purpusfuly decide what to do with gievn error and not just pass everyuthing to the last catch() and console.error('ooops')","date":"2019-05-17T10:53:10.134Z","type":"message"}
{"nick":"killown","message":"cannot use \"continue\" inside a \"if\" while (line = liner.next()) {  :/","date":"2019-05-17T10:53:11.355Z","type":"message"}
{"nick":"joepie91","message":"\"cause you have to handle each error individually and take care of it\"","date":"2019-05-17T10:53:30.526Z","type":"message"}
{"nick":"joepie91","message":"this is false","date":"2019-05-17T10:53:31.978Z","type":"message"}
{"nick":"joepie91","message":"you don't _have_ to do anything","date":"2019-05-17T10:53:35.308Z","type":"message"}
{"nick":"joepie91","message":"it will fail silently if you don't do anything with the error","date":"2019-05-17T10:53:41.427Z","type":"message"}
{"nick":"fastman","message":"joepie91: ofc ;)","date":"2019-05-17T10:53:42.454Z","type":"message"}
{"nick":"joepie91","message":"which is precisely the problem","date":"2019-05-17T10:53:44.225Z","type":"message"}
{"nick":"joepie91","message":"(which promises fix)","date":"2019-05-17T10:53:48.856Z","type":"message"}
{"nick":"fastman","message":"if you hire lazy people nothing will work","date":"2019-05-17T10:54:00.435Z","type":"message"}
{"nick":"joepie91","message":"this has precisely nothing to do with laziness","date":"2019-05-17T10:54:47.689Z","type":"message"}
{"nick":"cslcm","message":"It's not necessarily laziness. There are a LOT of shitty examples on the web which teach people do write bad code","date":"2019-05-17T10:54:59.045Z","type":"message"}
{"nick":"joepie91","message":"laziness is not bothering to learn things - like promises - that will lower your defect rate :)","date":"2019-05-17T10:55:03.991Z","type":"message"}
{"nick":"cslcm","message":"to*","date":"2019-05-17T10:55:06.691Z","type":"message"}
{"nick":"Kaivo","message":"Using the right tool is protecting you from yourself. :P","date":"2019-05-17T10:55:41.204Z","type":"message"}
{"nick":"waveframe","reason":"Ping timeout: 245 seconds","date":"2019-05-17T10:55:53.620Z","type":"quit"}
{"nick":"joepie91","message":"bingo","date":"2019-05-17T10:55:58.726Z","type":"message"}
{"nick":"fastman","message":"if one does not understand the concept of callbacks and how to apporach that I don't have a big faith one will use promises and/or solution properly","date":"2019-05-17T10:55:59.707Z","type":"message"}
{"nick":"joepie91","message":"fastman: understanding is, also, irrelevant.","date":"2019-05-17T10:56:08.191Z","type":"message"}
{"nick":"fastman","message":"it's like with C and assembler","date":"2019-05-17T10:56:14.422Z","type":"message"}
{"nick":"fastman","message":"lol","date":"2019-05-17T10:56:18.867Z","type":"message"}
{"nick":"joepie91","message":"fastman: lowering defect rate is about removing the opportunities for mistakes.","date":"2019-05-17T10:56:22.595Z","type":"message"}
{"nick":"fastman","message":"good luck with that apporach","date":"2019-05-17T10:56:23.119Z","type":"message"}
{"nick":"cslcm","message":"The main issue with callbacks is the lack of standardisation.. like many have standardised with (err, result) but some libraries call (result, err) and some two callbacks (result), (err), this is why async/await is so much better because everything is an exception and you just need to learn to catch them","date":"2019-05-17T10:56:24.075Z","type":"message"}
{"nick":"joepie91","message":"which all humans make.","date":"2019-05-17T10:56:25.699Z","type":"message"}
{"nick":"joepie91","message":"regardless of competence.","date":"2019-05-17T10:56:28.342Z","type":"message"}
{"nick":"fastman","message":"as long as you write a new blog engine from scratch maybe it would work","date":"2019-05-17T10:56:40.030Z","type":"message"}
{"nick":"joepie91","message":"anything with footguns is therefore a bad idea.","date":"2019-05-17T10:56:43.481Z","type":"message"}
{"nick":"killown","message":"joepie91, how do I replace while (line = liner.next()) with a for loop","date":"2019-05-17T10:56:57.170Z","type":"message"}
{"nick":"joepie91","message":"fastman: C and assembler are also bad choices, by the way, for the same reason.","date":"2019-05-17T10:56:58.029Z","type":"message"}
{"nick":"Sharaal","date":"2019-05-17T10:57:30.324Z","type":"join"}
{"nick":"fastman","message":"for me, if you don't understand AT LEAST a layer below the tool you're using you won't be able to produce good quality in long term","date":"2019-05-17T10:57:36.465Z","type":"message"}
{"nick":"fastman","message":"(not taliking abou wrinting simple services)","date":"2019-05-17T10:57:45.669Z","type":"message"}
{"nick":"keepLearning512","date":"2019-05-17T10:57:57.963Z","type":"join"}
{"nick":"fastman","message":"that's my apporach to thiungs","date":"2019-05-17T10:58:02.013Z","type":"message"}
{"nick":"carif","reason":"Ping timeout: 264 seconds","date":"2019-05-17T10:58:16.095Z","type":"quit"}
{"nick":"goberle","reason":"Ping timeout: 246 seconds","date":"2019-05-17T10:58:34.375Z","type":"quit"}
{"nick":"fastman","message":"simple example, if you're using query build like knex, but you don't know what the produced result means - you're screwd","date":"2019-05-17T10:58:42.704Z","type":"message"}
{"nick":"fastman","message":"query builder*","date":"2019-05-17T10:58:52.430Z","type":"message"}
{"nick":"cslcm","message":"killown: I don't think a for loop is appropriate there, why do you want to?","date":"2019-05-17T10:58:55.475Z","type":"message"}
{"nick":"killown","message":"cslcm, because I need to use continue inside a if","date":"2019-05-17T10:59:15.281Z","type":"message"}
{"nick":"killown","message":"and while doesn't allow that","date":"2019-05-17T10:59:19.265Z","type":"message"}
{"nick":"cslcm","message":"if liner is iterable you could do for(cosnt line: liner), but i suspect it's not","date":"2019-05-17T10:59:22.691Z","type":"message"}
{"nick":"salad","date":"2019-05-17T10:59:23.780Z","type":"join"}
{"nick":"cslcm","message":"ew, continue","date":"2019-05-17T10:59:26.072Z","type":"message"}
{"nick":"joepie91","message":"fastman: understanding lower layers is good. *using* those lower layers yourself is not. that's where the distinction lies","date":"2019-05-17T10:59:26.159Z","type":"message"}
{"nick":"cslcm","message":"const* not cosnt lol","date":"2019-05-17T10:59:46.528Z","type":"message"}
{"nick":"fastman","message":"joepie91: I'd say they both comes in parrallel, simply knowing the concept (in my world) wont be enough","date":"2019-05-17T11:00:19.172Z","type":"message"}
{"nick":"joepie91","message":"why not?","date":"2019-05-17T11:00:34.913Z","type":"message"}
{"nick":"fastman","message":"unless you only want to be a *user*","date":"2019-05-17T11:00:45.186Z","type":"message"}
{"nick":"fastman","message":"and not be an expert in your area","date":"2019-05-17T11:01:00.191Z","type":"message"}
{"nick":"gloomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T11:01:05.646Z","type":"quit"}
{"nick":"killown","message":"SyntaxError: Missing initializer in const declaration","date":"2019-05-17T11:01:29.970Z","type":"message"}
{"nick":"cslcm","message":"joepie91: I guess, understanding that async/await is basically just promises, is important, and you do need to USE that e.g when wrapping callbacks","date":"2019-05-17T11:01:34.347Z","type":"message"}
{"nick":"killown","message":"for(const line: liner) {","date":"2019-05-17T11:01:43.782Z","type":"message"}
{"nick":"joepie91","message":"fastman: what exactly is your point here? because this is looking a lot like the \"real men use C\" bullshit","date":"2019-05-17T11:01:51.111Z","type":"message"}
{"nick":"joepie91","message":"cslcm: you shouldn't be manually","date":"2019-05-17T11:02:06.157Z","type":"message"}
{"nick":"joepie91","message":"oops","date":"2019-05-17T11:02:07.682Z","type":"message"}
{"nick":"joepie91","message":"cslcm: you shouldn't be manually 'wrapping callbacks' at all*","date":"2019-05-17T11:02:11.138Z","type":"message"}
{"nick":"CoffeeBreakfast","date":"2019-05-17T11:02:19.005Z","type":"join"}
{"nick":"joepie91","message":"(unless you really can't avoid it)","date":"2019-05-17T11:02:20.537Z","type":"message"}
{"nick":"joepie91","message":"this is the job of promisify implementations","date":"2019-05-17T11:02:26.286Z","type":"message"}
{"nick":"killown","message":"SyntaxError: Illegal continue statement: no surrounding iteration statement <<<< is there someway to disable this, don't get why I cant use continue inside if","date":"2019-05-17T11:02:49.298Z","type":"message"}
{"nick":"cslcm","message":"killown: you can almost always re-write your code so a continue is unnecessary","date":"2019-05-17T11:03:26.499Z","type":"message"}
{"nick":"cslcm","message":"in fact, i'd get rid of the almost","date":"2019-05-17T11:03:34.070Z","type":"message"}
{"nick":"cslcm","message":"just restructure your logic","date":"2019-05-17T11:03:55.238Z","type":"message"}
{"nick":"fastman","message":"fastman: my point is you have to understand a layer below and be able to use it fluently","date":"2019-05-17T11:04:12.342Z","type":"message"}
{"nick":"killown","message":"cslcm, I am doing this https://bpaste.net/show/34f93eac6487","date":"2019-05-17T11:04:34.414Z","type":"message"}
{"nick":"cslcm","message":"that isn't inside any kind of loop","date":"2019-05-17T11:04:52.388Z","type":"message"}
{"nick":"cslcm","message":"that function (err, data) is a new context","date":"2019-05-17T11:05:04.237Z","type":"message"}
{"nick":"killown","message":"just a bit of the code","date":"2019-05-17T11:05:08.763Z","type":"message"}
{"nick":"jottr","reason":"Ping timeout: 258 seconds","date":"2019-05-17T11:05:13.025Z","type":"quit"}
{"nick":"cslcm","message":"you can't continue a loop from within a callback function","date":"2019-05-17T11:05:20.860Z","type":"message"}
{"nick":"joepie91","message":"fastman: understand, yes. be able to use it fluently... no, why would that be necessary? what do you accomplish by that?","date":"2019-05-17T11:05:24.209Z","type":"message"}
{"nick":"killown","message":"https://bpaste.net/show/0e411e301e8a good now?","date":"2019-05-17T11:05:44.973Z","type":"message"}
{"nick":"cslcm","message":"when fs.readFile is called, your code is already continuing to execute while the file is being retreived, that is an asynchronous callback","date":"2019-05-17T11:05:50.707Z","type":"message"}
{"nick":"killown","message":"hmmm","date":"2019-05-17T11:05:54.722Z","type":"message"}
{"nick":"cslcm","message":"no, that code is just wrong. You can't do that","date":"2019-05-17T11:06:04.214Z","type":"message"}
{"nick":"killown","message":"I got that","date":"2019-05-17T11:06:05.872Z","type":"message"}
{"nick":"cslcm","message":"are you targeting es2015?","date":"2019-05-17T11:07:05.611Z","type":"message"}
{"nick":"cslcm","message":"you could promisify fs.readFile and use await","date":"2019-05-17T11:07:14.762Z","type":"message"}
{"nick":"fastman","message":"joepie91: if one is using promises beacuse can't and/or unable to use callbacks - that's a bad case","date":"2019-05-17T11:07:16.333Z","type":"message"}
{"nick":"joepie91","message":"fastman: you keep making these statements but you're never actually supporting them, or answering 'why'","date":"2019-05-17T11:07:36.327Z","type":"message"}
{"nick":"joepie91","message":"you're just stating them as magical absolute truths","date":"2019-05-17T11:07:46.955Z","type":"message"}
{"nick":"joepie91","message":"why would that be 'a bad case'?","date":"2019-05-17T11:08:04.993Z","type":"message"}
{"nick":"cslcm","message":"killown: Actually it looks like fs.promises is a thing since node v10","date":"2019-05-17T11:09:09.151Z","type":"message"}
{"nick":"bodz","date":"2019-05-17T11:09:26.650Z","type":"join"}
{"nick":"cslcm","message":"so you can just use await on your readFile","date":"2019-05-17T11:10:04.597Z","type":"message"}
{"nick":"killown","message":"cslcm, what about https://bpaste.net/show/18588631d410","date":"2019-05-17T11:10:05.603Z","type":"message"}
{"nick":"vatican__","date":"2019-05-17T11:10:05.690Z","type":"join"}
{"nick":"killown","message":"if(check_if_registered())","date":"2019-05-17T11:10:18.166Z","type":"message"}
{"nick":"cslcm","message":"killown: that return value is being thrown away","date":"2019-05-17T11:10:21.441Z","type":"message"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T11:10:28.450Z","type":"quit"}
{"nick":"killown","message":"inside the while","date":"2019-05-17T11:10:31.795Z","type":"message"}
{"nick":"vatican__","reason":"Client Quit","date":"2019-05-17T11:10:34.117Z","type":"quit"}
{"nick":"vatican__","date":"2019-05-17T11:11:00.734Z","type":"join"}
{"nick":"jottr","date":"2019-05-17T11:11:01.083Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 255 seconds","date":"2019-05-17T11:11:22.403Z","type":"quit"}
{"nick":"vatican__","reason":"Client Quit","date":"2019-05-17T11:11:29.768Z","type":"quit"}
{"nick":"Nicmavr","date":"2019-05-17T11:11:32.478Z","type":"join"}
{"nick":"cslcm","message":"you need to read up about async functions and callbacks, killown","date":"2019-05-17T11:11:33.589Z","type":"message"}
{"nick":"cslcm","message":"they don't work like that","date":"2019-05-17T11:11:42.107Z","type":"message"}
{"nick":"nodzz","date":"2019-05-17T11:11:55.618Z","type":"join"}
{"nick":"fastman","message":"why? cause I saw shit on intervies :)","date":"2019-05-17T11:12:12.908Z","type":"message"}
{"nick":"nodz","reason":"Ping timeout: 244 seconds","date":"2019-05-17T11:13:02.351Z","type":"quit"}
{"nick":"nodzz","new_nick":"nodz","date":"2019-05-17T11:13:17.515Z","type":"nick"}
{"nick":"fastman","message":"like ppl know how to use \"class\" but don't know how to use prorotypes","date":"2019-05-17T11:13:25.824Z","type":"message"}
{"nick":"joepie91","message":"fastman: something something anecdotal evidence :)","date":"2019-05-17T11:13:30.571Z","type":"message"}
{"nick":"cslcm","message":"killown: Here's what's happening in your code:   check_if_registered() is called, then it runs fs.readFile, then your function returns undefined.   Then, sometime LATER, fs.readFile's callback is executed","date":"2019-05-17T11:13:40.967Z","type":"message"}
{"nick":"mezod","date":"2019-05-17T11:14:00.134Z","type":"join"}
{"nick":"bodz","reason":"Ping timeout: 258 seconds","date":"2019-05-17T11:14:01.975Z","type":"quit"}
{"nick":"fastman","message":"joepie91: oh now, very true","date":"2019-05-17T11:14:03.562Z","type":"message"}
{"nick":"fastman","message":"if it was only one example I wouldn't make such statements","date":"2019-05-17T11:14:28.501Z","type":"message"}
{"nick":"fastman","message":" ¯\\_(ツ)_/¯","date":"2019-05-17T11:14:38.680Z","type":"message"}
{"nick":"piyer","date":"2019-05-17T11:14:41.428Z","type":"join"}
{"nick":"joepie91","message":"it's still a very limited sample set","date":"2019-05-17T11:14:49.328Z","type":"message"}
{"nick":"joepie91","message":"and it's still lacking a broader coherent theory","date":"2019-05-17T11:14:54.604Z","type":"message"}
{"nick":"joepie91","message":"you're just making assumptions here based on a few observations","date":"2019-05-17T11:15:02.101Z","type":"message"}
{"nick":"fastman","message":"and what's backing your theory?","date":"2019-05-17T11:15:09.302Z","type":"message"}
{"nick":"joepie91","message":"\"I saw a bunch of people who didn't understand X therefore people who don't understand X are incompetent\"","date":"2019-05-17T11:15:22.195Z","type":"message"}
{"nick":"fastman","message":"you got it wrong","date":"2019-05-17T11:16:00.494Z","type":"message"}
{"nick":"joepie91","message":"fastman: that when you're working with an abstraction, it's only that abstraction's data/behavioural model that you're interacting with (so long as it isn't leaky), and therefore you only need to have experience with that model to use it reliably; the exception coming when the abstraction is leaky to some degree, in which case you need to understand why the underlying system behaves like it does... nowhere in that picture does \"experience with the","date":"2019-05-17T11:16:30.409Z","type":"message"}
{"nick":"killown","message":"cslcm, https://bpaste.net/show/7c8b6a395229","date":"2019-05-17T11:16:31.916Z","type":"message"}
{"nick":"joepie91","message":"lower-level system\" play a role","date":"2019-05-17T11:16:31.989Z","type":"message"}
{"nick":"fastman","message":"my statement is \"I saw a bunch of people who didint' undestand X and they used Y instead, but luck of knowledge of X created another set of problems for them\"","date":"2019-05-17T11:16:53.364Z","type":"message"}
{"nick":"joepie91","message":"because you only need to /understand/ that lower-level system, to the degree that it interacts with your abstraction","date":"2019-05-17T11:16:54.564Z","type":"message"}
{"nick":"cslcm","message":"killown: almost","date":"2019-05-17T11:16:55.993Z","type":"message"}
{"nick":"cslcm","message":"you no longer need the callback if you're using await","date":"2019-05-17T11:17:01.803Z","type":"message"}
{"nick":"cslcm","message":"something like this https://bpaste.net/show/649a91683b4f","date":"2019-05-17T11:17:11.238Z","type":"message"}
{"nick":"joepie91","message":"fastman: \"lack of knowledge\" is different from what you said earlier, \"be able to use it fluently\"","date":"2019-05-17T11:17:18.677Z","type":"message"}
{"nick":"joepie91","message":"I've already told you that I agree that knowledge of the lower layer is useful","date":"2019-05-17T11:17:31.627Z","type":"message"}
{"nick":"fastman","message":"joepie91: I'm saying about being good at your jojb","date":"2019-05-17T11:17:32.284Z","type":"message"}
{"nick":"ffx_","reason":"Quit: Leaving...","date":"2019-05-17T11:17:36.846Z","type":"quit"}
{"nick":"joepie91","message":"I just disagree that you need to be able to *use* it","date":"2019-05-17T11:17:37.854Z","type":"message"}
{"nick":"fastman","message":"not to be a robot and write react components...","date":"2019-05-17T11:17:41.303Z","type":"message"}
{"nick":"joepie91","message":"and as of yet, you've not produced any evidence that that's necessary","date":"2019-05-17T11:17:45.514Z","type":"message"}
{"nick":"ffx_","date":"2019-05-17T11:17:45.778Z","type":"join"}
{"nick":"joepie91","message":"or even in any way beneficial","date":"2019-05-17T11:17:54.521Z","type":"message"}
{"nick":"fastman","message":"and dont give a damn about medicore programmers","date":"2019-05-17T11:17:59.380Z","type":"message"}
{"nick":"joepie91","message":"fastman: this is just elitist rhetoric.","date":"2019-05-17T11:18:12.322Z","type":"message"}
{"nick":"fastman","message":"ofcores, they are needed but I just don't care ;)","date":"2019-05-17T11:18:13.828Z","type":"message"}
{"nick":"joepie91","message":"there's no rational point underlying this rhetoric.","date":"2019-05-17T11:18:35.217Z","type":"message"}
{"nick":"fastman","message":"It's like with mechanics, some just repair old diesls, some work on F1 cars...","date":"2019-05-17T11:18:44.661Z","type":"message"}
{"nick":"fastman","message":"lol, it its","date":"2019-05-17T11:18:53.389Z","type":"message"}
{"nick":"fastman","message":"it's my point of view","date":"2019-05-17T11:18:56.914Z","type":"message"}
{"nick":"fastman","message":"and my field of interest","date":"2019-05-17T11:19:02.305Z","type":"message"}
{"nick":"joepie91","message":"yes, like I said, it's elitist rhetoric.","date":"2019-05-17T11:19:03.228Z","type":"message"}
{"nick":"killown","message":"cslcm,  UnhandledPromiseRejectionWarning: TypeError [ERR_INVALID_CALLBACK]: Callback must be a function","date":"2019-05-17T11:19:10.268Z","type":"message"}
{"nick":"piyer","reason":"Ping timeout: 245 seconds","date":"2019-05-17T11:19:13.360Z","type":"quit"}
{"nick":"joepie91","message":"you seem to be very interested in talking down on other people because they \"don't know as much as you\"","date":"2019-05-17T11:19:15.793Z","type":"message"}
{"nick":"joepie91","message":"which is generally a red flag","date":"2019-05-17T11:19:24.820Z","type":"message"}
{"nick":"fastman","message":"nah","date":"2019-05-17T11:19:25.100Z","type":"message"}
{"nick":"trevor","date":"2019-05-17T11:19:30.574Z","type":"join"}
{"nick":"fastman","message":"you wish","date":"2019-05-17T11:19:34.701Z","type":"message"}
{"nick":"fastman","message":"Find an exmaple then","date":"2019-05-17T11:20:18.457Z","type":"message"}
{"nick":"joepie91","message":"of?","date":"2019-05-17T11:20:27.548Z","type":"message"}
{"nick":"fastman","message":"13:19 <@joepie91> you seem to be very interested in talking down on other people because they \"don't know as much as you\"","date":"2019-05-17T11:20:33.109Z","type":"message"}
{"nick":"joepie91","message":"then the example is basically this entire conversation.","date":"2019-05-17T11:20:44.034Z","type":"message"}
{"nick":"fastman","message":"...","date":"2019-05-17T11:20:54.361Z","type":"message"}
{"nick":"lundibundi","date":"2019-05-17T11:20:57.371Z","type":"join"}
{"nick":"joepie91","message":"the entire time, your attitude has been \"I'm an expert and all these other people are idiots and they just don't know how to use the tools correctly, but I'm experienced enough to work with the dangerous tools\"","date":"2019-05-17T11:21:04.905Z","type":"message"}
{"nick":"cslcm","message":"killown: What's your node.js version","date":"2019-05-17T11:21:12.268Z","type":"message"}
{"nick":"fastman","message":"lol, I've never said that","date":"2019-05-17T11:21:17.639Z","type":"message"}
{"nick":"fastman","message":"it's only yourt imagination","date":"2019-05-17T11:21:23.575Z","type":"message"}
{"nick":"joepie91","message":"you didn't have to.","date":"2019-05-17T11:21:24.010Z","type":"message"}
{"nick":"joepie91","message":"it was clear from the context.","date":"2019-05-17T11:21:28.946Z","type":"message"}
{"nick":"killown","message":" node --version","date":"2019-05-17T11:21:34.145Z","type":"message"}
{"nick":"killown","message":"v10.15.2","date":"2019-05-17T11:21:34.538Z","type":"message"}
{"nick":"joepie91","message":"I'd recommend you give https://twitter.com/myrrlyn/status/980148201456943104 a read","date":"2019-05-17T11:21:35.323Z","type":"message"}
{"nick":"fastman","message":"you're corssing a line man","date":"2019-05-17T11:21:52.099Z","type":"message"}
{"nick":"joepie91","message":"no, I'm pointing out shitty behaviour where I see it.","date":"2019-05-17T11:22:04.633Z","type":"message"}
{"nick":"carif","date":"2019-05-17T11:22:05.031Z","type":"join"}
{"nick":"fastman","message":"you see thing you want to see","date":"2019-05-17T11:22:29.422Z","type":"message"}
{"nick":"fastman","message":"and you want to make a point","date":"2019-05-17T11:22:33.213Z","type":"message"}
{"nick":"fastman","message":"When I said, that I prefer to pick people to know both callbacks and promises then to one that only know promises, how did you came up with \"I'm an expert and all these other people are idiot\"","date":"2019-05-17T11:24:01.968Z","type":"message"}
{"nick":"cslcm","message":"killown: sorry, i forgot to mention you need to require fs/promises instead of fs","date":"2019-05-17T11:24:04.060Z","type":"message"}
{"nick":"emsjessec","date":"2019-05-17T11:24:05.695Z","type":"join"}
{"nick":"fastman","message":"please.","date":"2019-05-17T11:24:05.869Z","type":"message"}
{"nick":"Lucas_Gray","date":"2019-05-17T11:24:42.353Z","type":"join"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T11:25:12.689Z","type":"quit"}
{"nick":"Lope","message":"fastman, interestingly I have always used callbacks, and I came here years ago and joepie91 tried to push his belief that Bluebird is the only good way etc. And I challenged him to rewrite my code with promises. As I recall his code was significantly longer, more complicated and harder to read. He claimed it would be less likely to contain bugs because it used promises. But his first 1 or 2 iterations didn't even work properly. And I","date":"2019-05-17T11:25:33.563Z","type":"message"}
{"nick":"Lope","message":"attributed it to being hard to read. I did have a single error in my callback code though also, there was one error I didn't handle properly. But after we both corrected our respective code the callbacks code was still significantly shorter and easier to read. And no external library bloat required.","date":"2019-05-17T11:25:33.840Z","type":"message"}
{"nick":"joepie91","message":"fastman: okay, so let me phrase this differently, this time with my op hat on: an attitude of constantly talking down on people is not welcome or acceptable in this channel. the goal of this channel is to help people, to lift them up. if you continue with the talking down on people, that's very likely going to eventually result in being removed from the channel. that is not a negotiable thing, and a \"what, me? I've done nothing wrong\" attitude will","date":"2019-05-17T11:26:05.142Z","type":"message"}
{"nick":"joepie91","message":"only make removal more likely, because it tells me that you're not interested in becoming a constructive channel participant.","date":"2019-05-17T11:26:06.591Z","type":"message"}
{"nick":"joepie91","message":"fastman: and to be clear, this isn't about what points you make, this is about the attitude with which you make them.","date":"2019-05-17T11:26:17.806Z","type":"message"}
{"nick":"Lope","message":"However now I've got some code where I needed to delete and create a bunch of database collections, and I normally do this with callbacks and count my callbacks. But I decided to try node.js's built-in promises to see if Promise.all() would be cleaner. And it sort of is a bit cleaner.","date":"2019-05-17T11:26:52.390Z","type":"message"}
{"nick":"cslcm","message":"killown e.g const fs = require('fs').promises;","date":"2019-05-17T11:26:59.833Z","type":"message"}
{"nick":"Lope","message":"Though I'm still not a promises lover by any means.","date":"2019-05-17T11:27:01.619Z","type":"message"}
{"nick":"GreenJello","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2019-05-17T11:27:13.398Z","type":"quit"}
{"nick":"Lope","message":"fastman, however now async await looks quite nice.","date":"2019-05-17T11:27:16.906Z","type":"message"}
{"nick":"Lope","message":"fastman, joepie91 has pointed out that this is not a fair comparison because the promises code is badly written. But it certainly makes async await look good: https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9","date":"2019-05-17T11:27:48.364Z","type":"message"}
{"nick":"keepLearning512","reason":"Remote host closed the connection","date":"2019-05-17T11:27:57.800Z","type":"quit"}
{"nick":"killown","message":"cslcm, now with promises https://bpaste.net/show/b8a422e19ea1 won't work","date":"2019-05-17T11:28:54.072Z","type":"message"}
{"nick":"killown","message":"oh ok","date":"2019-05-17T11:29:06.295Z","type":"message"}
{"nick":"killown","message":"I don't need the conditions, anyway","date":"2019-05-17T11:29:13.620Z","type":"message"}
{"nick":"killown","message":"let me try","date":"2019-05-17T11:29:18.284Z","type":"message"}
{"nick":"cslcm","message":"killown: if you switch to use fs.promises, you need to adjust your usage of it appropriately","date":"2019-05-17T11:29:31.060Z","type":"message"}
{"nick":"Kkiro","date":"2019-05-17T11:29:39.025Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T11:29:39.112Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T11:29:39.185Z","type":"join"}
{"nick":"Lope","message":"I think it's good to pursue your preferences and disregard popular preferences. But remain open minded and re-evaluate your opinions from time to time.","date":"2019-05-17T11:29:46.981Z","type":"message"}
{"nick":"cslcm","message":"i.e await fs.appendFile('asdf', line);","date":"2019-05-17T11:29:51.733Z","type":"message"}
{"nick":"cslcm","message":"though i think that is wrong anyway cos there's no file handle","date":"2019-05-17T11:30:06.257Z","type":"message"}
{"nick":"Lope","message":"Because things change, and we all also change.","date":"2019-05-17T11:30:09.998Z","type":"message"}
{"nick":"cslcm","message":"nvm","date":"2019-05-17T11:30:11.880Z","type":"message"}
{"nick":"cslcm","message":"ignore that last bit","date":"2019-05-17T11:30:16.752Z","type":"message"}
{"nick":"Lope","message":"With our experience.","date":"2019-05-17T11:30:18.942Z","type":"message"}
{"nick":"Kestrel-029","date":"2019-05-17T11:30:23.495Z","type":"join"}
{"nick":"fastman","message":"Lope: fair point","date":"2019-05-17T11:30:25.692Z","type":"message"}
{"nick":"fastman","message":"joepie91: you're exaggerating","date":"2019-05-17T11:30:45.526Z","type":"message"}
{"nick":"cslcm","message":"Lope: that's fine unless you're working with other people","date":"2019-05-17T11:30:50.275Z","type":"message"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T11:30:53.459Z","type":"quit"}
{"nick":"fastman","message":"like I said, you want to make a point and trying hard to justify it","date":"2019-05-17T11:31:02.541Z","type":"message"}
{"nick":"keepLearning512","date":"2019-05-17T11:31:06.607Z","type":"join"}
{"nick":"killown","message":"cslcm, the issue is this const file = fs.createWriteStream() says it's not a function","date":"2019-05-17T11:31:34.747Z","type":"message"}
{"nick":"killown","message":"I just need const fsasdfasdf = require('fs');","date":"2019-05-17T11:32:07.037Z","type":"message"}
{"nick":"Lope","message":"cslcm, luckily I haven't needed to work with other people who have serious programming handicaps","date":"2019-05-17T11:32:18.886Z","type":"message"}
{"nick":"Lope","message":"For example I can read dense code or sparse code. And I prefer dense code. But some programmers can't handle dense code at all.","date":"2019-05-17T11:32:52.095Z","type":"message"}
{"nick":"cslcm","message":"Lope: you can, but you shouldn't have to","date":"2019-05-17T11:33:04.775Z","type":"message"}
{"nick":"Lope","message":"I'd find it very tedious to work with people who use 1,000 lines to write 100","date":"2019-05-17T11:33:12.437Z","type":"message"}
{"nick":"killown","message":"cslcm, worked dude, thanks a lot","date":"2019-05-17T11:33:13.173Z","type":"message"}
{"nick":"joepie91","message":"fastman: like I said, this is not negotiable.","date":"2019-05-17T11:33:23.523Z","type":"message"}
{"nick":"fastman","message":"Lope: I agree, it's verry common in such comparsing, that the case where is should look ugly it is made took even more uglyu :)","date":"2019-05-17T11:33:25.855Z","type":"message"}
{"nick":"joepie91","message":"[13:17] <fastman> not to be a robot and write react components...","date":"2019-05-17T11:33:30.884Z","type":"message"}
{"nick":"joepie91","message":"[12:54] <fastman> if you hire lazy people nothing will work","date":"2019-05-17T11:33:54.423Z","type":"message"}
{"nick":"fastman","message":"joepie91: I'm sucha a robot sometimes myslef  ¯\\_(ツ)_/¯","date":"2019-05-17T11:33:57.942Z","type":"message"}
{"nick":"joepie91","message":"[12:55] <fastman> if one does not understand the concept of callbacks and how to apporach that I don't have a big faith one will use promises and/or solution properly","date":"2019-05-17T11:33:59.043Z","type":"message"}
{"nick":"joepie91","message":"these are the sort of comments I am referring to.","date":"2019-05-17T11:34:06.070Z","type":"message"}
{"nick":"Cabanossi","reason":"Quit: Bye, bye...","date":"2019-05-17T11:34:08.815Z","type":"quit"}
{"nick":"fastman","message":"joepie91: that's my opinion","date":"2019-05-17T11:34:12.268Z","type":"message"}
{"nick":"cslcm","message":"Lope: That's a very broad statement. You can write anything poorly with less code","date":"2019-05-17T11:34:12.947Z","type":"message"}
{"nick":"joepie91","message":"fastman: I don't care whether it's your opinion, they are not welcome here. their only purpose is for you to show off.","date":"2019-05-17T11:34:25.790Z","type":"message"}
{"nick":"Lope","message":"your statement is a broad statement","date":"2019-05-17T11:34:28.753Z","type":"message"}
{"nick":"joepie91","message":"it does not contribute to the channel.","date":"2019-05-17T11:34:39.493Z","type":"message"}
{"nick":"fastman","message":"joepie91: if only I had to \"show off\"","date":"2019-05-17T11:35:00.006Z","type":"message"}
{"nick":"fastman","message":"everyone has it own brain and will decied for him/her self","date":"2019-05-17T11:35:29.641Z","type":"message"}
{"nick":"cslcm","message":"Lope:  If you think that writing something in 100 codes, but contains nested callbacks 10 levels deep, is better than writing something with 1000 lines using readable, followable promise chains, then you're just mistaken","date":"2019-05-17T11:35:35.733Z","type":"message"}
{"nick":"fastman","message":"what's bets for them","date":"2019-05-17T11:35:37.047Z","type":"message"}
{"nick":"cslcm","message":"100 lines, not codes","date":"2019-05-17T11:35:53.598Z","type":"message"}
{"nick":"cslcm","message":"brain still asleep","date":"2019-05-17T11:35:56.568Z","type":"message"}
{"nick":"joepie91","action":"hands cslcm a cup of coffee","date":"2019-05-17T11:36:05.547Z","type":"action"}
{"nick":"Lope","message":"cslcm, I don't nest callbacks too deep. Only maybe 2-3 or occasionally 4 levels.","date":"2019-05-17T11:36:32.432Z","type":"message"}
{"nick":"yakiza","reason":"Quit: WeeChat 2.4","date":"2019-05-17T11:36:52.212Z","type":"quit"}
{"nick":"Lope","message":"I break out into a higher scope, to stay out of callback hell.","date":"2019-05-17T11:36:58.979Z","type":"message"}
{"nick":"Lope","message":"Promises lover tend to think of callback hell as binary thing.","date":"2019-05-17T11:37:14.439Z","type":"message"}
{"nick":"Lope","message":"Like you're either on earth or in callback hell.","date":"2019-05-17T11:37:21.570Z","type":"message"}
{"nick":"Lope","message":"But actually a few levels deep is very managable.","date":"2019-05-17T11:37:32.009Z","type":"message"}
{"nick":"Cabanossi","date":"2019-05-17T11:38:00.913Z","type":"join"}
{"nick":"Lope","message":"Callbacks are not something all programmers are comfortable with, but that's not my problem (yet)","date":"2019-05-17T11:38:13.283Z","type":"message"}
{"nick":"Lope","message":"There is also a Promises hell.","date":"2019-05-17T11:38:26.797Z","type":"message"}
{"nick":"m0ther","date":"2019-05-17T11:38:31.349Z","type":"join"}
{"nick":"Lope","message":"It's not quite as bad as callback hell, but Promises can also be unwieldy.","date":"2019-05-17T11:38:50.659Z","type":"message"}
{"nick":"Lope","message":"It's not like Promises offer a super clean syntax.","date":"2019-05-17T11:39:06.967Z","type":"message"}
{"nick":"Lope","message":"Because they definitely don't.","date":"2019-05-17T11:39:13.925Z","type":"message"}
{"nick":"trevor","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T11:39:48.368Z","type":"quit"}
{"nick":"cslcm","message":"I would just about, bregrudgingly, permit 2 levels","date":"2019-05-17T11:39:59.639Z","type":"message"}
{"nick":"cslcm","message":"any more is just mess","date":"2019-05-17T11:40:02.712Z","type":"message"}
{"nick":"Lope","message":"Concurrency is hard, this is a fact that people need to accept. Being a programmer requires dealing with complexity.","date":"2019-05-17T11:40:04.324Z","type":"message"}
{"nick":"b44","reason":"Remote host closed the connection","date":"2019-05-17T11:40:21.024Z","type":"quit"}
{"nick":"b44","date":"2019-05-17T11:40:53.907Z","type":"join"}
{"nick":"Lope","message":"Preferring promises vs 2 levels of callbacks is purely your personal bias showing.","date":"2019-05-17T11:41:05.581Z","type":"message"}
{"nick":"Lope","message":"There is no objective truth to promises being cleaner at that level.","date":"2019-05-17T11:41:19.010Z","type":"message"}
{"nick":"cslcm","message":"well no, I prefer promises these days because they work with async/await","date":"2019-05-17T11:41:19.184Z","type":"message"}
{"nick":"Lope","message":"Well now we can agree.","date":"2019-05-17T11:41:33.357Z","type":"message"}
{"nick":"cslcm","message":"but before that, promises are just easier to follow","date":"2019-05-17T11:41:34.445Z","type":"message"}
{"nick":"cslcm","message":"you don't have to work out the code flow, it's just obvious","date":"2019-05-17T11:41:45.394Z","type":"message"}
{"nick":"Lope","message":"I think async/await is very appealing.","date":"2019-05-17T11:41:45.526Z","type":"message"}
{"nick":"Lope","message":"I haven't used it yet though.","date":"2019-05-17T11:41:50.055Z","type":"message"}
{"nick":"Lope","message":"That's true.","date":"2019-05-17T11:42:11.613Z","type":"message"}
{"nick":"Lope","message":"I thought your issue was brackets.","date":"2019-05-17T11:42:22.077Z","type":"message"}
{"nick":"cslcm","message":"i will admit i have seen some fucking terrible promise-based code","date":"2019-05-17T11:42:22.243Z","type":"message"}
{"nick":"Lucas_Gray","reason":"Ping timeout: 244 seconds","date":"2019-05-17T11:42:29.355Z","type":"quit"}
{"nick":"cslcm","message":"brackets?","date":"2019-05-17T11:42:35.766Z","type":"message"}
{"nick":"Lope","message":"Because Promises can have a scope shitstorm too.","date":"2019-05-17T11:42:39.493Z","type":"message"}
{"nick":"Lope","message":"Nesting","date":"2019-05-17T11:42:49.074Z","type":"message"}
{"nick":"Lope","message":"Nesting is the correct term.","date":"2019-05-17T11:43:01.038Z","type":"message"}
{"nick":"platonic","date":"2019-05-17T11:43:05.313Z","type":"join"}
{"nick":"Lope","message":"anyway, i must GBTW","date":"2019-05-17T11:43:14.318Z","type":"message"}
{"nick":"Lope","message":"Have fun all.","date":"2019-05-17T11:43:19.158Z","type":"message"}
{"nick":"kakashiA1","date":"2019-05-17T11:45:53.169Z","type":"join"}
{"nick":"mgol","date":"2019-05-17T11:46:16.929Z","type":"join"}
{"nick":"hellauer","date":"2019-05-17T11:46:24.238Z","type":"join"}
{"nick":"platonic","reason":"Ping timeout: 245 seconds","date":"2019-05-17T11:47:08.433Z","type":"quit"}
{"nick":"kakashiA1","reason":"Ping timeout: 258 seconds","date":"2019-05-17T11:50:53.173Z","type":"quit"}
{"nick":"ffx_","reason":"Remote host closed the connection","date":"2019-05-17T11:52:11.717Z","type":"quit"}
{"nick":"ahmed_elgabri","reason":"Ping timeout: 252 seconds","date":"2019-05-17T11:55:01.586Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 258 seconds","date":"2019-05-17T11:55:03.098Z","type":"quit"}
{"nick":"keepLearning512","reason":"Remote host closed the connection","date":"2019-05-17T12:00:59.559Z","type":"quit"}
{"nick":"hemstock","date":"2019-05-17T12:02:57.333Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-05-17T12:04:13.380Z","type":"quit"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T12:06:27.628Z","type":"quit"}
{"nick":"nnyk","reason":"Ping timeout: 245 seconds","date":"2019-05-17T12:06:43.366Z","type":"quit"}
{"nick":"hellauer","reason":"Quit: WeeChat 2.4","date":"2019-05-17T12:06:47.626Z","type":"quit"}
{"nick":"Sharaal","date":"2019-05-17T12:07:07.073Z","type":"join"}
{"nick":"aneon","message":"Can someone please help? I need a product configurator for my Jute bags in order to allow people can select designs, contrasts, custom log and layer the selection on template.","date":"2019-05-17T12:07:13.379Z","type":"message"}
{"nick":"darkSeid","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T12:07:36.868Z","type":"quit"}
{"nick":"aneon","message":"in order to allow people to select designs*","date":"2019-05-17T12:07:53.068Z","type":"message"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T12:08:26.230Z","type":"quit"}
{"nick":"Sharaal","date":"2019-05-17T12:08:42.059Z","type":"join"}
{"nick":"duderonomy","reason":"Ping timeout: 246 seconds","date":"2019-05-17T12:09:09.071Z","type":"quit"}
{"nick":"aneon","message":"custom logo*","date":"2019-05-17T12:10:47.444Z","type":"message"}
{"nick":"aneon","message":"damn, I need some sleep","date":"2019-05-17T12:10:52.521Z","type":"message"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T12:12:17.187Z","type":"quit"}
{"nick":"duderonomy","date":"2019-05-17T12:13:25.869Z","type":"join"}
{"nick":"carif","date":"2019-05-17T12:15:33.724Z","type":"join"}
{"nick":"wonko7","reason":"Quit: See You Space Cowboy..","date":"2019-05-17T12:16:07.700Z","type":"quit"}
{"nick":"tokam","reason":"Ping timeout: 258 seconds","date":"2019-05-17T12:16:34.121Z","type":"quit"}
{"nick":"ragecryx","date":"2019-05-17T12:17:13.307Z","type":"join"}
{"nick":"aLeSD_","date":"2019-05-17T12:18:24.317Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 250 seconds","date":"2019-05-17T12:19:51.711Z","type":"quit"}
{"nick":"aLeSD_","reason":"Remote host closed the connection","date":"2019-05-17T12:20:18.999Z","type":"quit"}
{"nick":"aLeSD_","date":"2019-05-17T12:20:56.364Z","type":"join"}
{"nick":"aLeSD","reason":"Ping timeout: 252 seconds","date":"2019-05-17T12:21:03.714Z","type":"quit"}
{"nick":"sctskw","date":"2019-05-17T12:21:11.316Z","type":"join"}
{"nick":"feelextra","date":"2019-05-17T12:22:07.762Z","type":"join"}
{"nick":"ahmed_elgabri","date":"2019-05-17T12:22:32.360Z","type":"join"}
{"nick":"Vonor_","message":"can anyone help me with \"commander\"? my clie app uses commander and one of the modules I am using (yaml-schema-validator) uses commander too. it seems that their commander settings interfer with mine. calling my app with -h includes their commands and options","date":"2019-05-17T12:22:56.781Z","type":"message"}
{"nick":"GreenJello","date":"2019-05-17T12:22:57.425Z","type":"join"}
{"nick":"electronicmaji","date":"2019-05-17T12:25:06.694Z","type":"join"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T12:25:06.962Z","type":"quit"}
{"nick":"sctskw","reason":"Ping timeout: 248 seconds","date":"2019-05-17T12:26:03.267Z","type":"quit"}
{"nick":"AtumT","date":"2019-05-17T12:26:40.055Z","type":"join"}
{"nick":"KempfCreative","date":"2019-05-17T12:26:51.015Z","type":"join"}
{"nick":"duderonomy","reason":"Ping timeout: 248 seconds","date":"2019-05-17T12:28:11.345Z","type":"quit"}
{"nick":"zfigz","date":"2019-05-17T12:29:39.048Z","type":"join"}
{"nick":"keepLearning512","date":"2019-05-17T12:29:54.166Z","type":"join"}
{"nick":"ahmed_elgabri","reason":"Ping timeout: 258 seconds","date":"2019-05-17T12:29:55.941Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T12:30:02.294Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T12:30:02.367Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T12:30:02.368Z","type":"join"}
{"nick":"CoffeeBreakfast","reason":"Ping timeout: 246 seconds","date":"2019-05-17T12:30:30.674Z","type":"quit"}
{"nick":"ahmed_elgabri","date":"2019-05-17T12:30:53.419Z","type":"join"}
{"nick":"duderonomy","date":"2019-05-17T12:31:01.686Z","type":"join"}
{"nick":"floppydh","reason":"Quit: WeeChat 2.4","date":"2019-05-17T12:31:10.048Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T12:31:55.038Z","type":"quit"}
{"nick":"Lope","message":"What's the simplest way to turn a literal value into a promise?","date":"2019-05-17T12:32:52.494Z","type":"message"}
{"nick":"Lope","message":"ES6 promise.","date":"2019-05-17T12:32:56.693Z","type":"message"}
{"nick":"ferlzc","date":"2019-05-17T12:32:59.857Z","type":"join"}
{"nick":"Kaivo","message":"`Promise.resolve(value)`?","date":"2019-05-17T12:33:10.018Z","type":"message"}
{"nick":"AlolaPikachu","reason":"Ping timeout: 246 seconds","date":"2019-05-17T12:33:38.997Z","type":"quit"}
{"nick":"Lope","message":"Thanks!","date":"2019-05-17T12:34:19.905Z","type":"message"}
{"nick":"keepLearning512","reason":"Ping timeout: 246 seconds","date":"2019-05-17T12:34:21.003Z","type":"quit"}
{"nick":"Sharaal","date":"2019-05-17T12:34:25.415Z","type":"join"}
{"nick":"wonko7","date":"2019-05-17T12:36:30.153Z","type":"join"}
{"nick":"EdwardIII","message":"short and sweet","date":"2019-05-17T12:36:47.451Z","type":"message"}
{"nick":"cslcm","message":"why would you do that though?","date":"2019-05-17T12:39:59.025Z","type":"message"}
{"nick":"piyer","date":"2019-05-17T12:40:49.300Z","type":"join"}
{"nick":"wonko7","reason":"Client Quit","date":"2019-05-17T12:41:21.415Z","type":"quit"}
{"nick":"led_dark_1","date":"2019-05-17T12:42:09.617Z","type":"join"}
{"nick":"dman777","date":"2019-05-17T12:43:36.351Z","type":"join"}
{"nick":"ragecryx","message":"cslcm, you may have a conditional async operation that you want to resolve to some default value on the case it's not started","date":"2019-05-17T12:43:58.686Z","type":"message"}
{"nick":"dman777","message":"I can't use ES2016, but I can ES2015.... what is the best way to compare objects where order does not matter?","date":"2019-05-17T12:44:09.486Z","type":"message"}
{"nick":"cslcm","message":"depends what you mean, do you want to check for the SAME object (i.e, the same instance) or a similar object","date":"2019-05-17T12:45:11.864Z","type":"message"}
{"nick":"dman777","message":"cslcm: I mean object contents","date":"2019-05-17T12:45:33.159Z","type":"message"}
{"nick":"slajax","date":"2019-05-17T12:45:33.232Z","type":"join"}
{"nick":"carif","date":"2019-05-17T12:45:41.494Z","type":"join"}
{"nick":"cslcm","message":"okay, what about depth.. a deep compare?","date":"2019-05-17T12:45:58.467Z","type":"message"}
{"nick":"cslcm","message":"i.e do you also want to check objects contained within that object","date":"2019-05-17T12:46:16.510Z","type":"message"}
{"nick":"dman777","message":"one level","date":"2019-05-17T12:46:58.431Z","type":"message"}
{"nick":"EyePulp","date":"2019-05-17T12:46:58.918Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2019-05-17T12:48:37.088Z","type":"quit"}
{"nick":"is_null","reason":"Ping timeout: 268 seconds","date":"2019-05-17T12:52:59.780Z","type":"quit"}
{"nick":"earende1","reason":"Quit: Connection closed for inactivity","date":"2019-05-17T12:53:31.350Z","type":"quit"}
{"nick":"cslcm","message":"dman777 sorry I got distracted.","date":"2019-05-17T12:55:05.225Z","type":"message"}
{"nick":"marthinal","date":"2019-05-17T12:55:18.167Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2019-05-17T12:55:31.068Z","type":"quit"}
{"nick":"keepLearning512","date":"2019-05-17T12:55:53.402Z","type":"join"}
{"nick":"marthinal","date":"2019-05-17T12:55:57.950Z","type":"join"}
{"nick":"dman777","message":"cslcm: no problem","date":"2019-05-17T12:56:35.731Z","type":"message"}
{"nick":"kapilp","reason":"Quit: Connection closed for inactivity","date":"2019-05-17T12:57:00.028Z","type":"quit"}
{"nick":"keepLear_","date":"2019-05-17T12:57:11.133Z","type":"join"}
{"nick":"dman777","message":"I just found a bug.... when I change a property in this.itemCollectionCopy that change is reflected in this.itemCollectionSource. I used this.itemCollectionCopy = [ ...this.itemCollectionSource ];. Doesn't that make a copy where there is no memory reference between the two objects?","date":"2019-05-17T12:57:39.686Z","type":"message"}
{"nick":"Dbugger","date":"2019-05-17T12:58:15.734Z","type":"join"}
{"nick":"cslcm","message":"no, it's just the same object","date":"2019-05-17T12:58:58.502Z","type":"message"}
{"nick":"ricekrispie","date":"2019-05-17T12:59:09.770Z","type":"join"}
{"nick":"Dbugger","reason":"Client Quit","date":"2019-05-17T12:59:14.582Z","type":"quit"}
{"nick":"Dbugger","date":"2019-05-17T12:59:25.721Z","type":"join"}
{"nick":"cslcm","message":"actually the fastest way to copy an object (assuming it can be serialized into json) is JSON.parse(JSON.stringify(obj)) .. https://stackoverflow.com/a/5344074/1872867","date":"2019-05-17T12:59:58.436Z","type":"message"}
{"nick":"marthinal","reason":"Ping timeout: 258 seconds","date":"2019-05-17T13:00:12.947Z","type":"quit"}
{"nick":"keepLearning512","reason":"Ping timeout: 258 seconds","date":"2019-05-17T13:00:13.020Z","type":"quit"}
{"nick":"cslcm","message":"assuming that's true","date":"2019-05-17T13:00:13.584Z","type":"message"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T13:01:05.258Z","type":"quit"}
{"nick":"dman777","message":"cslcm: sorry, I mean this.itemCollectionCopy and this.itemCollectionSource are arrays of objects.","date":"2019-05-17T13:02:26.756Z","type":"message"}
{"nick":"keepLearning512","date":"2019-05-17T13:02:38.541Z","type":"join"}
{"nick":"R0b0t-X","date":"2019-05-17T13:02:42.698Z","type":"join"}
{"nick":"Roughy","date":"2019-05-17T13:02:49.668Z","type":"join"}
{"nick":"Fusl","reason":"Ping timeout: 256 seconds","date":"2019-05-17T13:05:07.816Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T13:05:37.151Z","type":"quit"}
{"nick":"Sharaal","date":"2019-05-17T13:05:47.428Z","type":"join"}
{"nick":"keepLear_","reason":"Ping timeout: 268 seconds","date":"2019-05-17T13:05:56.770Z","type":"quit"}
{"nick":"mgol","date":"2019-05-17T13:06:11.946Z","type":"join"}
{"nick":"hemstock","reason":"Remote host closed the connection","date":"2019-05-17T13:08:11.279Z","type":"quit"}
{"nick":"hemstock","date":"2019-05-17T13:08:23.432Z","type":"join"}
{"nick":"justmondris","date":"2019-05-17T13:08:35.833Z","type":"join"}
{"nick":"dman777","message":"the rest opertator for objects is es2016. Is that the same for the spread operator in objects also?","date":"2019-05-17T13:08:36.726Z","type":"message"}
{"nick":"justmondris","message":"can express manipulate a cookie created by  javascript on the browser?","date":"2019-05-17T13:09:49.263Z","type":"message"}
{"nick":"Fusl","date":"2019-05-17T13:10:17.892Z","type":"join"}
{"nick":"mnemonicj","reason":"Ping timeout: 246 seconds","date":"2019-05-17T13:12:30.053Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 255 seconds","date":"2019-05-17T13:14:40.503Z","type":"quit"}
{"nick":"Lope","message":"It seems like ES6 promises don't propagate?","date":"2019-05-17T13:14:58.590Z","type":"message"}
{"nick":"mnemonicj","date":"2019-05-17T13:15:02.415Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2019-05-17T13:15:11.584Z","type":"quit"}
{"nick":"Lope","message":"I mean their rejections","date":"2019-05-17T13:15:23.521Z","type":"message"}
{"nick":"Lope","message":"Promise.all( newCollections.map(newCollectionName => db.collection(newCollectionName).drop({}) )).catch(err => console.log(err));","date":"2019-05-17T13:16:42.862Z","type":"message"}
{"nick":"Lope","message":"Here I'm purposefully creating a crash because the collection names that I'm removing do not exist.","date":"2019-05-17T13:17:11.822Z","type":"message"}
{"nick":"joepie91","message":"propagation semantics are the same as any other promise implementation","date":"2019-05-17T13:17:33.126Z","type":"message"}
{"nick":"Lope","message":"But I get UnhandledPromiseRejectionWarning","date":"2019-05-17T13:17:33.212Z","type":"message"}
{"nick":"joepie91","message":"where does it originate?","date":"2019-05-17T13:17:45.878Z","type":"message"}
{"nick":"slajax","reason":"Ping timeout: 258 seconds","date":"2019-05-17T13:17:54.137Z","type":"quit"}
{"nick":"Lope","message":"I thought if I don't catch it here, it'll bubble to the catch above?","date":"2019-05-17T13:17:54.970Z","type":"message"}
{"nick":"Lope","message":"the drop is what fails","date":"2019-05-17T13:18:12.608Z","type":"message"}
{"nick":"Lope","message":"But the catch is on the all","date":"2019-05-17T13:18:18.397Z","type":"message"}
{"nick":"Lope","message":"This is just a contrived example.","date":"2019-05-17T13:18:26.446Z","type":"message"}
{"nick":"joepie91","message":"the code you pasted should work (for some value of 'work')","date":"2019-05-17T13:18:57.185Z","type":"message"}
{"nick":"Lope","message":"If I put a catch on the drop, it's happy.","date":"2019-05-17T13:18:58.882Z","type":"message"}
{"nick":"joepie91","message":"hence my question where it originates","date":"2019-05-17T13:19:01.353Z","type":"message"}
{"nick":"joepie91","message":"hm","date":"2019-05-17T13:19:02.862Z","type":"message"}
{"nick":"Lope","message":"Oh, my bad","date":"2019-05-17T13:19:25.608Z","type":"message"}
{"nick":"Lope","message":"Now it's working...","date":"2019-05-17T13:19:28.720Z","type":"message"}
{"nick":"Lope","message":"I guess I had a bug in my non-simplified console.log.","date":"2019-05-17T13:19:46.033Z","type":"message"}
{"nick":"Lope","message":"One thing I find odd about mongodb's error message, is it says ns not found, when you try delete a collection that doesn't exist.","date":"2019-05-17T13:21:28.808Z","type":"message"}
{"nick":"Lope","message":"But it doesn't show you the ns that was specified.","date":"2019-05-17T13:21:37.078Z","type":"message"}
{"nick":"Lope","message":"Which necessitates putting a catch on the drop, so I can console.log the name that the drop failed for.","date":"2019-05-17T13:22:09.119Z","type":"message"}
{"nick":"Lope","message":"The error doesn't even say drop","date":"2019-05-17T13:22:37.497Z","type":"message"}
{"nick":"Lope","message":"It's very odd indeed.","date":"2019-05-17T13:22:41.268Z","type":"message"}
{"nick":"GreenJello","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2019-05-17T13:23:11.025Z","type":"quit"}
{"nick":"tokam","date":"2019-05-17T13:23:11.463Z","type":"join"}
{"nick":"vijay","date":"2019-05-17T13:23:29.205Z","type":"join"}
{"nick":"Lope","message":"\"ns not found\" no indication what NS it was, what operation, and the stack trace doesn't even show the calling line of my JS code where the error originated from.","date":"2019-05-17T13:23:36.873Z","type":"message"}
{"nick":"Lope","message":"\"that caused the error\" I should say.","date":"2019-05-17T13:23:53.394Z","type":"message"}
{"nick":"Lope","message":"I'm just trying out promises here.","date":"2019-05-17T13:24:29.435Z","type":"message"}
{"nick":"Lope","message":"But it seems to me like if you don't catch every promise, you're fucked.","date":"2019-05-17T13:24:46.026Z","type":"message"}
{"nick":"Lope","message":"Which negates some of the argument that promises make error handling easier than callbacks.","date":"2019-05-17T13:25:21.113Z","type":"message"}
{"nick":"Lope","message":"At least if you do if (err) throw err; you can see where your crash came from.","date":"2019-05-17T13:25:38.465Z","type":"message"}
{"nick":"marthinal","date":"2019-05-17T13:25:41.009Z","type":"join"}
{"nick":"dadinn","reason":"Ping timeout: 252 seconds","date":"2019-05-17T13:26:30.392Z","type":"quit"}
{"nick":"Lope","message":"By easier I mean that you can catch inner promise errors with an outer promise catch.","date":"2019-05-17T13:26:40.509Z","type":"message"}
{"nick":"mven_","reason":"Ping timeout: 245 seconds","date":"2019-05-17T13:27:08.453Z","type":"quit"}
{"nick":"kakashiA1","date":"2019-05-17T13:27:34.027Z","type":"join"}
{"nick":"leatherface416","date":"2019-05-17T13:28:29.243Z","type":"join"}
{"nick":"mat001","date":"2019-05-17T13:29:17.047Z","type":"join"}
{"nick":"prometh","date":"2019-05-17T13:29:53.390Z","type":"join"}
{"nick":"alexge50","reason":"Ping timeout: 246 seconds","date":"2019-05-17T13:30:00.103Z","type":"quit"}
{"nick":"Arcaelyx","date":"2019-05-17T13:32:28.740Z","type":"join"}
{"nick":"killown","message":"what is the most effective way to click in this <button data-submit=\"click\" class=\"btn yes\">Ok</button>  ?","date":"2019-05-17T13:36:47.017Z","type":"message"}
{"nick":"dadinn","date":"2019-05-17T13:37:03.417Z","type":"join"}
{"nick":"carif","date":"2019-05-17T13:40:25.932Z","type":"join"}
{"nick":"Lope","message":"joepie91, I've got a race condition in my normal promises code :/","date":"2019-05-17T13:40:54.073Z","type":"message"}
{"nick":"vijay","reason":"Ping timeout: 256 seconds","date":"2019-05-17T13:41:27.189Z","type":"quit"}
{"nick":"keepLearning512","reason":"Remote host closed the connection","date":"2019-05-17T13:42:01.992Z","type":"quit"}
{"nick":"alexge50","date":"2019-05-17T13:43:03.437Z","type":"join"}
{"nick":"keepLearning512","date":"2019-05-17T13:43:08.467Z","type":"join"}
{"nick":"Lope","message":"https://www.hastebin.com/yisidezodo.js","date":"2019-05-17T13:43:25.145Z","type":"message"}
{"nick":"Lope","message":"can anyone see why the one catch is completing after Promise.all ?","date":"2019-05-17T13:43:53.613Z","type":"message"}
{"nick":"platonic","date":"2019-05-17T13:44:30.362Z","type":"join"}
{"nick":"Lope","message":"oh, actually I think it's normal. Promise.all is supposed to fail as early as possible to execution can continue?","date":"2019-05-17T13:44:59.684Z","type":"message"}
{"nick":"keepLearning512","reason":"Read error: Connection reset by peer","date":"2019-05-17T13:45:45.138Z","type":"quit"}
{"nick":"Lope","message":"Yep, I see it's normal.","date":"2019-05-17T13:46:17.866Z","type":"message"}
{"nick":"platonic","reason":"Ping timeout: 252 seconds","date":"2019-05-17T13:48:52.405Z","type":"quit"}
{"nick":"Sharaal","reason":"Remote host closed the connection","date":"2019-05-17T13:52:02.194Z","type":"quit"}
{"nick":"plutoniix","date":"2019-05-17T13:59:30.923Z","type":"join"}
{"nick":"kerrang","date":"2019-05-17T13:59:46.558Z","type":"join"}
{"nick":"X-51","date":"2019-05-17T14:00:41.839Z","type":"join"}
{"nick":"R0b0t-X","reason":"Disconnected by services","date":"2019-05-17T14:00:41.912Z","type":"quit"}
{"nick":"GreenJello","date":"2019-05-17T14:02:19.044Z","type":"join"}
{"nick":"greggerz","date":"2019-05-17T14:02:19.333Z","type":"join"}
{"nick":"apparition","date":"2019-05-17T14:05:20.373Z","type":"join"}
{"nick":"mven","date":"2019-05-17T14:05:34.816Z","type":"join"}
{"nick":"bodz","date":"2019-05-17T14:06:01.506Z","type":"join"}
{"nick":"wonko7","date":"2019-05-17T14:06:28.108Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 258 seconds","date":"2019-05-17T14:06:31.978Z","type":"quit"}
{"nick":"hollusion","date":"2019-05-17T14:07:13.837Z","type":"join"}
{"nick":"user1452","reason":"Quit: Page closed","date":"2019-05-17T14:09:15.988Z","type":"quit"}
{"nick":"mven","reason":"Ping timeout: 258 seconds","date":"2019-05-17T14:09:58.921Z","type":"quit"}
{"nick":"nodz","reason":"Ping timeout: 268 seconds","date":"2019-05-17T14:10:04.838Z","type":"quit"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T14:10:05.303Z","type":"quit"}
{"nick":"Nicmavr","date":"2019-05-17T14:11:37.445Z","type":"join"}
{"nick":"Kestrel-029","reason":"Ping timeout: 245 seconds","date":"2019-05-17T14:11:43.555Z","type":"quit"}
{"nick":"alem0lars_","reason":"Remote host closed the connection","date":"2019-05-17T14:15:14.387Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T14:15:15.053Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T14:15:15.140Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T14:15:15.213Z","type":"join"}
{"nick":"sterns","reason":"Read error: Connection reset by peer","date":"2019-05-17T14:15:57.991Z","type":"quit"}
{"nick":"sterns","date":"2019-05-17T14:16:44.533Z","type":"join"}
{"nick":"keepLearning512","date":"2019-05-17T14:17:59.799Z","type":"join"}
{"nick":"mven","date":"2019-05-17T14:19:05.855Z","type":"join"}
{"nick":"mven","reason":"Excess Flood","date":"2019-05-17T14:19:07.623Z","type":"quit"}
{"nick":"carif","date":"2019-05-17T14:19:28.093Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T14:21:14.249Z","type":"quit"}
{"nick":"X-51","reason":"Read error: Connection reset by peer","date":"2019-05-17T14:21:15.896Z","type":"quit"}
{"nick":"zacts","date":"2019-05-17T14:21:17.374Z","type":"join"}
{"nick":"abbiya","date":"2019-05-17T14:21:20.073Z","type":"part"}
{"nick":"sctskw","date":"2019-05-17T14:22:02.084Z","type":"join"}
{"nick":"R0b0t-X","date":"2019-05-17T14:22:06.300Z","type":"join"}
{"nick":"mgol","date":"2019-05-17T14:22:34.412Z","type":"join"}
{"nick":"donst","date":"2019-05-17T14:23:23.115Z","type":"part"}
{"nick":"halfhalo","reason":"Read error: Connection reset by peer","date":"2019-05-17T14:23:42.000Z","type":"quit"}
{"nick":"waveframe","date":"2019-05-17T14:24:24.965Z","type":"join"}
{"nick":"Kestrel-029","date":"2019-05-17T14:26:33.452Z","type":"join"}
{"nick":"sctskw","reason":"Ping timeout: 246 seconds","date":"2019-05-17T14:26:42.057Z","type":"quit"}
{"nick":"Nicmavr","reason":"Ping timeout: 245 seconds","date":"2019-05-17T14:27:08.415Z","type":"quit"}
{"nick":"lucid-lullaby","date":"2019-05-17T14:27:25.785Z","type":"join"}
{"nick":"Fumler","reason":"Quit: Ping timeout (120 seconds)","date":"2019-05-17T14:31:15.618Z","type":"quit"}
{"nick":"halfhalo","date":"2019-05-17T14:31:26.485Z","type":"join"}
{"nick":"zacts","reason":"Quit: WeeChat 2.4","date":"2019-05-17T14:32:31.149Z","type":"quit"}
{"nick":"duderonomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T14:32:40.666Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 246 seconds","date":"2019-05-17T14:33:21.068Z","type":"quit"}
{"nick":"jottr","reason":"Quit: WeeChat 2.4","date":"2019-05-17T14:34:57.000Z","type":"quit"}
{"nick":"zacts","date":"2019-05-17T14:36:08.663Z","type":"join"}
{"nick":"AlolaPikachu","date":"2019-05-17T14:36:21.424Z","type":"join"}
{"nick":"carif","date":"2019-05-17T14:40:56.422Z","type":"join"}
{"nick":"powerbit","reason":"Read error: Connection reset by peer","date":"2019-05-17T14:43:08.616Z","type":"quit"}
{"nick":"justmondris","reason":"Remote host closed the connection","date":"2019-05-17T14:44:23.384Z","type":"quit"}
{"nick":"platonic","date":"2019-05-17T14:45:31.316Z","type":"join"}
{"nick":"aLeSD__","date":"2019-05-17T14:47:15.068Z","type":"join"}
{"nick":"heyitsrama","date":"2019-05-17T14:48:26.918Z","type":"join"}
{"nick":"aLeSD_","reason":"Ping timeout: 252 seconds","date":"2019-05-17T14:49:44.413Z","type":"quit"}
{"nick":"platonic","reason":"Ping timeout: 246 seconds","date":"2019-05-17T14:49:55.340Z","type":"quit"}
{"nick":"R0b0t-X","reason":"Read error: Connection reset by peer","date":"2019-05-17T14:50:13.710Z","type":"quit"}
{"nick":"R0b0t-X","date":"2019-05-17T14:50:31.075Z","type":"join"}
{"nick":"wonko7","reason":"Quit: See You Space Cowboy..","date":"2019-05-17T14:51:42.583Z","type":"quit"}
{"nick":"piyer","date":"2019-05-17T14:51:51.750Z","type":"join"}
{"nick":"rendar","date":"2019-05-17T14:53:25.082Z","type":"join"}
{"nick":"nodz","date":"2019-05-17T14:56:56.490Z","type":"join"}
{"nick":"s00pcan","reason":"Ping timeout: 268 seconds","date":"2019-05-17T14:56:56.750Z","type":"quit"}
{"nick":"s00pcan","date":"2019-05-17T14:58:35.413Z","type":"join"}
{"nick":"spillere","message":"https://www.irccloud.com/pastebin/EUyMFJn1/","date":"2019-05-17T14:58:42.830Z","type":"message"}
{"nick":"spillere","message":"sorry for the snippet","date":"2019-05-17T14:59:03.594Z","type":"message"}
{"nick":"carif","reason":"Ping timeout: 255 seconds","date":"2019-05-17T14:59:04.427Z","type":"quit"}
{"nick":"vatican__","date":"2019-05-17T14:59:07.961Z","type":"join"}
{"nick":"bodz","reason":"Ping timeout: 258 seconds","date":"2019-05-17T14:59:26.050Z","type":"quit"}
{"nick":"spillere","message":"trying to match this https://regexr.com/4e6dn with.  const rx = /(, https:\\/\\/)([^\\.]+)(.previews.dropboxusercontent.com\\/p\\/thumb\\/)([^\\/]+)(\\/p.jpeg\\\\)/; const extractPhotos = data => data.match(new RegExp(rx, 'g'));","date":"2019-05-17T14:59:34.816Z","type":"message"}
{"nick":"spillere","message":"but then when I try to parse the data which contains that string it only return null","date":"2019-05-17T14:59:55.701Z","type":"message"}
{"nick":"spillere","message":"any idea what could be wrong?","date":"2019-05-17T15:00:04.279Z","type":"message"}
{"nick":"_till_","date":"2019-05-17T15:01:05.868Z","type":"join"}
{"nick":"_till_","reason":"Client Quit","date":"2019-05-17T15:01:36.593Z","type":"quit"}
{"nick":"nodz","reason":"Ping timeout: 246 seconds","date":"2019-05-17T15:01:49.397Z","type":"quit"}
{"nick":"GreenJello","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2019-05-17T15:02:55.444Z","type":"quit"}
{"nick":"setpill","reason":"Quit: o/","date":"2019-05-17T15:03:06.275Z","type":"quit"}
{"nick":"goodenough","date":"2019-05-17T15:03:06.449Z","type":"join"}
{"nick":"keepLearning512","reason":"Remote host closed the connection","date":"2019-05-17T15:03:34.012Z","type":"quit"}
{"nick":"zeds","date":"2019-05-17T15:03:43.506Z","type":"join"}
{"nick":"zeds","date":"2019-05-17T15:03:55.363Z","type":"part"}
{"nick":"keith_mi_","date":"2019-05-17T15:05:08.624Z","type":"join"}
{"nick":"Noti","reason":"Quit: Konversation terminated!","date":"2019-05-17T15:05:35.220Z","type":"quit"}
{"nick":"mantid","date":"2019-05-17T15:06:29.860Z","type":"join"}
{"nick":"gambl0re","date":"2019-05-17T15:08:11.809Z","type":"join"}
{"nick":"Kkiro","reason":"Read error: Connection reset by peer","date":"2019-05-17T15:10:06.356Z","type":"quit"}
{"nick":"digitalnomad","date":"2019-05-17T15:10:09.990Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-17T15:11:34.936Z","type":"quit"}
{"nick":"hollusion","reason":"Remote host closed the connection","date":"2019-05-17T15:12:01.036Z","type":"quit"}
{"nick":"tombusby","reason":"Remote host closed the connection","date":"2019-05-17T15:14:30.493Z","type":"quit"}
{"nick":"gambl0re","reason":"Ping timeout: 250 seconds","date":"2019-05-17T15:14:55.682Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T15:15:17.265Z","type":"join"}
{"nick":"Kkiro","reason":"Changing host","date":"2019-05-17T15:15:17.563Z","type":"quit"}
{"nick":"Kkiro","date":"2019-05-17T15:15:17.563Z","type":"join"}
{"nick":"slajax","date":"2019-05-17T15:15:26.353Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2019-05-17T15:15:28.338Z","type":"quit"}
{"nick":"Lucas_Gray","date":"2019-05-17T15:15:51.937Z","type":"join"}
{"nick":"sauvin","reason":"Ping timeout: 245 seconds","date":"2019-05-17T15:15:53.656Z","type":"quit"}
{"nick":"piyer","date":"2019-05-17T15:16:30.908Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2019-05-17T15:16:36.227Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2019-05-17T15:16:42.517Z","type":"quit"}
{"nick":"piyer","date":"2019-05-17T15:16:52.117Z","type":"join"}
{"nick":"keepLearning512","date":"2019-05-17T15:17:39.099Z","type":"join"}
{"nick":"mantid","reason":"Ping timeout: 268 seconds","date":"2019-05-17T15:17:54.731Z","type":"quit"}
{"nick":"AlolaPikachu","reason":"Ping timeout: 255 seconds","date":"2019-05-17T15:19:46.460Z","type":"quit"}
{"nick":"Lope","message":"this works","date":"2019-05-17T15:20:42.108Z","type":"message"}
{"nick":"Lope","message":"console.log(\"db.collection('products-new').find({}).count()\", await db.collection('products-new').find({}).count())","date":"2019-05-17T15:20:43.350Z","type":"message"}
{"nick":"Lope","message":"but for some reason (await db.collection(newCollectionName).find({}).count() > 0 ? 'have' : \"don't have\" ) is a problem","date":"2019-05-17T15:21:36.482Z","type":"message"}
{"nick":"Lope","message":"SyntaxError: Unexpected identifier \"db\"","date":"2019-05-17T15:22:12.570Z","type":"message"}
{"nick":"Lope","message":"If I wrap the db expression in brackets it doesn't help","date":"2019-05-17T15:22:31.252Z","type":"message"}
{"nick":"KristjanRobam121","date":"2019-05-17T15:22:37.435Z","type":"join"}
{"nick":"linux_dr","date":"2019-05-17T15:22:54.706Z","type":"join"}
{"nick":"carif","date":"2019-05-17T15:23:16.356Z","type":"join"}
{"nick":"Lope","message":"ohhh it's because i didn't label the immediate containing function async","date":"2019-05-17T15:23:39.666Z","type":"message"}
{"nick":"Lope","message":"But the parent is","date":"2019-05-17T15:23:44.232Z","type":"message"}
{"nick":"Rougher","date":"2019-05-17T15:23:54.416Z","type":"join"}
{"nick":"Roughy","reason":"Disconnected by services","date":"2019-05-17T15:23:54.489Z","type":"quit"}
{"nick":"Lope","message":"I thought it might be inherited","date":"2019-05-17T15:23:55.528Z","type":"message"}
{"nick":"sauvin","date":"2019-05-17T15:27:48.245Z","type":"join"}
{"nick":"KempfCreative1","date":"2019-05-17T15:27:49.378Z","type":"join"}
{"nick":"shush","date":"2019-05-17T15:27:59.981Z","type":"join"}
{"nick":"DeltaHeavy","date":"2019-05-17T15:28:10.812Z","type":"join"}
{"nick":"ahmed_elgabri","reason":"Ping timeout: 268 seconds","date":"2019-05-17T15:28:23.769Z","type":"quit"}
{"nick":"groom1","reason":"Quit: Leaving.","date":"2019-05-17T15:29:36.645Z","type":"quit"}
{"nick":"KempfCreative","reason":"Ping timeout: 246 seconds","date":"2019-05-17T15:29:42.066Z","type":"quit"}
{"nick":"KempfCreative1","new_nick":"KempfCreative","date":"2019-05-17T15:29:42.312Z","type":"nick"}
{"nick":"sauvin","reason":"Excess Flood","date":"2019-05-17T15:31:49.005Z","type":"quit"}
{"nick":"sauvin","date":"2019-05-17T15:32:17.314Z","type":"join"}
{"nick":"shush","reason":"Ping timeout: 264 seconds","date":"2019-05-17T15:32:28.049Z","type":"quit"}
{"nick":"mantid","date":"2019-05-17T15:32:28.889Z","type":"join"}
{"nick":"lsyoyom","reason":"Ping timeout: 255 seconds","date":"2019-05-17T15:34:10.489Z","type":"quit"}
{"nick":"digitalnomad","reason":"Ping timeout: 258 seconds","date":"2019-05-17T15:35:04.982Z","type":"quit"}
{"nick":"sauvin","reason":"Max SendQ exceeded","date":"2019-05-17T15:35:40.319Z","type":"quit"}
{"nick":"jlipps","date":"2019-05-17T15:36:24.363Z","type":"join"}
{"nick":"mantid","reason":"Ping timeout: 250 seconds","date":"2019-05-17T15:37:01.693Z","type":"quit"}
{"nick":"groom","date":"2019-05-17T15:38:05.035Z","type":"join"}
{"nick":"groom","reason":"Client Quit","date":"2019-05-17T15:38:24.347Z","type":"quit"}
{"nick":"zacts","reason":"Quit: WeeChat 2.4","date":"2019-05-17T15:40:07.992Z","type":"quit"}
{"nick":"wsieroci","date":"2019-05-17T15:41:32.503Z","type":"join"}
{"nick":"Rougher","reason":"Quit: Meadow Fresh milk","date":"2019-05-17T15:41:49.435Z","type":"quit"}
{"nick":"Roughy","date":"2019-05-17T15:42:10.456Z","type":"join"}
{"nick":"groom","date":"2019-05-17T15:43:14.958Z","type":"join"}
{"nick":"justmondris","date":"2019-05-17T15:43:52.349Z","type":"join"}
{"nick":"Lucas_Gray","reason":"Ping timeout: 258 seconds","date":"2019-05-17T15:44:17.138Z","type":"quit"}
{"nick":"ricekrispie2","date":"2019-05-17T15:44:31.953Z","type":"join"}
{"nick":"bamdads","date":"2019-05-17T15:44:35.100Z","type":"join"}
{"nick":"edge563","date":"2019-05-17T15:44:46.937Z","type":"join"}
{"nick":"ed209","reason":"Ping timeout: 246 seconds","date":"2019-05-17T15:45:48.068Z","type":"quit"}
{"nick":"platonic","date":"2019-05-17T15:46:23.065Z","type":"join"}
{"nick":"justmondris","message":"hello, i used ejs and node to render my ecommerce  viewproduct page and the page contains the title, name , description and image of the product. how can i get  the value of these variables back to  send them in a new request to the server","date":"2019-05-17T15:46:51.086Z","type":"message"}
{"nick":"justmondris","message":"inorder to add the item to the cart when the use clicks on add to cart?","date":"2019-05-17T15:47:16.247Z","type":"message"}
{"nick":"lsyoyom","date":"2019-05-17T15:47:59.043Z","type":"join"}
{"nick":"cslcm","message":"it's kinda impossible to answer a question like that","date":"2019-05-17T15:48:22.553Z","type":"message"}
{"nick":"Nes173","date":"2019-05-17T15:48:31.864Z","type":"join"}
{"nick":"ricekrispie","reason":"Ping timeout: 268 seconds","date":"2019-05-17T15:48:44.858Z","type":"quit"}
{"nick":"cslcm","message":"without any knowledge of your code or environment","date":"2019-05-17T15:48:56.173Z","type":"message"}
{"nick":"slajax","reason":"Ping timeout: 244 seconds","date":"2019-05-17T15:48:56.361Z","type":"quit"}
{"nick":"ed209","date":"2019-05-17T15:49:00.044Z","type":"join"}
{"nick":"adgtl","date":"2019-05-17T15:49:48.645Z","type":"join"}
{"nick":"carif","reason":"Ping timeout: 246 seconds","date":"2019-05-17T15:50:07.328Z","type":"quit"}
{"nick":"Gustavo6046","date":"2019-05-17T15:50:29.038Z","type":"join"}
{"nick":"platonic","reason":"Ping timeout: 264 seconds","date":"2019-05-17T15:51:04.038Z","type":"quit"}
{"nick":"KristjanRobam121","reason":"Quit: Leaving","date":"2019-05-17T15:51:20.216Z","type":"quit"}
{"nick":"wonko7","date":"2019-05-17T15:51:46.742Z","type":"join"}
{"nick":"mikoo","date":"2019-05-17T15:51:51.223Z","type":"join"}
{"nick":"vatican__","reason":"Remote host closed the connection","date":"2019-05-17T15:52:32.898Z","type":"quit"}
{"nick":"mikoo","date":"2019-05-17T15:52:41.209Z","type":"part"}
{"nick":"vatican__","date":"2019-05-17T15:53:04.426Z","type":"join"}
{"nick":"Ergo","reason":"Remote host closed the connection","date":"2019-05-17T15:53:36.773Z","type":"quit"}
{"nick":"aneon","reason":"Quit: Konversation terminated!","date":"2019-05-17T15:53:46.828Z","type":"quit"}
{"nick":"sauvin","date":"2019-05-17T15:53:48.449Z","type":"join"}
{"nick":"sqram","reason":"Quit: WeeChat 2.4","date":"2019-05-17T15:57:22.869Z","type":"quit"}
{"nick":"TikityTik","date":"2019-05-17T15:57:49.062Z","type":"join"}
{"nick":"carif","date":"2019-05-17T15:58:11.827Z","type":"join"}
