{"nick":"goodenough","reason":"Remote host closed the connection","date":"2018-08-07T00:01:19.594Z","type":"quit"}
{"nick":"DeltaHeavy","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T00:05:39.072Z","type":"quit"}
{"nick":"eckhardt_","date":"2018-08-07T00:10:49.272Z","type":"join"}
{"nick":"TinkerT","reason":"Read error: Connection reset by peer","date":"2018-08-07T00:14:18.333Z","type":"quit"}
{"nick":"TinkerT","date":"2018-08-07T00:15:58.870Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T00:18:28.409Z","type":"join"}
{"nick":"wsieroci","date":"2018-08-07T00:18:39.880Z","type":"join"}
{"nick":"darkSeid","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T00:19:04.111Z","type":"quit"}
{"nick":"Laptop_mini","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T00:22:40.744Z","type":"quit"}
{"nick":"altab","date":"2018-08-07T00:22:56.349Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 248 seconds","date":"2018-08-07T00:22:58.028Z","type":"quit"}
{"nick":"ndrwknx","date":"2018-08-07T00:23:07.507Z","type":"join"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T00:23:30.299Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T00:27:06.332Z","type":"join"}
{"nick":"Laxtour","date":"2018-08-07T00:28:56.782Z","type":"join"}
{"nick":"kjartan","reason":"Read error: Connection reset by peer","date":"2018-08-07T00:31:03.875Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 248 seconds","date":"2018-08-07T00:32:01.410Z","type":"quit"}
{"nick":"Laxtour","reason":"Client Quit","date":"2018-08-07T00:32:11.087Z","type":"quit"}
{"nick":"tymczenko","reason":"Remote host closed the connection","date":"2018-08-07T00:32:17.337Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T00:32:29.451Z","type":"join"}
{"nick":"renlo","reason":"Ping timeout: 256 seconds","date":"2018-08-07T00:32:34.344Z","type":"quit"}
{"nick":"on3pk","date":"2018-08-07T00:32:46.996Z","type":"join"}
{"nick":"on3pk","message":"Is there something like a threadpool in node where I can throw a bunch of tasks that I don't really want to do synchronously?","date":"2018-08-07T00:35:02.232Z","type":"message"}
{"nick":"kjartan","date":"2018-08-07T00:35:10.137Z","type":"join"}
{"nick":"zsoc","message":"on3pk: what kind of tasks?","date":"2018-08-07T00:35:14.951Z","type":"message"}
{"nick":"theWhisper_","date":"2018-08-07T00:35:27.099Z","type":"join"}
{"nick":"zsoc","message":"The opposite if 'synchronously' in node, ergonomically, is 'asynchronously'","date":"2018-08-07T00:35:56.478Z","type":"message"}
{"nick":"zsoc","message":"You don't generally need to worry with threads","date":"2018-08-07T00:36:14.667Z","type":"message"}
{"nick":"on3pk","message":"zsoc, comparisons.  But how the app is designed is such that a controller would go through an array and call a handleUpdate() method in each of the objects.  I'd like the handleUpdate() call to be it's own deal","date":"2018-08-07T00:37:24.961Z","type":"message"}
{"nick":"zsoc","message":"what are the objects? and what is \"handleUpdate\"? that sounds like something asynchronous, eg i/o from a database, remote endpoint, or filesystem","date":"2018-08-07T00:38:03.823Z","type":"message"}
{"nick":"zsoc","message":"In which case it's already asynchronously and you're welcome to continue with your response without waiting for those updates to finish (if that's what you'd like)","date":"2018-08-07T00:38:29.945Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T00:39:05.461Z","type":"quit"}
{"nick":"leolrrj","date":"2018-08-07T00:39:35.666Z","type":"join"}
{"nick":"on3pk","message":"I'm trying to do a pub/sub type of thing.  So the data comes in from the internets and gets sent to each of the subscribers (which are the objects in the array) through the handleUpdate method","date":"2018-08-07T00:40:46.483Z","type":"message"}
{"nick":"randymarsh9","date":"2018-08-07T00:41:20.735Z","type":"join"}
{"nick":"zsoc","message":"via... an *in process* mechanism? like an EventEmitter? Or via something like Redis, and being subscribed by other processes?","date":"2018-08-07T00:41:26.622Z","type":"message"}
{"nick":"on3pk","message":"Yeah, in process.","date":"2018-08-07T00:41:50.854Z","type":"message"}
{"nick":"on3pk","message":"Does node have a built in way to handle events?","date":"2018-08-07T00:42:00.459Z","type":"message"}
{"nick":"zsoc","message":"um yes ofc.. the EventEmitter object","date":"2018-08-07T00:42:15.666Z","type":"message"}
{"nick":"on3pk","message":"'cause I didn't even look for that, heh...","date":"2018-08-07T00:42:17.110Z","type":"message"}
{"nick":"zsoc","message":"Things like Streams are built over it","date":"2018-08-07T00:42:24.264Z","type":"message"}
{"nick":"zsoc","message":"I mean, if you've already created you own Thing that does this.. you can make the sub fns asynchronous by using setImmediate() (\"do this at the beginning of the next event loop\") or process.nextTick() (\"do this as soon as the current stack context is clear\"","date":"2018-08-07T00:43:40.084Z","type":"message"}
{"nick":"gdibass","date":"2018-08-07T00:44:02.656Z","type":"join"}
{"nick":"zsoc","message":"But are so many things happening here synchronously that it's actually delaying your response? Computers are pretty fast.","date":"2018-08-07T00:44:06.850Z","type":"message"}
{"nick":"zsoc","message":"on3pk: EventEmitter docs, btw https://nodejs.org/api/events.html","date":"2018-08-07T00:44:52.881Z","type":"message"}
{"nick":"on3pk","message":"probably not right now, no...","date":"2018-08-07T00:45:00.158Z","type":"message"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-08-07T00:45:01.978Z","type":"quit"}
{"nick":"zsoc","message":"It might be good to have some idea of the future.. but i wouldn't go way out of yourself unless you forsee having to deal with some computationally intensive stuff","date":"2018-08-07T00:45:43.749Z","type":"message"}
{"nick":"zsoc","message":"But yeah it's as simple as using setImmediate to defer it until the next loop (or i guess wrap it in a promise?)","date":"2018-08-07T00:46:15.427Z","type":"message"}
{"nick":"gdibass","reason":"Client Quit","date":"2018-08-07T00:46:41.449Z","type":"quit"}
{"nick":"zsoc","message":"If you're just worried about *general CPU* usage, more than just completing a task before responding to the request... that's a bit of a different story","date":"2018-08-07T00:46:41.604Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T00:47:06.746Z","type":"join"}
{"nick":"on3pk","message":"I don't know how fast relevant data would be coming in, so that's the concern.","date":"2018-08-07T00:47:08.552Z","type":"message"}
{"nick":"leolrrj","reason":"Ping timeout: 260 seconds","date":"2018-08-07T00:47:29.115Z","type":"quit"}
{"nick":"on3pk","message":"So if it turns out data is coming in very quickly - multiple times per second - I wouldn't want to do much synchronously...","date":"2018-08-07T00:47:41.623Z","type":"message"}
{"nick":"zsoc","message":"computers are really fast :) maybe try to test the upper limits first, you might be surprised.  'multiple times per second' isn't saying much, lets say 3 times a second.. so once every 333ms~... that means the computation would have to take longer than 300ms~ or so before they would start bumping into each other","date":"2018-08-07T00:48:56.081Z","type":"message"}
{"nick":"zsoc","message":"you can do a lot in 300ms","date":"2018-08-07T00:48:58.571Z","type":"message"}
{"nick":"zsoc","message":"if there's no i/o involved","date":"2018-08-07T00:49:02.325Z","type":"message"}
{"nick":"on3pk","message":"But if it's just myEventEmitter.addListener(\"myEvent\", myObject.handleUpdate) then I don't really need to change the design of my program at all","date":"2018-08-07T00:49:22.727Z","type":"message"}
{"nick":"leolrrj","date":"2018-08-07T00:49:34.564Z","type":"join"}
{"nick":"leolrrj","reason":"Read error: Connection reset by peer","date":"2018-08-07T00:49:43.579Z","type":"quit"}
{"nick":"zsoc","message":"Pretty much, yeah - again.. that *defers* it so it doesn't mess with your ability to handle the response, for instance, but ultimately it still has to happen eventually","date":"2018-08-07T00:49:59.164Z","type":"message"}
{"nick":"zsoc","message":"and when it happens you're in the same thread as everything else","date":"2018-08-07T00:50:06.860Z","type":"message"}
{"nick":"leolrrj","date":"2018-08-07T00:50:15.515Z","type":"join"}
{"nick":"randymarsh9","date":"2018-08-07T00:50:16.073Z","type":"part"}
{"nick":"eckhardt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T00:50:25.220Z","type":"quit"}
{"nick":"zsoc","message":"The quickest solution to this sort of thing (if there's actually a perf issue here...) is scaling your app out horizontally, eg running multiple identical processes - generally 1 per cpu thread (or core? not sure how that works)","date":"2018-08-07T00:50:43.988Z","type":"message"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2018-08-07T00:51:24.176Z","type":"quit"}
{"nick":"shanxS","reason":"Ping timeout: 240 seconds","date":"2018-08-07T00:51:35.458Z","type":"quit"}
{"nick":"on3pk","message":"I think I need to play around with it to find the actual performance limits, like you suggested","date":"2018-08-07T00:51:39.148Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 256 seconds","date":"2018-08-07T00:51:50.258Z","type":"quit"}
{"nick":"zsoc","message":"but figure out the upper bounds of what handleUpdate might do, how much data might come in and what it might update... like top end scenarios. And Then hammer at it and look at perf, I think you'd be surprised.","date":"2018-08-07T00:51:50.409Z","type":"message"}
{"nick":"mezod","date":"2018-08-07T00:52:10.861Z","type":"join"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2018-08-07T00:52:55.749Z","type":"quit"}
{"nick":"on3pk","message":"Well this is going to run a raspberry pi at first, so I might run into some problems at first heh","date":"2018-08-07T00:52:56.962Z","type":"message"}
{"nick":"RoriconKnight","reason":"Quit: Farewell, may the blessing of Loli Goddess stay with us.","date":"2018-08-07T00:53:00.090Z","type":"quit"}
{"nick":"zsoc","message":"ye of little faith","date":"2018-08-07T00:53:15.304Z","type":"message"}
{"nick":"mizu_no_oto_work","date":"2018-08-07T00:53:34.328Z","type":"join"}
{"nick":"tm","reason":"Ping timeout: 240 seconds","date":"2018-08-07T00:53:35.505Z","type":"quit"}
{"nick":"zsoc","message":"aren't they like quad core 1.2ghz ARM processors or something now?","date":"2018-08-07T00:53:42.340Z","type":"message"}
{"nick":"on3pk","message":"Well... As fun as the pi is, it isn't known for being powerful","date":"2018-08-07T00:53:48.548Z","type":"message"}
{"nick":"shanxS","date":"2018-08-07T00:53:53.074Z","type":"join"}
{"nick":"on3pk","message":"It'll be on an older one","date":"2018-08-07T00:53:55.832Z","type":"message"}
{"nick":"zsoc","message":"I'd be more worried about RAM... 1Gb is rough","date":"2018-08-07T00:53:58.659Z","type":"message"}
{"nick":"sterns","reason":"Ping timeout: 240 seconds","date":"2018-08-07T00:54:05.503Z","type":"quit"}
{"nick":"zsoc","message":"ooo interesting.. this is getting specific haha.. is this like an LED controller thing?","date":"2018-08-07T00:54:14.963Z","type":"message"}
{"nick":"on3pk","message":"that would probably be more exciting than what I'm doing.  I'm just trying to learn node as a server and all I've got that useful is a raspberry pi","date":"2018-08-07T00:55:21.627Z","type":"message"}
{"nick":"zsoc","message":"ah okay, yeah dood no worries you're totally good","date":"2018-08-07T00:56:11.127Z","type":"message"}
{"nick":"Sleepy_C1der","date":"2018-08-07T00:56:16.289Z","type":"join"}
{"nick":"on3pk","message":"I got another pi (that's even more resource constrained) that I wanna turn into a little robot type of thing.  Node runs on ARMv6, I think?","date":"2018-08-07T00:56:22.635Z","type":"message"}
{"nick":"zsoc","message":"it's supposed to... like i think there's a CI for it and stuff :p never done it personally","date":"2018-08-07T00:56:41.242Z","type":"message"}
{"nick":"ffx_","reason":"Quit: Leaving...","date":"2018-08-07T00:56:42.093Z","type":"quit"}
{"nick":"tm","date":"2018-08-07T00:57:29.884Z","type":"join"}
{"nick":"Sleepy_Coder","reason":"Ping timeout: 256 seconds","date":"2018-08-07T00:58:04.295Z","type":"quit"}
{"nick":"Arimil","reason":"Read error: Connection reset by peer","date":"2018-08-07T01:01:50.312Z","type":"quit"}
{"nick":"akfarrell","reason":"Ping timeout: 276 seconds","date":"2018-08-07T01:01:56.103Z","type":"quit"}
{"nick":"ahmedelgabri","reason":"Quit: WeeChat 2.2","date":"2018-08-07T01:02:13.732Z","type":"quit"}
{"nick":"Arimil","date":"2018-08-07T01:02:14.459Z","type":"join"}
{"nick":"FatKiwi_","date":"2018-08-07T01:02:28.084Z","type":"join"}
{"nick":"akfarrell","date":"2018-08-07T01:02:32.108Z","type":"join"}
{"nick":"millido","date":"2018-08-07T01:02:41.107Z","type":"join"}
{"nick":"on3pk","message":"thanks for your help","date":"2018-08-07T01:03:09.024Z","type":"message"}
{"nick":"zsoc","message":"cheers","date":"2018-08-07T01:03:26.748Z","type":"message"}
{"nick":"FatKiwi","reason":"Ping timeout: 260 seconds","date":"2018-08-07T01:05:34.223Z","type":"quit"}
{"nick":"carro7","reason":"Quit: carro7","date":"2018-08-07T01:05:55.184Z","type":"quit"}
{"nick":"millido","reason":"Ping timeout: 264 seconds","date":"2018-08-07T01:07:33.926Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T01:08:21.021Z","type":"join"}
{"nick":"heydenweb","reason":"Ping timeout: 240 seconds","date":"2018-08-07T01:08:27.746Z","type":"quit"}
{"nick":"leolrrj","reason":"Remote host closed the connection","date":"2018-08-07T01:12:38.895Z","type":"quit"}
{"nick":"wsieroci","date":"2018-08-07T01:12:47.946Z","type":"join"}
{"nick":"ndrwknx","reason":"Quit: ndrwknx","date":"2018-08-07T01:14:55.467Z","type":"quit"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T01:17:20.326Z","type":"quit"}
{"nick":"LayRoy","date":"2018-08-07T01:18:59.086Z","type":"join"}
{"nick":"danecando","date":"2018-08-07T01:19:44.061Z","type":"join"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2018-08-07T01:20:01.158Z","type":"quit"}
{"nick":"ed209","date":"2018-08-07T01:20:07.735Z","type":"join"}
{"nick":"mzl0","reason":"Ping timeout: 276 seconds","date":"2018-08-07T01:20:08.114Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 264 seconds","date":"2018-08-07T01:20:09.931Z","type":"quit"}
{"nick":"FatKiwi_","reason":"Ping timeout: 260 seconds","date":"2018-08-07T01:21:19.103Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T01:21:42.052Z","type":"join"}
{"nick":"electronicmaji","date":"2018-08-07T01:21:54.134Z","type":"join"}
{"nick":"nickleefly","date":"2018-08-07T01:23:08.726Z","type":"join"}
{"nick":"LayRoy","reason":"Quit: EnGiNe�Reг\u000f Scaricabile da -� www.Italia-Chat.com\u000f","date":"2018-08-07T01:23:17.604Z","type":"quit"}
{"nick":"benjamingr_","reason":"Quit: Connection closed for inactivity","date":"2018-08-07T01:23:35.149Z","type":"quit"}
{"nick":"superlou","reason":"Quit: Leaving","date":"2018-08-07T01:25:50.310Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 260 seconds","date":"2018-08-07T01:26:34.074Z","type":"quit"}
{"nick":"jrabe6","date":"2018-08-07T01:26:57.512Z","type":"join"}
{"nick":"jrabe6","reason":"Remote host closed the connection","date":"2018-08-07T01:27:37.619Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T01:28:50.120Z","type":"join"}
{"nick":"the_ant","date":"2018-08-07T01:33:08.465Z","type":"join"}
{"nick":"heydenweb","date":"2018-08-07T01:35:45.239Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 248 seconds","date":"2018-08-07T01:37:05.582Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T01:39:06.273Z","type":"join"}
{"nick":"mizu_no_oto_work","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T01:45:29.885Z","type":"quit"}
{"nick":"shanxS","reason":"Ping timeout: 276 seconds","date":"2018-08-07T01:46:08.116Z","type":"quit"}
{"nick":"EyePulp","date":"2018-08-07T01:46:23.646Z","type":"join"}
{"nick":"gdibass","date":"2018-08-07T01:48:09.495Z","type":"join"}
{"nick":"jsph","date":"2018-08-07T01:48:30.065Z","type":"join"}
{"nick":"j``","date":"2018-08-07T01:49:21.892Z","type":"join"}
{"nick":"zamN","message":"tbh if you are worried about memory i wouldnt be using nodejs :P","date":"2018-08-07T01:50:03.176Z","type":"message"}
{"nick":"j``","reason":"Client Quit","date":"2018-08-07T01:50:11.529Z","type":"quit"}
{"nick":"zamN","message":"but that im sure will spark lots of debate here","date":"2018-08-07T01:50:11.694Z","type":"message"}
{"nick":"zsoc","action":"shrugs","date":"2018-08-07T01:50:41.713Z","type":"action"}
{"nick":"EyePulp","reason":"Ping timeout: 244 seconds","date":"2018-08-07T01:50:43.554Z","type":"quit"}
{"nick":"j``","date":"2018-08-07T01:50:54.426Z","type":"join"}
{"nick":"zsoc","message":"don't keep things in memory if you're worried about memory... i have apps that never break 100mb - maybe that's a lot to some people","date":"2018-08-07T01:51:12.430Z","type":"message"}
{"nick":"TechEffigy","reason":"Ping timeout: 240 seconds","date":"2018-08-07T01:51:27.747Z","type":"quit"}
{"nick":"zsoc","message":"but i mean node uses V8 and you need a heap.. so..","date":"2018-08-07T01:51:31.317Z","type":"message"}
{"nick":"Laxtour","date":"2018-08-07T01:51:32.600Z","type":"join"}
{"nick":"joepie91","message":"on3pk: rpi's are more than powerful enough to run a typical Node.js application","date":"2018-08-07T01:52:11.244Z","type":"message"}
{"nick":"joepie91","message":"both CPU and memory wise","date":"2018-08-07T01:52:14.694Z","type":"message"}
{"nick":"joepie91","message":"you may run into some issues running npm on it though, memory-wise","date":"2018-08-07T01:53:01.814Z","type":"message"}
{"nick":"Aquazi","reason":"Quit: Connection closed for inactivity","date":"2018-08-07T01:53:02.008Z","type":"quit"}
{"nick":"joepie91","message":"possibly easier to just copy over node_modules and rebuild, or even just cross-compile for ARM","date":"2018-08-07T01:53:13.649Z","type":"message"}
{"nick":"theWhisper_","reason":"Ping timeout: 260 seconds","date":"2018-08-07T01:53:24.235Z","type":"quit"}
{"nick":"zsoc","message":"ah, that's a different story indeed","date":"2018-08-07T01:53:33.928Z","type":"message"}
{"nick":"joepie91","message":"also, JS actually doesn't need much RAM, in principle","date":"2018-08-07T01:53:45.492Z","type":"message"}
{"nick":"joepie91","message":"you can restrict it significantly without problems","date":"2018-08-07T01:53:51.773Z","type":"message"}
{"nick":"GreenJello","message":"how much RAM does a rpi have these days?","date":"2018-08-07T01:53:52.473Z","type":"message"}
{"nick":"zsoc","message":"the cross-compile to ARM bit might actually be a good way to go heh","date":"2018-08-07T01:54:00.518Z","type":"message"}
{"nick":"joepie91","message":"it may just trigger a GC a little more often, so slower computation","date":"2018-08-07T01:54:02.123Z","type":"message"}
{"nick":"joepie91","message":"or rather, more latency","date":"2018-08-07T01:54:10.749Z","type":"message"}
{"nick":"zsoc","message":"new RPi's are 1Gb~ but unsure about older ones","date":"2018-08-07T01:54:11.015Z","type":"message"}
{"nick":"joepie91","message":"but not by much","date":"2018-08-07T01:54:13.490Z","type":"message"}
{"nick":"Laxtour","reason":"Client Quit","date":"2018-08-07T01:54:16.996Z","type":"quit"}
{"nick":"GreenJello","message":"I've run into issues with running a few node.js processes on a 1gb VPS","date":"2018-08-07T01:56:26.124Z","type":"message"}
{"nick":"GreenJello","message":"keep in mind that the OS also needs resources","date":"2018-08-07T01:57:02.271Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 264 seconds","date":"2018-08-07T01:57:21.953Z","type":"quit"}
{"nick":"Akinator","date":"2018-08-07T01:57:28.210Z","type":"join"}
{"nick":"systemfault","message":"Rewrite in Rust :P Less resources.","date":"2018-08-07T01:58:07.648Z","type":"message"}
{"nick":"systemfault","message":"You could even claim that your code is environmentally friendly.","date":"2018-08-07T01:58:37.394Z","type":"message"}
{"nick":"ndrwknx","date":"2018-08-07T01:59:07.559Z","type":"join"}
{"nick":"joepie91","message":"GreenJello: what were the issues? because issues with that doesn't necessarily translate to it being impossible :P","date":"2018-08-07T01:59:14.652Z","type":"message"}
{"nick":"joepie91","message":"systemfault: I've seen somebody seriously make that argument, unfortunately it is not that simple :)","date":"2018-08-07T01:59:32.797Z","type":"message"}
{"nick":"joepie91","message":"CPU power usage is not linear, there is an environmental cost to aspects other than code on runtime, etc.","date":"2018-08-07T01:59:58.684Z","type":"message"}
{"nick":"GreenJello","message":"this was a couple years ago, but iirc the OS killed the process","date":"2018-08-07T01:59:58.920Z","type":"message"}
{"nick":"joepie91","message":"GreenJello: yeah, so that's probably a case of 'Node did not realize it had to give back RAM'","date":"2018-08-07T02:00:09.397Z","type":"message"}
{"nick":"joepie91","message":"if you twiddle with the space_size params to restrict memory usage, you can run much more on the same systme","date":"2018-08-07T02:00:22.909Z","type":"message"}
{"nick":"joepie91","message":"system*","date":"2018-08-07T02:00:24.616Z","type":"message"}
{"nick":"joepie91","message":"as it'll GC sooner","date":"2018-08-07T02:00:26.045Z","type":"message"}
{"nick":"zsoc","message":"you can limit the h.. yeah what he said ^","date":"2018-08-07T02:00:29.511Z","type":"message"}
{"nick":"joepie91","message":"and free up memory","date":"2018-08-07T02:00:32.762Z","type":"message"}
{"nick":"joepie91","message":"(something to do with memory fragmentation)","date":"2018-08-07T02:00:40.479Z","type":"message"}
{"nick":"GreenJello","message":"I just looked at a few servers I have, and the processes range from 70mb to 130mb, which isn't bad","date":"2018-08-07T02:00:56.861Z","type":"message"}
{"nick":"joepie91","message":"GreenJello: try restricting them to 50MB heap","date":"2018-08-07T02:01:10.037Z","type":"message"}
{"nick":"zsoc","message":"default heap is 1.5Gb in V8, for whatever reason","date":"2018-08-07T02:01:17.697Z","type":"message"}
{"nick":"joepie91","message":"you'll probably find that there is no adverse effect but now they suddenly use 50MB :)","date":"2018-08-07T02:01:22.669Z","type":"message"}
{"nick":"Sharaal","date":"2018-08-07T02:01:25.821Z","type":"join"}
{"nick":"`slikts","message":"there's an \"interesting\" issue with files randomly missing and reappearing in WSL","date":"2018-08-07T02:01:55.384Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T02:01:56.274Z","type":"join"}
{"nick":"GreenJello","message":"hmm, I figured a lot of the size was just the JIT output","date":"2018-08-07T02:01:56.637Z","type":"message"}
{"nick":"GreenJello","message":"not the JS heap","date":"2018-08-07T02:02:09.381Z","type":"message"}
{"nick":"zsoc","message":"`slikts: is this in the context of a parallel test runner?","date":"2018-08-07T02:02:17.366Z","type":"message"}
{"nick":"`slikts","message":"zsoc: jest","date":"2018-08-07T02:02:25.093Z","type":"message"}
{"nick":"zsoc","message":"`slikts: --runInBand","date":"2018-08-07T02:02:32.790Z","type":"message"}
{"nick":"zsoc","message":"is the only way to run jest in WSL","date":"2018-08-07T02:02:36.589Z","type":"message"}
{"nick":"`slikts","message":"wow thanks","date":"2018-08-07T02:02:43.940Z","type":"message"}
{"nick":"GreenJello","message":"oh right, I started an ubuntu install for WSL a while ago and forgot to go back to it","date":"2018-08-07T02:02:58.432Z","type":"message"}
{"nick":"zsoc","message":"you can profit from the 4 hours of my life i spent trying to work around it 2 months ago lol","date":"2018-08-07T02:03:02.615Z","type":"message"}
{"nick":"`slikts","message":"the proper workaround is probably not using wsl","date":"2018-08-07T02:03:21.271Z","type":"message"}
{"nick":"zsoc","message":"correct haha","date":"2018-08-07T02:03:26.245Z","type":"message"}
{"nick":"`slikts","message":"since there's a pile of issues","date":"2018-08-07T02:03:29.710Z","type":"message"}
{"nick":"`slikts","message":"starting from the i/o being slow","date":"2018-08-07T02:03:40.546Z","type":"message"}
{"nick":"GreenJello","message":"zz","date":"2018-08-07T02:03:44.980Z","type":"message"}
{"nick":"zsoc","message":"well WSL itself isn't necessarily the problem here.. i have an entirely different environment with an almost identical issue with Jest... it has some serious require cache race condition problems","date":"2018-08-07T02:04:14.324Z","type":"message"}
{"nick":"`slikts","message":"so tests, npm installs etc. are all slower than they would on proper *nix","date":"2018-08-07T02:04:14.486Z","type":"message"}
{"nick":"GreenJello","message":"oops","date":"2018-08-07T02:04:15.055Z","type":"message"}
{"nick":"`slikts","message":"the slowness is a known problem for wsl","date":"2018-08-07T02:04:47.761Z","type":"message"}
{"nick":"zsoc","message":"oh the i/o slowness? Yeah for sure","date":"2018-08-07T02:04:56.531Z","type":"message"}
{"nick":"`slikts","message":"like, I can't use nvm with it because it makes the shell so slow","date":"2018-08-07T02:04:57.613Z","type":"message"}
{"nick":"zsoc","message":"but obv for it to cause 'missing file' magic.. there's some race conditions going on","date":"2018-08-07T02:05:17.931Z","type":"message"}
{"nick":"zsoc","message":"Jest is probably relying on statSync or something equally bad :p","date":"2018-08-07T02:05:27.528Z","type":"message"}
{"nick":"joepie91","message":"GreenJello: it's almost all heap","date":"2018-08-07T02:05:37.539Z","type":"message"}
{"nick":"joepie91","message":"JIT output is pretty negligible","date":"2018-08-07T02:05:46.925Z","type":"message"}
{"nick":"joepie91","message":"at least from what I've seen","date":"2018-08-07T02:05:53.420Z","type":"message"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T02:06:04.309Z","type":"quit"}
{"nick":"joepie91","message":"`slikts: I doubt the slowness is fixable","date":"2018-08-07T02:06:24.462Z","type":"message"}
{"nick":"joepie91","message":"at least fully","date":"2018-08-07T02:06:32.635Z","type":"message"}
{"nick":"`slikts","message":"joepie91: why not?","date":"2018-08-07T02:06:35.467Z","type":"message"}
{"nick":"Steverman","reason":"Ping timeout: 240 seconds","date":"2018-08-07T02:06:35.629Z","type":"quit"}
{"nick":"wsieroci","date":"2018-08-07T02:06:50.787Z","type":"join"}
{"nick":"joepie91","message":"`slikts: well, when it comes down to it, what WSL is really doing is something like what WINE does; providing 'fake' versions of system libraries / kernel APIs, and internally translating them to something native to the OS","date":"2018-08-07T02:07:00.376Z","type":"message"}
{"nick":"joepie91","message":"that translation will inherently have some amount of overhead","date":"2018-08-07T02:07:09.676Z","type":"message"}
{"nick":"joepie91","message":"due to API design mismatches","date":"2018-08-07T02:07:13.809Z","type":"message"}
{"nick":"`slikts","message":"joepie91: that's not what it's doing, though; it's not like wine","date":"2018-08-07T02:07:21.988Z","type":"message"}
{"nick":"systemfault","message":"Fairly similar... just lower level.","date":"2018-08-07T02:07:38.458Z","type":"message"}
{"nick":"joepie91","message":"afaik it is","date":"2018-08-07T02:07:57.998Z","type":"message"}
{"nick":"`slikts","message":"I mean, it's on the same level as win32","date":"2018-08-07T02:07:58.540Z","type":"message"}
{"nick":"joepie91","message":"`slikts: how do you mean?","date":"2018-08-07T02:09:22.226Z","type":"message"}
{"nick":"`slikts","message":"I've forgotten the specifics since the last time this came up","date":"2018-08-07T02:09:27.797Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 256 seconds","date":"2018-08-07T02:10:36.323Z","type":"quit"}
{"nick":"systemfault","message":"joepie91: It's a subsystem. https://en.wikipedia.org/wiki/Architecture_of_Windows_NT#/media/File:Windows_2000_architecture.svg","date":"2018-08-07T02:11:02.119Z","type":"message"}
{"nick":"systemfault","message":"Windows was built so multiple \"subsystems\" could be ran on it","date":"2018-08-07T02:11:25.611Z","type":"message"}
{"nick":"systemfault","message":"Cool concept.","date":"2018-08-07T02:11:33.999Z","type":"message"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T02:11:44.301Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T02:12:10.062Z","type":"join"}
{"nick":"systemfault","message":"Despite the evilness of yesterday's Microsoft, they had quite a few good ideas.","date":"2018-08-07T02:12:35.699Z","type":"message"}
{"nick":"joepie91","message":"like, sure, it's a subsystem? but supporting a third-party API design is going to be more expensive than supporting a first-party one, since you don't have control over the third-party system's design and thus cannot design it to avoid expensive translations","date":"2018-08-07T02:13:02.366Z","type":"message"}
{"nick":"joepie91","message":"not just yesterday's Microsoft :)","date":"2018-08-07T02:13:20.861Z","type":"message"}
{"nick":"`slikts","message":"speaking of evilness, I'd check out if wsl isn't better in insider's edition, but that requires turning on privacy invading settings","date":"2018-08-07T02:13:55.249Z","type":"message"}
{"nick":"`slikts","message":"MS also keeps resetting them with updates","date":"2018-08-07T02:14:36.208Z","type":"message"}
{"nick":"FatKiwi","date":"2018-08-07T02:16:45.738Z","type":"join"}
{"nick":"the_ant","reason":"Ping timeout: 240 seconds","date":"2018-08-07T02:18:05.862Z","type":"quit"}
{"nick":"shanxS","date":"2018-08-07T02:18:12.111Z","type":"join"}
{"nick":"`slikts","message":"it's even possible to run graphical apps on wsl if you run an x server on the win side","date":"2018-08-07T02:19:11.159Z","type":"message"}
{"nick":"`slikts","message":"I did that with vscode","date":"2018-08-07T02:19:31.275Z","type":"message"}
{"nick":"ndrwknx","reason":"Quit: ndrwknx","date":"2018-08-07T02:20:08.288Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 260 seconds","date":"2018-08-07T02:20:14.115Z","type":"quit"}
{"nick":"supernovah","date":"2018-08-07T02:20:35.743Z","type":"join"}
{"nick":"`slikts","message":"would be funny to have a system with only wsl and no win","date":"2018-08-07T02:20:46.457Z","type":"message"}
{"nick":"`slikts","message":"the resulting os would be called GNU/NT","date":"2018-08-07T02:23:45.718Z","type":"message"}
{"nick":"on3pk","message":"I seem to have problems recalling a class from an object.  Very strange.","date":"2018-08-07T02:25:55.657Z","type":"message"}
{"nick":"on3pk","message":"i'm doing subscribers[subscriberId] = subscriber;  Where subscriber = new Subscriber()","date":"2018-08-07T02:27:24.072Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T02:28:06.586Z","type":"join"}
{"nick":"Laptop_mini","date":"2018-08-07T02:32:09.512Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 244 seconds","date":"2018-08-07T02:32:34.623Z","type":"quit"}
{"nick":"zeds","date":"2018-08-07T02:34:35.677Z","type":"join"}
{"nick":"on3pk","message":"it seems like once I go out of the scope of where the class is created, it disappears...","date":"2018-08-07T02:34:36.021Z","type":"message"}
{"nick":"zeds","date":"2018-08-07T02:35:19.615Z","type":"part"}
{"nick":"`slikts","message":"on3pk: what does that mean?","date":"2018-08-07T02:35:44.185Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T02:36:19.651Z","type":"join"}
{"nick":"on3pk","message":"in one function I do subscribers[subscriberId] = new Subscriber('mydata');  When I go into a different function, subscribers[subscriberId].getData() always returns undefined","date":"2018-08-07T02:37:04.002Z","type":"message"}
{"nick":"zava","reason":"Quit: WeeChat 2.2","date":"2018-08-07T02:37:09.548Z","type":"quit"}
{"nick":"supernovah","reason":"Ping timeout: 240 seconds","date":"2018-08-07T02:37:57.757Z","type":"quit"}
{"nick":"`slikts","message":"if the method didn't exist and you tried calling it, it'd raise a TypeError","date":"2018-08-07T02:38:02.391Z","type":"message"}
{"nick":"on3pk","message":"getData is in the prototype","date":"2018-08-07T02:38:49.174Z","type":"message"}
{"nick":"on3pk","message":"I'm following this guide: http://book.mixu.net/node/ch6.html  I have no idea if that's accurate or not","date":"2018-08-07T02:39:16.513Z","type":"message"}
{"nick":"`slikts","message":"so you are a calling the method and it's just returning undefined","date":"2018-08-07T02:40:10.319Z","type":"message"}
{"nick":"on3pk","message":"correct","date":"2018-08-07T02:40:33.688Z","type":"message"}
{"nick":"`slikts","message":"so problem solved","date":"2018-08-07T02:40:46.784Z","type":"message"}
{"nick":"doodadjs","message":"`slikts: \"MS also keeps resetting them with updates\": Yes, MS keeps resetting everything :(","date":"2018-08-07T02:41:26.115Z","type":"message"}
{"nick":"doodadjs","message":"`slikts: \"the resulting os would be called GNU/NT\" : Better use a Linux disto then","date":"2018-08-07T02:42:01.622Z","type":"message"}
{"nick":"Luxray5474__","date":"2018-08-07T02:42:16.404Z","type":"join"}
{"nick":"on3pk","message":"I'm setting the data in the constructor.  I wouldn't want it to return undefined :(","date":"2018-08-07T02:42:17.770Z","type":"message"}
{"nick":"`slikts","message":"don't tell me what to do dad","date":"2018-08-07T02:42:27.001Z","type":"message"}
{"nick":"doodadjs","message":"(WSL was not meant to develop a server app)","date":"2018-08-07T02:42:29.956Z","type":"message"}
{"nick":"`slikts","message":"I'll use GNU/NT","date":"2018-08-07T02:42:34.636Z","type":"message"}
{"nick":"doodadjs","message":"ok","date":"2018-08-07T02:42:39.270Z","type":"message"}
{"nick":"Luxray5474_","reason":"Ping timeout: 244 seconds","date":"2018-08-07T02:42:54.568Z","type":"quit"}
{"nick":"scrptktty","date":"2018-08-07T02:43:56.418Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 264 seconds","date":"2018-08-07T02:45:21.949Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T02:46:00.755Z","type":"join"}
{"nick":"c_cinap","date":"2018-08-07T02:46:32.653Z","type":"join"}
{"nick":"ndrwknx","date":"2018-08-07T02:48:51.652Z","type":"join"}
{"nick":"`slikts","message":"and I'll rune wine apps on it","date":"2018-08-07T02:48:56.568Z","type":"message"}
{"nick":"`slikts","message":"as in, run exes through wine","date":"2018-08-07T02:49:17.653Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 264 seconds","date":"2018-08-07T02:49:33.944Z","type":"quit"}
{"nick":"Laptop_mini","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T02:49:44.828Z","type":"quit"}
{"nick":"sadako","date":"2018-08-07T02:50:27.771Z","type":"join"}
{"nick":"pihpah","reason":"Ping timeout: 268 seconds","date":"2018-08-07T02:51:00.827Z","type":"quit"}
{"nick":"`slikts","message":"cygwin exes","date":"2018-08-07T02:51:07.985Z","type":"message"}
{"nick":"sadtaco","reason":"Ping timeout: 256 seconds","date":"2018-08-07T02:53:06.277Z","type":"quit"}
{"nick":"`slikts","message":"not sure if it's possible to go deeper","date":"2018-08-07T02:53:12.159Z","type":"message"}
{"nick":"doodadjs","message":"deeper what, run cygwin on wine on wsl ?","date":"2018-08-07T02:53:42.321Z","type":"message"}
{"nick":"`slikts","message":"yes","date":"2018-08-07T02:53:50.979Z","type":"message"}
{"nick":"doodadjs","message":"surely","date":"2018-08-07T02:54:00.107Z","type":"message"}
{"nick":"pihpah","date":"2018-08-07T02:54:36.462Z","type":"join"}
{"nick":"tristanp","date":"2018-08-07T02:54:47.607Z","type":"join"}
{"nick":"`slikts","message":"but how","date":"2018-08-07T02:56:26.565Z","type":"message"}
{"nick":"`slikts","message":"no one's ported wine to cygwin","date":"2018-08-07T02:56:57.777Z","type":"message"}
{"nick":"nikio_","message":"im awaiting a node fetch call and for some reason its json is different than if i do it raw using postman","date":"2018-08-07T02:59:51.619Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T02:59:57.737Z","type":"quit"}
{"nick":"nikio_","message":"no idea how to debug this eaither because responses and debuggers are retarded","date":"2018-08-07T03:00:12.254Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T03:00:32.057Z","type":"join"}
{"nick":"doodadjs","message":"\"json\" is a string","date":"2018-08-07T03:00:53.520Z","type":"message"}
{"nick":"wsieroci","date":"2018-08-07T03:00:58.010Z","type":"join"}
{"nick":"joepie91","message":"on3pk: there's at least one error on that page","date":"2018-08-07T03:01:11.038Z","type":"message"}
{"nick":"joepie91","message":"not related to your question though","date":"2018-08-07T03:01:16.646Z","type":"message"}
{"nick":"nikio_","message":"either way im fed up with it","date":"2018-08-07T03:01:25.917Z","type":"message"}
{"nick":"joepie91","message":"\"Here, every time we run Phone(), a new object is created with a new property. The V8 runtime cannot optimize this case, since there is no indication that instances of Phone are a class; they look like custom objects to the engine since prototypes are not used\"","date":"2018-08-07T03:01:29.384Z","type":"message"}
{"nick":"joepie91","message":"this is absolutely false","date":"2018-08-07T03:01:31.857Z","type":"message"}
{"nick":"viko","date":"2018-08-07T03:01:43.563Z","type":"quit"}
{"nick":"joepie91","message":"under \"Don't construct by returning objects - use prototype and new\"","date":"2018-08-07T03:01:51.066Z","type":"message"}
{"nick":"`slikts","message":"nikio_: you could use a debugging proxy","date":"2018-08-07T03:02:07.871Z","type":"message"}
{"nick":"on3pk","message":"Oh, Ok","date":"2018-08-07T03:02:33.641Z","type":"message"}
{"nick":"joepie91","message":"(if you're interested in the details of how object-related optimizations work, have a look at https://mrale.ph/blog/2015/01/11/whats-up-with-monomorphism.html which explains it in detail)","date":"2018-08-07T03:02:40.456Z","type":"message"}
{"nick":"on3pk","message":"It looks like there is a new way of handling classes in ES6, too?","date":"2018-08-07T03:02:48.722Z","type":"message"}
{"nick":"joepie91","message":"on3pk: ES6 introduces `class` syntax; it's syntactic sugar over prototypes","date":"2018-08-07T03:03:01.210Z","type":"message"}
{"nick":"joepie91","message":"there are no 'real' classes in JS (and I don't recommend using the syntax either, as it brings no benefits)","date":"2018-08-07T03:03:14.700Z","type":"message"}
{"nick":"nikio_","message":"whats that?","date":"2018-08-07T03:03:15.311Z","type":"message"}
{"nick":"on3pk","message":"oh ok","date":"2018-08-07T03:03:26.139Z","type":"message"}
{"nick":"nikio_","message":"i think im gnahave write my own debugger","date":"2018-08-07T03:03:27.286Z","type":"message"}
{"nick":"joepie91","message":"(it just adds more limitations)","date":"2018-08-07T03:03:29.372Z","type":"message"}
{"nick":"millido","date":"2018-08-07T03:03:31.809Z","type":"join"}
{"nick":"on3pk","message":"oh bummer","date":"2018-08-07T03:03:34.910Z","type":"message"}
{"nick":"`slikts","message":"nikio_: google \"debugging proxy\"","date":"2018-08-07T03:03:37.244Z","type":"message"}
{"nick":"nikio_","message":"the data is obviously there","date":"2018-08-07T03:03:47.689Z","type":"message"}
{"nick":"nikio_","message":"i see the response code","date":"2018-08-07T03:03:56.381Z","type":"message"}
{"nick":"nikio_","message":"status text","date":"2018-08-07T03:03:58.936Z","type":"message"}
{"nick":"supernovah","date":"2018-08-07T03:04:01.069Z","type":"join"}
{"nick":"joepie91","message":"on3pk: anyway, the approach that that article seems to be recommend against - namely, just returning object literals - is generally the simplest / most expressive way to produce objects in JS","date":"2018-08-07T03:04:04.393Z","type":"message"}
{"nick":"`slikts","message":"something's obviously different if the requests get different responses","date":"2018-08-07T03:04:09.756Z","type":"message"}
{"nick":"joepie91","message":"it seems that their only argument is the - wrong - statement regarding performance, so you can safely disregard that advice in that case :)","date":"2018-08-07T03:04:21.972Z","type":"message"}
{"nick":"joepie91","message":"(the advice not to use object literals, that is)","date":"2018-08-07T03:04:32.960Z","type":"message"}
{"nick":"nikio_","message":"but i cantsimply do, response.giveMeTheFuckingJson() in the debug console , because that would break the rules blabla","date":"2018-08-07T03:04:39.229Z","type":"message"}
{"nick":"BurningPrincess3","date":"2018-08-07T03:04:51.229Z","type":"join"}
{"nick":"joepie91","message":"it's unfortunate because from the rest of the page I do get the impression that the author has a decent handle on how things work","date":"2018-08-07T03:04:55.022Z","type":"message"}
{"nick":"joepie91","message":"it's certainly a better article/page/book/whatever than most of the JS documentation and tutorials I see","date":"2018-08-07T03:05:15.066Z","type":"message"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T03:05:34.318Z","type":"quit"}
{"nick":"braincrash","reason":"Quit: bye bye","date":"2018-08-07T03:05:36.694Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 260 seconds","date":"2018-08-07T03:05:44.058Z","type":"quit"}
{"nick":"joepie91","message":"hm, they do also get the inheritance approach wrong","date":"2018-08-07T03:05:53.019Z","type":"message"}
{"nick":"gli","date":"2018-08-07T03:06:28.290Z","type":"join"}
{"nick":"the_ant","date":"2018-08-07T03:07:11.292Z","type":"join"}
{"nick":"BurningPrincess3","reason":"Remote host closed the connection","date":"2018-08-07T03:07:46.848Z","type":"quit"}
{"nick":"millido","reason":"Ping timeout: 268 seconds","date":"2018-08-07T03:08:16.785Z","type":"quit"}
{"nick":"supernovah","reason":"Ping timeout: 264 seconds","date":"2018-08-07T03:08:45.961Z","type":"quit"}
{"nick":"SilverXcrosS","reason":"Ping timeout: 248 seconds","date":"2018-08-07T03:09:21.417Z","type":"quit"}
{"nick":"braincrash","date":"2018-08-07T03:10:12.010Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T03:11:20.072Z","type":"join"}
{"nick":"karthik17","date":"2018-08-07T03:15:32.719Z","type":"join"}
{"nick":"karthik17","reason":"Client Quit","date":"2018-08-07T03:15:55.811Z","type":"quit"}
{"nick":"hdon","reason":"Ping timeout: 248 seconds","date":"2018-08-07T03:16:49.401Z","type":"quit"}
{"nick":"ch007m","reason":"Ping timeout: 240 seconds","date":"2018-08-07T03:16:57.793Z","type":"quit"}
{"nick":"shanxS","reason":"Ping timeout: 276 seconds","date":"2018-08-07T03:17:47.070Z","type":"quit"}
{"nick":"horsey","date":"2018-08-07T03:18:14.834Z","type":"join"}
{"nick":"Zooklubba7","date":"2018-08-07T03:18:28.142Z","type":"join"}
{"nick":"shanxS","date":"2018-08-07T03:19:26.653Z","type":"join"}
{"nick":"ch007m","date":"2018-08-07T03:19:51.421Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 264 seconds","date":"2018-08-07T03:20:46.074Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T03:21:17.061Z","type":"join"}
{"nick":"horsey","reason":"Ping timeout: 244 seconds","date":"2018-08-07T03:22:41.654Z","type":"quit"}
{"nick":"electronicmaji","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2018-08-07T03:22:45.188Z","type":"quit"}
{"nick":"Zooklubba7","reason":"Ping timeout: 244 seconds","date":"2018-08-07T03:23:12.546Z","type":"quit"}
{"nick":"jsph","reason":"Quit: Leaving","date":"2018-08-07T03:24:39.071Z","type":"quit"}
{"nick":"marthinal","date":"2018-08-07T03:28:05.649Z","type":"join"}
{"nick":"atomicthumbs","date":"2018-08-07T03:28:30.053Z","type":"join"}
{"nick":"shanxS","reason":"Ping timeout: 244 seconds","date":"2018-08-07T03:29:55.670Z","type":"quit"}
{"nick":"atomicthumbs","reason":"Remote host closed the connection","date":"2018-08-07T03:30:08.216Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 260 seconds","date":"2018-08-07T03:30:49.059Z","type":"quit"}
{"nick":"nickleefly","reason":"Quit: Connection closed for inactivity","date":"2018-08-07T03:31:28.619Z","type":"quit"}
{"nick":"marthinal","reason":"Ping timeout: 244 seconds","date":"2018-08-07T03:32:30.539Z","type":"quit"}
{"nick":"supernovah","date":"2018-08-07T03:32:54.926Z","type":"join"}
{"nick":"apowers313","date":"2018-08-07T03:35:25.439Z","type":"join"}
{"nick":"hdon","date":"2018-08-07T03:37:33.739Z","type":"join"}
{"nick":"the_ant","reason":"Read error: Connection reset by peer","date":"2018-08-07T03:38:02.016Z","type":"quit"}
{"nick":"the_ant","date":"2018-08-07T03:38:13.029Z","type":"join"}
{"nick":"on3pk","message":"if I have myEmitter.addListener('myEvent', myListener.handleEvent); how do I access myListener's scope inside of handleEvent? \"this\" is the EventEmitter","date":"2018-08-07T03:39:29.926Z","type":"message"}
{"nick":"electronicmaji","date":"2018-08-07T03:40:43.055Z","type":"join"}
{"nick":"joepie91","message":"on3pk: what do you mean with 'scope', exactly? just the myListener object?","date":"2018-08-07T03:41:08.078Z","type":"message"}
{"nick":"on3pk","message":"Yeah","date":"2018-08-07T03:41:16.700Z","type":"message"}
{"nick":"joepie91","message":"on3pk: have a look at this first to make sure you understand how `this` works in JS: https://gist.github.com/joepie91/22fb5cd443517566412b","date":"2018-08-07T03:41:41.655Z","type":"message"}
{"nick":"joepie91","message":"then let me know if it makes sense or is still unclear, and I'll explain further :P","date":"2018-08-07T03:41:49.470Z","type":"message"}
{"nick":"VectorX","reason":"Excess Flood","date":"2018-08-07T03:41:56.589Z","type":"quit"}
{"nick":"clintar","date":"2018-08-07T03:42:42.720Z","type":"join"}
{"nick":"hdon","reason":"Ping timeout: 268 seconds","date":"2018-08-07T03:42:48.713Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T03:43:20.734Z","type":"join"}
{"nick":"on3pk","message":"Yeah, that makes sense, so I guess it does make sense that \"this\" would refer to the EventEmitter","date":"2018-08-07T03:43:29.318Z","type":"message"}
{"nick":"joepie91","message":"on3pk: well, to understand it better, consider thjis:","date":"2018-08-07T03:43:58.594Z","type":"message"}
{"nick":"joepie91","message":"function someFunction(cb) { cb(\"hello world\"); }","date":"2018-08-07T03:44:15.662Z","type":"message"}
{"nick":"joepie91","message":"let a = {func: function(text) { console.log(this); }}","date":"2018-08-07T03:44:39.111Z","type":"message"}
{"nick":"joepie91","message":"someFunction(a.func);","date":"2018-08-07T03:44:43.755Z","type":"message"}
{"nick":"joepie91","message":"on3pk: what is the value of `this` going to be in the console.log?","date":"2018-08-07T03:44:51.025Z","type":"message"}
{"nick":"joepie91","message":"based on the gist I linked","date":"2018-08-07T03:44:55.945Z","type":"message"}
{"nick":"on3pk","message":"undefined?","date":"2018-08-07T03:45:44.155Z","type":"message"}
{"nick":"on3pk","message":"Not a, though","date":"2018-08-07T03:45:54.043Z","type":"message"}
{"nick":"VectorX","date":"2018-08-07T03:46:07.127Z","type":"join"}
{"nick":"markasoftware","reason":"Quit: http://quassel-irc.org - Chat comfortably. Anywhere.","date":"2018-08-07T03:46:19.715Z","type":"quit"}
{"nick":"joepie91","message":"on3pk: right; even though I passed it into someFunction as a.func, it gets *called* without anything 'before the dot', therefore `this` is `undefined`","date":"2018-08-07T03:46:53.178Z","type":"message"}
{"nick":"joepie91","message":"on3pk: it's possible in JS to call a function with a specific `this` context using .call or .apply, or even to produce a sort of 'wrapped version' of a function where the `this` context always points at a specific value","date":"2018-08-07T03:47:29.367Z","type":"message"}
{"nick":"markasoftware","date":"2018-08-07T03:47:40.412Z","type":"join"}
{"nick":"joepie91","message":"if you're finding `this` to be the emitter within the event callback, the emitter is likely using that","date":"2018-08-07T03:47:45.538Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T03:47:57.752Z","type":"quit"}
{"nick":"joepie91","message":"you can try using myListener.handleEvent.bind(myListener) to set the `this` context, but it may or may not work depending on that","date":"2018-08-07T03:48:28.258Z","type":"message"}
{"nick":"joepie91","message":"in practice, I rarely do this-wrangling like this and usually just make sure that I define functions such that they have the needed value in scope","date":"2018-08-07T03:48:50.076Z","type":"message"}
{"nick":"on3pk","message":"that is good to know.  I'm just going to go out on a limb here and suggest this might not be something I want to or even can learn at around midnight...","date":"2018-08-07T03:48:53.736Z","type":"message"}
{"nick":"joepie91","message":"but I can't really explain that any further without more contex on what your code is doing :) it sounds a little overengineered from a distance","date":"2018-08-07T03:49:09.891Z","type":"message"}
{"nick":"on3pk","message":"that seems like the better idea.  So that way if I change the emitter code, the functions still work","date":"2018-08-07T03:49:11.285Z","type":"message"}
{"nick":"joepie91","message":"like, normally you'd just pass inline-defined arrow functions to a .on call, rather than some property of an object somewhere","date":"2018-08-07T03:49:47.429Z","type":"message"}
{"nick":"joepie91","message":"there's sometimes reasons to deviate from that, but most of the time there isn't","date":"2018-08-07T03:50:14.670Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T03:51:13.052Z","type":"join"}
{"nick":"on3pk","message":"Oh, I guess I was taking queues from other languages where having classes/methods/etc is more structured","date":"2018-08-07T03:51:33.815Z","type":"message"}
{"nick":"on3pk","message":"so anonymous functions aren't used as muc","date":"2018-08-07T03:51:56.625Z","type":"message"}
{"nick":"on3pk","message":"*much","date":"2018-08-07T03:51:59.388Z","type":"message"}
{"nick":"joepie91","message":"on3pk: right; in JS, the primary units of code are functions and modules","date":"2018-08-07T03:52:16.059Z","type":"message"}
{"nick":"joepie91","message":"on3pk: this is a good read on the topic of class overuse, also: https://eev.ee/blog/2013/03/03/the-controller-pattern-is-awful-and-other-oo-heresy/","date":"2018-08-07T03:52:36.706Z","type":"message"}
{"nick":"joepie91","message":"also applies to overuse of any other kind of object/instance creation","date":"2018-08-07T03:52:45.380Z","type":"message"}
{"nick":"joepie91","message":"(since classes are Not Really A Thing in JS)","date":"2018-08-07T03:52:54.460Z","type":"message"}
{"nick":"joepie91","message":"basically, always first ask yourself whether you can reasonably solve it with 'just a function' - if yes, do that","date":"2018-08-07T03:53:24.054Z","type":"message"}
{"nick":"joepie91","message":"if no, then it's time to look into other options :p","date":"2018-08-07T03:53:31.217Z","type":"message"}
{"nick":"wsieroci","date":"2018-08-07T03:55:01.760Z","type":"join"}
{"nick":"on3pk","message":"I think it can be done in a function, I just gotta figure out how.","date":"2018-08-07T03:55:27.067Z","type":"message"}
{"nick":"joepie91","message":"on3pk: https://git.cryto.net/joepie91/pastebin-stream/src/master may be of interest as an example project that uses event emitters fairly heavily","date":"2018-08-07T03:56:16.619Z","type":"message"}
{"nick":"joepie91","message":"(live at https://pastebin-stream.cryto.net/ )","date":"2018-08-07T03:56:24.099Z","type":"message"}
{"nick":"on3pk","message":"Figure that I'm making a service that checks the temperature in a zip code.  I get a request that says \"Watch the weather in 90210 and tell me when it's 90*\".  I've been putting the zipcode, temperature, and callback address in a class","date":"2018-08-07T03:56:40.974Z","type":"message"}
{"nick":"on3pk","message":"I adjusted how I was doing things a bit since I thought events were async, but they're not...","date":"2018-08-07T03:58:20.626Z","type":"message"}
{"nick":"jimlei","reason":"Ping timeout: 240 seconds","date":"2018-08-07T03:58:57.787Z","type":"quit"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T03:59:58.259Z","type":"quit"}
{"nick":"joepie91","message":"on3pk: events themselves are totally synchronous; they may just be produced by asynchronous processes","date":"2018-08-07T04:00:10.318Z","type":"message"}
{"nick":"joepie91","message":"on3pk: anyway, I would recommend starting out by forgetting about the concept of 'classeds'","date":"2018-08-07T04:00:27.362Z","type":"message"}
{"nick":"joepie91","message":"classes *","date":"2018-08-07T04:00:29.092Z","type":"message"}
{"nick":"joepie91","message":"and thinking in 'objects' instead","date":"2018-08-07T04:00:33.104Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 260 seconds","date":"2018-08-07T04:00:34.141Z","type":"quit"}
{"nick":"joepie91","message":"leaving the 'how does one produce an object' as a separate concern","date":"2018-08-07T04:00:41.833Z","type":"message"}
{"nick":"joepie91","message":"also would definitely recommend reading the article that I linked, in full","date":"2018-08-07T04:00:52.318Z","type":"message"}
{"nick":"on3pk","message":"https://git.cryto.net/joepie91/pastebin-stream/src/master/src/client-store.js  <-- on line 25, is \"store\" what is created on line 18?","date":"2018-08-07T04:01:58.222Z","type":"message"}
{"nick":"joepie91","message":"on3pk: yeah","date":"2018-08-07T04:02:51.991Z","type":"message"}
{"nick":"on3pk","message":"So you can have kinda circular references like that?","date":"2018-08-07T04:03:29.550Z","type":"message"}
{"nick":"joepie91","message":"on3pk: it's not circular, exactly","date":"2018-08-07T04:04:28.114Z","type":"message"}
{"nick":"CeBe5","date":"2018-08-07T04:04:57.111Z","type":"join"}
{"nick":"joepie91","message":"it's just defined in a higher scope than the function inside the event emitter inside the function inside the event emitter that is assigned to `store`","date":"2018-08-07T04:04:58.968Z","type":"message"}
{"nick":"joepie91","message":"scoping in JS is lexical","date":"2018-08-07T04:05:11.811Z","type":"message"}
{"nick":"on3pk","message":"I guess I'm not entirely sure how to describe it.  It looks like you're referencing it in it's own definition...","date":"2018-08-07T04:05:18.608Z","type":"message"}
{"nick":"joepie91","message":"n> let foo = 42; let bar = function() { return foo; }; bar()","date":"2018-08-07T04:05:30.017Z","type":"message"}
{"nick":"jellobot","message":"(okay) 42","date":"2018-08-07T04:05:31.648Z","type":"message"}
{"nick":"joepie91","message":"on3pk: I'm actually not 100% sure under what circumstances this stops working, but in this case it works fine","date":"2018-08-07T04:05:55.896Z","type":"message"}
{"nick":"joepie91","message":"n> let bar = function() { return bar; }; bar()","date":"2018-08-07T04:06:20.349Z","type":"message"}
{"nick":"jellobot","message":"(okay) [Function: bar]","date":"2018-08-07T04:06:22.100Z","type":"message"}
{"nick":"bcoe","date":"2018-08-07T04:06:29.769Z","type":"join"}
{"nick":"on3pk","message":"well that's weird","date":"2018-08-07T04:06:34.459Z","type":"message"}
{"nick":"on3pk","message":"but I'm guessing it can make things easier","date":"2018-08-07T04:06:44.438Z","type":"message"}
{"nick":"supernovah","reason":"Ping timeout: 264 seconds","date":"2018-08-07T04:07:34.077Z","type":"quit"}
{"nick":"shanxS","date":"2018-08-07T04:08:52.502Z","type":"join"}
{"nick":"kapil___","date":"2018-08-07T04:09:09.290Z","type":"join"}
{"nick":"CeBe5","reason":"Ping timeout: 256 seconds","date":"2018-08-07T04:09:36.332Z","type":"quit"}
{"nick":"ndrwknx","reason":"Remote host closed the connection","date":"2018-08-07T04:09:56.562Z","type":"quit"}
{"nick":"supernovah","date":"2018-08-07T04:10:05.735Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T04:10:06.938Z","type":"join"}
{"nick":"bradford_","date":"2018-08-07T04:10:20.062Z","type":"join"}
{"nick":"bradfordli123","reason":"Ping timeout: 264 seconds","date":"2018-08-07T04:12:58.083Z","type":"quit"}
{"nick":"shanxS","reason":"Ping timeout: 260 seconds","date":"2018-08-07T04:13:14.129Z","type":"quit"}
{"nick":"supernovah","reason":"Ping timeout: 240 seconds","date":"2018-08-07T04:14:27.743Z","type":"quit"}
{"nick":"anexit","reason":"Ping timeout: 256 seconds","date":"2018-08-07T04:15:09.568Z","type":"quit"}
{"nick":"supernovah","date":"2018-08-07T04:16:17.450Z","type":"join"}
{"nick":"bradfordli123","date":"2018-08-07T04:16:36.116Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 264 seconds","date":"2018-08-07T04:18:21.949Z","type":"quit"}
{"nick":"bradford_","reason":"Ping timeout: 240 seconds","date":"2018-08-07T04:19:27.753Z","type":"quit"}
{"nick":"jphased","reason":"Ping timeout: 260 seconds","date":"2018-08-07T04:20:14.070Z","type":"quit"}
{"nick":"supernovah","reason":"Ping timeout: 256 seconds","date":"2018-08-07T04:20:56.295Z","type":"quit"}
{"nick":"electronicmaji","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2018-08-07T04:21:24.504Z","type":"quit"}
{"nick":"jphase","date":"2018-08-07T04:21:45.089Z","type":"join"}
{"nick":"Roughy","reason":"Quit: Meadow Fresh milk","date":"2018-08-07T04:21:59.499Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T04:22:57.550Z","type":"join"}
{"nick":"NomadJim","reason":"Quit: Leaving","date":"2018-08-07T04:22:57.931Z","type":"quit"}
{"nick":"GreenJello","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T04:26:04.254Z","type":"quit"}
{"nick":"j``","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T04:26:12.580Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 244 seconds","date":"2018-08-07T04:27:47.561Z","type":"quit"}
{"nick":"on3pk","reason":"Remote host closed the connection","date":"2018-08-07T04:28:02.062Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T04:30:50.716Z","type":"join"}
{"nick":"sgen","reason":"Ping timeout: 240 seconds","date":"2018-08-07T04:31:57.755Z","type":"quit"}
{"nick":"toi","date":"2018-08-07T04:32:40.480Z","type":"join"}
{"nick":"DeltaHeavy","date":"2018-08-07T04:34:00.423Z","type":"join"}
{"nick":"onkar","date":"2018-08-07T04:34:05.614Z","type":"join"}
{"nick":"hemstock","reason":"Read error: Connection reset by peer","date":"2018-08-07T04:35:00.702Z","type":"quit"}
{"nick":"onkar","reason":"Client Quit","date":"2018-08-07T04:35:11.151Z","type":"quit"}
{"nick":"onkar","date":"2018-08-07T04:35:25.614Z","type":"join"}
{"nick":"hemstock","date":"2018-08-07T04:35:29.155Z","type":"join"}
{"nick":"onkar","reason":"Client Quit","date":"2018-08-07T04:35:36.918Z","type":"quit"}
{"nick":"altab","reason":"Read error: Connection reset by peer","date":"2018-08-07T04:38:32.256Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 264 seconds","date":"2018-08-07T04:38:46.090Z","type":"quit"}
{"nick":"jphase","reason":"Ping timeout: 276 seconds","date":"2018-08-07T04:42:56.081Z","type":"quit"}
{"nick":"kjartan","reason":"Read error: Connection reset by peer","date":"2018-08-07T04:42:56.276Z","type":"quit"}
{"nick":"hvxgr10","date":"2018-08-07T04:42:59.639Z","type":"join"}
{"nick":"hvxgr10","reason":"Remote host closed the connection","date":"2018-08-07T04:43:36.726Z","type":"quit"}
{"nick":"NomadJim","date":"2018-08-07T04:44:29.986Z","type":"join"}
{"nick":"NomadJim","reason":"Changing host","date":"2018-08-07T04:44:30.827Z","type":"quit"}
{"nick":"NomadJim","date":"2018-08-07T04:44:30.979Z","type":"join"}
{"nick":"marthinal","date":"2018-08-07T04:44:52.417Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T04:45:20.932Z","type":"join"}
{"nick":"starz0r","reason":"Read error: Connection reset by peer","date":"2018-08-07T04:45:21.122Z","type":"quit"}
{"nick":"starz0r","date":"2018-08-07T04:45:43.280Z","type":"join"}
{"nick":"mobile","date":"2018-08-07T04:46:24.390Z","type":"join"}
{"nick":"kjartan","date":"2018-08-07T04:48:02.686Z","type":"join"}
{"nick":"supernovah","date":"2018-08-07T04:48:27.739Z","type":"join"}
{"nick":"wsieroci","date":"2018-08-07T04:49:10.736Z","type":"join"}
{"nick":"mobile","reason":"Remote host closed the connection","date":"2018-08-07T04:49:24.842Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 264 seconds","date":"2018-08-07T04:50:09.959Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T04:50:45.732Z","type":"join"}
{"nick":"c_cinap","reason":"Quit: Leaving.","date":"2018-08-07T04:51:41.768Z","type":"quit"}
{"nick":"supernovah","reason":"Ping timeout: 268 seconds","date":"2018-08-07T04:53:06.726Z","type":"quit"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T04:53:48.266Z","type":"quit"}
{"nick":"varunest","date":"2018-08-07T04:54:07.479Z","type":"join"}
{"nick":"evilgohan2","reason":"Ping timeout: 260 seconds","date":"2018-08-07T04:54:49.121Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T04:57:57.803Z","type":"quit"}
{"nick":"evilgohan2","date":"2018-08-07T04:58:39.660Z","type":"join"}
{"nick":"evilgohan2","reason":"Changing host","date":"2018-08-07T04:58:39.812Z","type":"quit"}
{"nick":"evilgohan2","date":"2018-08-07T04:58:39.965Z","type":"join"}
{"nick":"darkSeid","date":"2018-08-07T05:02:45.138Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T05:03:29.475Z","type":"join"}
{"nick":"millido","date":"2018-08-07T05:04:23.063Z","type":"join"}
{"nick":"supernovah","date":"2018-08-07T05:05:38.048Z","type":"join"}
{"nick":"ezakimak","reason":"Ping timeout: 260 seconds","date":"2018-08-07T05:07:39.074Z","type":"quit"}
{"nick":"bitmask","reason":"Quit: Gone to sleep...","date":"2018-08-07T05:07:57.230Z","type":"quit"}
{"nick":"ezakimak","date":"2018-08-07T05:08:50.097Z","type":"join"}
{"nick":"millido","reason":"Ping timeout: 264 seconds","date":"2018-08-07T05:09:21.950Z","type":"quit"}
{"nick":"lpin","date":"2018-08-07T05:09:44.847Z","type":"join"}
{"nick":"supernovah","reason":"Ping timeout: 264 seconds","date":"2018-08-07T05:10:34.111Z","type":"quit"}
{"nick":"sadako","reason":"Ping timeout: 240 seconds","date":"2018-08-07T05:13:27.763Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 264 seconds","date":"2018-08-07T05:13:34.113Z","type":"quit"}
{"nick":"horsey","date":"2018-08-07T05:18:56.507Z","type":"join"}
{"nick":"bsaboia","date":"2018-08-07T05:19:13.001Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T05:20:15.539Z","type":"join"}
{"nick":"nikio_","reason":"Ping timeout: 248 seconds","date":"2018-08-07T05:21:37.536Z","type":"quit"}
{"nick":"darkSeid","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T05:22:17.916Z","type":"quit"}
{"nick":"horsey","reason":"Ping timeout: 240 seconds","date":"2018-08-07T05:23:05.455Z","type":"quit"}
{"nick":"mipesom","reason":"Ping timeout: 245 seconds","date":"2018-08-07T05:24:00.479Z","type":"quit"}
{"nick":"mipesom","date":"2018-08-07T05:24:45.111Z","type":"join"}
{"nick":"c_cinap","date":"2018-08-07T05:25:08.150Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 244 seconds","date":"2018-08-07T05:25:08.642Z","type":"quit"}
{"nick":"TheMadcapper","reason":"Ping timeout: 265 seconds","date":"2018-08-07T05:25:34.366Z","type":"quit"}
{"nick":"sauvin","date":"2018-08-07T05:28:48.601Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T05:40:01.457Z","type":"join"}
{"nick":"zumba","reason":"Ping timeout: 260 seconds","date":"2018-08-07T05:40:19.073Z","type":"quit"}
{"nick":"starz0r","reason":"Ping timeout: 248 seconds","date":"2018-08-07T05:42:57.531Z","type":"quit"}
{"nick":"wsieroci","date":"2018-08-07T05:43:20.659Z","type":"join"}
{"nick":"anexit","date":"2018-08-07T05:44:19.732Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T05:46:05.476Z","type":"quit"}
{"nick":"zumba","date":"2018-08-07T05:47:10.965Z","type":"join"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T05:48:12.497Z","type":"quit"}
{"nick":"hdon","date":"2018-08-07T05:48:26.516Z","type":"join"}
{"nick":"Some_Person","reason":"Quit: ZNC 1.7.0 - https://znc.in","date":"2018-08-07T05:51:28.011Z","type":"quit"}
{"nick":"Some_Person","date":"2018-08-07T05:51:55.111Z","type":"join"}
{"nick":"sadtaco","date":"2018-08-07T05:52:07.064Z","type":"join"}
{"nick":"hdon","reason":"Ping timeout: 240 seconds","date":"2018-08-07T05:52:35.463Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T05:52:45.047Z","type":"join"}
{"nick":"neo4","date":"2018-08-07T05:53:03.633Z","type":"join"}
{"nick":"bsaboia","reason":"Ping timeout: 268 seconds","date":"2018-08-07T05:53:32.755Z","type":"quit"}
{"nick":"madprops25","date":"2018-08-07T05:53:33.578Z","type":"join"}
{"nick":"madprops25","reason":"K-Lined","date":"2018-08-07T05:53:44.106Z","type":"quit"}
{"nick":"fatalhalt","date":"2018-08-07T06:00:16.533Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 260 seconds","date":"2018-08-07T06:02:29.344Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T06:03:05.731Z","type":"join"}
{"nick":"tristanp","reason":"Remote host closed the connection","date":"2018-08-07T06:03:08.891Z","type":"quit"}
{"nick":"shanxS","date":"2018-08-07T06:05:28.078Z","type":"join"}
{"nick":"shanxS","reason":"Remote host closed the connection","date":"2018-08-07T06:06:00.876Z","type":"quit"}
{"nick":"cdev771","date":"2018-08-07T06:06:05.294Z","type":"join"}
{"nick":"shanxS","date":"2018-08-07T06:06:27.200Z","type":"join"}
{"nick":"flakas","date":"2018-08-07T06:06:37.545Z","type":"join"}
{"nick":"apowers313","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T06:08:08.001Z","type":"quit"}
{"nick":"bradfordli123","reason":"Remote host closed the connection","date":"2018-08-07T06:08:59.594Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T06:10:27.738Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T06:11:41.250Z","type":"join"}
{"nick":"bradfordli123","date":"2018-08-07T06:12:59.125Z","type":"join"}
{"nick":"zumba","reason":"Ping timeout: 240 seconds","date":"2018-08-07T06:13:27.769Z","type":"quit"}
{"nick":"Fumler","reason":"\"cya\"","date":"2018-08-07T06:15:50.419Z","type":"part"}
{"nick":"jsatk","reason":"Ping timeout: 256 seconds","date":"2018-08-07T06:17:40.292Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T06:19:06.748Z","type":"join"}
{"nick":"zumba","date":"2018-08-07T06:21:31.855Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T06:23:27.738Z","type":"quit"}
{"nick":"ch007m","reason":"Ping timeout: 248 seconds","date":"2018-08-07T06:23:29.396Z","type":"quit"}
{"nick":"AvianFlu","reason":"Ping timeout: 264 seconds","date":"2018-08-07T06:24:22.085Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T06:24:29.061Z","type":"join"}
{"nick":"hfp_work","reason":"Ping timeout: 265 seconds","date":"2018-08-07T06:24:32.371Z","type":"quit"}
{"nick":"hfp_work","date":"2018-08-07T06:25:59.282Z","type":"join"}
{"nick":"zumba","reason":"Ping timeout: 264 seconds","date":"2018-08-07T06:26:09.940Z","type":"quit"}
{"nick":"j4f-shredder","reason":"Ping timeout: 252 seconds","date":"2018-08-07T06:28:09.719Z","type":"quit"}
{"nick":"bigau","date":"2018-08-07T06:29:04.609Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 260 seconds","date":"2018-08-07T06:29:19.052Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T06:29:52.548Z","type":"join"}
{"nick":"Fuzzy_Panda","date":"2018-08-07T06:31:16.882Z","type":"join"}
{"nick":"tymczenko","date":"2018-08-07T06:32:12.754Z","type":"join"}
{"nick":"bigau","reason":"Ping timeout: 252 seconds","date":"2018-08-07T06:33:39.614Z","type":"quit"}
{"nick":"TinkerT","reason":"Read error: Connection reset by peer","date":"2018-08-07T06:34:31.697Z","type":"quit"}
{"nick":"sofly","reason":"Quit: Ping timeout (120 seconds)","date":"2018-08-07T06:35:13.553Z","type":"quit"}
{"nick":"TinkerT","date":"2018-08-07T06:36:10.403Z","type":"join"}
{"nick":"wsieroci","date":"2018-08-07T06:37:22.760Z","type":"join"}
{"nick":"fatalhalt","reason":"Quit: fatal halt","date":"2018-08-07T06:37:47.646Z","type":"quit"}
{"nick":"sadako","date":"2018-08-07T06:37:59.192Z","type":"join"}
{"nick":"sadtaco","reason":"Ping timeout: 260 seconds","date":"2018-08-07T06:39:14.052Z","type":"quit"}
{"nick":"zumba","date":"2018-08-07T06:39:30.741Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 244 seconds","date":"2018-08-07T06:40:03.665Z","type":"quit"}
{"nick":"cdev771","reason":"Ping timeout: 256 seconds","date":"2018-08-07T06:40:54.256Z","type":"quit"}
{"nick":"chargen_","date":"2018-08-07T06:41:10.943Z","type":"join"}
{"nick":"sekizo19","date":"2018-08-07T06:41:31.307Z","type":"join"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T06:42:02.305Z","type":"quit"}
{"nick":"kakashiAL","date":"2018-08-07T06:42:13.688Z","type":"join"}
{"nick":"groom","date":"2018-08-07T06:43:18.468Z","type":"join"}
{"nick":"sekizo19","reason":"Remote host closed the connection","date":"2018-08-07T06:45:00.494Z","type":"quit"}
{"nick":"Fuzzy_Panda","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T06:47:10.781Z","type":"quit"}
{"nick":"kapil___","reason":"Quit: Connection closed for inactivity","date":"2018-08-07T06:47:57.226Z","type":"quit"}
{"nick":"bsaboia","date":"2018-08-07T06:47:58.306Z","type":"join"}
{"nick":"Antares268","date":"2018-08-07T06:48:37.297Z","type":"join"}
{"nick":"Antares268","reason":"Client Quit","date":"2018-08-07T06:49:59.629Z","type":"quit"}
{"nick":"gdibass","reason":"Remote host closed the connection","date":"2018-08-07T06:50:42.126Z","type":"quit"}
{"nick":"bcoe","date":"2018-08-07T06:51:17.048Z","type":"quit"}
{"nick":"cthulchu","reason":"Ping timeout: 260 seconds","date":"2018-08-07T06:51:29.098Z","type":"quit"}
{"nick":"Antares268","date":"2018-08-07T06:52:08.296Z","type":"join"}
{"nick":"flakas","reason":"Read error: Connection reset by peer","date":"2018-08-07T06:52:15.104Z","type":"quit"}
{"nick":"Antares268","reason":"Client Quit","date":"2018-08-07T06:55:48.836Z","type":"quit"}
{"nick":"grr12314","date":"2018-08-07T06:56:01.610Z","type":"join"}
{"nick":"darutoko","date":"2018-08-07T06:56:10.584Z","type":"join"}
{"nick":"fatalhalt","date":"2018-08-07T06:59:31.880Z","type":"join"}
{"nick":"Reverite","reason":"Quit: bbl","date":"2018-08-07T07:00:01.324Z","type":"quit"}
{"nick":"jphase","date":"2018-08-07T07:02:01.075Z","type":"join"}
{"nick":"Reverite","date":"2018-08-07T07:02:20.802Z","type":"join"}
{"nick":"zava","date":"2018-08-07T07:02:29.072Z","type":"join"}
{"nick":"zava","reason":"Client Quit","date":"2018-08-07T07:02:42.329Z","type":"quit"}
{"nick":"tristanp","date":"2018-08-07T07:03:40.394Z","type":"join"}
{"nick":"grr12314","reason":"Ping timeout: 252 seconds","date":"2018-08-07T07:05:00.613Z","type":"quit"}
{"nick":"LiftLeft2","new_nick":"LiftLeft","date":"2018-08-07T07:05:48.837Z","type":"nick"}
{"nick":"neo4","reason":"Ping timeout: 244 seconds","date":"2018-08-07T07:06:24.591Z","type":"quit"}
{"nick":"lexileo","date":"2018-08-07T07:07:05.420Z","type":"quit"}
{"nick":"tristanp","reason":"Ping timeout: 244 seconds","date":"2018-08-07T07:08:28.567Z","type":"quit"}
{"nick":"lexileo","date":"2018-08-07T07:08:35.318Z","type":"join"}
{"nick":"doaks","date":"2018-08-07T07:10:41.466Z","type":"join"}
{"nick":"horsey","date":"2018-08-07T07:11:17.453Z","type":"join"}
{"nick":"doaks","reason":"Read error: Connection reset by peer","date":"2018-08-07T07:12:47.734Z","type":"quit"}
{"nick":"mbecker","reason":"Ping timeout: 256 seconds","date":"2018-08-07T07:13:27.547Z","type":"quit"}
{"nick":"mbecker","date":"2018-08-07T07:13:35.296Z","type":"join"}
{"nick":"hello_kitty","reason":"Ping timeout: 252 seconds","date":"2018-08-07T07:14:21.613Z","type":"quit"}
{"nick":"Antares268","date":"2018-08-07T07:19:07.311Z","type":"join"}
{"nick":"Antares268","reason":"Client Quit","date":"2018-08-07T07:22:08.003Z","type":"quit"}
{"nick":"bhughes","reason":"Excess Flood","date":"2018-08-07T07:24:26.542Z","type":"quit"}
{"nick":"bhughes","date":"2018-08-07T07:24:43.359Z","type":"join"}
{"nick":"Caspinol","date":"2018-08-07T07:25:02.502Z","type":"join"}
{"nick":"Antares268","date":"2018-08-07T07:25:17.120Z","type":"join"}
{"nick":"rendar","date":"2018-08-07T07:25:29.132Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T07:28:14.279Z","type":"join"}
{"nick":"zava","date":"2018-08-07T07:28:17.767Z","type":"join"}
{"nick":"jimlei","date":"2018-08-07T07:29:56.083Z","type":"join"}
{"nick":"RLa","date":"2018-08-07T07:31:02.704Z","type":"join"}
{"nick":"Caspinol","reason":"Remote host closed the connection","date":"2018-08-07T07:31:38.033Z","type":"quit"}
{"nick":"Booster2ooo","date":"2018-08-07T07:31:40.691Z","type":"join"}
{"nick":"Antares268","reason":"Quit: Antares268","date":"2018-08-07T07:31:58.278Z","type":"quit"}
{"nick":"tvw","date":"2018-08-07T07:32:08.629Z","type":"join"}
{"nick":"Antares268","date":"2018-08-07T07:32:22.362Z","type":"join"}
{"nick":"jimlei","reason":"Client Quit","date":"2018-08-07T07:32:26.019Z","type":"quit"}
{"nick":"c_cinap","reason":"Quit: Leaving.","date":"2018-08-07T07:32:32.204Z","type":"quit"}
{"nick":"Antares268","reason":"Client Quit","date":"2018-08-07T07:32:53.769Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 260 seconds","date":"2018-08-07T07:32:54.052Z","type":"quit"}
{"nick":"Antares268","date":"2018-08-07T07:33:12.367Z","type":"join"}
{"nick":"grr12314","date":"2018-08-07T07:34:47.666Z","type":"join"}
{"nick":"tarkus","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T07:36:07.447Z","type":"quit"}
{"nick":"lannister","date":"2018-08-07T07:36:33.087Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T07:37:22.488Z","type":"join"}
{"nick":"lannister","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-07T07:38:34.921Z","type":"quit"}
{"nick":"ferhaty","date":"2018-08-07T07:39:28.292Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 248 seconds","date":"2018-08-07T07:42:25.496Z","type":"quit"}
{"nick":"bradfordli123","reason":"Remote host closed the connection","date":"2018-08-07T07:43:19.329Z","type":"quit"}
{"nick":"mezod","date":"2018-08-07T07:46:28.415Z","type":"join"}
{"nick":"gloomy","date":"2018-08-07T07:47:07.763Z","type":"join"}
{"nick":"mezod","reason":"Ping timeout: 256 seconds","date":"2018-08-07T07:51:10.267Z","type":"quit"}
{"nick":"gloomy","reason":"Ping timeout: 244 seconds","date":"2018-08-07T07:51:52.671Z","type":"quit"}
{"nick":"bradfordli123","date":"2018-08-07T07:59:31.357Z","type":"join"}
{"nick":"zava","reason":"Quit: WeeChat 2.2","date":"2018-08-07T08:00:54.435Z","type":"quit"}
{"nick":"roxer","message":"Hi! i need some help, i am trying to do a discord bot and i want a command that save a flag to a user and saves this in a enmap-level. My problem right now is making the variables  declared in  index.js available in assignflag.js. I was told to use async but can get it to work, i get error message: `(node:32531) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'flags' of undefined`. index.js: https://pastebin.com/PyPxXVwv , commandfile","date":"2018-08-07T08:01:08.020Z","type":"message"}
{"nick":"roxer","message":"assignflag.js: https://pastebin.com/g0eTtaKm","date":"2018-08-07T08:01:08.170Z","type":"message"}
{"nick":"zava","date":"2018-08-07T08:03:12.505Z","type":"join"}
{"nick":"scrptktty","reason":"Quit: Connection closed for inactivity","date":"2018-08-07T08:05:40.201Z","type":"quit"}
{"nick":"infernix7","date":"2018-08-07T08:05:57.040Z","type":"join"}
{"nick":"zava","reason":"Client Quit","date":"2018-08-07T08:06:46.115Z","type":"quit"}
{"nick":"Sleepy_Coder","date":"2018-08-07T08:08:02.606Z","type":"join"}
{"nick":"zava","date":"2018-08-07T08:08:27.553Z","type":"join"}
{"nick":"Sleepy_C1der","reason":"Ping timeout: 256 seconds","date":"2018-08-07T08:09:52.256Z","type":"quit"}
{"nick":"infernix7","reason":"Ping timeout: 264 seconds","date":"2018-08-07T08:11:10.217Z","type":"quit"}
{"nick":"Aquazi","date":"2018-08-07T08:11:24.071Z","type":"join"}
{"nick":"hdon","date":"2018-08-07T08:13:59.071Z","type":"join"}
{"nick":"ahmedelgabri","date":"2018-08-07T08:14:40.637Z","type":"join"}
{"nick":"shanxS","reason":"Quit: Quit","date":"2018-08-07T08:17:09.791Z","type":"quit"}
{"nick":"hdon","reason":"Ping timeout: 260 seconds","date":"2018-08-07T08:18:42.129Z","type":"quit"}
{"nick":"lavenders","message":"should i use es6 moduels, vscode tells me to convert the module to diff syntax without 'require..' ?","date":"2018-08-07T08:19:05.327Z","type":"message"}
{"nick":"ljharb","message":"lavenders: if you're using babel, yes.","date":"2018-08-07T08:19:39.688Z","type":"message"}
{"nick":"lavenders","message":"no bable, is this translator service?","date":"2018-08-07T08:21:44.131Z","type":"message"}
{"nick":"lavenders","message":"i build a lib, so i use module.exports.func1/2/3 = f1/2/3 etc","date":"2018-08-07T08:22:34.602Z","type":"message"}
{"nick":"Sharaal","date":"2018-08-07T08:22:48.843Z","type":"join"}
{"nick":"mezod","date":"2018-08-07T08:24:52.554Z","type":"join"}
{"nick":"darkengine0","date":"2018-08-07T08:26:07.811Z","type":"join"}
{"nick":"darkengine0","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-07T08:26:36.599Z","type":"quit"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T08:27:26.307Z","type":"quit"}
{"nick":"lavenders","message":"i get the notice: [ts] File is a CommonJS module; it may be converted to an ES6 module.","date":"2018-08-07T08:28:16.167Z","type":"message"}
{"nick":"RLa","message":"ts !== babel","date":"2018-08-07T08:29:12.205Z","type":"message"}
{"nick":"RLa","message":"ts comes with its own transpilation pipeline","date":"2018-08-07T08:29:37.747Z","type":"message"}
{"nick":"kapil___","date":"2018-08-07T08:32:42.370Z","type":"join"}
{"nick":"MrAbaddon","reason":"Remote host closed the connection","date":"2018-08-07T08:34:03.619Z","type":"quit"}
{"nick":"zsoc","message":"lavenders: that notice is because vscode is really dumb, ignore it","date":"2018-08-07T08:35:54.455Z","type":"message"}
{"nick":"joepie91","message":"lavenders: vscode is wrong","date":"2018-08-07T08:35:56.967Z","type":"message"}
{"nick":"horsey","reason":"Remote host closed the connection","date":"2018-08-07T08:39:20.955Z","type":"quit"}
{"nick":"cannap","date":"2018-08-07T08:39:44.783Z","type":"join"}
{"nick":"RLa","message":"btw, what is current best practise to build libs vs ts/es6/es5?","date":"2018-08-07T08:41:12.465Z","type":"message"}
{"nick":"horsey","date":"2018-08-07T08:42:01.893Z","type":"join"}
{"nick":"RLa","message":"some time ago it seemed to be: build it in es6/ts, compile to es5 blob, include both source and the blob in npm","date":"2018-08-07T08:42:02.697Z","type":"message"}
{"nick":"DeltaHeavy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T08:42:19.907Z","type":"quit"}
{"nick":"lavenders","message":"yes ok, me dump too a little bit","date":"2018-08-07T08:46:27.741Z","type":"message"}
{"nick":"benjamingr_","date":"2018-08-07T08:48:35.397Z","type":"join"}
{"nick":"JaredCE","date":"2018-08-07T08:48:42.558Z","type":"join"}
{"nick":"ferhaty","reason":"Quit: ferhaty","date":"2018-08-07T08:50:47.333Z","type":"quit"}
{"nick":"ferhaty","date":"2018-08-07T08:53:29.826Z","type":"join"}
{"nick":"Myrax","date":"2018-08-07T08:55:37.550Z","type":"join"}
{"nick":"jphased","date":"2018-08-07T08:58:31.325Z","type":"join"}
{"nick":"jimlei","date":"2018-08-07T08:58:51.768Z","type":"join"}
{"nick":"kakashiAL","message":"joepie91: hey joepie91!","date":"2018-08-07T08:59:09.110Z","type":"message"}
{"nick":"kakashiAL","message":"did you get my last message?","date":"2018-08-07T08:59:19.546Z","type":"message"}
{"nick":"gloomy","date":"2018-08-07T09:00:51.800Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T09:01:08.324Z","type":"join"}
{"nick":"jphase","reason":"Ping timeout: 276 seconds","date":"2018-08-07T09:02:17.091Z","type":"quit"}
{"nick":"ffx_","date":"2018-08-07T09:02:46.327Z","type":"join"}
{"nick":"plexigras","date":"2018-08-07T09:04:24.459Z","type":"join"}
{"nick":"tristanp","date":"2018-08-07T09:04:44.379Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T09:05:51.329Z","type":"quit"}
{"nick":"horsey","reason":"Remote host closed the connection","date":"2018-08-07T09:07:16.298Z","type":"quit"}
{"nick":"tsakos","reason":"Ping timeout: 248 seconds","date":"2018-08-07T09:08:17.512Z","type":"quit"}
{"nick":"tymczenko","reason":"Ping timeout: 240 seconds","date":"2018-08-07T09:08:27.738Z","type":"quit"}
{"nick":"tristanp","reason":"Ping timeout: 256 seconds","date":"2018-08-07T09:09:22.303Z","type":"quit"}
{"nick":"MrAbaddon","date":"2018-08-07T09:10:31.505Z","type":"join"}
{"nick":"bradfordli123","reason":"Remote host closed the connection","date":"2018-08-07T09:10:32.542Z","type":"quit"}
{"nick":"aLeSD_","date":"2018-08-07T09:10:53.711Z","type":"join"}
{"nick":"Caspinol","date":"2018-08-07T09:11:18.752Z","type":"join"}
{"nick":"zarchi","date":"2018-08-07T09:13:22.613Z","type":"join"}
{"nick":"zarchi","reason":"Client Quit","date":"2018-08-07T09:14:02.757Z","type":"quit"}
{"nick":"aLeSD_","reason":"Remote host closed the connection","date":"2018-08-07T09:15:22.674Z","type":"quit"}
{"nick":"HDF13","date":"2018-08-07T09:18:08.460Z","type":"join"}
{"nick":"excalith","date":"2018-08-07T09:24:46.329Z","type":"join"}
{"nick":"excalith","reason":"Client Quit","date":"2018-08-07T09:24:46.520Z","type":"quit"}
{"nick":"Booster2ooo|2","date":"2018-08-07T09:26:58.694Z","type":"join"}
{"nick":"Sven_vB_","date":"2018-08-07T09:29:40.431Z","type":"join"}
{"nick":"Sven_vB","reason":"Disconnected by services","date":"2018-08-07T09:29:40.628Z","type":"quit"}
{"nick":"Booster2ooo","reason":"Ping timeout: 256 seconds","date":"2018-08-07T09:29:54.700Z","type":"quit"}
{"nick":"vicenteH29","date":"2018-08-07T09:31:01.367Z","type":"join"}
{"nick":"vicenteH29","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-07T09:31:39.821Z","type":"quit"}
{"nick":"millido","date":"2018-08-07T09:32:31.727Z","type":"join"}
{"nick":"Sharaal","date":"2018-08-07T09:32:52.026Z","type":"join"}
{"nick":"`slikts","message":"time to code some computer programs eh","date":"2018-08-07T09:35:20.730Z","type":"message"}
{"nick":"jimlei","reason":"Ping timeout: 240 seconds","date":"2018-08-07T09:35:57.738Z","type":"quit"}
{"nick":"`slikts","message":"RLa: I'd count TS as being a best practice for libs","date":"2018-08-07T09:35:59.522Z","type":"message"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T09:37:16.700Z","type":"quit"}
{"nick":"RLa","message":"if it does not get in the way of normal js users then I can see ts as an additional value on the library","date":"2018-08-07T09:37:19.604Z","type":"message"}
{"nick":"`slikts","message":"if you're using ts, the move is to emit es6 and then use rollup for tree shaking and then babel","date":"2018-08-07T09:37:21.803Z","type":"message"}
{"nick":"`slikts","message":"RLa: it doesn't","date":"2018-08-07T09:37:28.485Z","type":"message"}
{"nick":"`slikts","message":"it actually helps, since editors like vscode know how to pick up TS type info","date":"2018-08-07T09:37:45.629Z","type":"message"}
{"nick":"`slikts","message":"even for js","date":"2018-08-07T09:37:50.589Z","type":"message"}
{"nick":"RLa","message":"although it makes contribution harder for non-ts programmers","date":"2018-08-07T09:38:20.262Z","type":"message"}
{"nick":"`slikts","message":"it should be marginally so","date":"2018-08-07T09:38:33.023Z","type":"message"}
{"nick":"`slikts","message":"well, or more than marginally, depends","date":"2018-08-07T09:38:55.700Z","type":"message"}
{"nick":"^^^^","reason":"Remote host closed the connection","date":"2018-08-07T09:39:32.390Z","type":"quit"}
{"nick":"`slikts","message":"but library code is a special case","date":"2018-08-07T09:39:46.215Z","type":"message"}
{"nick":"`slikts","message":"since it'll also often look ugly due to perf reasons","date":"2018-08-07T09:39:55.752Z","type":"message"}
{"nick":"caracalla","date":"2018-08-07T09:40:27.228Z","type":"join"}
{"nick":"^^^^","date":"2018-08-07T09:41:27.902Z","type":"join"}
{"nick":"`slikts","message":"meaning that the barrier of entry already is higher than normal","date":"2018-08-07T09:42:35.299Z","type":"message"}
{"nick":"resting","date":"2018-08-07T09:42:53.738Z","type":"join"}
{"nick":"`slikts","message":"like jquery plugins, for example","date":"2018-08-07T09:43:23.327Z","type":"message"}
{"nick":"`slikts","message":"need to be a js ninja to make those","date":"2018-08-07T09:43:28.088Z","type":"message"}
{"nick":"`slikts","message":"top of the class in JS academy","date":"2018-08-07T09:43:53.538Z","type":"message"}
{"nick":"`slikts","message":"over 300 confirmed bug fixes","date":"2018-08-07T09:44:27.721Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T09:45:13.069Z","type":"join"}
{"nick":"`slikts","message":"this was satisfying: const thenOnce = memoize(Promise.prototype.then)","date":"2018-08-07T09:47:40.973Z","type":"message"}
{"nick":"`slikts","message":"although, sadly, it has to be used with .call()","date":"2018-08-07T09:48:00.014Z","type":"message"}
{"nick":"lexileo","reason":"Remote host closed the connection","date":"2018-08-07T09:48:40.593Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 260 seconds","date":"2018-08-07T09:49:59.051Z","type":"quit"}
{"nick":"joepie91","action":"sees no reason to use TS","date":"2018-08-07T09:51:59.534Z","type":"action"}
{"nick":"tymczenko","date":"2018-08-07T09:52:47.772Z","type":"join"}
{"nick":"`slikts","message":"joepie91: so what do you use then, flow, jsdoc?","date":"2018-08-07T09:52:55.169Z","type":"message"}
{"nick":"`slikts","message":"since any decent library will use something, and ts stacks up the best among the options","date":"2018-08-07T09:53:28.873Z","type":"message"}
{"nick":"resting","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T09:53:56.929Z","type":"quit"}
{"nick":"joepie91","message":"`slikts: use for what?","date":"2018-08-07T09:53:59.424Z","type":"message"}
{"nick":"`slikts","message":"for documenting library apis","date":"2018-08-07T09:54:25.037Z","type":"message"}
{"nick":"joepie91","message":"none of the above? I write actual documentation","date":"2018-08-07T09:54:34.080Z","type":"message"}
{"nick":"`slikts","message":"actual documentation that can't be used by editors","date":"2018-08-07T09:54:48.137Z","type":"message"}
{"nick":"fatalhalt","reason":"Quit: fatal halt","date":"2018-08-07T09:55:02.706Z","type":"quit"}
{"nick":"gli","reason":"Quit: Leaving","date":"2018-08-07T09:55:06.426Z","type":"quit"}
{"nick":"joepie91","message":"I'll happily include a machine-readable version once somebody gets around to specifying a format for that that doesn't require modifying my source code","date":"2018-08-07T09:55:15.121Z","type":"message"}
{"nick":"`slikts","message":"code intelligence is nice for users","date":"2018-08-07T09:55:15.727Z","type":"message"}
{"nick":"joepie91","message":"alas, that seems to not be happening","date":"2018-08-07T09:55:34.720Z","type":"message"}
{"nick":"`slikts","message":"joepie91: ts can have type info in seprate files","date":"2018-08-07T09:55:51.868Z","type":"message"}
{"nick":"joepie91","message":"`slikts: shrug, my experience is that needing what you call 'code intelligence' is generally a pretty big red flag for code quality, at least in JS","date":"2018-08-07T09:55:55.474Z","type":"message"}
{"nick":"`slikts","message":"and flow can too iirc","date":"2018-08-07T09:55:55.626Z","type":"message"}
{"nick":"joepie91","message":"`slikts: type info is not documentation","date":"2018-08-07T09:56:07.830Z","type":"message"}
{"nick":"`slikts","message":"joepie91: it's not 'needing', it's just nice","date":"2018-08-07T09:56:12.897Z","type":"message"}
{"nick":"`slikts","message":"joepie91: it is part of it","date":"2018-08-07T09:56:17.904Z","type":"message"}
{"nick":"joepie91","message":"same argument","date":"2018-08-07T09:56:18.953Z","type":"message"}
{"nick":"`slikts","message":"docs include the function signatures","date":"2018-08-07T09:56:33.316Z","type":"message"}
{"nick":"joepie91","message":"type information is such an absolutely insignificant part of documentation that it doesn't even come close to what I'm asking for here :)","date":"2018-08-07T09:56:34.695Z","type":"message"}
{"nick":"`slikts","message":"and with TS they're guaranteed to be in sync with code","date":"2018-08-07T09:56:46.123Z","type":"message"}
{"nick":"`slikts","message":"joepie91: it's... the most important part?","date":"2018-08-07T09:56:58.975Z","type":"message"}
{"nick":"`slikts","message":"because it documents what you actually call","date":"2018-08-07T09:57:06.750Z","type":"message"}
{"nick":"joepie91","message":"shrug, easy enough to verify in-sync-ness using code analysis without typescript","date":"2018-08-07T09:57:10.032Z","type":"message"}
{"nick":"joepie91","message":"`slikts: no, it really is not","date":"2018-08-07T09:57:13.857Z","type":"message"}
{"nick":"`slikts","message":"it's the starting point","date":"2018-08-07T09:57:18.355Z","type":"message"}
{"nick":"`slikts","message":"for anything","date":"2018-08-07T09:57:21.616Z","type":"message"}
{"nick":"joepie91","message":"it's not","date":"2018-08-07T09:57:24.109Z","type":"message"}
{"nick":"`slikts","message":"yes it obviously is lol, it's how you interface with the code","date":"2018-08-07T09:57:35.957Z","type":"message"}
{"nick":"`slikts","message":"also, what \"code analysis\"?","date":"2018-08-07T09:57:44.286Z","type":"message"}
{"nick":"joepie91","message":"I really don't get people's obsession with types, at least in the typescript sense of 'types'; it's such an insufficient set of information that there's nothing truly useful you can do with it, there are no questions that it answers fully","date":"2018-08-07T09:57:57.938Z","type":"message"}
{"nick":"`slikts","message":"all the tools mentioned already are code analysis; is there some other tool?","date":"2018-08-07T09:57:58.294Z","type":"message"}
{"nick":"joepie91","message":"it does not deserve anywhere *near* the amount of attention that it is currently getting","date":"2018-08-07T09:58:23.734Z","type":"message"}
{"nick":"joepie91","message":"especially since that seems to come at the cost of neglecting all the other aspects of documentation and code correctness","date":"2018-08-07T09:58:34.627Z","type":"message"}
{"nick":"`slikts","message":"so it's just about not liking types?","date":"2018-08-07T09:58:39.619Z","type":"message"}
{"nick":"joepie91","message":"because people are too busy polishing up their poorly-designed type systems","date":"2018-08-07T09:58:43.509Z","type":"message"}
{"nick":"joepie91","message":"no, it's not","date":"2018-08-07T09:58:51.505Z","type":"message"}
{"nick":"joepie91","message":"it's about disliking the unreasonable amount of emphasis placed on them","date":"2018-08-07T09:59:00.033Z","type":"message"}
{"nick":"joepie91","message":"and people completely losing sight of what actually matters","date":"2018-08-07T09:59:05.131Z","type":"message"}
{"nick":"joepie91","message":"like is happening here","date":"2018-08-07T09:59:09.046Z","type":"message"}
{"nick":"`slikts","message":"so what \"code analysis\" tool did you mean?","date":"2018-08-07T09:59:11.832Z","type":"message"}
{"nick":"`slikts","message":"to ensure docs are in sync","date":"2018-08-07T09:59:18.773Z","type":"message"}
{"nick":"Neuromancer","reason":"Ping timeout: 265 seconds","date":"2018-08-07T09:59:37.370Z","type":"quit"}
{"nick":"joepie91","message":"`slikts: if a machine-readable format for documentation were to exist, then it would not at all be difficult to write a tool that analyzes the actually-exported code to verify that the documented API is actually valid","date":"2018-08-07T09:59:46.397Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: there ?:(","date":"2018-08-07T09:59:46.615Z","type":"message"}
{"nick":"joepie91","message":"it's one of the easier code analysis cases, in fact","date":"2018-08-07T09:59:56.450Z","type":"message"}
{"nick":"joepie91","message":"because you have a known baseline","date":"2018-08-07T10:00:09.628Z","type":"message"}
{"nick":"`slikts","message":"joepie91: the formats already exist...","date":"2018-08-07T10:00:27.296Z","type":"message"}
{"nick":"joepie91","message":"formats such as?","date":"2018-08-07T10:00:34.146Z","type":"message"}
{"nick":"`slikts","message":"ts, jsdoc, flow","date":"2018-08-07T10:00:39.840Z","type":"message"}
{"nick":"joepie91","message":"none of those are what I am asking for","date":"2018-08-07T10:00:46.777Z","type":"message"}
{"nick":"joepie91","message":"jsdoc is in-code comments; I explicitly asked about external machine-readable docs","date":"2018-08-07T10:00:55.910Z","type":"message"}
{"nick":"joepie91","message":"flow and ts involve source code modifications and only cover types, nothing else","date":"2018-08-07T10:01:08.568Z","type":"message"}
{"nick":"`slikts","message":"whatever, TS can definitely be 'external'","date":"2018-08-07T10:01:10.036Z","type":"message"}
{"nick":"joepie91","message":"none of the above are 'machine-readable documentation formats'","date":"2018-08-07T10:01:18.781Z","type":"message"}
{"nick":"jphased","reason":"Remote host closed the connection","date":"2018-08-07T10:01:19.989Z","type":"quit"}
{"nick":"joepie91","message":"`slikts: okay? something that only meets one out of the various requirements is not useful","date":"2018-08-07T10:01:30.648Z","type":"message"}
{"nick":"`slikts","message":"they largely are; you can put the documentation in /** */ comments","date":"2018-08-07T10:01:36.820Z","type":"message"}
{"nick":"joepie91","message":"I don't think you understand what I am asking for...","date":"2018-08-07T10:01:56.751Z","type":"message"}
{"nick":"`slikts","message":"joepie91: or maybe it is useful... for the requirements it does meet?","date":"2018-08-07T10:01:59.197Z","type":"message"}
{"nick":"caracalla","reason":"Read error: Connection reset by peer","date":"2018-08-07T10:02:21.344Z","type":"quit"}
{"nick":"joepie91","action":"sighs","date":"2018-08-07T10:02:22.938Z","type":"action"}
{"nick":"`slikts","message":"a tool doesn't need to do every possible thing to be useful","date":"2018-08-07T10:02:27.619Z","type":"message"}
{"nick":"joepie91","message":"`slikts: you seem more interested in arguing that the solution already sort of kind of exists, than in understanding my goal","date":"2018-08-07T10:02:38.371Z","type":"message"}
{"nick":"`slikts","message":"your goal has partial solutions","date":"2018-08-07T10:03:22.635Z","type":"message"}
{"nick":"`slikts","message":"that you're discounting for not very convincing reasons","date":"2018-08-07T10:03:43.955Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: dont want to annoy you, but do you have a moment?","date":"2018-08-07T10:04:02.667Z","type":"message"}
{"nick":"joepie91","message":"you haven't even bothered to *ask* for the reasons, you're too busy trying to find ways to argue that it's Really Fine, Honestly","date":"2018-08-07T10:04:05.380Z","type":"message"}
{"nick":"joepie91","message":"kakashiAL: depends very much on the question","date":"2018-08-07T10:04:23.815Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: I asked it some days ago, even highlighted you, but let me repeat :)","date":"2018-08-07T10:05:31.842Z","type":"message"}
{"nick":"`slikts","message":"joepie91: I mean, I'm replying to what you said, namely that ther's no reason to use TS or similar tools","date":"2018-08-07T10:05:32.232Z","type":"message"}
{"nick":"tristanp","date":"2018-08-07T10:05:37.409Z","type":"join"}
{"nick":"`slikts","message":"I just point out that there are reasons","date":"2018-08-07T10:05:38.964Z","type":"message"}
{"nick":"joepie91","message":"`slikts: I can tell you with absolute certainty that neither jsdoc, nor flow, nor TS provide what I am looking for; you can either try to understand why that is, or continue trying to convince me that the tools *that I already know are inadequate* are somehow fine","date":"2018-08-07T10:05:39.498Z","type":"message"}
{"nick":"joepie91","message":"`slikts: you have provided no compelling usecases","date":"2018-08-07T10:05:58.054Z","type":"message"}
{"nick":"`slikts","message":"joepie91: imperfect doesn't mean inadequate","date":"2018-08-07T10:06:04.586Z","type":"message"}
{"nick":"joepie91","message":"'you can do autocompletion' is not a compelling usecase because 1) it can only do so in a very limited manner given the information encoded in TS' and Flow's type system, and 2) you should not be needing this in the first place in JS","date":"2018-08-07T10:06:37.010Z","type":"message"}
{"nick":"`slikts","message":"joepie91: I'm not sure what can be compelling for you since you seem to think the api signatures aren't useful to know","date":"2018-08-07T10:06:44.143Z","type":"message"}
{"nick":"joepie91","message":"`slikts: those are your words, not mine.","date":"2018-08-07T10:06:54.827Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: I am using objection and the objection-db-errors plugin which throws human readable errors with typed errors that mean something :)","date":"2018-08-07T10:07:02.735Z","type":"message"}
{"nick":"joepie91","message":"API signatures are perfectly useful to know; I'm saying that neither TS nor Flow make the situation any meaningfully better here than a README.md","date":"2018-08-07T10:07:21.019Z","type":"message"}
{"nick":"`slikts","message":"joepie91: you called api signatures \"absolutely insignificant\"","date":"2018-08-07T10:07:31.209Z","type":"message"}
{"nick":"joepie91","message":"thus, they are not a reason to use TS/Flow","date":"2018-08-07T10:07:32.428Z","type":"message"}
{"nick":"joepie91","message":"`slikts: no, I called *type information* absolutely insignificant, in the meaning of types that TS/Flow adhere to.","date":"2018-08-07T10:07:52.592Z","type":"message"}
{"nick":"`slikts","message":"which includes api signatures...","date":"2018-08-07T10:08:02.498Z","type":"message"}
{"nick":"joepie91","message":"`slikts: seriously, try to _actually understand my point_ instead of reading it how you're wanting to read it","date":"2018-08-07T10:08:05.606Z","type":"message"}
{"nick":"joepie91","message":"no, it doesn't","date":"2018-08-07T10:08:09.123Z","type":"message"}
{"nick":"`slikts","message":"yes it does","date":"2018-08-07T10:08:12.809Z","type":"message"}
{"nick":"joepie91","message":"type information is a subset of an API signature","date":"2018-08-07T10:08:13.667Z","type":"message"}
{"nick":"`slikts","message":"it's the other way around","date":"2018-08-07T10:08:26.321Z","type":"message"}
{"nick":"Neuromancer","date":"2018-08-07T10:08:32.120Z","type":"join"}
{"nick":"joepie91","action":"sighs","date":"2018-08-07T10:08:50.946Z","type":"action"}
{"nick":"joepie91","message":"okay, let me rephrase that","date":"2018-08-07T10:08:53.645Z","type":"message"}
{"nick":"joepie91","message":"within an API signature, type information is only a part of the information.","date":"2018-08-07T10:09:03.172Z","type":"message"}
{"nick":"`slikts","message":"not much of rephrasing","date":"2018-08-07T10:09:18.740Z","type":"message"}
{"nick":"joepie91","message":"(once again, we're talking about what TS/Flow consider a 'type' here, not 'types' in the general compsci sense, which is much more extensive.)","date":"2018-08-07T10:09:25.305Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: if I use it as it is, I have to overfill my global error handler with logic like if (UniqViolationError), if (NotNullViolationError), if ....","date":"2018-08-07T10:10:06.126Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: my question is if you know a better cleaner way that keeps my global error handler clean","date":"2018-08-07T10:10:33.616Z","type":"message"}
{"nick":"joepie91","message":"kakashiAL: just... filtered catch?","date":"2018-08-07T10:10:45.166Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 256 seconds","date":"2018-08-07T10:11:16.805Z","type":"quit"}
{"nick":"kakashiAL","message":"joepie91: you would put all that db-error handling logic in your global error handler?","date":"2018-08-07T10:11:22.241Z","type":"message"}
{"nick":"joepie91","message":"`slikts: the whole problem with the notion of 'types' that Flow and TS uses, is that it's limited to an extremely high-level view of them; essentially primitives, collections, and compositions thereof, and there is no facility to eg. include *semantically valid values* in the type information, meaning that a type definition in Flow/TS can never be a full description of what constitutes a valid thing to pass in","date":"2018-08-07T10:11:53.886Z","type":"message"}
{"nick":"joepie91","message":"`slikts: which means that, as a replacement of human-readable documentation, it is wholly inadequate; it does not contain all the information needed to work with it","date":"2018-08-07T10:12:16.046Z","type":"message"}
{"nick":"joepie91","message":"and then I'm not even talking about human-interpretable information such as the purpose, how it relates to other things, examples, etc.","date":"2018-08-07T10:12:35.202Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: remember that the error has no status, that I have to put manualy in, so the if-logic is not the only thing","date":"2018-08-07T10:12:38.070Z","type":"message"}
{"nick":"dh128","reason":"Ping timeout: 264 seconds","date":"2018-08-07T10:12:58.046Z","type":"quit"}
{"nick":"kakashiAL","message":"joepie91: one idea is to do it like this:","date":"2018-08-07T10:13:09.595Z","type":"message"}
{"nick":"kakashiAL","message":"app.use(createDbErrors);","date":"2018-08-07T10:13:17.932Z","type":"message"}
{"nick":"kakashiAL","message":"app.use(globalErrorHandler);","date":"2018-08-07T10:13:25.136Z","type":"message"}
{"nick":"`slikts","message":"joepie91: it's wholly inadequate except for the cases where it's fine","date":"2018-08-07T10:13:40.225Z","type":"message"}
{"nick":"joepie91","message":"`slikts: in other words: either 1) you don't know how the API works, and you need to read the human-readable docs anyway because the type information does not encode all the necessary constraints, or 2) you *do* know how the API works and then why do you need the type information? your code should be loosely coupled and abstracted enough that the type information is apparent from the context","date":"2018-08-07T10:13:54.786Z","type":"message"}
{"nick":"hdon","date":"2018-08-07T10:14:12.331Z","type":"join"}
{"nick":"joepie91","message":"tl;dr there is no point","date":"2018-08-07T10:14:13.811Z","type":"message"}
{"nick":"joepie91","message":"`slikts: and which cases would that be?","date":"2018-08-07T10:14:20.594Z","type":"message"}
{"nick":"dh128","date":"2018-08-07T10:14:43.740Z","type":"join"}
{"nick":"kakashiAL","message":"joepie91: createDbErrors re-throws the error and creates an error object that the globalErrorHandler can consume with all needed (meta) data","date":"2018-08-07T10:14:52.288Z","type":"message"}
{"nick":"`slikts","message":"joepie91: which cases isn't it fine for then?","date":"2018-08-07T10:14:53.417Z","type":"message"}
{"nick":"joepie91","message":"kakashiAL: I don't really understand what any of this has to do with objection or its database error implementation; the advice is still exactly the same as I've given before, catch specific errors using filtered .catch, then rethrow end-user-directed errors with status codes","date":"2018-08-07T10:15:00.112Z","type":"message"}
{"nick":"joepie91","message":"where the errors come from is irrelevant","date":"2018-08-07T10:15:08.157Z","type":"message"}
{"nick":"joepie91","message":"`slikts: I've just told you that.","date":"2018-08-07T10:15:12.868Z","type":"message"}
{"nick":"`slikts","message":"joepie91: not really","date":"2018-08-07T10:15:18.928Z","type":"message"}
{"nick":"joepie91","message":"`slikts: you claim there are cases where it is fine; what are those cases?","date":"2018-08-07T10:15:21.681Z","type":"message"}
{"nick":"`slikts","message":"joepie91: a case where you just want to know the order of parameters, spelling of function name, etc","date":"2018-08-07T10:16:00.274Z","type":"message"}
{"nick":"joepie91","message":"you don't need type information for that; those can be inferred, and are, by eg. Tern","date":"2018-08-07T10:16:16.609Z","type":"message"}
{"nick":"joepie91","message":"and have been before TS and Flow were even a thing\\","date":"2018-08-07T10:16:26.567Z","type":"message"}
{"nick":"`slikts","message":"there certainly are many things that can't be expressed with TS types but are valid JS, but TS goes a long way","date":"2018-08-07T10:16:27.296Z","type":"message"}
{"nick":"`slikts","message":"joepie91: tern barely works, though","date":"2018-08-07T10:16:47.521Z","type":"message"}
{"nick":"joepie91","message":"not through the fault of its concept :)","date":"2018-08-07T10:17:11.060Z","type":"message"}
{"nick":"`slikts","message":"and if TS is inadequate, then tern is extremely more so","date":"2018-08-07T10:17:11.919Z","type":"message"}
{"nick":"joepie91","message":"oh, sure, but I'm just entertaining your case here","date":"2018-08-07T10:17:22.561Z","type":"message"}
{"nick":"joepie91","message":"I don't actually use Tern because I do not find such hints to provide meaningful benefits","date":"2018-08-07T10:17:37.794Z","type":"message"}
{"nick":"`slikts","message":"and you're just wrong","date":"2018-08-07T10:17:37.947Z","type":"message"}
{"nick":"joepie91","message":"for the reasons that I've already described","date":"2018-08-07T10:17:49.382Z","type":"message"}
{"nick":"`slikts","message":"you said you don't need types because tern does without, but the info tern produces is significantly more limited","date":"2018-08-07T10:18:04.630Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: I am very sorry but I dont understand your solution, please be patient with me, but to answer your question: objection.js allows you to use plugins, I am using the db-error plugin, but thats not the important case. Let me ask it this way: WHERE exactly do you catch the specific errors and re-throw them for the global error handler?","date":"2018-08-07T10:18:10.629Z","type":"message"}
{"nick":"joepie91","message":"`slikts: I did not say that I \"don't need types\".","date":"2018-08-07T10:18:20.163Z","type":"message"}
{"nick":"hdon","reason":"Ping timeout: 240 seconds","date":"2018-08-07T10:18:21.327Z","type":"quit"}
{"nick":"`slikts","message":"13:16 <joepie91> you don't need type information for that; those can be inferred, and are, by eg. Tern","date":"2018-08-07T10:18:27.781Z","type":"message"}
{"nick":"joepie91","message":"yes, type information.","date":"2018-08-07T10:18:36.256Z","type":"message"}
{"nick":"joepie91","message":"not 'types'.","date":"2018-08-07T10:18:38.834Z","type":"message"}
{"nick":"`slikts","message":"same difference","date":"2018-08-07T10:18:47.626Z","type":"message"}
{"nick":"joepie91","message":"no, they're really not.","date":"2018-08-07T10:18:51.941Z","type":"message"}
{"nick":"SolarAquarion","reason":"Remote host closed the connection","date":"2018-08-07T10:18:52.840Z","type":"quit"}
{"nick":"`slikts","message":".........","date":"2018-08-07T10:18:57.894Z","type":"message"}
{"nick":"joepie91","message":"and considering that you've now several times rephrased my statements to the point of inaccuracy and then tried to argue against those inaccurate versions...","date":"2018-08-07T10:19:05.702Z","type":"message"}
{"nick":"`slikts","message":"what's the difference between types and type information?","date":"2018-08-07T10:19:26.783Z","type":"message"}
{"nick":"joepie91","message":"types are a language-level concept, 'type information' refers to the annotations provided by TS/Flow.","date":"2018-08-07T10:19:43.792Z","type":"message"}
{"nick":"Rashad","date":"2018-08-07T10:19:54.373Z","type":"join"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2018-08-07T10:20:00.932Z","type":"quit"}
{"nick":"ed209","date":"2018-08-07T10:20:07.760Z","type":"join"}
{"nick":"`slikts","message":"no, type information is type information","date":"2018-08-07T10:20:10.725Z","type":"message"}
{"nick":"`slikts","message":"the type annotations are one way to provide it","date":"2018-08-07T10:20:19.166Z","type":"message"}
{"nick":"`slikts","message":"it can also be inferred","date":"2018-08-07T10:20:22.163Z","type":"message"}
{"nick":"`slikts","message":"like you yourself brought up with tern","date":"2018-08-07T10:20:29.241Z","type":"message"}
{"nick":"joepie91","message":"I'm not sure what point you're trying to argue here.","date":"2018-08-07T10:20:52.837Z","type":"message"}
{"nick":"Rashad","message":"Hello. If I have a function that has two `await` function calls/statements. Is it possible that by the time the second await has finished, the result from the first await actually changed in the database/calculations that it depended on?","date":"2018-08-07T10:21:03.216Z","type":"message"}
{"nick":"joepie91","message":"Rashad: yes","date":"2018-08-07T10:21:20.897Z","type":"message"}
{"nick":"`slikts","message":"joepie91: that the distinction you brought up doesn't make sense","date":"2018-08-07T10:21:33.374Z","type":"message"}
{"nick":"joepie91","message":"Rashad: read up on 'atomic operations' to understand how to prevent race conditions because of things like that","date":"2018-08-07T10:21:52.387Z","type":"message"}
{"nick":"Rashad","message":"Race conditions. Thanks for the term.","date":"2018-08-07T10:22:02.638Z","type":"message"}
{"nick":"joepie91","message":"Rashad: (and in databases, this is often accomplished using transactions)","date":"2018-08-07T10:22:33.992Z","type":"message"}
{"nick":"Rashad","message":"Transactions?","date":"2018-08-07T10:22:49.441Z","type":"message"}
{"nick":"sxa","date":"2018-08-07T10:22:56.847Z","type":"join"}
{"nick":"joepie91","message":"Rashad: simple explanation is 'a series of database operations where either all of them will be applied or none of them', and the 'none of them' scenario is generally when an error occurs because eg. underlying data has been changed in the meantime","date":"2018-08-07T10:23:30.212Z","type":"message"}
{"nick":"Rashad","message":"I see.","date":"2018-08-07T10:23:41.173Z","type":"message"}
{"nick":"joepie91","message":"(this is something that your DB needs to explicitly support)","date":"2018-08-07T10:23:55.520Z","type":"message"}
{"nick":"Rashad","message":"And then I have to code myself?","date":"2018-08-07T10:24:03.897Z","type":"message"}
{"nick":"joepie91","message":"(every major RDBMS does though)","date":"2018-08-07T10:24:08.851Z","type":"message"}
{"nick":"Rashad","message":"I mean in my own logic.","date":"2018-08-07T10:24:10.765Z","type":"message"}
{"nick":"joepie91","message":"Rashad: well, the exact approach is going to depend on what operations you're carrying out where","date":"2018-08-07T10:24:23.791Z","type":"message"}
{"nick":"joepie91","message":"if it only concerns a few database operations, and you're using a database that supports transactions, it'll just be a matter of using the database library's transaction API","date":"2018-08-07T10:24:44.809Z","type":"message"}
{"nick":"Rashad","message":"There must be a more general solution that works for stuff other than databases.","date":"2018-08-07T10:24:46.967Z","type":"message"}
{"nick":"joepie91","message":"there's no general solution; atomicity needs to be supported by whatever tool you're working with, and the way to resolve failures varies depending on the usecase","date":"2018-08-07T10:25:10.776Z","type":"message"}
{"nick":"Rashad","message":"Is there a way to tell node that one event *has* to be executed right after another event?","date":"2018-08-07T10:25:22.069Z","type":"message"}
{"nick":"joepie91","message":"there's also sometimes different solutions with different tradeoffs","date":"2018-08-07T10:25:28.096Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: https://paste.xinu.at/eDYlc/js","date":"2018-08-07T10:25:37.879Z","type":"message"}
{"nick":"lordjancso","date":"2018-08-07T10:25:40.403Z","type":"join"}
{"nick":"joepie91","message":"Rashad: no; but even if there were, that wouldn't be the full story","date":"2018-08-07T10:25:43.917Z","type":"message"}
{"nick":"joepie91","message":"Rashad: for example, even if everything ran synchronously in your process, if it's depending on some sort of external database, then some external process could still modify the data inbetween","date":"2018-08-07T10:26:04.298Z","type":"message"}
{"nick":"joepie91","message":"you *can* guarantee atomicity within your own code, so long as all operations are synchronous and the data never leaves your process","date":"2018-08-07T10:26:31.640Z","type":"message"}
{"nick":"gloomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T10:26:41.858Z","type":"quit"}
{"nick":"Rashad","message":"Aha.","date":"2018-08-07T10:26:50.293Z","type":"message"}
{"nick":"joepie91","message":"but the moment you hit an 'async boundary', ie. a point where other events get the chance to execute, you can no longer guarantee atomicity","date":"2018-08-07T10:27:10.455Z","type":"message"}
{"nick":"joepie91","message":"(or at least not without complex rollback mechanisms)","date":"2018-08-07T10:27:16.240Z","type":"message"}
{"nick":"Rashad","message":"Rollback mechanisms... sounds bad.","date":"2018-08-07T10:27:32.273Z","type":"message"}
{"nick":"joepie91","message":"it's a typical recovery mechanism, also what RDBMSes do, but if you can avoid building one then that's for the better :)","date":"2018-08-07T10:27:53.737Z","type":"message"}
{"nick":"joepie91","message":"Rashad: I recommend watching https://www.youtube.com/watch?v=cCOL7MC4Pl0 btw to get an idea of where the 'async boundaries' are","date":"2018-08-07T10:28:23.467Z","type":"message"}
{"nick":"joepie91","message":"kakashiAL: in the route","date":"2018-08-07T10:28:38.058Z","type":"message"}
{"nick":"SolarAquarion","date":"2018-08-07T10:28:38.715Z","type":"join"}
{"nick":"joepie91","message":"we've gone through this months ago :)","date":"2018-08-07T10:28:47.971Z","type":"message"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2018-08-07T10:29:19.917Z","type":"quit"}
{"nick":"joepie91","message":"Rashad: anyway, if you have a more concrete example of what you're trying to do, I might be able to give you a better / more concrete answer","date":"2018-08-07T10:29:54.821Z","type":"message"}
{"nick":"Rashad","message":"The problem for me is if I have two awaits in the same \"level\"","date":"2018-08-07T10:30:58.058Z","type":"message"}
{"nick":"Rashad","message":"Because one await is equal to one callback.","date":"2018-08-07T10:31:19.855Z","type":"message"}
{"nick":"SolarAquarion","reason":"Max SendQ exceeded","date":"2018-08-07T10:31:21.770Z","type":"quit"}
{"nick":"joepie91","message":"Rashad: I really do mean more concrete though, an actual code example, or a description of what operations you're carrying out where, what is async and why, and so on","date":"2018-08-07T10:31:22.771Z","type":"message"}
{"nick":"joepie91","message":"\"two awaits\" is too abstract for me to say anything meaningful about","date":"2018-08-07T10:31:31.876Z","type":"message"}
{"nick":"joepie91","message":"those things could be awaiting absolutely anything :)","date":"2018-08-07T10:31:41.101Z","type":"message"}
{"nick":"Rashad","message":"joepie91: I am trying to make the data in the database synchronized between clients.","date":"2018-08-07T10:31:45.646Z","type":"message"}
{"nick":"Rashad","message":"clients running on browsers; communication with the db through the server.","date":"2018-08-07T10:31:59.016Z","type":"message"}
{"nick":"Rashad","message":"I am not sure but on a hunch, would \"redefining time\" solve the problem?","date":"2018-08-07T10:32:15.778Z","type":"message"}
{"nick":"Rashad","message":"Hmm.","date":"2018-08-07T10:32:43.637Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: but in that case, if I catch it in the route, I will have something like User.insert().catch(myCustomDBHandler) that filters by errors and throw a custom error BUT I have to always use .catch(myCustomBbErrorHandler) in all my routes, isnt that repetitive ?","date":"2018-08-07T10:33:32.057Z","type":"message"}
{"nick":"Rashad","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T10:33:36.403Z","type":"quit"}
{"nick":"joepie91","message":"kakashiAL: not particularly, because your handling is usually going to vary slightly by route","date":"2018-08-07T10:34:19.599Z","type":"message"}
{"nick":"lexileo","date":"2018-08-07T10:34:20.772Z","type":"join"}
{"nick":"Sharaal","date":"2018-08-07T10:35:42.693Z","type":"join"}
{"nick":"kakashiAL","message":"joepie91: no, because all my routes that interact with the database use objection (which uses the database error plugin) and because it uses bluebird I can write one database error handler for all my models, but again, in this case I always have to inject it to all of my routes","date":"2018-08-07T10:36:36.232Z","type":"message"}
{"nick":"joepie91","message":"`slikts: to return to my original point; I don't use jsdoc because I don't want to litter my code with things that really don't belong in code files (ie. docs); I don't use TS or Flow because I do not find either of them to produce significant tangible benefits, and certainly not enough benefits to justify the additional work and tooling; I'd be happy to provide *full* machine-readable documentation, because then the benefit gained from it actually","date":"2018-08-07T10:37:00.427Z","type":"message"}
{"nick":"joepie91","message":"compared well to the effort spent.","date":"2018-08-07T10:37:01.923Z","type":"message"}
{"nick":"joepie91","message":"kakashiAL: again, whether you're using objection everywhere is irrelevant","date":"2018-08-07T10:37:22.115Z","type":"message"}
{"nick":"joepie91","message":"kakashiAL: the same error has different meanings and different recovery requirements in different contexts","date":"2018-08-07T10:37:33.239Z","type":"message"}
{"nick":"joepie91","message":"I have explained this to you many times in the past and I'm honestly running out of energy for this constantly-recurring discussion","date":"2018-08-07T10:38:04.397Z","type":"message"}
{"nick":"Huck777","date":"2018-08-07T10:38:05.367Z","type":"join"}
{"nick":"`slikts","message":"joepie91: your basis for not seeing benefits seems to be that the tools are imperfect","date":"2018-08-07T10:38:27.101Z","type":"message"}
{"nick":"Rashad","date":"2018-08-07T10:38:34.706Z","type":"join"}
{"nick":"`slikts","message":"and you're postulating some \"full\" aka perfect tool that doesn't exist","date":"2018-08-07T10:38:46.451Z","type":"message"}
{"nick":"joepie91","message":"`slikts: it's not.","date":"2018-08-07T10:38:49.277Z","type":"message"}
{"nick":"Rashad","message":"My laptop's battery dyed.","date":"2018-08-07T10:38:50.495Z","type":"message"}
{"nick":"Rashad","message":"died*","date":"2018-08-07T10:38:53.487Z","type":"message"}
{"nick":"Rashad","message":"Sorry.","date":"2018-08-07T10:38:56.743Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: the database errors that I catch are validation errors from type \"null validation\", \"id already exists\" and so on, I can create one big function that dynamicaly works for all my models, but the main problem I have here is that I have to plug it in every route","date":"2018-08-07T10:39:19.229Z","type":"message"}
{"nick":"Rashad","message":"OK I know what's a solution to my problem.","date":"2018-08-07T10:39:25.474Z","type":"message"}
{"nick":"`slikts","message":"joepie91: right, and also that you don't find things like code intelligence useful in your personal workflow","date":"2018-08-07T10:39:26.685Z","type":"message"}
{"nick":"joepie91","message":"`slikts: my basis for it is that I'm doing 90% of the work of an exhaustive specification for only 10% of the benefits, and that is not a rational choice to make.","date":"2018-08-07T10:39:27.806Z","type":"message"}
{"nick":"Rashad","message":"Ummm maybe not.","date":"2018-08-07T10:39:50.252Z","type":"message"}
{"nick":"Sharaal","reason":"Ping timeout: 240 seconds","date":"2018-08-07T10:39:51.332Z","type":"quit"}
{"nick":"SolarAquarion","date":"2018-08-07T10:40:22.367Z","type":"join"}
{"nick":"joepie91","message":"`slikts: I've not found it useful in JS in general, not just in my own personal workflow; pretty much without exception, anybody whose code I've reviewed who indicated that code intelligence tooling was important to them, had significant quality issues in their code.","date":"2018-08-07T10:40:22.774Z","type":"message"}
{"nick":"`slikts","message":"joepie91: lol you're still saying the same thing; existing tools have 10% benefits, while your imagined perfect tool would presumably have closer to 100%","date":"2018-08-07T10:40:37.641Z","type":"message"}
{"nick":"`slikts","message":"my point is that those 10% (aside from being made up nonsense numbers) are worthwhile","date":"2018-08-07T10:40:51.704Z","type":"message"}
{"nick":"Rashad","message":"joepie91: I am awaiting a certain statement, say reading a value from the database. Once that statement is finished execution can another async operation \"steal\" the execution and execute before the context in which the original read statement does?","date":"2018-08-07T10:41:00.357Z","type":"message"}
{"nick":"`slikts","message":"and you're exaggerating the work it takes","date":"2018-08-07T10:41:03.567Z","type":"message"}
{"nick":"joepie91","message":"`slikts: not if they require an unreasonable amount of effort; I have better things to do with my time.","date":"2018-08-07T10:41:08.416Z","type":"message"}
{"nick":"joepie91","message":"I'm really not.","date":"2018-08-07T10:41:10.593Z","type":"message"}
{"nick":"`slikts","message":"\"anybody whose code I've reviewed who indicated that code intelligence tooling was important to them, had significant quality issues in their code\"","date":"2018-08-07T10:42:05.542Z","type":"message"}
{"nick":"`slikts","message":"so what are you implying there lol","date":"2018-08-07T10:42:11.366Z","type":"message"}
{"nick":"HDF13","reason":"Quit: Leaving","date":"2018-08-07T10:42:22.973Z","type":"quit"}
{"nick":"joepie91","message":"Rashad: finding it a little difficult to understand your question, but any kind of `await` is going to involve a Promise, and any Promise is going to introduce an async boundary, leaving other code to execute while waiting for that promise to resolve","date":"2018-08-07T10:42:25.832Z","type":"message"}
{"nick":"`slikts","message":"using TS is a red flag for incompetence?","date":"2018-08-07T10:42:31.039Z","type":"message"}
{"nick":"joepie91","message":"`slikts: honestly? yes, that is the only conclusion I can draw from what I've seen so far.","date":"2018-08-07T10:42:48.662Z","type":"message"}
{"nick":"`slikts","message":"lol","date":"2018-08-07T10:42:53.730Z","type":"message"}
{"nick":"`slikts","message":"I'll leave it at this","date":"2018-08-07T10:42:58.359Z","type":"message"}
{"nick":"joepie91","message":"incompetence within JS, that is.","date":"2018-08-07T10:43:04.611Z","type":"message"}
{"nick":"joepie91","message":"in fact, TS almost seems *designed* for this; specifically catering to people used to class-based languages who don't really want to learn JS.","date":"2018-08-07T10:43:20.465Z","type":"message"}
{"nick":"joepie91","message":"but more pragmatically, it means that I've seen no compelling cases for it.","date":"2018-08-07T10:43:45.556Z","type":"message"}
{"nick":"`slikts","message":"you can't use TS without learning JS","date":"2018-08-07T10:43:50.748Z","type":"message"}
{"nick":"joepie91","message":"and I *certainly* have not seen a reason to use it myself.","date":"2018-08-07T10:43:51.394Z","type":"message"}
{"nick":"Rashad","message":"joepie91: Suppose my function is as simple as: `let value = await db.read(id); console.log(value);\" Is it possible that the value returned from the await statement has meanwhile changed in the db after `value` was set and before `value` was printed?","date":"2018-08-07T10:43:59.852Z","type":"message"}
{"nick":"joepie91","message":"`slikts: some of the questions I've seen here suggest otherwise.","date":"2018-08-07T10:44:03.151Z","type":"message"}
{"nick":"joepie91","message":"(in this channel)","date":"2018-08-07T10:44:10.613Z","type":"message"}
{"nick":"`slikts","message":"have you seen the non-ts questions","date":"2018-08-07T10:44:22.227Z","type":"message"}
{"nick":"joepie91","message":"Rashad: yes; that would be true even if it were a fully-synchronous read operation, because the database could be modified externally at any point in time.","date":"2018-08-07T10:44:48.473Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: https://paste.xinu.at/vJIx/js","date":"2018-08-07T10:44:52.270Z","type":"message"}
{"nick":"Rashad","message":"joepie91: Not externally from Node.js itself.","date":"2018-08-07T10:45:11.796Z","type":"message"}
{"nick":"Rashad","message":"joepie91: From the event loop.","date":"2018-08-07T10:45:19.887Z","type":"message"}
{"nick":"joepie91","message":"`slikts: naturally. but the questions asked by people using TS tend to be of a *very specific* kind, showing a general unwillingness to think outside of the 'classes' box.","date":"2018-08-07T10:45:31.445Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T10:45:39.746Z","type":"join"}
{"nick":"joepie91","message":"Rashad: depends on the internals of the DB thing.","date":"2018-08-07T10:45:51.104Z","type":"message"}
{"nick":"Rashad","message":"joepie91: So it *is* possible?","date":"2018-08-07T10:46:04.185Z","type":"message"}
{"nick":"joepie91","message":"yes","date":"2018-08-07T10:46:09.473Z","type":"message"}
{"nick":"joepie91","message":"if you're getting back a promise, you have no idea how many async boundaries exist internally within the library","date":"2018-08-07T10:46:36.211Z","type":"message"}
{"nick":"Rashad","message":"So another event is executing between the two lines?","date":"2018-08-07T10:46:37.807Z","type":"message"}
{"nick":"joepie91","message":"it's very possible that the library is actually doing multiple async things, and the value you get back is based on the result of the first one","date":"2018-08-07T10:46:52.726Z","type":"message"}
{"nick":"joepie91","message":"and inbetween the first and the second internal call it changed","date":"2018-08-07T10:46:58.979Z","type":"message"}
{"nick":"`slikts","message":"WSL is so shit; I have to install an npm package with 4 tries","date":"2018-08-07T10:47:05.739Z","type":"message"}
{"nick":"Rashad","message":"Hmm.","date":"2018-08-07T10:47:19.610Z","type":"message"}
{"nick":"joepie91","message":"Rashad: essentially, just assume that anything async means you have no guarantees about atomicity","date":"2018-08-07T10:47:25.388Z","type":"message"}
{"nick":"`slikts","message":"since the other 3 has random missing file errors","date":"2018-08-07T10:47:29.804Z","type":"message"}
{"nick":"Rashad","message":"I don't care about the implementation of the db.","date":"2018-08-07T10:47:31.555Z","type":"message"}
{"nick":"`slikts","message":"*have","date":"2018-08-07T10:47:33.379Z","type":"message"}
{"nick":"joepie91","message":"unless the thing you're using explicitly specifies otherwise","date":"2018-08-07T10:47:34.787Z","type":"message"}
{"nick":"kakashiAL","message":"joepie91: my solution idea: https://paste.xinu.at/3Fw/js","date":"2018-08-07T10:48:10.212Z","type":"message"}
{"nick":"joepie91","message":"kakashiAL: I do not have the energy for this, you will have to ask somebody else for help with your error handling","date":"2018-08-07T10:48:36.607Z","type":"message"}
{"nick":"InverseRhombus","date":"2018-08-07T10:49:02.732Z","type":"join"}
{"nick":"kakashiAL","message":"joepie91: but you would catch() in every route, no matter what? even if its repetive, correct?","date":"2018-08-07T10:49:18.853Z","type":"message"}
{"nick":"kakashiAL","message":"repetitive","date":"2018-08-07T10:49:44.576Z","type":"message"}
{"nick":"apparition","date":"2018-08-07T10:52:14.407Z","type":"join"}
{"nick":"nocoolnametom_","reason":"Ping timeout: 245 seconds","date":"2018-08-07T10:52:20.467Z","type":"quit"}
{"nick":"kakashiAL","message":"joepie91: just to give you a little taste what I dont want in my global error handler:","date":"2018-08-07T10:52:37.827Z","type":"message"}
{"nick":"kakashiAL","message":"https://paste.xinu.at/uPeifL/js","date":"2018-08-07T10:52:39.149Z","type":"message"}
{"nick":"kakashiAL","message":"at the moment you are the only one who can help me, but if you dont have the energy I can try it some other way","date":"2018-08-07T10:52:59.016Z","type":"message"}
{"nick":"kakashiAL","message":"way = day","date":"2018-08-07T10:53:06.059Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T10:53:57.783Z","type":"quit"}
{"nick":"theskillwithin","reason":"Ping timeout: 255 seconds","date":"2018-08-07T10:53:59.895Z","type":"quit"}
{"nick":"Klumben","reason":"Ping timeout: 256 seconds","date":"2018-08-07T10:54:05.791Z","type":"quit"}
{"nick":"SolarAquarion","reason":"Ping timeout: 240 seconds","date":"2018-08-07T10:54:21.363Z","type":"quit"}
{"nick":"nocoolnametom_","date":"2018-08-07T10:54:31.325Z","type":"join"}
{"nick":"danecando","reason":"Quit: My MacBook Air has gone to sleep. ZZZzzz…","date":"2018-08-07T10:54:34.498Z","type":"quit"}
{"nick":"rcs","reason":"Ping timeout: 244 seconds","date":"2018-08-07T10:56:19.795Z","type":"quit"}
{"nick":"theskillwithin","date":"2018-08-07T10:57:13.746Z","type":"join"}
{"nick":"rcs","date":"2018-08-07T10:57:40.870Z","type":"join"}
{"nick":"Akinator","reason":"Ping timeout: 276 seconds","date":"2018-08-07T10:57:59.105Z","type":"quit"}
{"nick":"star_prone","date":"2018-08-07T10:59:12.376Z","type":"join"}
{"nick":"Antares268","reason":"Quit: Antares268","date":"2018-08-07T10:59:43.625Z","type":"quit"}
{"nick":"psychicist__","date":"2018-08-07T11:00:05.923Z","type":"join"}
{"nick":"salad","date":"2018-08-07T11:00:28.251Z","type":"join"}
{"nick":"Klumben","date":"2018-08-07T11:00:28.466Z","type":"join"}
{"nick":"SolarAquarion","date":"2018-08-07T11:00:39.207Z","type":"join"}
{"nick":"mezod","date":"2018-08-07T11:00:43.557Z","type":"join"}
{"nick":"`slikts","message":"I hate this so much, I can't progress with my task because instead I'm trying to figure out why suddenly console.log() stopped working in jest","date":"2018-08-07T11:01:16.696Z","type":"message"}
{"nick":"millido","reason":"Ping timeout: 256 seconds","date":"2018-08-07T11:01:42.719Z","type":"quit"}
{"nick":"`slikts","message":"nothing ever just works","date":"2018-08-07T11:01:59.690Z","type":"message"}
{"nick":"millido","date":"2018-08-07T11:02:01.778Z","type":"join"}
{"nick":"`slikts","message":"or if it does, then it'll randomly stop","date":"2018-08-07T11:02:12.165Z","type":"message"}
{"nick":"`slikts","message":"it's probably because I had the poor sense to run `npm update`","date":"2018-08-07T11:02:49.514Z","type":"message"}
{"nick":"`slikts","message":"apparently it's a regression: https://github.com/facebook/jest/issues/2441#issuecomment-410827994","date":"2018-08-07T11:03:15.090Z","type":"message"}
{"nick":"wonko77","date":"2018-08-07T11:03:35.751Z","type":"join"}
{"nick":"`slikts","message":"just..... fuuuuuck","date":"2018-08-07T11:03:40.695Z","type":"message"}
{"nick":"danecando","date":"2018-08-07T11:04:42.464Z","type":"join"}
{"nick":"`slikts","message":"per the comments, --verbose false fixes it... for some reason","date":"2018-08-07T11:04:59.041Z","type":"message"}
{"nick":"wonko7","reason":"Ping timeout: 240 seconds","date":"2018-08-07T11:05:57.914Z","type":"quit"}
{"nick":"danecando","reason":"Client Quit","date":"2018-08-07T11:06:16.072Z","type":"quit"}
{"nick":"wraeth8","date":"2018-08-07T11:06:37.681Z","type":"join"}
{"nick":"Sharaal","date":"2018-08-07T11:08:23.833Z","type":"join"}
{"nick":"acronix0","date":"2018-08-07T11:08:34.696Z","type":"join"}
{"nick":"acronix0","reason":"Remote host closed the connection","date":"2018-08-07T11:08:57.141Z","type":"quit"}
{"nick":"wraeth8","reason":"Remote host closed the connection","date":"2018-08-07T11:08:58.537Z","type":"quit"}
{"nick":"paulcarroty","date":"2018-08-07T11:09:14.765Z","type":"join"}
{"nick":"neo4","date":"2018-08-07T11:09:52.123Z","type":"join"}
{"nick":"gloomy","date":"2018-08-07T11:12:04.720Z","type":"join"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T11:12:54.261Z","type":"quit"}
{"nick":"gloomy","reason":"Client Quit","date":"2018-08-07T11:12:59.947Z","type":"quit"}
{"nick":"cannap","reason":"Ping timeout: 268 seconds","date":"2018-08-07T11:15:26.832Z","type":"quit"}
{"nick":"cannap","date":"2018-08-07T11:16:02.796Z","type":"join"}
{"nick":"mr_lou","reason":"Remote host closed the connection","date":"2018-08-07T11:19:10.998Z","type":"quit"}
{"nick":"paulcarroty","reason":"Ping timeout: 260 seconds","date":"2018-08-07T11:19:49.074Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T11:21:32.717Z","type":"join"}
{"nick":"millido","reason":"Read error: Connection reset by peer","date":"2018-08-07T11:23:22.334Z","type":"quit"}
{"nick":"millido","date":"2018-08-07T11:23:40.317Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 268 seconds","date":"2018-08-07T11:26:32.721Z","type":"quit"}
{"nick":"cannap","reason":"Ping timeout: 240 seconds","date":"2018-08-07T11:26:57.874Z","type":"quit"}
{"nick":"cannap","date":"2018-08-07T11:27:10.422Z","type":"join"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2018-08-07T11:28:20.721Z","type":"quit"}
{"nick":"cannap","reason":"Client Quit","date":"2018-08-07T11:30:18.684Z","type":"quit"}
{"nick":"ffx_","reason":"Remote host closed the connection","date":"2018-08-07T11:34:06.835Z","type":"quit"}
{"nick":"ALowther","date":"2018-08-07T11:34:40.848Z","type":"join"}
{"nick":"ffx_","date":"2018-08-07T11:39:36.751Z","type":"join"}
{"nick":"Antares268","date":"2018-08-07T11:42:16.732Z","type":"join"}
{"nick":"ffx_","reason":"Remote host closed the connection","date":"2018-08-07T11:43:24.653Z","type":"quit"}
{"nick":"ffx_","date":"2018-08-07T11:43:37.762Z","type":"join"}
{"nick":"ffx_","reason":"Remote host closed the connection","date":"2018-08-07T11:43:39.419Z","type":"quit"}
{"nick":"lordjancso","reason":"Quit: Leaving","date":"2018-08-07T11:45:03.394Z","type":"quit"}
{"nick":"ddelrio1986","date":"2018-08-07T11:47:41.860Z","type":"join"}
{"nick":"paulcarroty","date":"2018-08-07T11:48:41.380Z","type":"join"}
{"nick":"kliq","reason":"Ping timeout: 244 seconds","date":"2018-08-07T11:50:03.669Z","type":"quit"}
{"nick":"sterns","date":"2018-08-07T11:50:30.553Z","type":"join"}
{"nick":"Ergo","date":"2018-08-07T11:50:56.547Z","type":"join"}
{"nick":"ALowther","reason":"Ping timeout: 244 seconds","date":"2018-08-07T11:52:38.568Z","type":"quit"}
{"nick":"caracalla","date":"2018-08-07T11:57:41.664Z","type":"join"}
{"nick":"gli|wfh","date":"2018-08-07T11:58:31.085Z","type":"join"}
{"nick":"FuzzySockets","date":"2018-08-07T11:59:32.280Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T11:59:56.949Z","type":"join"}
{"nick":"Rashad","message":"joepie91: Here are two lines of code: 1) `let result = await something();` 2) `console.log(result);`  <--- without making any assumptions about how `something` is implemented, is it possible that *anything* executes between lines 1 and 2? (after result is set; before it is fed to console.log)","date":"2018-08-07T12:00:25.771Z","type":"message"}
{"nick":"FuzzySockets","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-07T12:00:47.109Z","type":"quit"}
{"nick":"RoriconKnight","date":"2018-08-07T12:01:02.921Z","type":"join"}
{"nick":"groom","reason":"Quit: Leaving.","date":"2018-08-07T12:01:19.887Z","type":"quit"}
{"nick":"Rashad","message":"I think after `await` finishes, it becomes purely synchronic, right?","date":"2018-08-07T12:01:58.687Z","type":"message"}
{"nick":"Rashad","message":"(until another await or callback is introduced)","date":"2018-08-07T12:02:17.421Z","type":"message"}
{"nick":"paulcarroty","message":"nope, it's just syntax sugar","date":"2018-08-07T12:02:24.816Z","type":"message"}
{"nick":"RoriconKnight","reason":"Remote host closed the connection","date":"2018-08-07T12:02:31.968Z","type":"quit"}
{"nick":"Rashad","message":"paulcarroty: /after/","date":"2018-08-07T12:02:41.587Z","type":"message"}
{"nick":"Rashad","message":"That is, in the example above, after `result` is set.","date":"2018-08-07T12:03:01.487Z","type":"message"}
{"nick":"RoriconKnight","date":"2018-08-07T12:03:02.103Z","type":"join"}
{"nick":"Rashad","message":"Even then the event loop can break the execution to do something else?","date":"2018-08-07T12:03:19.094Z","type":"message"}
{"nick":"Rashad","message":"Or is (2) necessarily executed after that immediately?","date":"2018-08-07T12:03:53.806Z","type":"message"}
{"nick":"RoriconKnight","reason":"Remote host closed the connection","date":"2018-08-07T12:04:31.697Z","type":"quit"}
{"nick":"Rashad","message":"Can I guarantee that two \"awaits\" execute one after the other with nothing in between?","date":"2018-08-07T12:04:46.439Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 264 seconds","date":"2018-08-07T12:05:10.011Z","type":"quit"}
{"nick":"Rashad","message":"I think I can't because that means I have to change its nature into synchronous code.","date":"2018-08-07T12:05:11.087Z","type":"message"}
{"nick":"tymczenko","reason":"Ping timeout: 256 seconds","date":"2018-08-07T12:05:44.751Z","type":"quit"}
{"nick":"RoriconKnight","date":"2018-08-07T12:07:05.080Z","type":"join"}
{"nick":"RoriconKnight","reason":"Remote host closed the connection","date":"2018-08-07T12:08:01.595Z","type":"quit"}
{"nick":"tristanp","date":"2018-08-07T12:08:16.292Z","type":"join"}
{"nick":"leolrrj","date":"2018-08-07T12:08:40.223Z","type":"join"}
{"nick":"gloomy","date":"2018-08-07T12:08:47.814Z","type":"join"}
{"nick":"groom","date":"2018-08-07T12:09:56.754Z","type":"join"}
{"nick":"AAA_awright","message":"I don't think so, why would execution be interrupted in the middle of a function like that?","date":"2018-08-07T12:10:19.207Z","type":"message"}
{"nick":"Rashad","message":"AAA_awright: I am assuming if I have two awaits one after the other then something /can/ execute between the two.","date":"2018-08-07T12:11:22.801Z","type":"message"}
{"nick":"Rashad","message":"something else*","date":"2018-08-07T12:11:27.382Z","type":"message"}
{"nick":"Rashad","message":"something completely unrelated.","date":"2018-08-07T12:11:36.835Z","type":"message"}
{"nick":"joepie91","message":"Rashad: literal answer to your question: no, nothing can execute in your process inbetween the assignment to `result` and logging that `result`; however, that does *not* exclude the possibility of eg. data in a backing store having changed before the assignment to `result`","date":"2018-08-07T12:11:49.449Z","type":"message"}
{"nick":"Rashad","message":"And potentially making the result from the first await absolute.","date":"2018-08-07T12:11:51.925Z","type":"message"}
{"nick":"Rashad","message":"joepie91: OK.","date":"2018-08-07T12:12:13.251Z","type":"message"}
{"nick":"deadbeat","message":"Rashad: from my understanding, await + following code is syntactic sugar for a callback function, i.e. the callback function is called with the result of the await","date":"2018-08-07T12:12:18.485Z","type":"message"}
{"nick":"joepie91","message":"specifically, it's syntactic sugar for promises and their .then callbacks","date":"2018-08-07T12:12:31.646Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 240 seconds","date":"2018-08-07T12:12:35.529Z","type":"quit"}
{"nick":"Rashad","message":"Right.","date":"2018-08-07T12:12:38.475Z","type":"message"}
{"nick":"joepie91","message":"time to try and get some sleep, despite the heat...","date":"2018-08-07T12:13:19.278Z","type":"message"}
{"nick":"ralphsaunders","date":"2018-08-07T12:13:20.467Z","type":"join"}
{"nick":"kakashiAL","reason":"Ping timeout: 264 seconds","date":"2018-08-07T12:14:10.080Z","type":"quit"}
{"nick":"ralphsaunders","reason":"Client Quit","date":"2018-08-07T12:14:45.633Z","type":"quit"}
{"nick":"Rashad","message":"OK then now my problem is that I need to guarantee that this situation: 1) `let result1 = await something();` 2) `let result2 = await something_else();` does not end up with an obsolete `result1` as a cost for fetching `result2`.","date":"2018-08-07T12:15:37.186Z","type":"message"}
{"nick":"gloomy","reason":"Ping timeout: 268 seconds","date":"2018-08-07T12:17:06.849Z","type":"quit"}
{"nick":"gloomy_","date":"2018-08-07T12:17:37.153Z","type":"join"}
{"nick":"Rashad","message":"And according to a previous answer by joepie91 this has to be specific to my use-case and there is no general solution.","date":"2018-08-07T12:17:58.896Z","type":"message"}
{"nick":"Rashad","message":"Is there a way that my code instructs the event loop in some way?","date":"2018-08-07T12:18:19.229Z","type":"message"}
{"nick":"Guest79113","date":"2018-08-07T12:20:05.484Z","type":"join"}
{"nick":"the_ant","reason":"Quit: the_ant","date":"2018-08-07T12:20:07.580Z","type":"quit"}
{"nick":"deadbeat","message":"what he told is that you cannot ensure that without knowledge of \"something\". If \"something\" fetches data from a DB, anything can change that DB value at any time after the fetch, independent from node/ event loop.","date":"2018-08-07T12:20:14.782Z","type":"message"}
{"nick":"deadbeat","message":"tbh, depending on the cost of \"something_else\" i would just assume that the value has not expired yet when handling it immediatly after the fetch. You can't really get better than that without doing it atomically","date":"2018-08-07T12:21:16.085Z","type":"message"}
{"nick":"Rashad","message":"deadbeat: I see.","date":"2018-08-07T12:22:52.693Z","type":"message"}
{"nick":"Rashad","message":"deadbeat: In some cases this is harmless, but in others it might not be.","date":"2018-08-07T12:23:03.253Z","type":"message"}
{"nick":"toi","reason":"Ping timeout: 240 seconds","date":"2018-08-07T12:23:05.467Z","type":"quit"}
{"nick":"zumba","reason":"Ping timeout: 240 seconds","date":"2018-08-07T12:23:27.767Z","type":"quit"}
{"nick":"Guest79113","reason":"Remote host closed the connection","date":"2018-08-07T12:23:45.224Z","type":"quit"}
{"nick":"Rashad","message":"deadbeat: For example, a client asks the server to write something on the db and that gets executed between the two awaits because the second await depends on some very slow I/O that almost everything gets a turn to execute before it does.","date":"2018-08-07T12:24:11.057Z","type":"message"}
{"nick":"AtumT","date":"2018-08-07T12:24:11.972Z","type":"join"}
{"nick":"Rashad","message":"If it is all reads, it doesn't matter.","date":"2018-08-07T12:24:49.990Z","type":"message"}
{"nick":"Rashad","message":"If there is a write happening in-between, then it can be harmful.","date":"2018-08-07T12:25:00.345Z","type":"message"}
{"nick":"Rashad","message":"Especially if the second await writes data that has to be consistent with the value of the first await.","date":"2018-08-07T12:25:25.507Z","type":"message"}
{"nick":"Rashad","message":"If that happens, the database now is inconsistent.","date":"2018-08-07T12:25:34.567Z","type":"message"}
{"nick":"deadbeat","message":"if you need such a consistency, my guess would be doing this on database level, triggering an update on changes for those fiels or something like that, but i am not an expert there.","date":"2018-08-07T12:26:21.841Z","type":"message"}
{"nick":"Rashad","message":"I am reading this: https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/ which has lots of useful bits on information.","date":"2018-08-07T12:26:39.562Z","type":"message"}
{"nick":"Rashad","message":"I see.","date":"2018-08-07T12:26:49.311Z","type":"message"}
{"nick":"Rashad","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T12:26:51.260Z","type":"quit"}
{"nick":"deadbeat","message":"yeah, i am not an expert on dealing with event loop ticks, maybe it is possible do achieve what you need in such a way, can't help there.","date":"2018-08-07T12:27:44.150Z","type":"message"}
{"nick":"Caspinol","reason":"Remote host closed the connection","date":"2018-08-07T12:28:53.053Z","type":"quit"}
{"nick":"kliq","date":"2018-08-07T12:28:53.362Z","type":"join"}
{"nick":"luizbag","date":"2018-08-07T12:29:06.506Z","type":"join"}
{"nick":"Caspinol","date":"2018-08-07T12:29:17.153Z","type":"join"}
{"nick":"neo4","message":"Rashad: that function put a function in front of the event loop","date":"2018-08-07T12:30:27.527Z","type":"message"}
{"nick":"`slikts","message":"if await1 is read, and await2 is write, it should be fine","date":"2018-08-07T12:30:36.281Z","type":"message"}
{"nick":"Industrial","message":"Hi. I am on Ubuntu and have libcairo2 installed (apparently). I get the error \"Package cairo was not found in the pkg-config search path.\"","date":"2018-08-07T12:30:37.252Z","type":"message"}
{"nick":"JaredCE","message":"I have a promise that is rejecting ECONNRESET errors... i'm wondering if there are any good stratergies anyone has used to deal with that, as a client rather than server","date":"2018-08-07T12:30:46.357Z","type":"message"}
{"nick":"`slikts","message":"lol they left","date":"2018-08-07T12:31:27.822Z","type":"message"}
{"nick":"RoriconKnight","date":"2018-08-07T12:31:45.738Z","type":"join"}
{"nick":"`slikts","message":"I guess this is an example how a language level async construct can make it confusing for some","date":"2018-08-07T12:31:51.511Z","type":"message"}
{"nick":"`slikts","message":"since it looks like weird magics","date":"2018-08-07T12:32:02.666Z","type":"message"}
{"nick":"Industrial","message":"ah, `sudo apt-get install libcairo2-dev libjpeg-dev libgif-dev`","date":"2018-08-07T12:32:05.203Z","type":"message"}
{"nick":"Mattias__","date":"2018-08-07T12:32:08.829Z","type":"join"}
{"nick":"`slikts","message":"instead of just a callback, which it actually is","date":"2018-08-07T12:32:15.663Z","type":"message"}
{"nick":"benjamingr_","message":"Magic?","date":"2018-08-07T12:32:50.861Z","type":"message"}
{"nick":"benjamingr_","message":"The fundamental piece isn't a callback here - that's just the abstraction Node picked initially - you don't have to represent promises in terms of callbacks and no one in languages that started with promise-like constructs does that as far as I. know.","date":"2018-08-07T12:33:29.628Z","type":"message"}
{"nick":"benjamingr_","message":"As for ECONNRESET - that depends on what those errors represent in your app code IMO","date":"2018-08-07T12:34:04.261Z","type":"message"}
{"nick":"Antares268","reason":"Quit: Antares268","date":"2018-08-07T12:34:09.277Z","type":"quit"}
{"nick":"benjamingr_","message":"We do plan to send a promises survey from the foundation and then write a promises-in-node guide that will hopefully help explain some issues about using promies in Node and best practices.","date":"2018-08-07T12:34:56.269Z","type":"message"}
{"nick":"sgen","date":"2018-08-07T12:36:32.803Z","type":"join"}
{"nick":"bluszcz19","date":"2018-08-07T12:39:40.670Z","type":"join"}
{"nick":"bluszcz19","reason":"Remote host closed the connection","date":"2018-08-07T12:40:04.559Z","type":"quit"}
{"nick":"tsglove","message":"Good morning/afternoon everyone!  I´m trying to follow the socket.io how to in this link, yet I´m not getting a   io.on(´connection´,   ....    that´s not happening.    link --> https://socket.io/get-started/chat/","date":"2018-08-07T12:40:50.416Z","type":"message"}
{"nick":"tsglove","message":"Not sure how I could troubleshoot it.   I´m not getting errors in the firefox developer tools","date":"2018-08-07T12:41:20.606Z","type":"message"}
{"nick":"alexi5","date":"2018-08-07T12:41:55.079Z","type":"join"}
{"nick":"`slikts","message":"benjamingr_: the fundamental async primitive in node is a callback","date":"2018-08-07T12:42:22.233Z","type":"message"}
{"nick":"`slikts","message":"promises just wrap callbacks","date":"2018-08-07T12:42:31.866Z","type":"message"}
{"nick":"`slikts","message":"and async/await is just promises","date":"2018-08-07T12:42:37.553Z","type":"message"}
{"nick":"Toreto","date":"2018-08-07T12:42:39.411Z","type":"join"}
{"nick":"Mattias__","new_nick":"Cork","date":"2018-08-07T12:43:11.688Z","type":"nick"}
{"nick":"benjamingr_","action":"Well, the fundamental (and only) async primitive in JavaScript is a promise, others (like observables) might be coming in the future","date":"2018-08-07T12:43:15.406Z","type":"action"}
{"nick":"`slikts","message":"well, promises + generators","date":"2018-08-07T12:43:18.145Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: no","date":"2018-08-07T12:43:36.564Z","type":"message"}
{"nick":"benjamingr_","action":"Generators and functions don't actually have anything to do with callbacks in particular - node callbacks are just a really useful convention and one we use","date":"2018-08-07T12:43:43.598Z","type":"action"}
{"nick":"`slikts","message":"generators have to do with async/await","date":"2018-08-07T12:43:56.303Z","type":"message"}
{"nick":"benjamingr_","message":"Not really, they just share a lot of the implementation because they represent state machines","date":"2018-08-07T12:44:10.211Z","type":"message"}
{"nick":"rezetta","reason":"Quit: Leaving.","date":"2018-08-07T12:44:24.676Z","type":"quit"}
{"nick":"benjamingr_","message":"You can look at async functions as \"generators that pump whenever a promise settles\" but that's just historical - people in C# for example don't look at async functions this way.","date":"2018-08-07T12:44:36.936Z","type":"message"}
{"nick":"rezetta","date":"2018-08-07T12:44:41.747Z","type":"join"}
{"nick":"benjamingr_","message":"It's mostly since people used `co` and `Promise.coroutine` in bluebird so they know the analogy","date":"2018-08-07T12:44:55.788Z","type":"message"}
{"nick":"benjamingr_","message":"That being said, if we had compositional functions - then async await would be defined in terms of generators - we (sadly) don't though.","date":"2018-08-07T12:45:15.314Z","type":"message"}
{"nick":"benjamingr_","message":"It's a technicality - but I think it's a pretty interesting one.","date":"2018-08-07T12:45:37.927Z","type":"message"}
{"nick":"benjamingr_","message":"Before promises were introduced to JavaScript - it had no concept of async or deferred execution - one of the most important aspects I think is that concurrency comes from the platform. That's kind of beautiful in JavaScript in my opinion - how it's defined in a way that adapts to a lot of different runtimes with different paradigms.","date":"2018-08-07T12:46:31.960Z","type":"message"}
{"nick":"darutoko-","date":"2018-08-07T12:46:41.748Z","type":"join"}
{"nick":"benjamingr_","message":"I think the fact JavaScript does it so well is a big part of the why we're still writing in JavaScript in 2018","date":"2018-08-07T12:46:51.724Z","type":"message"}
{"nick":"ahmed_elgabri","date":"2018-08-07T12:46:54.733Z","type":"join"}
{"nick":"zsocw","date":"2018-08-07T12:46:58.554Z","type":"join"}
{"nick":"zsoc","reason":"Disconnected by services","date":"2018-08-07T12:46:59.088Z","type":"quit"}
{"nick":"`slikts","message":"the reason js is a good fit for CPS is having closures","date":"2018-08-07T12:47:20.963Z","type":"message"}
{"nick":"NomadJim_","date":"2018-08-07T12:47:35.916Z","type":"join"}
{"nick":"`slikts","message":"and promises derive from that","date":"2018-08-07T12:47:37.852Z","type":"message"}
{"nick":"ghoti_","date":"2018-08-07T12:47:42.630Z","type":"join"}
{"nick":"benjamingr_","message":"Promises are much older than JavaScript","date":"2018-08-07T12:48:15.470Z","type":"message"}
{"nick":"Sleepy_C1der","date":"2018-08-07T12:48:24.324Z","type":"join"}
{"nick":"benjamingr_","message":"We got our promises from Python, though they didn't invent them either","date":"2018-08-07T12:48:25.908Z","type":"message"}
{"nick":"`slikts","message":"I'm not saying js invented promises","date":"2018-08-07T12:48:30.434Z","type":"message"}
{"nick":"benjamingr_","message":"Promises are from the 80s, were initially invented for efficient RPC and other cool stuff","date":"2018-08-07T12:48:41.472Z","type":"message"}
{"nick":"upperdeck_","date":"2018-08-07T12:48:57.080Z","type":"join"}
{"nick":"benjamingr_","message":"Yeah, but Python doesn't have \"strong anonymous functions\" and they had promises - I like the fact that JS has stronger functions than those languages traditionally had - but I don't think that's why we got promises.","date":"2018-08-07T12:49:13.773Z","type":"message"}
{"nick":"JaredCE_","date":"2018-08-07T12:49:33.086Z","type":"join"}
{"nick":"lula","date":"2018-08-07T12:49:36.611Z","type":"join"}
{"nick":"`slikts","message":"all promises really do is model the async control flow explicitly, as opposed to CPS, where asynchronicity is a side-effect","date":"2018-08-07T12:49:44.819Z","type":"message"}
{"nick":"benjamingr_","message":"I think it's just natural to have them because conceptually they represent a function's return value over time. If we're building an async primitive - it makes a ton of sense to model it over `return` and `throw`. Though I'm not happy with where we are with promises and the design.","date":"2018-08-07T12:49:47.013Z","type":"message"}
{"nick":"benjamingr_","message":"Well, it's a bit more subtle than that `slikts","date":"2018-08-07T12:50:01.578Z","type":"message"}
{"nick":"NomadJim","reason":"Ping timeout: 256 seconds","date":"2018-08-07T12:50:22.392Z","type":"quit"}
{"nick":"ahmedelgabri","reason":"Read error: Connection reset by peer","date":"2018-08-07T12:50:45.390Z","type":"quit"}
{"nick":"darutoko","reason":"Read error: Connection reset by peer","date":"2018-08-07T12:50:45.592Z","type":"quit"}
{"nick":"ghoti","reason":"Read error: Connection reset by peer","date":"2018-08-07T12:50:46.090Z","type":"quit"}
{"nick":"Sleepy_Coder","reason":"Read error: Connection reset by peer","date":"2018-08-07T12:50:46.533Z","type":"quit"}
{"nick":"vzdraz","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:46.739Z","type":"quit"}
{"nick":"bttf","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:46.903Z","type":"quit"}
{"nick":"`slikts","message":"also iirc the event loop is part of the spec since es6","date":"2018-08-07T12:50:46.903Z","type":"message"}
{"nick":"upperdeck","reason":"Quit: ZNC 1.7.1 - https://znc.in","date":"2018-08-07T12:50:47.067Z","type":"quit"}
{"nick":"mnemonicj","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:47.231Z","type":"quit"}
{"nick":"roger_raymond","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:47.398Z","type":"quit"}
{"nick":"IvailoStoianov","reason":"Quit: Bye","date":"2018-08-07T12:50:47.562Z","type":"quit"}
{"nick":"fcanela","reason":"Remote host closed the connection","date":"2018-08-07T12:50:47.726Z","type":"quit"}
{"nick":"JaredCE","reason":"Read error: Connection reset by peer","date":"2018-08-07T12:50:47.726Z","type":"quit"}
{"nick":"jnatten","reason":"Quit: No Ping reply in 180 seconds.","date":"2018-08-07T12:50:47.916Z","type":"quit"}
{"nick":"mven","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:47.916Z","type":"quit"}
{"nick":"juvenal","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:48.054Z","type":"quit"}
{"nick":"jalcine","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:48.054Z","type":"quit"}
{"nick":"skomorokh","reason":"Remote host closed the connection","date":"2018-08-07T12:50:48.219Z","type":"quit"}
{"nick":"knapptime","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:48.383Z","type":"quit"}
{"nick":"jaawerth","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:48.548Z","type":"quit"}
{"nick":"ReimuHakurei","reason":"Remote host closed the connection","date":"2018-08-07T12:50:48.548Z","type":"quit"}
{"nick":"heroux","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:48.821Z","type":"quit"}
{"nick":"robdrake","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:48.985Z","type":"quit"}
{"nick":"logik-bomb","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:49.518Z","type":"quit"}
{"nick":"initself_","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:49.519Z","type":"quit"}
{"nick":"mmalecki","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:49.519Z","type":"quit"}
{"nick":"Tycale","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:50:49.519Z","type":"quit"}
{"nick":"heroux_","new_nick":"heroux","date":"2018-08-07T12:50:49.519Z","type":"nick"}
{"nick":"jaawerth","date":"2018-08-07T12:50:49.725Z","type":"join"}
{"nick":"benjamingr_","message":"The \"trick\" in what promises (assuming you mean the `then` signature) is just a continuation monad - the fact you can return a continuation from a `then` and the outwards continuation follows it is just an abstraction on `;` - it's very natural","date":"2018-08-07T12:50:50.664Z","type":"message"}
{"nick":"natten","date":"2018-08-07T12:50:53.578Z","type":"join"}
{"nick":"mven_","date":"2018-08-07T12:50:56.043Z","type":"join"}
{"nick":"Koopz","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:51:01.788Z","type":"quit"}
{"nick":"fastman","reason":"Ping timeout: 244 seconds","date":"2018-08-07T12:51:01.956Z","type":"quit"}
{"nick":"heroux_","date":"2018-08-07T12:51:09.772Z","type":"join"}
{"nick":"Koopz","date":"2018-08-07T12:51:20.745Z","type":"join"}
{"nick":"fcanela_","date":"2018-08-07T12:51:21.522Z","type":"join"}
{"nick":"Tycale","date":"2018-08-07T12:51:23.649Z","type":"join"}
{"nick":"roger_raymond","date":"2018-08-07T12:51:24.784Z","type":"join"}
{"nick":"benjamingr_","message":"The event loop isn't a part of the spec - it's also very different between environment,  our event loop works very differently from browsers'. The spec does define task semantics though which are interesting and job enqueues","date":"2018-08-07T12:51:25.658Z","type":"message"}
{"nick":"mmalecki","date":"2018-08-07T12:51:30.573Z","type":"join"}
{"nick":"fastman","date":"2018-08-07T12:51:34.656Z","type":"join"}
{"nick":"robdrake","date":"2018-08-07T12:52:13.710Z","type":"join"}
{"nick":"`slikts","message":"well, by part of the spec I mean that it makes an appearance","date":"2018-08-07T12:52:29.983Z","type":"message"}
{"nick":"knapptime","date":"2018-08-07T12:52:32.399Z","type":"join"}
{"nick":"`slikts","message":"since the queue/task stuff doesn't make sense outside of an event loop context","date":"2018-08-07T12:52:42.880Z","type":"message"}
{"nick":"`slikts","message":"also, promises are just monadic, not monads","date":"2018-08-07T12:53:02.935Z","type":"message"}
{"nick":"chen","reason":"Ping timeout: 260 seconds","date":"2018-08-07T12:53:09.163Z","type":"quit"}
{"nick":"Asandari","reason":"Ping timeout: 260 seconds","date":"2018-08-07T12:53:09.407Z","type":"quit"}
{"nick":"Friss","reason":"Ping timeout: 260 seconds","date":"2018-08-07T12:53:09.407Z","type":"quit"}
{"nick":"spillere","reason":"Ping timeout: 260 seconds","date":"2018-08-07T12:53:09.571Z","type":"quit"}
{"nick":"xteknoid","reason":"Ping timeout: 260 seconds","date":"2018-08-07T12:53:09.571Z","type":"quit"}
{"nick":"robdrake","reason":"Changing host","date":"2018-08-07T12:53:09.873Z","type":"quit"}
{"nick":"robdrake","date":"2018-08-07T12:53:10.037Z","type":"join"}
{"nick":"robdrake","reason":"Changing host","date":"2018-08-07T12:53:10.037Z","type":"quit"}
{"nick":"robdrake","date":"2018-08-07T12:53:10.037Z","type":"join"}
{"nick":"bttf","date":"2018-08-07T12:53:23.531Z","type":"join"}
{"nick":"Toshi","reason":"Ping timeout: 240 seconds","date":"2018-08-07T12:53:27.860Z","type":"quit"}
{"nick":"alexi5_","date":"2018-08-07T12:53:39.745Z","type":"join"}
{"nick":"alexi5","reason":"Ping timeout: 260 seconds","date":"2018-08-07T12:53:44.056Z","type":"quit"}
{"nick":"kiltzman","reason":"Ping timeout: 260 seconds","date":"2018-08-07T12:53:44.223Z","type":"quit"}
{"nick":"crooked","reason":"Ping timeout: 240 seconds","date":"2018-08-07T12:53:57.893Z","type":"quit"}
{"nick":"skomorokh","date":"2018-08-07T12:54:22.733Z","type":"join"}
{"nick":"ReimuHakurei","date":"2018-08-07T12:54:24.549Z","type":"join"}
{"nick":"IvailoStoianov","date":"2018-08-07T12:54:26.466Z","type":"join"}
{"nick":"juvenal","date":"2018-08-07T12:54:35.502Z","type":"join"}
{"nick":"jalcine","date":"2018-08-07T12:54:39.338Z","type":"join"}
{"nick":"crooked","date":"2018-08-07T12:54:43.793Z","type":"join"}
{"nick":"mnemonicj","date":"2018-08-07T12:55:07.552Z","type":"join"}
{"nick":"vzdraz","date":"2018-08-07T12:55:09.574Z","type":"join"}
{"nick":"Sven_vB_","new_nick":"Sven_vB","date":"2018-08-07T12:55:38.884Z","type":"nick"}
{"nick":"Friss","date":"2018-08-07T12:55:45.570Z","type":"join"}
{"nick":"alem0lars","date":"2018-08-07T12:55:47.448Z","type":"join"}
{"nick":"spillere","date":"2018-08-07T12:55:53.352Z","type":"join"}
{"nick":"spillere","reason":"Changing host","date":"2018-08-07T12:55:53.891Z","type":"quit"}
{"nick":"spillere","date":"2018-08-07T12:55:54.056Z","type":"join"}
{"nick":"xteknoid","date":"2018-08-07T12:55:55.408Z","type":"join"}
{"nick":"Sven_vB","message":"did Smalltalk have closures and promises?","date":"2018-08-07T12:56:09.344Z","type":"message"}
{"nick":"Sven_vB","message":"or is that more from the lisp ancestry?","date":"2018-08-07T12:56:25.303Z","type":"message"}
{"nick":"chen","date":"2018-08-07T12:56:25.496Z","type":"join"}
{"nick":"initself","date":"2018-08-07T12:56:31.729Z","type":"join"}
{"nick":"`slikts","message":"google reveals that smalltalk has closures","date":"2018-08-07T12:56:42.330Z","type":"message"}
{"nick":"`slikts","message":"a closure is just a nicety that facilitates CPS better","date":"2018-08-07T12:57:16.049Z","type":"message"}
{"nick":"`slikts","message":"and promises just wrap callbacks","date":"2018-08-07T12:57:39.917Z","type":"message"}
{"nick":"`slikts","message":"I mean, you literally pass callbacks to promise constructors and .then","date":"2018-08-07T12:58:12.626Z","type":"message"}
{"nick":"`slikts","message":"they're there for two reasons: to give first-class representation to asynchronicity, and to solve callback hell","date":"2018-08-07T12:58:57.778Z","type":"message"}
{"nick":"`slikts","message":"obscuring that they derive from callbacks makes it harder to understand why they even exist","date":"2018-08-07T12:59:09.375Z","type":"message"}
{"nick":"Sven_vB","message":"and I don't think we still use JS because it's \"good\". it's just the first browser lang that wasn't hellishly awful enough to cancel out the huge headstart of \"runs in a browser\" would give it.","date":"2018-08-07T12:59:12.228Z","type":"message"}
{"nick":"Demp7","date":"2018-08-07T12:59:15.555Z","type":"join"}
{"nick":"Asandari","date":"2018-08-07T12:59:19.534Z","type":"join"}
{"nick":"kakashiAL","date":"2018-08-07T12:59:21.674Z","type":"join"}
{"nick":"`slikts","message":"js is only good if you compare it to php or old java","date":"2018-08-07T12:59:52.921Z","type":"message"}
{"nick":"`slikts","message":"or old js","date":"2018-08-07T13:00:03.934Z","type":"message"}
{"nick":"Demp7","reason":"Read error: Connection reset by peer","date":"2018-08-07T13:00:17.803Z","type":"quit"}
{"nick":"Toshi","date":"2018-08-07T13:02:20.722Z","type":"join"}
{"nick":"u0m3","reason":"Read error: Connection reset by peer","date":"2018-08-07T13:02:44.658Z","type":"quit"}
{"nick":"ffx_","date":"2018-08-07T13:03:30.779Z","type":"join"}
{"nick":"kjartan","reason":"Read error: Connection reset by peer","date":"2018-08-07T13:04:16.269Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T13:04:37.480Z","type":"join"}
{"nick":"sweet2k4","date":"2018-08-07T13:04:39.467Z","type":"join"}
{"nick":"InverseRhombus","reason":"Remote host closed the connection","date":"2018-08-07T13:04:39.882Z","type":"quit"}
{"nick":"sweet2k4","message":"hi, for some reason i dont have a package.json file in my project. but i have a package.lock. Does anyone know if i can generate a package.json from the .lock file?","date":"2018-08-07T13:04:45.845Z","type":"message"}
{"nick":"sweet2k4","message":"#javascript","date":"2018-08-07T13:05:58.816Z","type":"message"}
{"nick":"Sven_vB","message":"sweet2k4, could you pastebin your package.lock?","date":"2018-08-07T13:06:27.495Z","type":"message"}
{"nick":"kjartan","date":"2018-08-07T13:06:42.291Z","type":"join"}
{"nick":"Luxray5474___","date":"2018-08-07T13:07:00.580Z","type":"join"}
{"nick":"Sven_vB","message":"sweet2k4, also start using a VCS (e.g. git) so you can restore files when they disappear.","date":"2018-08-07T13:07:03.318Z","type":"message"}
{"nick":"sweet2k4","message":"Sven_vB: https://pastebin.com/K6H9NUfB","date":"2018-08-07T13:07:50.885Z","type":"message"}
{"nick":"Sven_vB","message":"you could also start with a new package.json and use a linter to guess the dependencies","date":"2018-08-07T13:08:06.912Z","type":"message"}
{"nick":"Luxray5474__","reason":"Ping timeout: 248 seconds","date":"2018-08-07T13:08:17.537Z","type":"quit"}
{"nick":"InverseRhombus","date":"2018-08-07T13:08:26.681Z","type":"join"}
{"nick":"sweet2k4","message":"Sven_vB: yes i use git. thats preyy much why i need the package.json","date":"2018-08-07T13:08:28.530Z","type":"message"}
{"nick":"Sven_vB","message":"wat. git works fine without package.json","date":"2018-08-07T13:09:01.423Z","type":"message"}
{"nick":"horsey","date":"2018-08-07T13:09:02.852Z","type":"join"}
{"nick":"tristanp","date":"2018-08-07T13:09:03.035Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T13:09:05.517Z","type":"quit"}
{"nick":"kliq","reason":"Ping timeout: 256 seconds","date":"2018-08-07T13:09:38.345Z","type":"quit"}
{"nick":"sweet2k4","message":"Sven_vB: you mean that there could be a linter that could interperate my .lock file","date":"2018-08-07T13:09:45.120Z","type":"message"}
{"nick":"sweet2k4","message":"?","date":"2018-08-07T13:09:52.510Z","type":"message"}
{"nick":"Sven_vB","message":"looks like dependencies are the only data stored in your package.lock, so you can only recover that part. lemme write a quick node code for that.","date":"2018-08-07T13:09:54.028Z","type":"message"}
{"nick":"Sven_vB","message":"no I mean there are linters that scan your JS files for import and require, then warn you about how you should add those deps.","date":"2018-08-07T13:10:22.436Z","type":"message"}
{"nick":"leolrrj","reason":"Remote host closed the connection","date":"2018-08-07T13:10:34.994Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-08-07T13:10:40.993Z","type":"quit"}
{"nick":"sweet2k4","message":"Sven_vB: the dependenice is pretty much all i need. i can fill out the rest manually. that would be great sven. thanks a lot for helping me","date":"2018-08-07T13:11:25.323Z","type":"message"}
{"nick":"Sven_vB","message":"recovery script: nodejs -p 'var dep = require(\"./pkglock.json\").dependencies; Object.keys(dep).forEach(function (n) { dep[n] = \"^\" + dep[n].version }); dep'","date":"2018-08-07T13:12:30.154Z","type":"message"}
{"nick":"jphase","date":"2018-08-07T13:12:30.375Z","type":"join"}
{"nick":"tristanp","reason":"Ping timeout: 240 seconds","date":"2018-08-07T13:13:21.389Z","type":"quit"}
{"nick":"Sven_vB","message":"not meant as coding style example though. =)","date":"2018-08-07T13:13:25.919Z","type":"message"}
{"nick":"horsey","reason":"Ping timeout: 256 seconds","date":"2018-08-07T13:13:44.724Z","type":"quit"}
{"nick":"GreenJello","date":"2018-08-07T13:13:48.011Z","type":"join"}
{"nick":"_rgn","message":"cat package-lock.json | npx ramda-cli '.dependencies' 'map (.version)'","date":"2018-08-07T13:14:04.777Z","type":"message"}
{"nick":"Sven_vB","message":":+1:","date":"2018-08-07T13:14:18.855Z","type":"message"}
{"nick":"caracalla","reason":"Ping timeout: 256 seconds","date":"2018-08-07T13:14:52.800Z","type":"quit"}
{"nick":"Sven_vB","message":"nah, cancel that. it wastes a cat. :P","date":"2018-08-07T13:14:56.734Z","type":"message"}
{"nick":"`slikts","message":"heh wasted cat","date":"2018-08-07T13:15:19.313Z","type":"message"}
{"nick":"EyePulp","date":"2018-08-07T13:15:20.410Z","type":"join"}
{"nick":"Sven_vB","message":"but :+1: for the right command part","date":"2018-08-07T13:15:21.783Z","type":"message"}
{"nick":"caracalla","date":"2018-08-07T13:15:25.250Z","type":"join"}
{"nick":"^^^^","reason":"Remote host closed the connection","date":"2018-08-07T13:15:28.162Z","type":"quit"}
{"nick":"johnny56","reason":"Ping timeout: 276 seconds","date":"2018-08-07T13:15:43.961Z","type":"quit"}
{"nick":"johnny56_","date":"2018-08-07T13:15:47.008Z","type":"join"}
{"nick":"^^^^","date":"2018-08-07T13:16:13.691Z","type":"join"}
{"nick":"^^^^","reason":"Remote host closed the connection","date":"2018-08-07T13:17:41.400Z","type":"quit"}
{"nick":"sweet2k4","message":"Sven_vB: give me a sec to test the script and setup a new package.json file","date":"2018-08-07T13:17:48.831Z","type":"message"}
{"nick":"^^^^","date":"2018-08-07T13:18:25.774Z","type":"join"}
{"nick":"Sven_vB","message":"_rgn, how would you add the circumflex chars in front of the version numbers?","date":"2018-08-07T13:18:42.074Z","type":"message"}
{"nick":"Sven_vB","message":"sweet2k4, you might want to replace the last dep with JSON.stringify(dep, null, 2)","date":"2018-08-07T13:19:19.892Z","type":"message"}
{"nick":"TinkerT","reason":"Read error: Connection reset by peer","date":"2018-08-07T13:19:50.809Z","type":"quit"}
{"nick":"sweet2k4","message":"Sven_vB: like this: node -p 'var dep = require(\"./package-lock.json\").dependencies; Object.keys(dep).forEach(function (n) { dep[n] = \"^\" + dep[n].version }); JSON.stringify(dep, null, 2)'","date":"2018-08-07T13:21:10.281Z","type":"message"}
{"nick":"benjamingr_","message":"Well, whether promises are monads wasn't really my point - my point is that when comparing to CPS they play the role of the continuation monad","date":"2018-08-07T13:21:42.454Z","type":"message"}
{"nick":"TinkerT","date":"2018-08-07T13:21:51.571Z","type":"join"}
{"nick":"`slikts","message":"and a continuation monad wraps continuations","date":"2018-08-07T13:22:19.134Z","type":"message"}
{"nick":"fuerchter","date":"2018-08-07T13:22:25.641Z","type":"join"}
{"nick":"`slikts","message":"it's not a conceptually separate thing","date":"2018-08-07T13:22:38.297Z","type":"message"}
{"nick":"benjamingr_","message":"Promises - as we know them are more C# and Python than Smalltalk or LISP, you can say E has promises but they're further away from what we know","date":"2018-08-07T13:22:41.045Z","type":"message"}
{"nick":"Sven_vB","message":"sweet2k4, yes.","date":"2018-08-07T13:23:13.156Z","type":"message"}
{"nick":"`slikts","message":"a monad is just a special kind of container type","date":"2018-08-07T13:23:14.072Z","type":"message"}
{"nick":"benjamingr_","message":"It's conceptually a different abstraction - it's not just whether asynchronousity is explicit and pull based","date":"2018-08-07T13:23:18.487Z","type":"message"}
{"nick":"benjamingr_","message":"Well, I think the part that's weird is the directionality, a promise is multicast and the value is \"cached\"","date":"2018-08-07T13:24:02.533Z","type":"message"}
{"nick":"`slikts","message":"I mean, clearly promises are not the same as just callbacks","date":"2018-08-07T13:24:06.333Z","type":"message"}
{"nick":"leolrrj","date":"2018-08-07T13:24:14.328Z","type":"join"}
{"nick":"benjamingr_","message":"I actually had a question about that somewhere - promises in JS were initially about the DSL and now mostly about async/await","date":"2018-08-07T13:24:25.873Z","type":"message"}
{"nick":"Sven_vB","message":"sweet2k4, btw if it was a package-lock.json, you might have gotten better replies if you told us that, so people would have known it's probably npm-compatible.","date":"2018-08-07T13:24:26.744Z","type":"message"}
{"nick":"benjamingr_","message":"Here - https://stackoverflow.com/questions/22539815/arent-promises-just-callbacks :D Quite old","date":"2018-08-07T13:24:42.195Z","type":"message"}
{"nick":"benjamingr_","message":"Basically, the idea was to give `return` and `throw` back to asynchronous code and to \"sequence\" the flow like the continuation monad","date":"2018-08-07T13:25:15.583Z","type":"message"}
{"nick":"pokk13","date":"2018-08-07T13:25:33.213Z","type":"join"}
{"nick":"`slikts","message":"without looking at that link's contents, no one's saying promises are just callbacks; they're a wrapper around callbacks","date":"2018-08-07T13:25:35.457Z","type":"message"}
{"nick":"bobe26","date":"2018-08-07T13:25:59.098Z","type":"join"}
{"nick":"marthinal","date":"2018-08-07T13:27:10.758Z","type":"join"}
{"nick":"`slikts","message":"you can mechanically transform promise based code to just callbacks","date":"2018-08-07T13:27:12.509Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T13:27:13.767Z","type":"join"}
{"nick":"`slikts","message":"callbacks can do the same \"sequencing\", it would just be less palatable to read","date":"2018-08-07T13:27:25.622Z","type":"message"}
{"nick":"sweet2k4","message":"Sven_vB: i see. i will try to reinstall my project to se if it works","date":"2018-08-07T13:27:34.173Z","type":"message"}
{"nick":"Sven_vB","message":"first of all, callbacks should be functions, while most promises are not. :P","date":"2018-08-07T13:27:35.105Z","type":"message"}
{"nick":"`slikts","message":"and write","date":"2018-08-07T13:27:36.098Z","type":"message"}
{"nick":"benjamingr_","message":"I realize they are \"as expressive\" and \"sugar\" - but it's in the sense everything is sugar around `jnz`s and `if`s, sure, you can do anything with any abstraction but it is fundamentally different","date":"2018-08-07T13:28:01.708Z","type":"message"}
{"nick":"pokk13","reason":"Remote host closed the connection","date":"2018-08-07T13:28:15.220Z","type":"quit"}
{"nick":"benjamingr_","message":"The fact that the code doesn't call into you but rather you subscribe to its completion is subtle but super important","date":"2018-08-07T13:28:20.246Z","type":"message"}
{"nick":"benjamingr_","message":"For example, domains failed because CPS had this issue where you can have a library you don't trust between two pieces of \"trusted\" code and if the bottom one threw the middle one couldn't be expected to clean up - that's really fundamental to CPS and isn't a problem promises would have since each function is done running before the next one is called.","date":"2018-08-07T13:29:01.080Z","type":"message"}
{"nick":"`slikts","message":"with just a callback you also 'subscribe'","date":"2018-08-07T13:29:07.648Z","type":"message"}
{"nick":"benjamingr_","message":"That question is just a Q&A format I wrote.","date":"2018-08-07T13:29:10.666Z","type":"message"}
{"nick":"`slikts","message":".on(cb) is no less subscribing than .then(cb)","date":"2018-08-07T13:29:26.098Z","type":"message"}
{"nick":"benjamingr_","message":"You can, but the function you passed the callback to is actually calling you and invoking your function - if for example that function is holding resources it is cleaning after it's calling the callback and you `throw` then it has a problem.","date":"2018-08-07T13:29:40.004Z","type":"message"}
{"nick":"benjamingr_","message":"That's a big part of why Node terminates on uncaught errors IMHO","date":"2018-08-07T13:30:01.139Z","type":"message"}
{"nick":"MJ9413","date":"2018-08-07T13:30:31.267Z","type":"join"}
{"nick":"Sven_vB","message":"yeah Promises make stronger guarantees about when and how ofte your callback will be called.","date":"2018-08-07T13:30:34.381Z","type":"message"}
{"nick":"benjamingr_","message":"`.on(cb)` is - sure, though it doesn't have the caching semantics and other goodies not the \"one time\" guarantee and doesn't model a function's return value.","date":"2018-08-07T13:30:37.262Z","type":"message"}
{"nick":"polydo_s","date":"2018-08-07T13:30:41.739Z","type":"join"}
{"nick":"polydo_s","reason":"Remote host closed the connection","date":"2018-08-07T13:30:45.599Z","type":"quit"}
{"nick":"`slikts","message":"benjamingr_: that's besides the point","date":"2018-08-07T13:30:52.465Z","type":"message"}
{"nick":"benjamingr_","message":"Sven_vB: in fact that's a very big part of the point","date":"2018-08-07T13:30:52.702Z","type":"message"}
{"nick":"Sven_vB","message":"there's .once if you only need one","date":"2018-08-07T13:30:56.422Z","type":"message"}
{"nick":"benjamingr_","message":"I don't think it is besides the point actually - I think it was a very big motivation","date":"2018-08-07T13:31:10.262Z","type":"message"}
{"nick":"bobe26","reason":"Ping timeout: 240 seconds","date":"2018-08-07T13:31:21.423Z","type":"quit"}
{"nick":"MJ9413","reason":"Remote host closed the connection","date":"2018-08-07T13:32:15.005Z","type":"quit"}
{"nick":"`slikts","message":"I find this to muddy the idea more than anything","date":"2018-08-07T13:33:03.221Z","type":"message"}
{"nick":"`slikts","message":"the basic motivation for promises is that plain CPS produces too much nesting","date":"2018-08-07T13:33:19.556Z","type":"message"}
{"nick":"Antares268","date":"2018-08-07T13:33:39.401Z","type":"join"}
{"nick":"Antares268","reason":"Remote host closed the connection","date":"2018-08-07T13:33:41.358Z","type":"quit"}
{"nick":"`slikts","message":"in fact, avoiding nesting for sequences is the motivation for monads as such","date":"2018-08-07T13:33:47.154Z","type":"message"}
{"nick":"benjamingr_","message":"The motivation for the continuation monad is controlling side effects and sequencing them","date":"2018-08-07T13:34:05.446Z","type":"message"}
{"nick":"`slikts","message":"you can sequence them anyway, so that can't be the motivation","date":"2018-08-07T13:34:35.469Z","type":"message"}
{"nick":"benjamingr_","message":"The motivation for promises was also reducing nesting - sure, that's also how we sold it, but the fundamental part is the fact it encapsulates semantics from `throw` and `return`","date":"2018-08-07T13:34:48.774Z","type":"message"}
{"nick":"`slikts","message":"the motivation is that you can do it in a particular way -- as opposed to the pyramids of nested callbacks","date":"2018-08-07T13:34:49.110Z","type":"message"}
{"nick":"alexi5_","message":"I am thinking of using nodejs  to building a  portal for an internet gateway that  presents user with web page and  provisions device with  profile to allow internet access. is this a good use case for nodejs ?","date":"2018-08-07T13:35:12.245Z","type":"message"}
{"nick":"`slikts","message":"secondly, it doesn't \"control\" side-effects, it models them, turning them into effects","date":"2018-08-07T13:35:17.212Z","type":"message"}
{"nick":"Sven_vB","message":"nesting is a different problem, and it's entirely opt-in.","date":"2018-08-07T13:35:22.785Z","type":"message"}
{"nick":"`slikts","message":"Sven_vB: no","date":"2018-08-07T13:35:31.564Z","type":"message"}
{"nick":"benjamingr_","message":"You don't need promises for that though - it's the fundamental concept of getting properties of synchronous code (like throw and return) back.","date":"2018-08-07T13:35:39.222Z","type":"message"}
{"nick":"benjamingr_","message":"Nesting is not entirely different - it's definitely a connected problem IMO","date":"2018-08-07T13:35:48.647Z","type":"message"}
{"nick":"Sven_vB","message":"ok well w/o .bind maybe one level of nesting is required.","date":"2018-08-07T13:35:53.308Z","type":"message"}
{"nick":"millido","reason":"Ping timeout: 256 seconds","date":"2018-08-07T13:36:16.340Z","type":"quit"}
{"nick":"_rgn","message":"Sven_vB: for example, cat package-lock.json | npx ramda-cli '.dependencies' 'map (.version) >> concat(\"^\")'","date":"2018-08-07T13:36:38.073Z","type":"message"}
{"nick":"benjamingr_","message":"It's also possible I'm remembering stuff incorrectly - I don't remember many discussions about this since 2015 :D","date":"2018-08-07T13:36:40.185Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 256 seconds","date":"2018-08-07T13:36:58.791Z","type":"quit"}
{"nick":"millido","date":"2018-08-07T13:37:12.594Z","type":"join"}
{"nick":"`slikts","message":"a property of sync code is flat sequences","date":"2018-08-07T13:37:21.797Z","type":"message"}
{"nick":"`slikts","message":"which is also the reason why async/await exists -- it removes one extra level of nesting","date":"2018-08-07T13:37:36.882Z","type":"message"}
{"nick":"`slikts","message":"namely the .then callbacks","date":"2018-08-07T13:37:41.815Z","type":"message"}
{"nick":"`slikts","message":"if there was top-level await, it'd be no nesting at all","date":"2018-08-07T13:38:08.626Z","type":"message"}
{"nick":"DeltaHeavy","date":"2018-08-07T13:38:18.181Z","type":"join"}
{"nick":"`slikts","message":"asynchronicity takes continuations, and sequencing continuations leads to nesting, and promises flatten those sequences","date":"2018-08-07T13:39:17.334Z","type":"message"}
{"nick":"gli|wfh","reason":"Quit: Leaving","date":"2018-08-07T13:39:27.360Z","type":"quit"}
{"nick":"`slikts","message":"and async/await flattens it one level further","date":"2018-08-07T13:39:34.783Z","type":"message"}
{"nick":"dcRon","date":"2018-08-07T13:39:46.389Z","type":"join"}
{"nick":"dcRon","reason":"Client Quit","date":"2018-08-07T13:39:51.421Z","type":"quit"}
{"nick":"Sven_vB","message":"not deep nesting though. deep nesting is opt-in.","date":"2018-08-07T13:40:05.009Z","type":"message"}
{"nick":"alem0lars","reason":"Ping timeout: 244 seconds","date":"2018-08-07T13:40:06.686Z","type":"quit"}
{"nick":"`slikts","message":"no...","date":"2018-08-07T13:40:10.200Z","type":"message"}
{"nick":"dcRon","date":"2018-08-07T13:40:15.800Z","type":"join"}
{"nick":"benjamingr_","message":"Myles is working on TLA, it's pretty challenging","date":"2018-08-07T13:40:17.896Z","type":"message"}
{"nick":"Sven_vB","message":"I wrote a proxy without deep nesting.","date":"2018-08-07T13:40:25.147Z","type":"message"}
{"nick":"benjamingr_","message":"You can write all code without nesting though, just name the callbacks and extract them outside - but nesting isn't the important part sequencing is","date":"2018-08-07T13:40:33.894Z","type":"message"}
{"nick":"benjamingr_","message":"CPS is fundamentally different because of how the stack looks - another library's function isn't calling into you - the platform is","date":"2018-08-07T13:40:56.023Z","type":"message"}
{"nick":"DeltaHeavy","message":".then() also always returns a promise. If you return a promise in one, it takes it's resolve value ofr the next then in the sibling chain","date":"2018-08-07T13:41:18.412Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: you still need nesting; if you have async functions a and b, and b needs to run after a, a needs to call b","date":"2018-08-07T13:41:27.930Z","type":"message"}
{"nick":"`slikts","message":"and so on","date":"2018-08-07T13:41:30.171Z","type":"message"}
{"nick":"DeltaHeavy","message":"A lot of people do'ont know or don't take advantage of Promise#then's flatmap-esque bahaviour.","date":"2018-08-07T13:41:35.572Z","type":"message"}
{"nick":"benjamingr_","message":"`a().then(b)` - no nesting :D","date":"2018-08-07T13:41:43.439Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: but that is not CPS","date":"2018-08-07T13:41:52.199Z","type":"message"}
{"nick":"Sven_vB","message":"maybe we have different understandings of what \"nesting\" means.","date":"2018-08-07T13:42:06.774Z","type":"message"}
{"nick":"benjamingr_","message":"So now you agree :D ?","date":"2018-08-07T13:42:09.953Z","type":"message"}
{"nick":"`slikts","message":"Sven_vB: a(b(c)))","date":"2018-08-07T13:42:20.146Z","type":"message"}
{"nick":"benjamingr_","message":"DeltaHeavy: I think there is a chance in retrospect the flatMaping behaviour was a mistake - I used to really talk a lot about liking it and advocate it around 2013-2016 but I'm not so sure it's important given async/await","date":"2018-08-07T13:42:31.382Z","type":"message"}
{"nick":"benjamingr_","message":"A lot of the things are designed around working with jQuery deferreds","date":"2018-08-07T13:42:38.592Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: the mistake was making the flattening deep","date":"2018-08-07T13:42:57.630Z","type":"message"}
{"nick":"DeltaHeavy","message":"benjamingr_ Why is it a mistake? JUst because await exists now?w","date":"2018-08-07T13:43:01.002Z","type":"message"}
{"nick":"DeltaHeavy","message":"Eh, I have no idea why you wouldn't wnat it to flatten liike it does. See no advantage of it not","date":"2018-08-07T13:43:21.880Z","type":"message"}
{"nick":"benjamingr_","message":"Well, because there are footguns around it that I didn't think about before","date":"2018-08-07T13:43:47.307Z","type":"message"}
{"nick":"mezod","date":"2018-08-07T13:43:49.983Z","type":"join"}
{"nick":"DeltaHeavy","message":"Such as?","date":"2018-08-07T13:43:59.766Z","type":"message"}
{"nick":"benjamingr_","message":"There's actually active discussion around it in promise-use-cases and promises-debugging and we're working on it","date":"2018-08-07T13:44:03.241Z","type":"message"}
{"nick":"DeltaHeavy","message":"I know of none","date":"2018-08-07T13:44:05.902Z","type":"message"}
{"nick":"benjamingr_","message":"One sec, grabbing link","date":"2018-08-07T13:44:07.119Z","type":"message"}
{"nick":"DeltaHeavy","message":"Thanks!","date":"2018-08-07T13:44:14.038Z","type":"message"}
{"nick":"Sven_vB","message":"`slikts, you could rewrite that as tmp = c; tmp = b(tmp); tmp = a(tmp)","date":"2018-08-07T13:45:08.881Z","type":"message"}
{"nick":"benjamingr_","message":"Here's a list of gotchas - https://github.com/nodejs/promise-use-cases/blob/master/meeting-discussion.md","date":"2018-08-07T13:45:39.647Z","type":"message"}
{"nick":"benjamingr_","message":"Here's the slides I presented at the collab summit with bmeurer: https://docs.google.com/presentation/d/16WYzlvvDm85IruD3jkH2nTwTkTUa6YSPtDF0VQ4g4Hk/edit?usp=sharing","date":"2018-08-07T13:45:39.810Z","type":"message"}
{"nick":"benjamingr_","message":"Note that we're looking for more people to get involved - though I didn't come here to solicit help :P","date":"2018-08-07T13:45:39.974Z","type":"message"}
{"nick":"Rashad","date":"2018-08-07T13:46:08.685Z","type":"join"}
{"nick":"benjamingr_","message":"We also have https://github.com/nodejs/promise-use-cases/issues/26 - and we'll likely have another meeting of promises-debugging in a few weeks when everyone is back - it's vacation period for everyone now","date":"2018-08-07T13:46:15.024Z","type":"message"}
{"nick":"`slikts","message":"Sven_vB: that's a fair point","date":"2018-08-07T13:46:33.333Z","type":"message"}
{"nick":"benjamingr_","message":"Oh, and we're working on a survey - https://github.com/nodejs/user-feedback/issues/77 it's all moving slowly (a large part of it is my fault and the fact I had personal life shit going on :/)","date":"2018-08-07T13:46:46.637Z","type":"message"}
{"nick":"Sven_vB","message":"`slikts, it might even help debugging if you name the intermediate results.","date":"2018-08-07T13:47:28.096Z","type":"message"}
{"nick":"`slikts","message":"naming is hard","date":"2018-08-07T13:47:37.032Z","type":"message"}
{"nick":"mezod","reason":"Ping timeout: 240 seconds","date":"2018-08-07T13:48:05.474Z","type":"quit"}
{"nick":"Steverman","date":"2018-08-07T13:48:19.792Z","type":"join"}
{"nick":"benjamingr_","message":"Anyway, if anyone ever wants to get involved feel free to ping me, I actually came here because I'm a moderation team member and I wanted to check how IRC is looking :) I'll be back later at some point class is starting","date":"2018-08-07T13:48:20.222Z","type":"message"}
{"nick":"Sven_vB","message":"`slikts, yes, but mostly because it requires you to think clearly and cleanly. which again helps debugging.","date":"2018-08-07T13:48:26.750Z","type":"message"}
{"nick":"`slikts","message":"in any case, since cps, promises and async/await are all in play at the same time in JS, it's really useful to understand the links between them","date":"2018-08-07T13:49:02.790Z","type":"message"}
{"nick":"`slikts","message":"and they are not \"fundamentally different\"","date":"2018-08-07T13:49:14.800Z","type":"message"}
{"nick":"`slikts","message":"I'd in fact call that stance obscurantist","date":"2018-08-07T13:49:48.084Z","type":"message"}
{"nick":"benjamingr_","message":"I think they are very different - but I wouldn't explain it that way to someone learning since to them the important part is figuring out the platform can call into me and how asynchronous code works in JavaScript :)","date":"2018-08-07T13:49:49.059Z","type":"message"}
{"nick":"ferhaty","reason":"Quit: ferhaty","date":"2018-08-07T13:50:03.201Z","type":"quit"}
{"nick":"DeltaHeavy","message":"benjamingr_ THere aree silly like \"forgetting to return in a .then()\" \"Forgetting to use await\"","date":"2018-08-07T13:50:36.415Z","type":"message"}
{"nick":"`slikts","message":"like, they are different, no one is disputing that...","date":"2018-08-07T13:50:51.438Z","type":"message"}
{"nick":"`slikts","message":"but their releationship is derivative","date":"2018-08-07T13:50:58.315Z","type":"message"}
{"nick":"`slikts","message":"and they're also interchangeable","date":"2018-08-07T13:51:07.853Z","type":"message"}
{"nick":"benjamingr_","message":"Yes.","date":"2018-08-07T13:51:14.888Z","type":"message"}
{"nick":"`slikts","message":"in fact, they're mechanically transformable","date":"2018-08-07T13:51:27.786Z","type":"message"}
{"nick":"benjamingr_","message":"DeltaHeavy: you wouldn't imagine how many of those I saw in production code bases :D If you use promises correctly then there are no footguns - but then again that's what footguns are about","date":"2018-08-07T13:51:36.386Z","type":"message"}
{"nick":"DeltaHeavy","message":"benjamingr_ What's the alternative?","date":"2018-08-07T13:52:07.847Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: yes, and JavaScript is mechanically transformable to assembly - I don't think the fact you can use one paradigm to write anything else that solves the same general problem is contested","date":"2018-08-07T13:52:11.107Z","type":"message"}
{"nick":"DeltaHeavy","message":"Learning async progrmaming takes a bit of practise.","date":"2018-08-07T13:52:16.357Z","type":"message"}
{"nick":"benjamingr_","message":"DeltaHeavy: alternative to what?","date":"2018-08-07T13:52:18.126Z","type":"message"}
{"nick":"DeltaHeavy","message":"When you get it, it's easy","date":"2018-08-07T13:52:18.590Z","type":"message"}
{"nick":"benjamingr_","message":"It's not easy, it's super hard to do async programming right - that's the problem - it looks easy but edge cases are very hard to understand well - getting a deep understanding of what's hard is also hard","date":"2018-08-07T13:52:42.225Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: there are concepts that are too complex to be mechanically translated into eachother","date":"2018-08-07T13:53:05.877Z","type":"message"}
{"nick":"dcRon","date":"2018-08-07T13:53:16.008Z","type":"part"}
{"nick":"DeltaHeavy","message":"benjamingr_ Promises","date":"2018-08-07T13:53:20.845Z","type":"message"}
{"nick":"benjamingr_","message":"And I'm not saying \"right\" like \"no true scotsman\" - I mean it in a \"I've had many bugs in async code in the past\" way as well as saw them in large code bases.","date":"2018-08-07T13:53:26.643Z","type":"message"}
{"nick":"`slikts","message":"like, you can't transform machine code back into JS","date":"2018-08-07T13:53:42.301Z","type":"message"}
{"nick":"benjamingr_","message":"DeltaHeavy: oh, definitely use promises - I've spent a large(ish) amount of time in the past few years getting people to adopt them and improving their UX.","date":"2018-08-07T13:53:46.024Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: ever heard of emscipten :D ?","date":"2018-08-07T13:53:53.418Z","type":"message"}
{"nick":"DeltaHeavy","message":"Adopt them over what? $.deferred?","date":"2018-08-07T13:54:02.442Z","type":"message"}
{"nick":"benjamingr_","message":"You can convert llvm to asm.js (which is a subset of JS) and it even runs reasonably well","date":"2018-08-07T13:54:05.051Z","type":"message"}
{"nick":"benjamingr_","message":"DeltaHeavy: over callbacks, $.deferred and a bunch of other stuff, I worked on a library called Bluebird and answered questions in StackOverflow","date":"2018-08-07T13:54:20.296Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: I mean \"normal\" js","date":"2018-08-07T13:54:43.994Z","type":"message"}
{"nick":"benjamingr_","message":"Actually, I think I have a talk somewhere about adding `unhandledRejection` to node that also goes through some history - probably awfully boring though.","date":"2018-08-07T13:54:45.681Z","type":"message"}
{"nick":"tristanp","date":"2018-08-07T13:54:49.313Z","type":"join"}
{"nick":"`slikts","message":"not a subset like asm.js","date":"2018-08-07T13:54:53.419Z","type":"message"}
{"nick":"benjamingr_","message":"found it: https://www.youtube.com/watch?v=LGpmUyFnyuQ this is pretty old","date":"2018-08-07T13:54:56.778Z","type":"message"}
{"nick":"Myrax","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T13:55:04.422Z","type":"quit"}
{"nick":"benjamingr_","message":"asm.js is normal JS, most JS we write is a subset anyway - when is the last time you used `with` or `void`?","date":"2018-08-07T13:55:10.979Z","type":"message"}
{"nick":"`slikts","message":"no one writes js like asm.js by hand","date":"2018-08-07T13:55:21.708Z","type":"message"}
{"nick":"benjamingr_","message":"As in, if you take Netscape 7 or IE6 it will run asm.js, just not very fast :D","date":"2018-08-07T13:55:24.208Z","type":"message"}
{"nick":"DeltaHeavy","message":"benjamingr_ Sucks, we just only hire JS devs who have a good grasp on JS","date":"2018-08-07T13:55:31.335Z","type":"message"}
{"nick":"benjamingr_","message":"I wrote some asm.js by hand - but I concede that's not the point you're making","date":"2018-08-07T13:55:37.773Z","type":"message"}
{"nick":"benjamingr_","message":"DeltaHeavy: I think I have a good grasp on JS and I make these errors from time to time","date":"2018-08-07T13:55:50.609Z","type":"message"}
{"nick":"`slikts","message":"the point is differentiating mechanical vs creative transforms; theoretically the latter could be done as well, but it'd take an AI","date":"2018-08-07T13:56:03.057Z","type":"message"}
{"nick":"benjamingr_","message":"Well, even if not on JS, I have a good'ish grasp on promises","date":"2018-08-07T13:56:07.103Z","type":"message"}
{"nick":"DeltaHeavy","message":"Everyone makes errors time to tiime","date":"2018-08-07T13:56:10.129Z","type":"message"}
{"nick":"DeltaHeavy","message":"Promises are meant to reduce complexity","date":"2018-08-07T13:56:17.881Z","type":"message"}
{"nick":"benjamingr_","message":"Right, and we as a platform don't do a great job helping users","date":"2018-08-07T13:56:20.796Z","type":"message"}
{"nick":"benjamingr_","message":"Yeah, promises are great - to be clear, I continue to be very much in favor of promises and async/await","date":"2018-08-07T13:56:35.281Z","type":"message"}
{"nick":"`slikts","message":"calling promises and callbacks \"fundamentally different\" doesn't help users","date":"2018-08-07T13:56:42.728Z","type":"message"}
{"nick":"benjamingr_","message":"I just think we (the platform) should do a better job helping users with them","date":"2018-08-07T13:56:45.843Z","type":"message"}
{"nick":"trumco","date":"2018-08-07T13:57:07.385Z","type":"join"}
{"nick":"DeltaHeavy","message":"How?","date":"2018-08-07T13:57:11.797Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: I agree, they are fundamentally different from a philosophical point of view - they are similar in that they are both ways to solve the \"how to return a response from an asynchronous call\" problem","date":"2018-08-07T13:57:14.509Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: that \"philosophical view\" is misguided then","date":"2018-08-07T13:57:41.612Z","type":"message"}
{"nick":"benjamingr_","message":"DeltaHeavy: well, we're currently working on a bunch of things - V8 promised us async stack traces in production, we're adding warnings and better hooks and we'll write a guide","date":"2018-08-07T13:57:43.438Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: we'll agree to disagree on the philosophy then - I think that philosophical difference is why tasks/promises/futures are a better abstraction than callbacks - it's _very_ fundamental, like getters vs. setters, pull vs. push and variance. Promises invert an arrow in one very particular place where you don't call a function but rather you fulfill a promise and then the platform deals with the function.","date":"2018-08-07T13:58:50.904Z","type":"message"}
{"nick":"zava","reason":"Quit: WeeChat 2.2","date":"2018-08-07T13:58:57.936Z","type":"quit"}
{"nick":"benjamingr_","message":"A callback is more push based - it calls you rather than you subscribe to it","date":"2018-08-07T13:59:19.342Z","type":"message"}
{"nick":"zava","date":"2018-08-07T13:59:24.432Z","type":"join"}
{"nick":"`slikts","message":"promises being better doesn't make them fundamentally different from the thing they are *based on*","date":"2018-08-07T13:59:47.403Z","type":"message"}
{"nick":"benjamingr_","message":"If you feel philosophical kris's gtor and this talk really helped me https://channel9.msdn.com/Events/Lang-NEXT/Lang-NEXT-2014/Keynote-Duality - it's an Rx talk but it's actually a philosophy talk.","date":"2018-08-07T13:59:49.322Z","type":"message"}
{"nick":"DeltaHeavy","message":"beenCan you give me an example of said hook / warning?","date":"2018-08-07T13:59:51.048Z","type":"message"}
{"nick":"benjamingr_","message":"DeltaHeavy: we have a list of action items in the promises-debugging and promise-use-cases repo - but for example devsnek is working on a resolve-after-reject warning based on the spec we gave v8","date":"2018-08-07T14:00:22.088Z","type":"message"}
{"nick":"benjamingr_","message":"Let me find the v8 impl doc","date":"2018-08-07T14:00:25.985Z","type":"message"}
{"nick":"hemstock","reason":"Read error: Connection reset by peer","date":"2018-08-07T14:00:36.652Z","type":"quit"}
{"nick":"_rgn","message":"callback is not a value you can operate on. you can't make a function that returns a value asynchronously, without promises","date":"2018-08-07T14:00:43.807Z","type":"message"}
{"nick":"DeltaHeavy","message":"brb","date":"2018-08-07T14:01:06.707Z","type":"message"}
{"nick":"benjamingr_","message":"https://docs.google.com/document/d/1ZDafLmQmvP4LgQNtUyLWaSgyhXwgr5nJ624eON0ix5w/edit here's an example @DeltaHeavy  - that'll take a few more days to work on though since we have some disagreements (a good thing)","date":"2018-08-07T14:01:10.954Z","type":"message"}
{"nick":"benjamingr_","message":"Anyway, I really got to go - nice chatting with you everyone :)","date":"2018-08-07T14:01:18.368Z","type":"message"}
{"nick":"DeltaHeavy","message":"Will read soon, brb","date":"2018-08-07T14:01:24.968Z","type":"message"}
{"nick":"cdev771","date":"2018-08-07T14:01:30.363Z","type":"join"}
{"nick":"devsnek","message":"promises are cool","date":"2018-08-07T14:01:42.444Z","type":"message"}
{"nick":"`slikts","message":"_rgn: right, promises give first-class representation to async values","date":"2018-08-07T14:01:53.694Z","type":"message"}
{"nick":"cthulchu","date":"2018-08-07T14:02:12.345Z","type":"join"}
{"nick":"_rgn","message":"yeah","date":"2018-08-07T14:02:14.151Z","type":"message"}
{"nick":"`slikts","message":"but those values exist anyway even without promises, they just aren't represented in the code","date":"2018-08-07T14:02:17.168Z","type":"message"}
{"nick":"`slikts","message":"i.e., it's the difference between effects and side-effects","date":"2018-08-07T14:02:26.722Z","type":"message"}
{"nick":"bdunavant","date":"2018-08-07T14:02:34.574Z","type":"join"}
{"nick":"hemstock","date":"2018-08-07T14:02:38.337Z","type":"join"}
{"nick":"`slikts","message":"something that's modeled by or represented in the code is an effect","date":"2018-08-07T14:02:59.517Z","type":"message"}
{"nick":"devsnek","message":"it's funny that promises aren't primitive","date":"2018-08-07T14:03:03.104Z","type":"message"}
{"nick":"`slikts","message":"they're primitives, just not primitive type as understood by js","date":"2018-08-07T14:03:33.733Z","type":"message"}
{"nick":"`slikts","message":"primitive as in a basic building block","date":"2018-08-07T14:03:44.629Z","type":"message"}
{"nick":"devsnek","message":"I mean js primitive","date":"2018-08-07T14:03:53.759Z","type":"message"}
{"nick":"`slikts","message":"I'm not sure if that would make sense","date":"2018-08-07T14:04:26.263Z","type":"message"}
{"nick":"`slikts","message":"js makes the distinction between objects and primitives based on reference vs value semantics","date":"2018-08-07T14:04:54.481Z","type":"message"}
{"nick":"`slikts","message":"strings, etc. have value semantics since they're immutable","date":"2018-08-07T14:05:09.945Z","type":"message"}
{"nick":"`slikts","message":"symbols as well","date":"2018-08-07T14:05:28.851Z","type":"message"}
{"nick":"`slikts","message":"meanwhile promises aren't immutable","date":"2018-08-07T14:05:49.356Z","type":"message"}
{"nick":"`slikts","message":"they're literally state machines that update their state","date":"2018-08-07T14:06:12.270Z","type":"message"}
{"nick":"`slikts","message":"a promise can have different state from one moment to another","date":"2018-08-07T14:06:24.957Z","type":"message"}
{"nick":"Peetz0r","reason":"Ping timeout: 260 seconds","date":"2018-08-07T14:06:50.106Z","type":"quit"}
{"nick":"`slikts","message":"so promises don't stay the same in time, so the reference semantics are more fitting","date":"2018-08-07T14:07:21.933Z","type":"message"}
{"nick":"c_cinap","date":"2018-08-07T14:07:35.758Z","type":"join"}
{"nick":"`slikts","message":"while the string \"abc\" is always the same","date":"2018-08-07T14:07:39.453Z","type":"message"}
{"nick":"AvianFlu","date":"2018-08-07T14:08:38.482Z","type":"join"}
{"nick":"`slikts","message":"interestingly, you can impart value semantics on objects with Object.freeze()","date":"2018-08-07T14:09:28.806Z","type":"message"}
{"nick":"devsnek","message":"it just redefines every property","date":"2018-08-07T14:10:02.559Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T14:10:17.647Z","type":"join"}
{"nick":"devsnek","message":"well it also sets [[Extensible]]","date":"2018-08-07T14:10:20.309Z","type":"message"}
{"nick":"`slikts","message":"that's just the implementation details","date":"2018-08-07T14:10:35.323Z","type":"message"}
{"nick":"devsnek","message":"but it works by defining every own property as configurable: false","date":"2018-08-07T14:10:41.933Z","type":"message"}
{"nick":"beefjoe","date":"2018-08-07T14:10:49.309Z","type":"join"}
{"nick":"`slikts","message":"at a conceptual level, a frozen object, if its properties are also immutable, is the same as \"abc\"","date":"2018-08-07T14:11:09.143Z","type":"message"}
{"nick":"`slikts","message":"it's always the same","date":"2018-08-07T14:11:14.257Z","type":"message"}
{"nick":"sweet2k4","message":"Sven_vB: i got some errors but it was related to something else, the package.json file seams to work fine! thanks for the help man!","date":"2018-08-07T14:12:22.950Z","type":"message"}
{"nick":"Sven_vB","message":"sweet2k4, you're welcome!","date":"2018-08-07T14:12:38.707Z","type":"message"}
{"nick":"c_cinap","date":"2018-08-07T14:13:05.898Z","type":"part"}
{"nick":"`slikts","message":"I resent how \"philosophical\" gets used in the sense of \"complicated language\"","date":"2018-08-07T14:13:36.509Z","type":"message"}
{"nick":"`slikts","message":"it's bad philosophy to make things confusing for no reason (other than maybe appearing smart)","date":"2018-08-07T14:14:00.081Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T14:15:05.520Z","type":"quit"}
{"nick":"`slikts","message":"it's how the word's gotten a bad rap in exact science/techy circles","date":"2018-08-07T14:15:12.654Z","type":"message"}
{"nick":"mzl0","date":"2018-08-07T14:16:14.562Z","type":"join"}
{"nick":"alexi5_","reason":"Ping timeout: 240 seconds","date":"2018-08-07T14:17:27.778Z","type":"quit"}
{"nick":"kakashiAL","reason":"Ping timeout: 244 seconds","date":"2018-08-07T14:17:49.635Z","type":"quit"}
{"nick":"sweet2k4","reason":"Ping timeout: 252 seconds","date":"2018-08-07T14:18:57.633Z","type":"quit"}
{"nick":"millido","reason":"Ping timeout: 240 seconds","date":"2018-08-07T14:18:57.801Z","type":"quit"}
{"nick":"`slikts","message":"this whole discussion started with someone trying to use async/await without understanding where the async context starts or ends","date":"2018-08-07T14:19:14.967Z","type":"message"}
{"nick":"millido","date":"2018-08-07T14:20:02.417Z","type":"join"}
{"nick":"`slikts","message":"since async/await is meant to resemble sync code, they thought that any sync code could possibly be async","date":"2018-08-07T14:20:10.438Z","type":"message"}
{"nick":"Sven_vB","action":"uses \"philosophical\" in the sense of seeking an understanding that approximates truth as close as possible.","date":"2018-08-07T14:20:24.295Z","type":"action"}
{"nick":"Sven_vB","message":"which might include having to use specialized vocabulary to avoid confusions of fuzzy language.","date":"2018-08-07T14:20:59.246Z","type":"message"}
{"nick":"`slikts","message":"understanding how it boils down to to promises + state machine, and further how promises boil down to callbacks, would have made it clear where the async context starts","date":"2018-08-07T14:21:01.546Z","type":"message"}
{"nick":"mezod","date":"2018-08-07T14:21:46.326Z","type":"join"}
{"nick":"JaredCE_","date":"2018-08-07T14:21:48.648Z","type":"part"}
{"nick":"`slikts","message":"Sven_vB: I can subscribe to that meaning, albeit you should qualify that it just concerns conceptual matters","date":"2018-08-07T14:21:55.295Z","type":"message"}
{"nick":"JaredCE","date":"2018-08-07T14:22:15.749Z","type":"join"}
{"nick":"`slikts","message":"otherwise empirical questions would fall under it as well","date":"2018-08-07T14:22:23.475Z","type":"message"}
{"nick":"leolrrj","reason":"Ping timeout: 256 seconds","date":"2018-08-07T14:23:52.321Z","type":"quit"}
{"nick":"Sven_vB","message":"indeed, it's a part of philosophy to define a concepts of \"empirical\" and explore their uses and limitateions.","date":"2018-08-07T14:24:01.241Z","type":"message"}
{"nick":"zsocw","new_nick":"zsoc","date":"2018-08-07T14:24:47.573Z","type":"nick"}
{"nick":"`slikts","message":"right, but it's not part of philosophy to determine empirical facts, like take measurements of something","date":"2018-08-07T14:24:50.516Z","type":"message"}
{"nick":"zsoc","reason":"Changing host","date":"2018-08-07T14:24:54.194Z","type":"quit"}
{"nick":"zsoc","date":"2018-08-07T14:24:54.367Z","type":"join"}
{"nick":"Sven_vB","message":"I often laugh when people claim to solve philosophical problems with measurements, taking natural sciences as fundamental truth.","date":"2018-08-07T14:26:01.356Z","type":"message"}
{"nick":"`slikts","message":"I mean, good philosophy should be informed by facts","date":"2018-08-07T14:26:19.105Z","type":"message"}
{"nick":"leolrrj","date":"2018-08-07T14:26:31.471Z","type":"join"}
{"nick":"`slikts","message":"otherwise you get nonsense like metaphysics","date":"2018-08-07T14:26:31.878Z","type":"message"}
{"nick":"Sven_vB","message":"the problem is how you obtain \"facts\"","date":"2018-08-07T14:26:38.075Z","type":"message"}
{"nick":"`slikts","message":"very carefully :)","date":"2018-08-07T14:26:55.485Z","type":"message"}
{"nick":"`slikts","message":"namely by applying scientific skepticism","date":"2018-08-07T14:27:18.549Z","type":"message"}
{"nick":"notchris","date":"2018-08-07T14:27:34.799Z","type":"join"}
{"nick":"Alexendoo","date":"2018-08-07T14:27:45.948Z","type":"join"}
{"nick":"notchris","message":"Hello all, I have a small app that makes a request to an API, it worked the other day but now im getting the following error at work","date":"2018-08-07T14:27:57.015Z","type":"message"}
{"nick":"notchris","message":"TypeError: request(...).then is not a function","date":"2018-08-07T14:28:05.166Z","type":"message"}
{"nick":"Alexendoo","reason":"\"Leaving\"","date":"2018-08-07T14:28:20.041Z","type":"part"}
{"nick":"notchris","message":"I reinstalled node via nvm to latest, and reinstalled globally request / request promise","date":"2018-08-07T14:28:21.610Z","type":"message"}
{"nick":"bsanford","date":"2018-08-07T14:28:23.762Z","type":"join"}
{"nick":"Alexendoo","date":"2018-08-07T14:28:24.048Z","type":"join"}
{"nick":"Sven_vB","message":"the most hilarious is when people use brain-something images to try and argue about fundamental concepts that are part of the causal chain that lends credibility to the machinery they used to generate those images.","date":"2018-08-07T14:28:25.359Z","type":"message"}
{"nick":"gloomy_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T14:28:47.869Z","type":"quit"}
{"nick":"`slikts","message":"Sven_vB: you shouldn't fall into the opposite pit of arguing for some form of solipsism","date":"2018-08-07T14:28:58.575Z","type":"message"}
{"nick":"`slikts","message":"you can have facts, they're just probabilistic","date":"2018-08-07T14:29:10.750Z","type":"message"}
{"nick":"Sven_vB","message":"and that's a fact. :P","date":"2018-08-07T14:29:48.566Z","type":"message"}
{"nick":"tymczenko","date":"2018-08-07T14:30:22.752Z","type":"join"}
{"nick":"benjamingr_","message":"devsnek: that's just coincidence since they're a part of the language - not any stranger than `Array#sort` not being js primitive :)","date":"2018-08-07T14:30:29.986Z","type":"message"}
{"nick":"aLeSD","date":"2018-08-07T14:30:42.738Z","type":"join"}
{"nick":"`slikts","message":"Sven_vB: it is; facts aka reliable knowledge is known to be so based on the observable effects it can have, which are also facts","date":"2018-08-07T14:30:48.440Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: \"it's bad philosophy to make things confusing for no reason (other than maybe appearing smart)\" - this a thousand times - the platform should strive to be useful and simple","date":"2018-08-07T14:31:07.913Z","type":"message"}
{"nick":"Sven_vB","message":"notchris, when you encounter \"x.then is not a function\", make a temp var for that x expression and check what it is instead, and what it's .then is (probably undefined).","date":"2018-08-07T14:31:25.055Z","type":"message"}
{"nick":"notchris","message":"OH SHIT","date":"2018-08-07T14:31:31.537Z","type":"message"}
{"nick":"notchris","message":"nm im an idiot guys","date":"2018-08-07T14:31:34.825Z","type":"message"}
{"nick":"notchris","message":"was using request","date":"2018-08-07T14:31:38.199Z","type":"message"}
{"nick":"notchris","message":"not request-promise","date":"2018-08-07T14:31:43.031Z","type":"message"}
{"nick":"notchris","message":"RIP","date":"2018-08-07T14:31:44.158Z","type":"message"}
{"nick":"Sven_vB","message":":)","date":"2018-08-07T14:31:46.800Z","type":"message"}
{"nick":"DeltaHeavy","message":"`slikts++","date":"2018-08-07T14:31:50.040Z","type":"message"}
{"nick":"notchris","message":"lmfao","date":"2018-08-07T14:32:05.422Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: I didn't mean to impugn you with the \"sounding smart\" motive, but my point in context is that you unnecessarily complicate the basic concepts","date":"2018-08-07T14:32:19.796Z","type":"message"}
{"nick":"benjamingr_","message":"notchris: anything Node could have done better to help you find that error?","date":"2018-08-07T14:32:24.495Z","type":"message"}
{"nick":"devsnek","message":"benjamin plz","date":"2018-08-07T14:32:46.311Z","type":"message"}
{"nick":"Myrax","date":"2018-08-07T14:32:51.368Z","type":"join"}
{"nick":"benjamingr_","message":"`slikts: I didn't think you meant me in particular - I was agreeing with the sentiment that \"sounding smart\" is a very bad motive for doing something for a platform and node in particular","date":"2018-08-07T14:32:52.697Z","type":"message"}
{"nick":"benjamingr_","message":"devsnek: promises were entirely in JS and fairly popular before they were native though","date":"2018-08-07T14:33:04.610Z","type":"message"}
{"nick":"notchris","message":"“Warning: You are attemping to return a promise using the non-promise version of request. Please install request-promise or attempt your request without using promises\"","date":"2018-08-07T14:33:06.957Z","type":"message"}
{"nick":"notchris","message":"Would be the obvious error message","date":"2018-08-07T14:33:15.428Z","type":"message"}
{"nick":"bsanford","reason":"Quit: Leaving","date":"2018-08-07T14:33:18.433Z","type":"quit"}
{"nick":"devsnek","message":"rofl","date":"2018-08-07T14:33:19.601Z","type":"message"}
{"nick":"notchris","message":"Right?","date":"2018-08-07T14:33:36.013Z","type":"message"}
{"nick":"devsnek","message":"sync-request when","date":"2018-08-07T14:33:36.590Z","type":"message"}
{"nick":"benjamingr_","message":"notchris: that sounds like an interesting pull request to `request` to be honest - defining a getter that returns undefined and lots this.","date":"2018-08-07T14:33:44.655Z","type":"message"}
{"nick":"zsoc","message":"notchris: the request package just isn't very good... i wouldn't expect it to give actionable errors :p","date":"2018-08-07T14:33:53.513Z","type":"message"}
{"nick":"DeltaHeavy","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T14:34:00.900Z","type":"quit"}
{"nick":"devsnek","message":"actually you could do sync request with workers and Atomics.wait","date":"2018-08-07T14:34:01.062Z","type":"message"}
{"nick":"notchris","message":"Switching to Fetch","date":"2018-08-07T14:34:01.696Z","type":"message"}
{"nick":"notchris","message":"as we speak","date":"2018-08-07T14:34:03.963Z","type":"message"}
{"nick":"benjamingr_","message":"zsoc: what do you use instead? axios?","date":"2018-08-07T14:34:04.126Z","type":"message"}
{"nick":"notchris","message":"benjamingr_: Why did you ask?","date":"2018-08-07T14:34:10.072Z","type":"message"}
{"nick":"devsnek","message":"axios is slow :(","date":"2018-08-07T14:34:13.306Z","type":"message"}
{"nick":"zsoc","message":"benjamingr_: node-fetch usually... or bhttp if the thing involved is streams heavy","date":"2018-08-07T14:34:15.060Z","type":"message"}
{"nick":"notchris","message":"Fetch","date":"2018-08-07T14:34:15.379Z","type":"message"}
{"nick":"benjamingr_","message":"devsnek: you could do sync request by doing an `execSync` with `curl` :D","date":"2018-08-07T14:34:20.481Z","type":"message"}
{"nick":"millido","reason":"Ping timeout: 240 seconds","date":"2018-08-07T14:34:21.336Z","type":"quit"}
{"nick":"devsnek","message":"node core needs fetch already","date":"2018-08-07T14:34:39.747Z","type":"message"}
{"nick":"benjamingr_","message":"zsoc: how does node-fetch do its streams? Do I get a node stream back from `.body.getReader()`?","date":"2018-08-07T14:34:45.867Z","type":"message"}
{"nick":"devsnek","message":"and whatwg streams","date":"2018-08-07T14:34:59.404Z","type":"message"}
{"nick":"benjamingr_","message":"devsnek: fetch is _very_ web oriented and a lot of things don't translate very well","date":"2018-08-07T14:35:00.658Z","type":"message"}
{"nick":"Sven_vB","message":"benjamingr_, I wish node would, in case of \"x is not a function\", save me from having to save and debug the intermediate results that I tried to call, or tried to call a method on.","date":"2018-08-07T14:35:11.653Z","type":"message"}
{"nick":"`slikts","message":"devsnek: whatwg are whatwg streams?","date":"2018-08-07T14:35:12.633Z","type":"message"}
{"nick":"devsnek","message":"benjamingr_: it's got cors stuff sure","date":"2018-08-07T14:35:22.087Z","type":"message"}
{"nick":"devsnek","message":"without that it's a solid isomorphic request library","date":"2018-08-07T14:35:35.292Z","type":"message"}
{"nick":"benjamingr_","message":"devsnek: whatwg streams have issues, I brought this up in the summit and I think people are working on a different streams that isn't node nor whatwg streams right now. Fishrock123 is working on something cool (called bob I think)","date":"2018-08-07T14:35:36.003Z","type":"message"}
{"nick":"devsnek","message":"yeah I saw bob","date":"2018-08-07T14:35:45.576Z","type":"message"}
{"nick":"devsnek","message":"it makes me sad","date":"2018-08-07T14:35:48.507Z","type":"message"}
{"nick":"millido","date":"2018-08-07T14:35:52.800Z","type":"join"}
{"nick":"`slikts","message":"wait, so whatwg streams are just standard eventemitters?","date":"2018-08-07T14:36:00.298Z","type":"message"}
{"nick":"devsnek","message":"no","date":"2018-08-07T14:36:06.637Z","type":"message"}
{"nick":"devsnek","message":"they're proper streams","date":"2018-08-07T14:36:10.053Z","type":"message"}
{"nick":"`slikts","message":"what does that mean","date":"2018-08-07T14:36:14.501Z","type":"message"}
{"nick":"devsnek","message":"node streams are broken crap","date":"2018-08-07T14:36:16.154Z","type":"message"}
{"nick":"benjamingr_","message":"devsnek: not just cors (or even just the cross origin stuff) - it has a ton of stuff that node doesn't (like blobs, AbortController, Headers, Request,  Response etc - and to make things worse node already has objects for that","date":"2018-08-07T14:36:17.342Z","type":"message"}
{"nick":"zsoc","message":"benjamingr_: response.body *is* a stream with node-fetch, 99% syure","date":"2018-08-07T14:36:25.424Z","type":"message"}
{"nick":"DeltaHeavy","date":"2018-08-07T14:36:37.303Z","type":"join"}
{"nick":"`slikts","message":"streams are pretty crap in any case","date":"2018-08-07T14:36:37.740Z","type":"message"}
{"nick":"benjamingr_","message":"zsoc: node stream or whatwg stream?","date":"2018-08-07T14:36:41.267Z","type":"message"}
{"nick":"zsoc","message":"benjamingr_: which is why you need to do res.json() or whatever to coerce it, and it returns a promise","date":"2018-08-07T14:36:44.023Z","type":"message"}
{"nick":"zsoc","message":"a node stream","date":"2018-08-07T14:36:45.950Z","type":"message"}
{"nick":"`slikts","message":"unless wrapped in something libe observable","date":"2018-08-07T14:36:48.951Z","type":"message"}
{"nick":"zsoc","message":"well i'm talking about node-fetch lol","date":"2018-08-07T14:36:50.231Z","type":"message"}
{"nick":"devsnek","message":"node streams are like hacked together from event emitters","date":"2018-08-07T14:36:50.928Z","type":"message"}
{"nick":"Sven_vB","message":"benjamingr_, also add cwd on file errors about relative paths","date":"2018-08-07T14:36:58.606Z","type":"message"}
{"nick":"salad","reason":"Quit: salad","date":"2018-08-07T14:37:01.037Z","type":"quit"}
{"nick":"benjamingr_","message":"streams are actually pretty interesting, the nice thing is that streams can return async iterators now and you can `for... await` them - async iterators are quite nice as pull streams","date":"2018-08-07T14:37:03.792Z","type":"message"}
{"nick":"devsnek","message":"bob attempts to fix a bunch of stuff like backpressure","date":"2018-08-07T14:37:05.158Z","type":"message"}
{"nick":"benjamingr_","message":"devsnek: that's true and unfortunate - that's not what bob aims to fix though","date":"2018-08-07T14:37:15.047Z","type":"message"}
{"nick":"Alexendoo","reason":"\"Leaving\"","date":"2018-08-07T14:37:20.014Z","type":"part"}
{"nick":"apparition","reason":"Quit: Bye","date":"2018-08-07T14:37:27.330Z","type":"quit"}
{"nick":"`slikts","message":"devsnek: why not observables then?","date":"2018-08-07T14:37:28.511Z","type":"message"}
{"nick":"benjamingr_","message":"I think that if async iterators were performant enough then they'd make for great streams - and I wish there was a way to pass a buffer in","date":"2018-08-07T14:37:32.340Z","type":"message"}
{"nick":"Roughy","date":"2018-08-07T14:37:43.399Z","type":"join"}
{"nick":"devsnek","message":"`slikts: observables represent distinct objects","date":"2018-08-07T14:37:45.042Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: observables are super eager and push based + have no good backpressure story","date":"2018-08-07T14:37:45.435Z","type":"message"}
{"nick":"devsnek","message":"streams are pieces of one object","date":"2018-08-07T14:37:54.667Z","type":"message"}
{"nick":"benjamingr_","message":"async iterator and pull semantics work much more nicely with both backpressure and native language constructs like for await","date":"2018-08-07T14:38:07.058Z","type":"message"}
{"nick":"`slikts","message":"devsnek: streams to observables is like callbacks to promises","date":"2018-08-07T14:38:13.072Z","type":"message"}
{"nick":"devsnek","message":"only if you misuse one","date":"2018-08-07T14:38:27.083Z","type":"message"}
{"nick":"benjamingr_","message":"devsnek: that's not really true, the way to get an observable from an iterator is to just make all the pulls pushes - I refer to https://channel9.msdn.com/Events/Lang-NEXT/Lang-NEXT-2014/Keynote-Duality again which is great :)","date":"2018-08-07T14:38:32.129Z","type":"message"}
{"nick":"spacesuitdiver","date":"2018-08-07T14:38:44.332Z","type":"join"}
{"nick":"computer2000","date":"2018-08-07T14:38:51.787Z","type":"join"}
{"nick":"UncleSamuel21","date":"2018-08-07T14:38:56.832Z","type":"join"}
{"nick":"zsoc","message":"Streams in rust are great, we should just assimilate them","date":"2018-08-07T14:38:58.087Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: well, async iterators to observables is like promises for callbacks but yeah that's a good analogy","date":"2018-08-07T14:39:01.213Z","type":"message"}
{"nick":"benjamingr_","message":"zsoc: we had a bunch of discussion in deno about it and what primitives to use","date":"2018-08-07T14:39:10.727Z","type":"message"}
{"nick":"benjamingr_","message":".net has pipelines now which turns out are really cool","date":"2018-08-07T14:39:17.331Z","type":"message"}
{"nick":"computer2000","message":"how can i make a CLI node application? so that i can enter commands","date":"2018-08-07T14:39:19.680Z","type":"message"}
{"nick":"devsnek","message":"deno :(","date":"2018-08-07T14:39:19.980Z","type":"message"}
{"nick":"benjamingr_","message":"https://blogs.msdn.microsoft.com/dotnet/2018/07/09/system-io-pipelines-high-performance-io-in-net/","date":"2018-08-07T14:39:23.749Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: right, async iterables are preferable since generators are a nicety for implementers","date":"2018-08-07T14:39:29.072Z","type":"message"}
{"nick":"zsoc","message":"yeah that's the part where i get fuzzy... it's like \"wow i like using this how would it work in js\" and i go a little blank on what building blocks to use","date":"2018-08-07T14:39:35.688Z","type":"message"}
{"nick":"rezetta","reason":"Quit: Leaving.","date":"2018-08-07T14:39:38.632Z","type":"quit"}
{"nick":"zsoc","message":"i think we need new building blocks :p","date":"2018-08-07T14:39:38.973Z","type":"message"}
{"nick":"benjamingr_","message":"computer2000: you're asking on how to make a binary? Did you check out readline and repl?","date":"2018-08-07T14:39:44.994Z","type":"message"}
{"nick":"benjamingr_","message":"zsoc: what building blocks do you mean?","date":"2018-08-07T14:40:02.561Z","type":"message"}
{"nick":"`slikts","message":"my \"hot take\" on whatwg streams is that they're misguided","date":"2018-08-07T14:40:20.808Z","type":"message"}
{"nick":"UncleSamuel21","reason":"Remote host closed the connection","date":"2018-08-07T14:40:22.559Z","type":"quit"}
{"nick":"benjamingr_","message":"Node streams are pretty ok for most things - we need more tests and more eyes on the code - I have no idea what's going on there and I tried reading it twice lol - so much implicit state in the implementation","date":"2018-08-07T14:40:25.980Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: misguided how?","date":"2018-08-07T14:40:30.376Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T14:40:31.158Z","type":"join"}
{"nick":"`slikts","message":"benjamingr_: we already have a primitive for multiple async values in async iterators","date":"2018-08-07T14:41:02.599Z","type":"message"}
{"nick":"benjamingr_","message":"We're thinking of moving Symbol.asyncIterator to stable on streams `slikts  :D","date":"2018-08-07T14:41:24.077Z","type":"message"}
{"nick":"`slikts","message":"the next step should be adding a rich abstraction like observables on top of the existing primitive","date":"2018-08-07T14:41:31.695Z","type":"message"}
{"nick":"zsoc","message":"computer2000: or you can take a look at the 'commander' lib for a little higher level help with making a cli app with node","date":"2018-08-07T14:41:35.663Z","type":"message"}
{"nick":"devsnek","message":"can we deprecate node","date":"2018-08-07T14:41:40.535Z","type":"message"}
{"nick":"benjamingr_","message":"https://github.com/nodejs/readable-stream/issues/333#issuecomment-410660999","date":"2018-08-07T14:41:44.713Z","type":"message"}
{"nick":"computer2000","message":"benjamingr_, exactly i want an app with an interface same as when you execute nodejs in terminal ... just a prompt","date":"2018-08-07T14:41:47.462Z","type":"message"}
{"nick":"computer2000","message":"would I need to look into repl?","date":"2018-08-07T14:42:03.263Z","type":"message"}
{"nick":"zsoc","message":"benjamingr_: i'm not sure.. better futures i guess.... which in theory are coming with observables and async iterators","date":"2018-08-07T14:42:08.010Z","type":"message"}
{"nick":"benjamingr_","message":"computer2000: you log to the console with console.log and can read with readline :) You can also add a shabang on top","date":"2018-08-07T14:42:10.018Z","type":"message"}
{"nick":"benjamingr_","message":"zsoc: it's on its way","date":"2018-08-07T14:42:22.914Z","type":"message"}
{"nick":"benjamingr_","message":"it's just a really hard problem","date":"2018-08-07T14:42:42.459Z","type":"message"}
{"nick":"`slikts","message":"whatwg streams don't look like a rich abstraction","date":"2018-08-07T14:42:43.951Z","type":"message"}
{"nick":"benjamingr_","message":"wdym?","date":"2018-08-07T14:42:51.422Z","type":"message"}
{"nick":"Sven_vB","message":"computer2000, if you don't need readline, you can read process.stdin. (see modules \"carrier\" and \"split\")","date":"2018-08-07T14:42:57.540Z","type":"message"}
{"nick":"zsoc","message":"computer2000: and `chalk` for fun colors xD","date":"2018-08-07T14:43:37.604Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: it's a low level abstraction that just solves some problems as special cases","date":"2018-08-07T14:43:43.726Z","type":"message"}
{"nick":"`slikts","message":"like backpressure","date":"2018-08-07T14:43:48.144Z","type":"message"}
{"nick":"zsoc","message":"benjamingr_: oh yeah, no doubt these are hard problems, i didn't mean to sound flippant","date":"2018-08-07T14:43:55.622Z","type":"message"}
{"nick":"Sven_vB","message":"computer2000, also check the \"vantage\" module","date":"2018-08-07T14:44:46.715Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T14:45:05.484Z","type":"quit"}
{"nick":"benjamingr_","message":"`slikts: why special cases? Backpressure is handled pretty nicely in whatwg streams, they're a pull model where a `Reader` `.read()`s from a stream (which returns a promise) - so it's \"automatic\" as part of the abstraction. Since the client `.read`s whenever they want data rather than having it pushed to them with `on.('data'` (which you _shouldn't_ do if you care about perf in node which also has pull semantics if you use","date":"2018-08-07T14:45:25.747Z","type":"message"}
{"nick":"benjamingr_","message":"them) - backpressure isn't an issue","date":"2018-08-07T14:45:25.913Z","type":"message"}
{"nick":"EREVAN","date":"2018-08-07T14:46:05.371Z","type":"join"}
{"nick":"computer2000","message":"Sven_vB, woah vantage looks cool","date":"2018-08-07T14:46:18.922Z","type":"message"}
{"nick":"Sven_vB","message":"computer2000, also if you *want* readline, think whether you really need it to be your node script's concern, or you can just use rlwrap","date":"2018-08-07T14:46:21.959Z","type":"message"}
{"nick":"`slikts","message":"well, details aside, the language doesn't need multiples of the same primitives","date":"2018-08-07T14:46:28.747Z","type":"message"}
{"nick":"computer2000","message":"Sven_vB, why does one need to install vantage globally","date":"2018-08-07T14:46:53.938Z","type":"message"}
{"nick":"`slikts","message":"js isn't properly using the features it already has, like the iteration protocols","date":"2018-08-07T14:47:09.261Z","type":"message"}
{"nick":"Sven_vB","message":"computer2000, you don't. there's no *good* reason to install any module globally, ever.","date":"2018-08-07T14:47:13.375Z","type":"message"}
{"nick":"computer2000","message":"Sven_vB, github readme says so","date":"2018-08-07T14:47:27.658Z","type":"message"}
{"nick":"Singmyr","date":"2018-08-07T14:47:49.618Z","type":"join"}
{"nick":"Sven_vB","message":"computer2000, yeah. there are lots of bad reasons why people think they want stuff globally installed.","date":"2018-08-07T14:47:50.403Z","type":"message"}
{"nick":"`slikts","message":"if js added observables, the async iteration protocols could be made use of, and backpressure would be a trivial problem to solve, but also many more problems, since observables are a rich abstraction","date":"2018-08-07T14:48:44.788Z","type":"message"}
{"nick":"devsnek","message":"`slikts: the language doesn't define streams","date":"2018-08-07T14:48:48.754Z","type":"message"}
{"nick":"devsnek","message":"cuz it has no io","date":"2018-08-07T14:48:56.417Z","type":"message"}
{"nick":"devsnek","message":"asyncIterator is a protocol for your own implementation","date":"2018-08-07T14:49:10.681Z","type":"message"}
{"nick":"`slikts","message":"you can have a stream with no io","date":"2018-08-07T14:49:31.928Z","type":"message"}
{"nick":"`slikts","message":"stream a sequence of numbers or something","date":"2018-08-07T14:49:55.922Z","type":"message"}
{"nick":"zsoc","message":"yeah js could totally have streams","date":"2018-08-07T14:50:07.863Z","type":"message"}
{"nick":"devsnek","message":"it wouldn't do much with them","date":"2018-08-07T14:50:15.295Z","type":"message"}
{"nick":"devsnek","message":"defining generic interfaces is one of js's strong points imo","date":"2018-08-07T14:50:32.110Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: observables have very different push based eager semantics - you can convert an observable to an async iterator or vice versa but it will mess with backpressure and have other issues","date":"2018-08-07T14:50:36.946Z","type":"message"}
{"nick":"zsoc","message":"devsnek: and.. what are Promises? :p","date":"2018-08-07T14:50:42.251Z","type":"message"}
{"nick":"`slikts","message":"js has an alternative for streams and uses it only for junk like for-await-of","date":"2018-08-07T14:50:43.768Z","type":"message"}
{"nick":"benjamingr_","message":"async iterators are es2018 give us a break lol","date":"2018-08-07T14:51:02.217Z","type":"message"}
{"nick":"cthulchu","reason":"Ping timeout: 256 seconds","date":"2018-08-07T14:51:04.320Z","type":"quit"}
{"nick":"devsnek","message":"zsoc: a generic interface representing a value that may or may not exist","date":"2018-08-07T14:51:05.230Z","type":"message"}
{"nick":"logik-bomb","date":"2018-08-07T14:51:09.638Z","type":"join"}
{"nick":"zsoc","message":"right which is pretty gibberish without i/o","date":"2018-08-07T14:51:20.132Z","type":"message"}
{"nick":"zsoc","message":"same with streams :p","date":"2018-08-07T14:51:24.621Z","type":"message"}
{"nick":"benjamingr_","message":"the fact they're not used for much in the platform yet is because they're new - they're still too slow for some workloads and Node hasn't had a chance to adopt them.","date":"2018-08-07T14:51:30.230Z","type":"message"}
{"nick":"systemfault","message":"Well, it's not like JS has adopted generators themselves in a serious way.","date":"2018-08-07T14:51:55.981Z","type":"message"}
{"nick":"benjamingr_","message":"which it's doing right away - you can `for await` a Node stream or get an async iterator for it - we added that a while back and it's coming out of experimental","date":"2018-08-07T14:51:59.622Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: the other iteration protocols are much older and are also very underused","date":"2018-08-07T14:52:08.344Z","type":"message"}
{"nick":"benjamingr_","message":"What would you expect JS itself to adopt generators for?","date":"2018-08-07T14:52:09.277Z","type":"message"}
{"nick":"systemfault","message":"*itself","date":"2018-08-07T14:52:10.013Z","type":"message"}
{"nick":"devsnek","message":"I think node 12 should be a node remake where we kill all the core modules and start over","date":"2018-08-07T14:52:25.043Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: what other iteration protocols? I think I agree but let's make sure we're talking about the same thing","date":"2018-08-07T14:52:27.018Z","type":"message"}
{"nick":"systemfault","message":"benjamingr_: Think of the obvious... at the very least some iteration library","date":"2018-08-07T14:52:33.734Z","type":"message"}
{"nick":"benjamingr_","message":"devsnek: you are welcome to fork lol","date":"2018-08-07T14:52:38.747Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: the sync ones from es6","date":"2018-08-07T14:52:41.059Z","type":"message"}
{"nick":"YannMjl","date":"2018-08-07T14:52:46.486Z","type":"join"}
{"nick":"benjamingr_","message":"systemfault: there are a bunch of libraries","date":"2018-08-07T14:52:53.022Z","type":"message"}
{"nick":"groom","reason":"Quit: Leaving.","date":"2018-08-07T14:52:53.341Z","type":"quit"}
{"nick":"`slikts","message":"the ones used for spread/rest, for-of","date":"2018-08-07T14:52:56.560Z","type":"message"}
{"nick":"benjamingr_","message":"I know what generators are - I'm asking what they meant by using them in JS itself","date":"2018-08-07T14:53:07.075Z","type":"message"}
{"nick":"devsnek","message":"benjamingr_: https://github.com/devsnek/zero","date":"2018-08-07T14:53:11.495Z","type":"message"}
{"nick":"devsnek","message":"not a fork but same idea","date":"2018-08-07T14:53:18.814Z","type":"message"}
{"nick":"systemfault","message":"benjamingr_: That idea, unlike... let's say, observables, is so core to the language that it's basically stupid it's not there.","date":"2018-08-07T14:53:29.683Z","type":"message"}
{"nick":"`slikts","message":"generators are just a handy way to implement iterators","date":"2018-08-07T14:53:32.426Z","type":"message"}
{"nick":"`slikts","message":"I mean, iterables","date":"2018-08-07T14:53:42.369Z","type":"message"}
{"nick":"systemfault","message":"benjamingr_: When you have to create an array in order to iterate on a range, that's beyond stupid.","date":"2018-08-07T14:53:52.077Z","type":"message"}
{"nick":"`slikts","message":"basically the language should have had some compositional operator to enable generic programming with the protocols it already has","date":"2018-08-07T14:54:47.047Z","type":"message"}
{"nick":"benjamingr_","message":"systemfault: you can iterate it with for... of","date":"2018-08-07T14:54:50.891Z","type":"message"}
{"nick":"Sven_vB","message":"computer2000, also check package renderkid","date":"2018-08-07T14:54:59.814Z","type":"message"}
{"nick":"`slikts","message":"but it seems like too many of the standardizers are happy with loops","date":"2018-08-07T14:55:07.977Z","type":"message"}
{"nick":"benjamingr_","message":"systemfault: observables aren't in JS yet because they failed to identify APIs in platforms to use them and whatwg doesn't want them","date":"2018-08-07T14:55:21.579Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: loops are loops, they don't count","date":"2018-08-07T14:55:37.745Z","type":"message"}
{"nick":"systemfault","message":"I don't want observables in the language so, that's fine by me.","date":"2018-08-07T14:55:41.067Z","type":"message"}
{"nick":"perrier-jouet","reason":"Quit: WeeChat 2.2","date":"2018-08-07T14:55:46.922Z","type":"quit"}
{"nick":"devsnek","message":"`slikts: js is working on \"first class protocols\"","date":"2018-08-07T14:55:49.704Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: it's not like the standards bodies are opaque or omnipotent - it's an iterative and long process to add stuff or make changes, one all of you are encouraged to be more involved in","date":"2018-08-07T14:55:50.893Z","type":"message"}
{"nick":"devsnek","message":"which is like standardized duck typing","date":"2018-08-07T14:55:59.004Z","type":"message"}
{"nick":"systemfault","message":"JS not having a iteration library... including a \"range\" function, now... that's a weird problem.","date":"2018-08-07T14:56:00.706Z","type":"message"}
{"nick":"`slikts","message":"devsnek: it's a stage-1 proposal","date":"2018-08-07T14:56:04.480Z","type":"message"}
{"nick":"devsnek","message":"yes","date":"2018-08-07T14:56:08.975Z","type":"message"}
{"nick":"benjamingr_","message":"link?","date":"2018-08-07T14:56:12.628Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: https://github.com/michaelficarra/proposal-first-class-protocols","date":"2018-08-07T14:56:28.657Z","type":"message"}
{"nick":"millido","reason":"Ping timeout: 268 seconds","date":"2018-08-07T14:56:49.740Z","type":"quit"}
{"nick":"`slikts","message":"stage-1 is basically nothing","date":"2018-08-07T14:56:58.032Z","type":"message"}
{"nick":"devsnek","message":"the only think keeping it back is that some people want mixins to be a thing","date":"2018-08-07T14:57:01.002Z","type":"message"}
{"nick":"millido","date":"2018-08-07T14:57:04.837Z","type":"join"}
{"nick":"devsnek","message":"which is stupid","date":"2018-08-07T14:57:07.477Z","type":"message"}
{"nick":"`slikts","message":"a protocol is akin to a mixin","date":"2018-08-07T14:57:24.250Z","type":"message"}
{"nick":"devsnek","message":"not the ecosystem mixin","date":"2018-08-07T14:57:39.407Z","type":"message"}
{"nick":"cdev771","reason":"Ping timeout: 256 seconds","date":"2018-08-07T14:57:52.333Z","type":"quit"}
{"nick":"`slikts","message":"benjamingr_: see also https://github.com/slikts/symbol-land for a funky take on protocols","date":"2018-08-07T14:58:21.405Z","type":"message"}
{"nick":"`slikts","message":"oh jeez that was 5 months ago already","date":"2018-08-07T14:58:32.719Z","type":"message"}
{"nick":"benjamingr_","message":"cool, will read","date":"2018-08-07T14:58:32.888Z","type":"message"}
{"nick":"groom","date":"2018-08-07T14:58:54.690Z","type":"join"}
{"nick":"devsnek","message":"protocols allow strings too y'know","date":"2018-08-07T14:59:06.452Z","type":"message"}
{"nick":"zsoc","message":"systemfault: look a messy range proposal https://github.com/caub/proposal-range","date":"2018-08-07T14:59:08.349Z","type":"message"}
{"nick":"star_prone","reason":"Remote host closed the connection","date":"2018-08-07T14:59:11.311Z","type":"quit"}
{"nick":"Caspinol","reason":"Remote host closed the connection","date":"2018-08-07T14:59:13.059Z","type":"quit"}
{"nick":"benjamingr_","message":"I wrote this once https://github.com/benjamingr/interface-js - lol","date":"2018-08-07T14:59:32.419Z","type":"message"}
{"nick":"`slikts","message":"devsnek: not the kind of protocols that extend natives :3","date":"2018-08-07T14:59:34.073Z","type":"message"}
{"nick":"star_prone","date":"2018-08-07T14:59:44.636Z","type":"join"}
{"nick":"benjamingr_","message":"yeah, interfaces are great - although TypeScript made this largely a problem of the past - their typesystem is pretty great imo","date":"2018-08-07T14:59:48.720Z","type":"message"}
{"nick":"devsnek","message":"if only typescript would ditch their transpiler","date":"2018-08-07T15:00:27.346Z","type":"message"}
{"nick":"`slikts","message":"typescript doesn't do anything for the expression problem","date":"2018-08-07T15:00:33.437Z","type":"message"}
{"nick":"benjamingr_","message":"lol the range proposal obviously never reached tc39, there's a pretty obvious syntax ambiguity","date":"2018-08-07T15:00:35.639Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: what expression problem?","date":"2018-08-07T15:00:47.446Z","type":"message"}
{"nick":"`slikts","message":"the expression problem","date":"2018-08-07T15:00:55.514Z","type":"message"}
{"nick":"`slikts","message":"https://en.wikipedia.org/wiki/Expression_problem","date":"2018-08-07T15:00:59.948Z","type":"message"}
{"nick":"romeoh","date":"2018-08-07T15:01:29.771Z","type":"join"}
{"nick":"bonuspunkt","new_nick":"Bonuspunk","date":"2018-08-07T15:01:37.771Z","type":"nick"}
{"nick":"benjamingr_","message":"Ah, why doesn't it solve that?","date":"2018-08-07T15:01:42.960Z","type":"message"}
{"nick":"zsoc","message":"yeah i agree typescript has a lot of asks and doesn't solve much","date":"2018-08-07T15:02:02.572Z","type":"message"}
{"nick":"`slikts","message":"it doesn't help with extending existing types, for example","date":"2018-08-07T15:02:03.704Z","type":"message"}
{"nick":"zsoc","message":"no trait / behavior constraints","date":"2018-08-07T15:02:24.879Z","type":"message"}
{"nick":"benjamingr_","message":"Doesn't it? If you add a method to a type then it will automatically meet all interfaces that require it and other things it has","date":"2018-08-07T15:02:32.053Z","type":"message"}
{"nick":"JaredCE","message":"i don't know how best to ask this question... but is there a way to determine the amount of sockets to keep open on a http agent\"?","date":"2018-08-07T15:02:32.979Z","type":"message"}
{"nick":"devsnek","message":"flow works in comments","date":"2018-08-07T15:02:37.946Z","type":"message"}
{"nick":"benjamingr_","message":"structural typing makes the expression problem irrelevant since it automatically works","date":"2018-08-07T15:02:45.934Z","type":"message"}
{"nick":"benjamingr_","message":"JaredCE: measure, but probably don't limit it and let the system limit it","date":"2018-08-07T15:03:04.433Z","type":"message"}
{"nick":"wsieroci","date":"2018-08-07T15:03:16.746Z","type":"join"}
{"nick":"JaredCE","message":"any tips on measuring benjamingr_ ?","date":"2018-08-07T15:03:24.362Z","type":"message"}
{"nick":"star_prone","reason":"Ping timeout: 244 seconds","date":"2018-08-07T15:04:19.628Z","type":"quit"}
{"nick":"leolrrj","reason":"Ping timeout: 240 seconds","date":"2018-08-07T15:04:21.374Z","type":"quit"}
{"nick":"benjamingr_","message":"tips like \"measure it in a setting that is as close to your production environment as possible\"?","date":"2018-08-07T15:04:29.003Z","type":"message"}
{"nick":"benjamingr_","message":"benchmarking is hard :D It needs to be carefully done","date":"2018-08-07T15:04:41.505Z","type":"message"}
{"nick":"devsnek","message":"measure it carefully so that you don't burn yourself on the hot pan","date":"2018-08-07T15:04:53.177Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: my point is that TS doesn't give you any way to add a method to an existing type","date":"2018-08-07T15:05:19.191Z","type":"message"}
{"nick":"spacesui_","date":"2018-08-07T15:05:31.068Z","type":"join"}
{"nick":"devsnek","message":"that's what subclasses are for","date":"2018-08-07T15:05:45.353Z","type":"message"}
{"nick":"toi","date":"2018-08-07T15:05:56.773Z","type":"join"}
{"nick":"zsoc","message":"yeah inheritance is always a good solution o.o","date":"2018-08-07T15:06:04.249Z","type":"message"}
{"nick":"`slikts","message":"devsnek: that's a subpar solution because it involves conversions","date":"2018-08-07T15:06:15.494Z","type":"message"}
{"nick":"spacesui_","reason":"Read error: Connection reset by peer","date":"2018-08-07T15:06:28.016Z","type":"quit"}
{"nick":"`slikts","message":"it's pretty awful in fact because of that","date":"2018-08-07T15:06:31.306Z","type":"message"}
{"nick":"devsnek","message":"stop trying to solve random wikipedia probkems","date":"2018-08-07T15:06:33.372Z","type":"message"}
{"nick":"spacesui_","date":"2018-08-07T15:06:36.763Z","type":"join"}
{"nick":"benjamingr_","message":"`slikts: sure it does - that's the point of declaration merging and it's pretty sweet","date":"2018-08-07T15:06:52.343Z","type":"message"}
{"nick":"benjamingr_","message":"https://www.typescriptlang.org/docs/handbook/declaration-merging.html","date":"2018-08-07T15:06:55.055Z","type":"message"}
{"nick":"devsnek","message":"wow","date":"2018-08-07T15:07:16.155Z","type":"message"}
{"nick":"spacesuitdiver","reason":"Ping timeout: 240 seconds","date":"2018-08-07T15:07:21.367Z","type":"quit"}
{"nick":"devsnek","message":"they made namespace collision a feature","date":"2018-08-07T15:07:24.360Z","type":"message"}
{"nick":"beefjoe","reason":"Remote host closed the connection","date":"2018-08-07T15:07:32.659Z","type":"quit"}
{"nick":"devsnek","message":"everything they do is so shitty lol","date":"2018-08-07T15:07:35.118Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: right, declaration merging is how I implemented my library that extends natives","date":"2018-08-07T15:07:35.917Z","type":"message"}
{"nick":"benjamingr_","message":"Inheritance is pretty bad imo, I rarely use it - half the time it solves code sharing which I use composition for - and half the time it's for a strategy at which point it becomes a function pass","date":"2018-08-07T15:07:36.648Z","type":"message"}
{"nick":"benjamingr_","message":"devsnek: what about trying to actually read the article before having a strong opinion about how it works?","date":"2018-08-07T15:07:54.176Z","type":"message"}
{"nick":"devsnek","message":"I did read it","date":"2018-08-07T15:08:01.352Z","type":"message"}
{"nick":"ffx_","reason":"Remote host closed the connection","date":"2018-08-07T15:08:11.987Z","type":"quit"}
{"nick":"leolrrj","date":"2018-08-07T15:08:21.343Z","type":"join"}
{"nick":"`slikts","message":"benjamingr_: but extending natives is a questionable practice, even though using symbols offsets the main reasons why","date":"2018-08-07T15:08:46.694Z","type":"message"}
{"nick":"benjamingr_","message":"Namespaces can't \"collide\" in TypeScript you have to import them (unless you declare stuff globally at which case - lol) - merging means objects that meet the interface must meet _all_ the requirements.","date":"2018-08-07T15:08:50.395Z","type":"message"}
{"nick":"jsatk","date":"2018-08-07T15:09:07.463Z","type":"join"}
{"nick":"devsnek","message":"put all your requirements in one place","date":"2018-08-07T15:09:11.930Z","type":"message"}
{"nick":"devsnek","message":"extending builtins in place is a bad practice imo","date":"2018-08-07T15:09:24.854Z","type":"message"}
{"nick":"benjamingr_","message":"The discussion was specifically about extending existing types not being possible - I was just pointing out it is, not making a statement about whether or not it's a good idea","date":"2018-08-07T15:09:44.227Z","type":"message"}
{"nick":"notchris","message":"devsnek: Hey so i switched to Fetch, it seems to be setup correctly, identical to my working requesst example, but i cant get the result","date":"2018-08-07T15:10:03.149Z","type":"message"}
{"nick":"benjamingr_","message":"Extending builtins is required for polyfills for example - although there is a proposal to block that and you can run code in an environment (like ses) that prohibits that","date":"2018-08-07T15:10:09.202Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: the idea is basically unpalatable for most people","date":"2018-08-07T15:10:12.245Z","type":"message"}
{"nick":"devsnek","message":"notchris: wdym","date":"2018-08-07T15:10:15.723Z","type":"message"}
{"nick":"notchris","message":"devsnek: This was the working request example","date":"2018-08-07T15:10:35.654Z","type":"message"}
{"nick":"notchris","message":"https://i.imgur.com/Uod6Vol.png","date":"2018-08-07T15:10:36.546Z","type":"message"}
{"nick":"benjamingr_","message":"`slikts: yeah, for a good reason - it's why we have to `.includes` on an array instead of a `.contains` for one :D","date":"2018-08-07T15:10:48.415Z","type":"message"}
{"nick":"notchris","message":"Here is the non-working fetch https://i.imgur.com/LgQCU9o.png","date":"2018-08-07T15:10:51.965Z","type":"message"}
{"nick":"devsnek","message":"y'all need better variable names","date":"2018-08-07T15:10:53.062Z","type":"message"}
{"nick":"benjamingr_","message":"And why you can `\"hello\".bold()` :D","date":"2018-08-07T15:11:07.757Z","type":"message"}
{"nick":"devsnek","message":"fetch returns a response object","date":"2018-08-07T15:11:10.687Z","type":"message"}
{"nick":"`slikts","message":"benjamingr_: right, but the symbol-land lib I linked to earlier extends the natives with symbol properties","date":"2018-08-07T15:11:11.990Z","type":"message"}
{"nick":"benjamingr_","message":"Putting things on builtins can be so future incompatible","date":"2018-08-07T15:11:17.026Z","type":"message"}
{"nick":"notchris","message":"devsnek: The respoonse obj gave a 500","date":"2018-08-07T15:11:23.348Z","type":"message"}
{"nick":"devsnek","message":"!mdn response","date":"2018-08-07T15:11:28.530Z","type":"message"}
{"nick":"jellobot","message":"devsnek, Response(), DOM - The Response() constructor creates a new Response object. https://mdn.io/response","date":"2018-08-07T15:11:29.529Z","type":"message"}
{"nick":"notchris","message":"devsnek: https://i.imgur.com/cbEwuqT.png","date":"2018-08-07T15:11:35.436Z","type":"message"}
{"nick":"benjamingr_","message":"notchris: that means there was a problem with the server","date":"2018-08-07T15:11:41.023Z","type":"message"}
{"nick":"notchris","message":"i know","date":"2018-08-07T15:11:48.212Z","type":"message"}
{"nick":"devsnek","message":"your body is invalid","date":"2018-08-07T15:11:56.712Z","type":"message"}
{"nick":"zsoc","message":"notchris: did you read the fetch docs at all?","date":"2018-08-07T15:11:57.367Z","type":"message"}
{"nick":"notchris","message":"But the request example works","date":"2018-08-07T15:11:58.531Z","type":"message"}
{"nick":"zsoc","message":"^","date":"2018-08-07T15:11:59.673Z","type":"message"}
{"nick":"notchris","message":"zsoc: Yes","date":"2018-08-07T15:12:02.591Z","type":"message"}
{"nick":"devsnek","message":"JSON.stringify","date":"2018-08-07T15:12:04.611Z","type":"message"}
{"nick":"notchris","message":"and i followed the example","date":"2018-08-07T15:12:05.962Z","type":"message"}
{"nick":"notchris","message":"with json stringify too","date":"2018-08-07T15:12:09.337Z","type":"message"}
{"nick":"devsnek","message":"and set content type headers","date":"2018-08-07T15:12:11.432Z","type":"message"}
{"nick":"notchris","message":"https://i.imgur.com/O0tUQMX.png","date":"2018-08-07T15:12:16.556Z","type":"message"}
{"nick":"notchris","message":"oh i didnt have to set content type with request","date":"2018-08-07T15:12:26.126Z","type":"message"}
{"nick":"zsoc","message":"because request uses a `form` prop","date":"2018-08-07T15:12:42.981Z","type":"message"}
{"nick":"devsnek","message":"cuz you passed it an object","date":"2018-08-07T15:12:43.147Z","type":"message"}
{"nick":"zsoc","message":"or json: true or whatever","date":"2018-08-07T15:12:51.505Z","type":"message"}
{"nick":"notchris","message":"So","date":"2018-08-07T15:13:02.665Z","type":"message"}
{"nick":"notchris","message":"'Content-Type': 'application/x-www-form-urlencoded'","date":"2018-08-07T15:13:04.868Z","type":"message"}
{"nick":"notchris","message":"?","date":"2018-08-07T15:13:05.456Z","type":"message"}
{"nick":"zsoc","message":"also a server returning 500 when it should return a 400 is terrible lol","date":"2018-08-07T15:13:09.530Z","type":"message"}
{"nick":"devsnek","message":"is it JSON or form URL encoded","date":"2018-08-07T15:13:17.207Z","type":"message"}
{"nick":"notchris","message":"Woot","date":"2018-08-07T15:13:29.828Z","type":"message"}
{"nick":"zsoc","message":"i hope it's json if they are JSON.stringifying it...","date":"2018-08-07T15:13:30.519Z","type":"message"}
{"nick":"notchris","message":"got a 200","date":"2018-08-07T15:13:31.814Z","type":"message"}
{"nick":"notchris","message":":)","date":"2018-08-07T15:13:32.895Z","type":"message"}
{"nick":"devsnek","message":"lol ok","date":"2018-08-07T15:13:41.262Z","type":"message"}
{"nick":"notchris","message":"Sorry about that guys","date":"2018-08-07T15:13:45.083Z","type":"message"}
{"nick":"notchris","message":"i appreciate the help","date":"2018-08-07T15:13:49.651Z","type":"message"}
{"nick":"`slikts","message":"the proper solution would be if JS added a new compositional operator so that protocols could be leveraged","date":"2018-08-07T15:13:54.590Z","type":"message"}
{"nick":"hdon","date":"2018-08-07T15:14:04.581Z","type":"join"}
{"nick":"`slikts","message":"so you'd have a map() that just uses the iterable protocol, and can be used without nesting or helpers like pipe()","date":"2018-08-07T15:14:47.631Z","type":"message"}
{"nick":"systemfault","message":"JS can't become good at anything :p Botched OOP, botched FP :)","date":"2018-08-07T15:15:30.260Z","type":"message"}
{"nick":"`slikts","message":"that's not helpful","date":"2018-08-07T15:15:46.470Z","type":"message"}
{"nick":"zsoc","message":"well it's good at making mediocre things rapidly","date":"2018-08-07T15:16:12.422Z","type":"message"}
{"nick":"zsoc","message":"that's a kind of super power","date":"2018-08-07T15:16:14.716Z","type":"message"}
{"nick":"gamma4","date":"2018-08-07T15:16:17.709Z","type":"join"}
{"nick":"millido","reason":"Ping timeout: 240 seconds","date":"2018-08-07T15:16:27.740Z","type":"quit"}
{"nick":"gamma4","reason":"K-Lined","date":"2018-08-07T15:17:20.838Z","type":"quit"}
{"nick":"grr12314","reason":"Quit: Page closed","date":"2018-08-07T15:18:08.134Z","type":"quit"}
{"nick":"hdon","reason":"Ping timeout: 244 seconds","date":"2018-08-07T15:18:47.688Z","type":"quit"}
{"nick":"computer2000","message":"i'm looking for a npm module for playing audio files, any recommendation? would be great if volume control, stopping, looping etc. is included","date":"2018-08-07T15:21:46.740Z","type":"message"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T15:22:35.470Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T15:23:45.862Z","type":"join"}
{"nick":"Elyx0","date":"2018-08-07T15:25:41.832Z","type":"join"}
{"nick":"grubles20","date":"2018-08-07T15:26:27.636Z","type":"join"}
{"nick":"grubles20","reason":"K-Lined","date":"2018-08-07T15:26:39.494Z","type":"quit"}
{"nick":"groom","reason":"Quit: Leaving.","date":"2018-08-07T15:27:06.482Z","type":"quit"}
{"nick":"bitmask","date":"2018-08-07T15:27:08.501Z","type":"join"}
{"nick":"paulcarroty","reason":"Quit: Leaving","date":"2018-08-07T15:27:57.308Z","type":"quit"}
{"nick":"edrocks","date":"2018-08-07T15:28:35.957Z","type":"join"}
{"nick":"edrocks","message":"is anyone else having trouble publishing packages right now?","date":"2018-08-07T15:28:48.068Z","type":"message"}
{"nick":"FunnyLookinHat","date":"2018-08-07T15:29:06.802Z","type":"join"}
{"nick":"edrocks","message":"It's hanging on publishing package.tgz and then I get 500 http error but somehow it publishes sometimes","date":"2018-08-07T15:29:07.439Z","type":"message"}
{"nick":"FunnyLookinHat","reason":"Changing host","date":"2018-08-07T15:29:09.242Z","type":"quit"}
{"nick":"FunnyLookinHat","date":"2018-08-07T15:29:09.407Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 256 seconds","date":"2018-08-07T15:33:08.789Z","type":"quit"}
{"nick":"notnull","date":"2018-08-07T15:33:18.679Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T15:33:50.653Z","type":"join"}
{"nick":"lexileo","date":"2018-08-07T15:36:31.729Z","type":"quit"}
{"nick":"EyePulp","reason":"Ping timeout: 248 seconds","date":"2018-08-07T15:37:05.406Z","type":"quit"}
{"nick":"Caspinol","date":"2018-08-07T15:37:15.803Z","type":"join"}
{"nick":"artoo_","date":"2018-08-07T15:37:30.620Z","type":"join"}
{"nick":"lexileo","date":"2018-08-07T15:37:50.416Z","type":"join"}
{"nick":"Sharaal","date":"2018-08-07T15:38:04.675Z","type":"join"}
{"nick":"zumba","date":"2018-08-07T15:39:45.733Z","type":"join"}
{"nick":"EyePulp","date":"2018-08-07T15:39:48.152Z","type":"join"}
{"nick":"marthinal","date":"2018-08-07T15:40:10.435Z","type":"quit"}
{"nick":"marthinal","date":"2018-08-07T15:41:27.817Z","type":"join"}
{"nick":"Caspinol","reason":"Ping timeout: 240 seconds","date":"2018-08-07T15:41:35.482Z","type":"quit"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T15:42:38.287Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 244 seconds","date":"2018-08-07T15:43:04.703Z","type":"quit"}
{"nick":"caracalla","reason":"Remote host closed the connection","date":"2018-08-07T15:44:25.668Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T15:46:35.636Z","type":"join"}
{"nick":"ohcibi","reason":"Ping timeout: 240 seconds","date":"2018-08-07T15:47:27.777Z","type":"quit"}
{"nick":"chargen_","reason":"Quit: BBL","date":"2018-08-07T15:47:55.536Z","type":"quit"}
{"nick":"bsaboia","reason":"Ping timeout: 256 seconds","date":"2018-08-07T15:51:08.276Z","type":"quit"}
{"nick":"Luxray5474___","reason":"Read error: Connection reset by peer","date":"2018-08-07T15:51:30.803Z","type":"quit"}
{"nick":"chargen","reason":"Ping timeout: 256 seconds","date":"2018-08-07T15:52:16.337Z","type":"quit"}
{"nick":"jsatk","reason":"Ping timeout: 244 seconds","date":"2018-08-07T15:52:53.649Z","type":"quit"}
{"nick":"computer2000","message":"how can i control system volume in nodejs server app on linux?","date":"2018-08-07T15:54:30.234Z","type":"message"}
{"nick":"chargen","date":"2018-08-07T15:54:45.536Z","type":"join"}
{"nick":"cdev771","date":"2018-08-07T15:55:07.425Z","type":"join"}
{"nick":"GreenJello","message":"computer2000, you should find a package or general CLI tool for it","date":"2018-08-07T15:55:32.180Z","type":"message"}
{"nick":"GreenJello","message":"computer2000, afaik there isn't a single API in linux to change volume; it depends on which audio implementation is used","date":"2018-08-07T15:56:03.825Z","type":"message"}
{"nick":"Myrax","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T15:57:30.897Z","type":"quit"}
{"nick":"cthulchu","date":"2018-08-07T15:58:11.578Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T15:58:28.333Z","type":"join"}
{"nick":"edrocks","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2018-08-07T15:58:47.784Z","type":"quit"}
{"nick":"YannMjl","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T15:59:01.149Z","type":"quit"}
{"nick":"toi","reason":"Ping timeout: 256 seconds","date":"2018-08-07T15:59:12.758Z","type":"quit"}
{"nick":"chargen","reason":"Ping timeout: 240 seconds","date":"2018-08-07T15:59:21.350Z","type":"quit"}
{"nick":"YannMjl","date":"2018-08-07T16:02:31.769Z","type":"join"}
{"nick":"Rashad","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T16:02:42.716Z","type":"quit"}
{"nick":"akiva","date":"2018-08-07T16:02:43.455Z","type":"join"}
{"nick":"turboteddy","date":"2018-08-07T16:03:47.586Z","type":"join"}
{"nick":"apowers313","date":"2018-08-07T16:04:51.868Z","type":"join"}
{"nick":"spacesui_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T16:05:13.083Z","type":"quit"}
{"nick":"smccarthy","date":"2018-08-07T16:05:26.758Z","type":"join"}
{"nick":"ahmed_elgabri","reason":"Ping timeout: 256 seconds","date":"2018-08-07T16:06:34.758Z","type":"quit"}
{"nick":"spacesuitdiver","date":"2018-08-07T16:06:58.337Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 240 seconds","date":"2018-08-07T16:07:21.354Z","type":"quit"}
{"nick":"jsatk","date":"2018-08-07T16:07:44.358Z","type":"join"}
{"nick":"Laptop_mini","date":"2018-08-07T16:11:11.429Z","type":"join"}
{"nick":"InverseRhombus","reason":"Remote host closed the connection","date":"2018-08-07T16:11:52.175Z","type":"quit"}
{"nick":"glowpelt","date":"2018-08-07T16:14:21.795Z","type":"join"}
{"nick":"D3XT3R[m]","reason":"Quit: removing from IRC because user idle on matrix for 30+ days","date":"2018-08-07T16:15:13.368Z","type":"quit"}
{"nick":"ignacio29","date":"2018-08-07T16:15:48.429Z","type":"join"}
{"nick":"ignacio29","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-07T16:16:38.882Z","type":"quit"}
{"nick":"jsatk","reason":"Read error: Connection reset by peer","date":"2018-08-07T16:17:05.424Z","type":"quit"}
{"nick":"varunest","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T16:17:33.753Z","type":"quit"}
{"nick":"Caraway17","date":"2018-08-07T16:17:44.238Z","type":"join"}
{"nick":"goodenough","date":"2018-08-07T16:17:57.469Z","type":"join"}
{"nick":"Caraway17","reason":"K-Lined","date":"2018-08-07T16:17:58.429Z","type":"quit"}
{"nick":"mezod","reason":"Read error: No route to host","date":"2018-08-07T16:20:21.792Z","type":"quit"}
{"nick":"mezod","date":"2018-08-07T16:20:49.553Z","type":"join"}
{"nick":"altab","date":"2018-08-07T16:22:32.778Z","type":"join"}
{"nick":"jsatk","date":"2018-08-07T16:22:45.345Z","type":"join"}
{"nick":"Booster2ooo|2","reason":"Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/","date":"2018-08-07T16:23:28.921Z","type":"quit"}
{"nick":"chargen","date":"2018-08-07T16:26:49.482Z","type":"join"}
{"nick":"turboteddy","reason":"Quit: /q","date":"2018-08-07T16:27:34.568Z","type":"quit"}
{"nick":"notchris","reason":"Quit: notchris","date":"2018-08-07T16:27:41.274Z","type":"quit"}
{"nick":"tymczenko","reason":"Ping timeout: 256 seconds","date":"2018-08-07T16:29:14.755Z","type":"quit"}
{"nick":"plexigras2","date":"2018-08-07T16:31:19.749Z","type":"join"}
{"nick":"Caspinol","date":"2018-08-07T16:32:08.609Z","type":"join"}
{"nick":"plexigras","reason":"Ping timeout: 256 seconds","date":"2018-08-07T16:32:38.796Z","type":"quit"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2018-08-07T16:32:59.318Z","type":"quit"}
{"nick":"smccarthy","date":"2018-08-07T16:33:34.666Z","type":"join"}
{"nick":"noraatepernos","date":"2018-08-07T16:37:03.497Z","type":"join"}
{"nick":"Caspinol","reason":"Ping timeout: 244 seconds","date":"2018-08-07T16:37:19.576Z","type":"quit"}
{"nick":"cdev771","reason":"Ping timeout: 240 seconds","date":"2018-08-07T16:37:21.350Z","type":"quit"}
{"nick":"chargen","reason":"Ping timeout: 240 seconds","date":"2018-08-07T16:39:05.489Z","type":"quit"}
{"nick":"tymczenko","date":"2018-08-07T16:40:09.382Z","type":"join"}
{"nick":"lomex","date":"2018-08-07T16:40:30.353Z","type":"join"}
{"nick":"tymczenko","reason":"Client Quit","date":"2018-08-07T16:42:19.895Z","type":"quit"}
{"nick":"tvw","reason":"Remote host closed the connection","date":"2018-08-07T16:42:56.514Z","type":"quit"}
{"nick":"johnzuh","date":"2018-08-07T16:43:40.202Z","type":"join"}
{"nick":"plexigras2","new_nick":"plexigras","date":"2018-08-07T16:44:22.410Z","type":"nick"}
{"nick":"Elyx0","reason":"Quit: Elyx0","date":"2018-08-07T16:44:36.931Z","type":"quit"}
{"nick":"Laptop_mini","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T16:46:42.991Z","type":"quit"}
{"nick":"drathir26","date":"2018-08-07T16:47:06.431Z","type":"join"}
{"nick":"drathir26","reason":"K-Lined","date":"2018-08-07T16:47:39.791Z","type":"quit"}
{"nick":"JaredCE","message":"so if i don't set my http client to have maxsockets.... is there a way of keeping track of all the sockets it's opening on http.get ? etc","date":"2018-08-07T16:49:25.274Z","type":"message"}
{"nick":"Sharaal","date":"2018-08-07T16:50:27.355Z","type":"join"}
{"nick":"plexigras","reason":"Quit: WeeChat 2.2","date":"2018-08-07T16:52:11.901Z","type":"quit"}
{"nick":"plexigras","date":"2018-08-07T16:53:45.776Z","type":"join"}
{"nick":"sergey__","date":"2018-08-07T16:54:49.092Z","type":"join"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T16:55:18.773Z","type":"quit"}
{"nick":"Gazooo","reason":"Quit: The Lounge - https://thelounge.github.io","date":"2018-08-07T16:58:29.105Z","type":"quit"}
{"nick":"eckhardt_","date":"2018-08-07T16:59:48.996Z","type":"join"}
{"nick":"smccarth_","date":"2018-08-07T16:59:56.721Z","type":"join"}
{"nick":"icywiz18","date":"2018-08-07T17:00:00.170Z","type":"join"}
{"nick":"icywiz18","reason":"Remote host closed the connection","date":"2018-08-07T17:00:42.127Z","type":"quit"}
{"nick":"tsakos","date":"2018-08-07T17:00:48.494Z","type":"join"}
{"nick":"altabb","date":"2018-08-07T17:01:33.734Z","type":"join"}
{"nick":"turboteddy","date":"2018-08-07T17:01:42.080Z","type":"join"}
{"nick":"smccarthy","reason":"Ping timeout: 244 seconds","date":"2018-08-07T17:02:38.572Z","type":"quit"}
{"nick":"orbyt_","date":"2018-08-07T17:03:23.895Z","type":"join"}
{"nick":"cdev771","date":"2018-08-07T17:04:55.665Z","type":"join"}
{"nick":"altab","reason":"Ping timeout: 256 seconds","date":"2018-08-07T17:04:56.727Z","type":"quit"}
{"nick":"jkridner","reason":"Quit: Leaving...","date":"2018-08-07T17:06:25.236Z","type":"quit"}
{"nick":"jkridner","date":"2018-08-07T17:07:55.357Z","type":"join"}
{"nick":"renlo","date":"2018-08-07T17:08:52.949Z","type":"join"}
{"nick":"shanxS","date":"2018-08-07T17:09:01.346Z","type":"join"}
{"nick":"artoo_","reason":"Quit: Page closed","date":"2018-08-07T17:10:25.058Z","type":"quit"}
{"nick":"jkridner|pd","date":"2018-08-07T17:11:01.350Z","type":"join"}
{"nick":"JaredCE","reason":"Ping timeout: 264 seconds","date":"2018-08-07T17:11:45.948Z","type":"quit"}
{"nick":"zeds","date":"2018-08-07T17:13:37.531Z","type":"join"}
{"nick":"zeds","date":"2018-08-07T17:13:49.338Z","type":"part"}
{"nick":"`slikts","message":"I don't get it, how come FileHandle.writeFile appends?","date":"2018-08-07T17:13:59.051Z","type":"message"}
{"nick":"jkridner","reason":"Ping timeout: 240 seconds","date":"2018-08-07T17:14:21.353Z","type":"quit"}
{"nick":"kjartan","reason":"Read error: Connection reset by peer","date":"2018-08-07T17:14:21.563Z","type":"quit"}
{"nick":"`slikts","message":"I do fs.promises.open(...) and then want to replace the file's contents repeatedly","date":"2018-08-07T17:14:35.694Z","type":"message"}
{"nick":"`slikts","message":"do I need to reopen the file each time?","date":"2018-08-07T17:14:50.526Z","type":"message"}
{"nick":"`slikts","message":"or not use a file handle?","date":"2018-08-07T17:14:57.274Z","type":"message"}
{"nick":"gloomy","date":"2018-08-07T17:14:58.625Z","type":"join"}
{"nick":"varunest","date":"2018-08-07T17:15:06.392Z","type":"join"}
{"nick":"bsaboia","date":"2018-08-07T17:15:53.364Z","type":"join"}
{"nick":"benjamingr_","message":"You'd `.write` at whatever offset you want, probably","date":"2018-08-07T17:16:06.009Z","type":"message"}
{"nick":"`slikts","message":"oh, so I could set the offset to 0","date":"2018-08-07T17:16:16.764Z","type":"message"}
{"nick":"`slikts","message":"although I don't see an offset option","date":"2018-08-07T17:16:53.380Z","type":"message"}
{"nick":"chargen","date":"2018-08-07T17:17:40.586Z","type":"join"}
{"nick":"`slikts","message":".write and not .writeFile, I see","date":"2018-08-07T17:17:47.907Z","type":"message"}
{"nick":"darkSeid","date":"2018-08-07T17:18:06.693Z","type":"join"}
{"nick":"shanxS","reason":"Ping timeout: 240 seconds","date":"2018-08-07T17:18:21.430Z","type":"quit"}
{"nick":"kjartan","date":"2018-08-07T17:18:32.025Z","type":"join"}
{"nick":"shanxS","date":"2018-08-07T17:20:14.803Z","type":"join"}
{"nick":"`slikts","message":"that doesn't appear to work; I have the offset as 0, and it still appends","date":"2018-08-07T17:21:05.527Z","type":"message"}
{"nick":"`slikts","message":"doing it like this: fileHandle.write(Buffer.from(JSON.stringify(value), 'utf8'), 0)","date":"2018-08-07T17:21:36.512Z","type":"message"}
{"nick":"RLa","reason":"Quit: Leaving","date":"2018-08-07T17:22:06.346Z","type":"quit"}
{"nick":"`slikts","message":"how do I overwrite the file contents without reopening it every time?","date":"2018-08-07T17:22:07.651Z","type":"message"}
{"nick":"fuerchter","reason":"Quit: Page closed","date":"2018-08-07T17:22:21.405Z","type":"quit"}
{"nick":"`slikts","message":"ah, it's the position argument, not offset","date":"2018-08-07T17:22:32.594Z","type":"message"}
{"nick":"`slikts","message":"offset refers to the offset within the buffer","date":"2018-08-07T17:22:37.605Z","type":"message"}
{"nick":"`slikts","message":"that's confusing","date":"2018-08-07T17:22:43.879Z","type":"message"}
{"nick":"missnomer","date":"2018-08-07T17:23:34.592Z","type":"join"}
{"nick":"bradfordli123","date":"2018-08-07T17:24:05.026Z","type":"join"}
{"nick":"missnomer","reason":"Killed (Unit193 (Spam is not permitted on freenode.))","date":"2018-08-07T17:24:48.168Z","type":"quit"}
{"nick":"fatalhalt","date":"2018-08-07T17:25:50.731Z","type":"join"}
{"nick":"bradfordli123","reason":"Remote host closed the connection","date":"2018-08-07T17:26:51.956Z","type":"quit"}
{"nick":"gloomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T17:26:58.493Z","type":"quit"}
{"nick":"DeltaHeavy","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T17:27:00.669Z","type":"quit"}
{"nick":"bradfordli123","date":"2018-08-07T17:27:28.688Z","type":"join"}
{"nick":"Laptop_mini","date":"2018-08-07T17:27:50.360Z","type":"join"}
{"nick":"trumco","reason":"Quit: Habibi","date":"2018-08-07T17:29:06.426Z","type":"quit"}
{"nick":"altabb","reason":"Ping timeout: 256 seconds","date":"2018-08-07T17:29:18.742Z","type":"quit"}
{"nick":"HoierM","date":"2018-08-07T17:29:41.745Z","type":"join"}
{"nick":"altab","date":"2018-08-07T17:30:06.558Z","type":"join"}
{"nick":"altab","reason":"Client Quit","date":"2018-08-07T17:30:09.504Z","type":"quit"}
{"nick":"ffx_","date":"2018-08-07T17:30:44.990Z","type":"join"}
{"nick":"`slikts","message":"how can I make the file shorter using this approach?","date":"2018-08-07T17:30:48.833Z","type":"message"}
{"nick":"`slikts","message":".truncate()","date":"2018-08-07T17:31:48.831Z","type":"message"}
{"nick":"ddelrio1986","reason":"Quit: This computer has gone to sleep","date":"2018-08-07T17:31:56.698Z","type":"quit"}
{"nick":"`slikts","message":"the take-away is to think before asking","date":"2018-08-07T17:31:59.498Z","type":"message"}
{"nick":"on3pk","date":"2018-08-07T17:32:33.783Z","type":"join"}
{"nick":"clintar","reason":"Remote host closed the connection","date":"2018-08-07T17:33:33.434Z","type":"quit"}
{"nick":"MrAbaddon","reason":"Read error: Connection reset by peer","date":"2018-08-07T17:33:45.404Z","type":"quit"}
{"nick":"ddelrio1986","date":"2018-08-07T17:33:45.575Z","type":"join"}
{"nick":"on3pk","message":"Hi everyone.  One thing I forgot to ask about last night... with eventemitters, do I need to worry about \"dangling objects\"?  Like, if I delete an object that was listening for events, does that cause problems?","date":"2018-08-07T17:34:24.403Z","type":"message"}
{"nick":"yehowyada","date":"2018-08-07T17:35:48.985Z","type":"join"}
{"nick":"neo4","reason":"Ping timeout: 260 seconds","date":"2018-08-07T17:36:39.095Z","type":"quit"}
{"nick":"clintar","date":"2018-08-07T17:36:58.042Z","type":"join"}
{"nick":"leolrrj","reason":"Ping timeout: 256 seconds","date":"2018-08-07T17:51:16.310Z","type":"quit"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T17:58:16.713Z","type":"quit"}
{"nick":"InverseRhombus","date":"2018-08-07T17:58:18.119Z","type":"join"}
{"nick":"DeltaHeavy","date":"2018-08-07T17:59:21.446Z","type":"join"}
{"nick":"chargen","reason":"Ping timeout: 240 seconds","date":"2018-08-07T18:00:21.579Z","type":"quit"}
{"nick":"zsoc","message":"on3pk: what do you mean \"an object that was listening for events\"? event listeners are functions","date":"2018-08-07T18:00:25.867Z","type":"message"}
{"nick":"Sharaal","date":"2018-08-07T18:01:57.061Z","type":"join"}
{"nick":"jkridner|pd","new_nick":"jkridner","date":"2018-08-07T18:03:29.040Z","type":"nick"}
{"nick":"HoierM","reason":"Ping timeout: 256 seconds","date":"2018-08-07T18:03:52.781Z","type":"quit"}
{"nick":"HoierM","date":"2018-08-07T18:04:40.133Z","type":"join"}
{"nick":"bsaboia","reason":"Remote host closed the connection","date":"2018-08-07T18:05:18.709Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T18:05:21.795Z","type":"quit"}
{"nick":"bsaboia","date":"2018-08-07T18:05:41.499Z","type":"join"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T18:06:42.785Z","type":"quit"}
{"nick":"InverseRhombus","reason":"Ping timeout: 260 seconds","date":"2018-08-07T18:07:34.101Z","type":"quit"}
{"nick":"Elisha","date":"2018-08-07T18:08:04.511Z","type":"join"}
{"nick":"orbyt_","date":"2018-08-07T18:09:15.609Z","type":"join"}
{"nick":"leolrrj","date":"2018-08-07T18:10:39.003Z","type":"join"}
{"nick":"InverseRhombus","date":"2018-08-07T18:11:12.510Z","type":"join"}
{"nick":"goodenough","reason":"Remote host closed the connection","date":"2018-08-07T18:11:36.899Z","type":"quit"}
{"nick":"johnzuh","reason":"Remote host closed the connection","date":"2018-08-07T18:12:28.033Z","type":"quit"}
{"nick":"johnzuh","date":"2018-08-07T18:12:58.750Z","type":"join"}
{"nick":"on3pk","message":"zsoc, lets say I have var myListener = { myUpdateHandler: (message) => {}};  myEmitter.on(\"event\", myListener.myUpdateHandler);  If I deleted myListener, what would happen to myEmitter?","date":"2018-08-07T18:13:12.271Z","type":"message"}
{"nick":"zsoc","message":"How would you 'delete' myListener?","date":"2018-08-07T18:13:30.558Z","type":"message"}
{"nick":"on3pk","message":"I guess if it was in an array or something","date":"2018-08-07T18:15:07.337Z","type":"message"}
{"nick":"zsoc","message":"so lets say you have an array of these... and you replace the array with a new one omitting it, like via array.filter or something","date":"2018-08-07T18:15:26.068Z","type":"message"}
{"nick":"on3pk","message":"right","date":"2018-08-07T18:15:37.191Z","type":"message"}
{"nick":"zsoc","message":"i should know the answer to this, and i legitimately do not lol. I believe that the object would still exist, because although its not part of your array anymore, it's *also* not dereferenced, so it would never be picked up","date":"2018-08-07T18:16:36.779Z","type":"message"}
{"nick":"zsoc","message":"so yeah sounds like a memory leak","date":"2018-08-07T18:17:57.271Z","type":"message"}
{"nick":"on3pk","message":"neat","date":"2018-08-07T18:18:09.116Z","type":"message"}
{"nick":"mr_lou","date":"2018-08-07T18:18:21.727Z","type":"join"}
{"nick":"on3pk","message":"so I should avoid doing that","date":"2018-08-07T18:18:28.042Z","type":"message"}
{"nick":"zsoc","message":"well you should myEmitter.off the event handler i suppose","date":"2018-08-07T18:18:45.983Z","type":"message"}
{"nick":"kswedberg[m]","date":"2018-08-07T18:19:46.083Z","type":"join"}
{"nick":"zsoc","message":"the only time i dealt with something like this was peeling of listeners from objects representing websockets from my emitter... and yeah i removed the event listener when the socket was closed or errored out or timed out","date":"2018-08-07T18:20:11.738Z","type":"message"}
{"nick":"sxa","reason":"Ping timeout: 256 seconds","date":"2018-08-07T18:22:34.749Z","type":"quit"}
{"nick":"sauvin","reason":"Read error: Connection reset by peer","date":"2018-08-07T18:28:37.109Z","type":"quit"}
{"nick":"Impaloo","reason":"Quit: The Lounge - https://thelounge.chat","date":"2018-08-07T18:30:10.019Z","type":"quit"}
{"nick":"Impaloo","date":"2018-08-07T18:31:46.753Z","type":"join"}
{"nick":"ahmed_elgabri","date":"2018-08-07T18:34:23.191Z","type":"join"}
{"nick":"chargen","date":"2018-08-07T18:35:19.545Z","type":"join"}
{"nick":"ghoti_","new_nick":"ghoti","date":"2018-08-07T18:36:49.687Z","type":"nick"}
{"nick":"notnull","reason":"Remote host closed the connection","date":"2018-08-07T18:37:13.621Z","type":"quit"}
{"nick":"chargen","reason":"Ping timeout: 256 seconds","date":"2018-08-07T18:40:00.294Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-08-07T18:41:50.762Z","type":"quit"}
{"nick":"foodSurprise","reason":"Ping timeout: 240 seconds","date":"2018-08-07T18:45:57.752Z","type":"quit"}
{"nick":"darutoko-","reason":"Quit: Any sufficiently advanced technology is indistinguishable from magic. (Arthur C. Clarke)","date":"2018-08-07T18:47:03.606Z","type":"quit"}
{"nick":"marthinal","date":"2018-08-07T18:47:24.680Z","type":"join"}
{"nick":"noraatepernos","reason":"Quit: noraatepernos","date":"2018-08-07T18:48:06.152Z","type":"quit"}
{"nick":"zava","reason":"Quit: WeeChat 2.2","date":"2018-08-07T18:51:22.697Z","type":"quit"}
{"nick":"rendar","reason":"Quit: greycat a.k.a. Greg Wooledge is a fu!@#$ idiot! ^_^","date":"2018-08-07T18:52:52.809Z","type":"quit"}
{"nick":"gambl0re","date":"2018-08-07T18:54:31.827Z","type":"join"}
{"nick":"gambl0re","reason":"Changing host","date":"2018-08-07T18:54:32.508Z","type":"quit"}
{"nick":"gambl0re","date":"2018-08-07T18:54:32.508Z","type":"join"}
{"nick":"smccarth_","reason":"Remote host closed the connection","date":"2018-08-07T18:55:09.743Z","type":"quit"}
{"nick":"smccarthy","date":"2018-08-07T18:55:46.781Z","type":"join"}
{"nick":"zava","date":"2018-08-07T18:56:20.089Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-08-07T18:56:58.530Z","type":"quit"}
{"nick":"lomex","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T18:57:13.995Z","type":"quit"}
{"nick":"shanxS","reason":"Ping timeout: 240 seconds","date":"2018-08-07T18:57:27.756Z","type":"quit"}
{"nick":"JustTheDoctor","date":"2018-08-07T18:58:42.410Z","type":"join"}
{"nick":"Sven_vB","message":"what eslint rule or plugin could I use to warn about common typos like .lenght, or method calls with bad arguments like .indexOf() w/o an argument, or .substr() with a negative constand number as first arg?","date":"2018-08-07T18:58:43.075Z","type":"message"}
{"nick":"lomex","date":"2018-08-07T18:59:56.857Z","type":"join"}
{"nick":"smccarthy","reason":"Ping timeout: 256 seconds","date":"2018-08-07T19:00:32.746Z","type":"quit"}
{"nick":"shanxS","date":"2018-08-07T19:01:30.114Z","type":"join"}
{"nick":"hdon","date":"2018-08-07T19:02:19.082Z","type":"join"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T19:02:56.312Z","type":"quit"}
{"nick":"TinkerT","reason":"Read error: Connection reset by peer","date":"2018-08-07T19:05:05.735Z","type":"quit"}
{"nick":"goodenough","date":"2018-08-07T19:06:47.372Z","type":"join"}
{"nick":"TinkerT","date":"2018-08-07T19:06:58.470Z","type":"join"}
{"nick":"bsaboia","message":"how can I create a child object directly? such as","date":"2018-08-07T19:06:59.973Z","type":"message"}
{"nick":"nehemiah","date":"2018-08-07T19:07:03.871Z","type":"join"}
{"nick":"bsaboia","message":"const someObj = {}; someObj.someChild.someOtherChild = 0; // this will fail because someObj.someChild is undefined","date":"2018-08-07T19:07:42.897Z","type":"message"}
{"nick":"Sharaal","date":"2018-08-07T19:08:52.766Z","type":"join"}
{"nick":"horsey","date":"2018-08-07T19:11:41.094Z","type":"join"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2018-08-07T19:12:05.253Z","type":"quit"}
{"nick":"Caspinol","date":"2018-08-07T19:12:42.247Z","type":"join"}
{"nick":"AtumT","date":"2018-08-07T19:12:54.745Z","type":"join"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T19:13:26.335Z","type":"quit"}
{"nick":"lomex","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T19:15:11.392Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-07T19:15:36.498Z","type":"join"}
{"nick":"horsey","reason":"Ping timeout: 244 seconds","date":"2018-08-07T19:15:56.644Z","type":"quit"}
{"nick":"Sven_vB","message":"bsaboia, do you want to create empty objects where chain parts are missing?","date":"2018-08-07T19:20:04.271Z","type":"message"}
{"nick":"smccarthy","date":"2018-08-07T19:20:07.363Z","type":"join"}
{"nick":"bsaboia","reason":"Remote host closed the connection","date":"2018-08-07T19:21:48.833Z","type":"quit"}
{"nick":"Sven_vB","message":"try lodash.set","date":"2018-08-07T19:25:10.344Z","type":"message"}
{"nick":"Stryyker21","date":"2018-08-07T19:27:43.306Z","type":"join"}
{"nick":"benjamingr_","reason":"Quit: Connection closed for inactivity","date":"2018-08-07T19:28:27.914Z","type":"quit"}
{"nick":"Stryyker21","reason":"Remote host closed the connection","date":"2018-08-07T19:28:42.152Z","type":"quit"}
{"nick":"lomex","date":"2018-08-07T19:28:42.440Z","type":"join"}
{"nick":"orbyt_","date":"2018-08-07T19:32:00.983Z","type":"join"}
{"nick":"yehowyad_","date":"2018-08-07T19:32:17.336Z","type":"join"}
{"nick":"toi","date":"2018-08-07T19:33:17.358Z","type":"join"}
{"nick":"chargen","date":"2018-08-07T19:33:22.623Z","type":"join"}
{"nick":"yehowyada","reason":"Ping timeout: 244 seconds","date":"2018-08-07T19:33:30.715Z","type":"quit"}
{"nick":"shanxS","reason":"Ping timeout: 260 seconds","date":"2018-08-07T19:33:54.089Z","type":"quit"}
{"nick":"MrAbaddon","date":"2018-08-07T19:34:19.263Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 248 seconds","date":"2018-08-07T19:34:25.506Z","type":"quit"}
{"nick":"shanxS","date":"2018-08-07T19:35:46.411Z","type":"join"}
{"nick":"chargen_","date":"2018-08-07T19:36:41.866Z","type":"join"}
{"nick":"netkam2","date":"2018-08-07T19:37:30.977Z","type":"join"}
{"nick":"netkam2","message":"whats the \"hipster\" way to run a node app locally?","date":"2018-08-07T19:37:41.902Z","type":"message"}
{"nick":"shanxS","reason":"Ping timeout: 240 seconds","date":"2018-08-07T19:39:51.340Z","type":"quit"}
{"nick":"bradfordli123","reason":"Ping timeout: 264 seconds","date":"2018-08-07T19:41:09.946Z","type":"quit"}
{"nick":"shanxS","date":"2018-08-07T19:41:12.091Z","type":"join"}
{"nick":"netkam2","reason":"Quit: ERC (IRC client for Emacs 26.1)","date":"2018-08-07T19:41:42.808Z","type":"quit"}
{"nick":"orbyt_","message":"lol what","date":"2018-08-07T19:41:44.262Z","type":"message"}
{"nick":"toi","reason":"Ping timeout: 240 seconds","date":"2018-08-07T19:42:51.335Z","type":"quit"}
{"nick":"akiva","reason":"Ping timeout: 264 seconds","date":"2018-08-07T19:42:57.984Z","type":"quit"}
{"nick":"chargen_","reason":"Quit: BBL","date":"2018-08-07T19:43:10.943Z","type":"quit"}
{"nick":"sysfault","reason":"Quit: Leaving","date":"2018-08-07T19:44:54.143Z","type":"quit"}
{"nick":"HoierM","reason":"Ping timeout: 260 seconds","date":"2018-08-07T19:47:19.125Z","type":"quit"}
{"nick":"Sharaal","date":"2018-08-07T19:47:22.105Z","type":"join"}
{"nick":"chargen","reason":"Ping timeout: 244 seconds","date":"2018-08-07T19:47:27.682Z","type":"quit"}
{"nick":"Sven_vB","message":"netkam2: get at least 3 devices, and let them run your node distributed in a blockchain.","date":"2018-08-07T19:47:56.717Z","type":"message"}
{"nick":"akiva","date":"2018-08-07T19:48:34.780Z","type":"join"}
{"nick":"lomex","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T19:48:46.339Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-07T19:49:43.655Z","type":"join"}
{"nick":"wsieroci","reason":"Remote host closed the connection","date":"2018-08-07T19:50:54.259Z","type":"quit"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T19:52:06.735Z","type":"quit"}
{"nick":"TikityTik","date":"2018-08-07T19:52:10.201Z","type":"join"}
{"nick":"TikityTik","message":"basing off this page, how do I learn how to implement this? https://www.npmjs.com/package/stylus","date":"2018-08-07T19:52:26.234Z","type":"message"}
{"nick":"mzl0","reason":"Ping timeout: 244 seconds","date":"2018-08-07T19:53:39.637Z","type":"quit"}
{"nick":"TikityTik","message":"also my styl files aren't being compiled upon being changed","date":"2018-08-07T19:54:42.004Z","type":"message"}
{"nick":"TikityTik","message":"and the page gets loaded before the compilation finishes","date":"2018-08-07T19:54:53.375Z","type":"message"}
{"nick":"Sven_vB","message":"TikityTik, what do you mean with \"implement\"? the package already implements the stylus compiler.","date":"2018-08-07T19:55:36.834Z","type":"message"}
{"nick":"TikityTik","message":"how do i set it up i meant","date":"2018-08-07T19:55:53.733Z","type":"message"}
{"nick":"lomex","date":"2018-08-07T19:56:18.029Z","type":"join"}
{"nick":"Sven_vB","message":"TikityTik, are you looking for a tool that watches your files, runs stylus when you save them, and serves the latest version via HTTP?","date":"2018-08-07T19:56:20.879Z","type":"message"}
{"nick":"lomex","reason":"Client Quit","date":"2018-08-07T19:56:54.484Z","type":"quit"}
{"nick":"lomex","date":"2018-08-07T19:57:18.266Z","type":"join"}
{"nick":"TikityTik","message":"apparently the module should already be able to do that?","date":"2018-08-07T19:57:36.519Z","type":"message"}
{"nick":"lomex","reason":"Client Quit","date":"2018-08-07T19:57:45.734Z","type":"quit"}
{"nick":"sysfault","date":"2018-08-07T19:58:05.662Z","type":"join"}
{"nick":"Sven_vB","message":"oh. then I'll read again","date":"2018-08-07T19:58:05.826Z","type":"message"}
{"nick":"Sven_vB","message":"indeed that -w option is for watch","date":"2018-08-07T19:58:32.362Z","type":"message"}
{"nick":"TikityTik","message":"so i need to use the CL for that and leave stylus running?","date":"2018-08-07T19:59:52.996Z","type":"message"}
{"nick":"Sven_vB","message":"maybe its watch mechanism is broken. in that case try gulp-stylus with gulp.","date":"2018-08-07T20:00:08.949Z","type":"message"}
{"nick":"Sven_vB","message":"err yes your stylus can only watch files as long as you keep it running.","date":"2018-08-07T20:00:29.606Z","type":"message"}
{"nick":"TikityTik","message":"and i can't leave it up to the web app to watch it for me instead?","date":"2018-08-07T20:00:45.458Z","type":"message"}
{"nick":"Sven_vB","message":"yes if you have a web app you can let the web app do it.","date":"2018-08-07T20:01:05.027Z","type":"message"}
{"nick":"Sven_vB","message":"does your webapp detect the file changes?","date":"2018-08-07T20:01:27.002Z","type":"message"}
{"nick":"TikityTik","message":"no, trying to figure out how to set that up","date":"2018-08-07T20:01:38.979Z","type":"message"}
{"nick":"Sven_vB","message":"chokidar module","date":"2018-08-07T20:02:02.561Z","type":"message"}
{"nick":"Sven_vB","message":"depending on file system cache, you might want to wait a little bit before reading the file, to ensure you only read it after it has been fully saved.","date":"2018-08-07T20:02:42.498Z","type":"message"}
{"nick":"Sven_vB","message":"and cancel a pending compile if the file has been modified while waiting.","date":"2018-08-07T20:03:32.219Z","type":"message"}
{"nick":"Sven_vB","message":"or you go the easy way and compile it every time a browser requests it. should be ok for development.","date":"2018-08-07T20:04:32.172Z","type":"message"}
{"nick":"Sven_vB","message":"and in production,","date":"2018-08-07T20:04:38.801Z","type":"message"}
{"nick":"Sven_vB","message":"you wouldn't excpect it changes","date":"2018-08-07T20:04:46.103Z","type":"message"}
{"nick":"Sven_vB","message":"it = the source file.","date":"2018-08-07T20:04:54.661Z","type":"message"}
{"nick":"ddelrio1986","reason":"Quit: This computer has gone to sleep","date":"2018-08-07T20:04:55.299Z","type":"quit"}
{"nick":"TikityTik","message":"i just don't understand why there isn't default automatic compilation","date":"2018-08-07T20:05:46.524Z","type":"message"}
{"nick":"Sven_vB","message":"which program should provide that auto compile?","date":"2018-08-07T20:06:29.915Z","type":"message"}
{"nick":"Sven_vB","message":"there are some node packages that provide programs that have \"watch and re-compile\" as their main mission.","date":"2018-08-07T20:08:28.877Z","type":"message"}
{"nick":"Sven_vB","message":"also some task runners like grunt or gulp have watch capability afair.","date":"2018-08-07T20:09:01.681Z","type":"message"}
{"nick":"Sven_vB","message":"I prefer having my browser compile my CSS for me as needed, using systemjs.","date":"2018-08-07T20:10:14.502Z","type":"message"}
{"nick":"InverseRhombus","reason":"Ping timeout: 240 seconds","date":"2018-08-07T20:15:05.605Z","type":"quit"}
{"nick":"yehowyad_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T20:15:23.792Z","type":"quit"}
{"nick":"bradfordli123","date":"2018-08-07T20:15:27.561Z","type":"join"}
{"nick":"bradfordli123","reason":"Read error: Connection reset by peer","date":"2018-08-07T20:15:34.820Z","type":"quit"}
{"nick":"yehowyada","date":"2018-08-07T20:16:19.333Z","type":"join"}
{"nick":"bradfordli123","date":"2018-08-07T20:16:27.276Z","type":"join"}
{"nick":"InverseRhombus","date":"2018-08-07T20:17:12.755Z","type":"join"}
{"nick":"vikaton","date":"2018-08-07T20:19:20.392Z","type":"join"}
{"nick":"netkam2","date":"2018-08-07T20:19:39.144Z","type":"join"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2018-08-07T20:20:00.595Z","type":"quit"}
{"nick":"ed209","date":"2018-08-07T20:20:06.749Z","type":"join"}
{"nick":"chargen","date":"2018-08-07T20:22:58.552Z","type":"join"}
{"nick":"zsoc","message":"that moment where you've spent three weeks negotiating api access with nda's and all sorts of other nonsense and their api is garbage and doesn't actually give useful data and you end up just using the private api exposed by the portal","date":"2018-08-07T20:23:04.590Z","type":"message"}
{"nick":"netkam2","reason":"Client Quit","date":"2018-08-07T20:23:22.141Z","type":"quit"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2018-08-07T20:25:10.948Z","type":"quit"}
{"nick":"Immune","date":"2018-08-07T20:25:31.762Z","type":"join"}
{"nick":"mezod","date":"2018-08-07T20:26:23.117Z","type":"join"}
{"nick":"scrptktty","date":"2018-08-07T20:26:39.320Z","type":"join"}
{"nick":"chargen","reason":"Ping timeout: 240 seconds","date":"2018-08-07T20:27:27.757Z","type":"quit"}
{"nick":"plasticle","date":"2018-08-07T20:28:49.441Z","type":"join"}
{"nick":"starz0r","date":"2018-08-07T20:29:09.384Z","type":"join"}
{"nick":"wsieroci","date":"2018-08-07T20:29:15.701Z","type":"join"}
{"nick":"evilman_work16","date":"2018-08-07T20:31:41.668Z","type":"join"}
{"nick":"evilman_work16","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-07T20:32:06.960Z","type":"quit"}
{"nick":"LCE87","message":"hi, I have a little problem choosing the right track for my hobby project. It´s about home automation, hw nodes transmit data using mqtt protocol to a rednode interface, which saves data in mongodb, from there I have a web app, based on nodejs with expressjs, login is working and also a page with all devices connected to a username. Now the problem is that I want to know the status of my hw sensors in real time, I don´t know exactly how to do that","date":"2018-08-07T20:32:47.001Z","type":"message"}
{"nick":"LCE87","message":". websockets or ajax or other method, what do you recomand from your experience?","date":"2018-08-07T20:32:47.204Z","type":"message"}
{"nick":"zsoc","message":"websockets","date":"2018-08-07T20:33:44.711Z","type":"message"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T20:33:54.314Z","type":"quit"}
{"nick":"zsoc","message":"simple, standardized, supported everywhere, easy to integrate with express","date":"2018-08-07T20:33:56.938Z","type":"message"}
{"nick":"zsoc","message":"avoid socket.io","date":"2018-08-07T20:33:58.591Z","type":"message"}
{"nick":"pokk","reason":"Remote host closed the connection","date":"2018-08-07T20:34:18.861Z","type":"quit"}
{"nick":"zumba","reason":"Remote host closed the connection","date":"2018-08-07T20:35:35.331Z","type":"quit"}
{"nick":"EREVAN","date":"2018-08-07T20:37:13.113Z","type":"quit"}
{"nick":"johnzuh","reason":"Remote host closed the connection","date":"2018-08-07T20:42:05.349Z","type":"quit"}
{"nick":"InverseRhombus","reason":"Ping timeout: 256 seconds","date":"2018-08-07T20:43:40.770Z","type":"quit"}
{"nick":"mzl0","date":"2018-08-07T20:43:56.469Z","type":"join"}
{"nick":"pokk","date":"2018-08-07T20:44:48.728Z","type":"join"}
{"nick":"renlo","reason":"Ping timeout: 256 seconds","date":"2018-08-07T20:45:22.817Z","type":"quit"}
{"nick":"LCE87","message":"is there a package to install, or just search after websockets and that´s it? I saw something like ws npm package","date":"2018-08-07T20:45:51.146Z","type":"message"}
{"nick":"LCE87","message":"I will try using that for starters.","date":"2018-08-07T20:46:07.401Z","type":"message"}
{"nick":"zsoc","message":"`ws` is the good 'ol standard yeah","date":"2018-08-07T20:46:15.928Z","type":"message"}
{"nick":"zsoc","message":"there's a bunch of others but... you're better off just using something like `ws` and building out the small abstractions you'll need (like sending data via stringify/parse or 'event' names or whatever)","date":"2018-08-07T20:46:46.912Z","type":"message"}
{"nick":"zsoc","message":"on the client side, it's built into HTML5 so you shouldn't need much there","date":"2018-08-07T20:46:55.138Z","type":"message"}
{"nick":"LCE87","message":"thanks zsoc, hope that works","date":"2018-08-07T20:47:05.339Z","type":"message"}
{"nick":"zsoc","message":"also express-ws helps you wire it up to an existing express app, if that's what you got","date":"2018-08-07T20:47:12.830Z","type":"message"}
{"nick":"ddelrio1986","date":"2018-08-07T20:47:16.502Z","type":"join"}
{"nick":"LCE87","message":"express-ws it is then","date":"2018-08-07T20:47:31.109Z","type":"message"}
{"nick":"InverseRhombus","date":"2018-08-07T20:47:32.510Z","type":"join"}
{"nick":"talmid","date":"2018-08-07T20:48:35.098Z","type":"join"}
{"nick":"star_prone","date":"2018-08-07T20:48:57.368Z","type":"join"}
{"nick":"talmid","message":"did anyone work with node-xmpp? I cannot find the documentation","date":"2018-08-07T20:49:55.673Z","type":"message"}
{"nick":"jkridner","reason":"Remote host closed the connection","date":"2018-08-07T20:51:14.283Z","type":"quit"}
{"nick":"InverseRhombus","reason":"Ping timeout: 240 seconds","date":"2018-08-07T20:53:05.492Z","type":"quit"}
{"nick":"star_prone","reason":"Ping timeout: 240 seconds","date":"2018-08-07T20:53:21.377Z","type":"quit"}
{"nick":"zsoc","message":"i dunno what it is, but there are node-xmpp-client and node-xmpp-server (and node-xmpp-core) packages in npm.. is it those?","date":"2018-08-07T20:53:45.415Z","type":"message"}
{"nick":"zsoc","message":"they have docs that link to some website","date":"2018-08-07T20:54:09.499Z","type":"message"}
{"nick":"renlo","date":"2018-08-07T20:54:43.895Z","type":"join"}
{"nick":"InverseRhombus","date":"2018-08-07T20:55:12.749Z","type":"join"}
{"nick":"deed023921","date":"2018-08-07T20:55:14.793Z","type":"join"}
{"nick":"deed023921","reason":"Remote host closed the connection","date":"2018-08-07T20:56:46.016Z","type":"quit"}
{"nick":"chrisb_","date":"2018-08-07T20:56:56.078Z","type":"join"}
{"nick":"marthinal","date":"2018-08-07T20:57:26.502Z","type":"join"}
{"nick":"talmid","message":"yes I saw that, but it brings to some fake website","date":"2018-08-07T20:58:42.457Z","type":"message"}
{"nick":"zsoc","message":"oh nice lol","date":"2018-08-07T20:59:01.265Z","type":"message"}
{"nick":"zsoc","message":"i mean, it's not just http://xmppjs.org/ ?","date":"2018-08-07T20:59:21.027Z","type":"message"}
{"nick":"schneid3306","date":"2018-08-07T20:59:43.611Z","type":"join"}
{"nick":"chrisb_","message":"how can i use npm to make one git repo see another git repo?","date":"2018-08-07T20:59:58.463Z","type":"message"}
{"nick":"eckhardt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T21:00:24.691Z","type":"quit"}
{"nick":"Sharaal","date":"2018-08-07T21:00:52.780Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 240 seconds","date":"2018-08-07T21:01:35.469Z","type":"quit"}
{"nick":"ljharb","message":"chrisb_: what do you mean \"see\", and why would you use npm to influence ggit","date":"2018-08-07T21:01:44.761Z","type":"message"}
{"nick":"ljharb","message":"*git","date":"2018-08-07T21:01:46.191Z","type":"message"}
{"nick":"netkam2","date":"2018-08-07T21:02:24.745Z","type":"join"}
{"nick":"netkam2","message":"whats a cool way to test a nodejs site locally","date":"2018-08-07T21:02:33.461Z","type":"message"}
{"nick":"Industrial","message":"node index.js ?","date":"2018-08-07T21:02:55.890Z","type":"message"}
{"nick":"Industrial","message":"npm run start :p","date":"2018-08-07T21:03:06.358Z","type":"message"}
{"nick":"Industrial","message":"s/run //","date":"2018-08-07T21:03:15.050Z","type":"message"}
{"nick":"InverseRhombus","reason":"Ping timeout: 256 seconds","date":"2018-08-07T21:03:31.112Z","type":"quit"}
{"nick":"ljharb","message":"netkam2: same way you'd run it in production. start a server, connect to it.","date":"2018-08-07T21:03:53.428Z","type":"message"}
{"nick":"romeoh","reason":"Ping timeout: 240 seconds","date":"2018-08-07T21:04:57.770Z","type":"quit"}
{"nick":"zeds","date":"2018-08-07T21:05:17.943Z","type":"join"}
{"nick":"netkam2","message":"so install node directly on your dev laptop","date":"2018-08-07T21:05:22.286Z","type":"message"}
{"nick":"JustTheDoctor","reason":"Quit: Connection closed for inactivity","date":"2018-08-07T21:05:23.948Z","type":"quit"}
{"nick":"netkam2","message":"no docker, or antyhign","date":"2018-08-07T21:05:26.237Z","type":"message"}
{"nick":"InverseRhombus","date":"2018-08-07T21:05:31.639Z","type":"join"}
{"nick":"InverseRhombus","reason":"Remote host closed the connection","date":"2018-08-07T21:05:38.085Z","type":"quit"}
{"nick":"Sharaal","reason":"Ping timeout: 256 seconds","date":"2018-08-07T21:05:38.299Z","type":"quit"}
{"nick":"zeds","date":"2018-08-07T21:06:25.743Z","type":"part"}
{"nick":"netkam2","message":"nvm's overkill right?","date":"2018-08-07T21:06:27.008Z","type":"message"}
{"nick":"jsatk","reason":"Quit: Lost terminal","date":"2018-08-07T21:06:27.947Z","type":"quit"}
{"nick":"leolrrj","date":"2018-08-07T21:06:36.142Z","type":"quit"}
{"nick":"psychicist__","reason":"Ping timeout: 248 seconds","date":"2018-08-07T21:06:41.438Z","type":"quit"}
{"nick":"ljharb","message":"netkam2: nope","date":"2018-08-07T21:06:42.980Z","type":"message"}
{"nick":"YannMjl","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T21:06:44.313Z","type":"quit"}
{"nick":"ljharb","message":"netkam2: i'd even say it's advised, so you can test on different node versions.","date":"2018-08-07T21:06:53.169Z","type":"message"}
{"nick":"ljharb","message":"you can use docker if you want, sure.","date":"2018-08-07T21:06:57.629Z","type":"message"}
{"nick":"gloomy","date":"2018-08-07T21:08:14.471Z","type":"join"}
{"nick":"Elisha","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2018-08-07T21:08:22.637Z","type":"quit"}
{"nick":"netkam2","message":"ljharb: wondering what current best practices it's been a few years","date":"2018-08-07T21:08:36.628Z","type":"message"}
{"nick":"talmid","reason":"Quit: Leaving","date":"2018-08-07T21:09:14.607Z","type":"quit"}
{"nick":"riotz","new_nick":"to_hell_with_tho","date":"2018-08-07T21:09:27.541Z","type":"nick"}
{"nick":"jsatk","date":"2018-08-07T21:10:17.573Z","type":"join"}
{"nick":"ahmed_elgabri","reason":"Quit: WeeChat 2.2","date":"2018-08-07T21:10:37.280Z","type":"quit"}
{"nick":"to_hell_with_tho","new_nick":"ScrewTheSpammers","date":"2018-08-07T21:10:39.372Z","type":"nick"}
{"nick":"GreenJello","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T21:11:32.653Z","type":"quit"}
{"nick":"brainproxy","reason":"Ping timeout: 264 seconds","date":"2018-08-07T21:12:57.959Z","type":"quit"}
{"nick":"brainproxy","date":"2018-08-07T21:14:17.706Z","type":"join"}
{"nick":"kakashiAL","date":"2018-08-07T21:14:52.747Z","type":"join"}
{"nick":"johnzuh","date":"2018-08-07T21:15:25.433Z","type":"join"}
{"nick":"cannap","date":"2018-08-07T21:16:19.366Z","type":"join"}
{"nick":"GreenJello","date":"2018-08-07T21:16:35.410Z","type":"join"}
{"nick":"lula","date":"2018-08-07T21:17:22.106Z","type":"quit"}
{"nick":"sergey__","date":"2018-08-07T21:18:13.768Z","type":"quit"}
{"nick":"kakashiAL","reason":"Ping timeout: 256 seconds","date":"2018-08-07T21:19:22.718Z","type":"quit"}
{"nick":"johnzuh","reason":"Ping timeout: 256 seconds","date":"2018-08-07T21:20:22.267Z","type":"quit"}
{"nick":"wsieroci","date":"2018-08-07T21:23:24.935Z","type":"join"}
{"nick":"clintar","reason":"Remote host closed the connection","date":"2018-08-07T21:24:18.875Z","type":"quit"}
{"nick":"kjartan","reason":"Read error: Connection reset by peer","date":"2018-08-07T21:26:11.072Z","type":"quit"}
{"nick":"Miron3","date":"2018-08-07T21:27:09.860Z","type":"join"}
{"nick":"inimino`","new_nick":"inimino","date":"2018-08-07T21:27:15.183Z","type":"nick"}
{"nick":"clintar","date":"2018-08-07T21:27:20.350Z","type":"join"}
{"nick":"Miron3","reason":"K-Lined","date":"2018-08-07T21:27:21.985Z","type":"quit"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T21:27:44.271Z","type":"quit"}
{"nick":"MachinShin","message":"these f***king icon spammers are getting on my nerves >:(","date":"2018-08-07T21:28:12.538Z","type":"message"}
{"nick":"traumschule","date":"2018-08-07T21:28:13.457Z","type":"join"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2018-08-07T21:28:35.445Z","type":"quit"}
{"nick":"smccarthy","date":"2018-08-07T21:29:11.752Z","type":"join"}
{"nick":"kjartan","date":"2018-08-07T21:29:20.737Z","type":"join"}
{"nick":"ljharb","message":"icon spammers?","date":"2018-08-07T21:29:40.867Z","type":"message"}
{"nick":"romeoh","date":"2018-08-07T21:29:53.476Z","type":"join"}
{"nick":"GreenJello","message":"they're the worst! 😡","date":"2018-08-07T21:31:25.245Z","type":"message"}
{"nick":"pstef","message":"Icon-f***king spammers?","date":"2018-08-07T21:31:35.596Z","type":"message"}
{"nick":"kapil___","reason":"Quit: Connection closed for inactivity","date":"2018-08-07T21:31:45.075Z","type":"quit"}
{"nick":"smccarthy","reason":"Ping timeout: 256 seconds","date":"2018-08-07T21:34:06.718Z","type":"quit"}
{"nick":"cdev771","reason":"Ping timeout: 244 seconds","date":"2018-08-07T21:36:28.600Z","type":"quit"}
{"nick":"ffx_","reason":"Quit: Leaving...","date":"2018-08-07T21:36:51.058Z","type":"quit"}
{"nick":"cannap","message":"EmOjiKIs :D :;p XD o_O","date":"2018-08-07T21:36:55.571Z","type":"message"}
{"nick":"lavenders","reason":"Read error: Connection reset by peer","date":"2018-08-07T21:38:52.725Z","type":"quit"}
{"nick":"Ergo","reason":"Quit: WeeChat 1.9.1","date":"2018-08-07T21:39:03.918Z","type":"quit"}
{"nick":"yousuc","date":"2018-08-07T21:39:51.719Z","type":"join"}
{"nick":"Caspinol","reason":"Remote host closed the connection","date":"2018-08-07T21:40:00.987Z","type":"quit"}
{"nick":"GreenJello","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T21:41:57.630Z","type":"quit"}
{"nick":"darkSeid","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T21:43:46.239Z","type":"quit"}
{"nick":"mzl0","reason":"Ping timeout: 240 seconds","date":"2018-08-07T21:44:05.473Z","type":"quit"}
{"nick":"tigermousr23","date":"2018-08-07T21:44:49.639Z","type":"join"}
{"nick":"darkSeid","date":"2018-08-07T21:45:36.291Z","type":"join"}
{"nick":"tigermousr23","reason":"Ping timeout: 240 seconds","date":"2018-08-07T21:49:27.750Z","type":"quit"}
{"nick":"captain_morgan","reason":"Remote host closed the connection","date":"2018-08-07T21:52:11.579Z","type":"quit"}
{"nick":"captain_morgan","date":"2018-08-07T21:52:22.475Z","type":"join"}
{"nick":"DeltaHeavy","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T21:52:45.248Z","type":"quit"}
{"nick":"plexigras","reason":"Ping timeout: 240 seconds","date":"2018-08-07T21:53:57.757Z","type":"quit"}
{"nick":"yousuc","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T21:54:40.587Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-08-07T21:56:57.439Z","type":"join"}
{"nick":"luizbag","reason":"Quit: Leaving","date":"2018-08-07T21:58:33.249Z","type":"quit"}
{"nick":"manifests","reason":"Ping timeout: 252 seconds","date":"2018-08-07T21:58:45.650Z","type":"quit"}
{"nick":"apowers313","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T21:59:47.092Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2018-08-07T22:00:24.551Z","type":"quit"}
{"nick":"braap","date":"2018-08-07T22:03:00.359Z","type":"join"}
{"nick":"orbyt_","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T22:05:25.370Z","type":"quit"}
{"nick":"cannap","reason":"Quit: Leaving","date":"2018-08-07T22:07:13.429Z","type":"quit"}
{"nick":"M6HZ","reason":"Ping timeout: 240 seconds","date":"2018-08-07T22:07:57.790Z","type":"quit"}
{"nick":"bdunavant","reason":"Remote host closed the connection","date":"2018-08-07T22:08:26.632Z","type":"quit"}
{"nick":"chargen","date":"2018-08-07T22:08:27.668Z","type":"join"}
{"nick":"Caspinol","date":"2018-08-07T22:09:39.814Z","type":"join"}
{"nick":"gajus","message":"whats the community's favourite commercial tool for Node.js memory/ loop latency monitoring?","date":"2018-08-07T22:12:31.596Z","type":"message"}
{"nick":"chargen","reason":"Ping timeout: 244 seconds","date":"2018-08-07T22:13:09.563Z","type":"quit"}
{"nick":"ddelrio1986","reason":"Quit: This computer has gone to sleep","date":"2018-08-07T22:14:02.055Z","type":"quit"}
{"nick":"Caspinol","reason":"Ping timeout: 240 seconds","date":"2018-08-07T22:14:21.333Z","type":"quit"}
{"nick":"spacesuitdiver","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T22:14:23.298Z","type":"quit"}
{"nick":"eckhardt_","date":"2018-08-07T22:16:15.657Z","type":"join"}
{"nick":"wsieroci","date":"2018-08-07T22:17:28.701Z","type":"join"}
{"nick":"jphase","reason":"Remote host closed the connection","date":"2018-08-07T22:20:48.540Z","type":"quit"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T22:22:08.267Z","type":"quit"}
{"nick":"apowers313","date":"2018-08-07T22:23:19.235Z","type":"join"}
{"nick":"netkam2","reason":"Remote host closed the connection","date":"2018-08-07T22:24:16.995Z","type":"quit"}
{"nick":"sterns","reason":"Ping timeout: 240 seconds","date":"2018-08-07T22:26:05.497Z","type":"quit"}
{"nick":"smccarthy","date":"2018-08-07T22:28:12.344Z","type":"join"}
{"nick":"philipimperato","message":"Okay, I might not be understanding caching for node correctly, but I wanted to clear cache based on Sequelize hooks","date":"2018-08-07T22:33:03.719Z","type":"message"}
{"nick":"philipimperato","message":"but I can't get any user / session information within the hook","date":"2018-08-07T22:33:21.484Z","type":"message"}
{"nick":"philipimperato","message":"so, the key is going to have to be generic","date":"2018-08-07T22:33:34.482Z","type":"message"}
{"nick":"on3pk","message":"Here is my temperature watching object.  Is there a better way of doing the onDataRecv? Basically my idea is that it should call the callback function at most once every five minutes and if the conditions are met.  https://paste.ubuntu.com/p/Ph5bw7bS24/","date":"2018-08-07T22:34:49.814Z","type":"message"}
{"nick":"chargen","date":"2018-08-07T22:35:25.586Z","type":"join"}
{"nick":"on3pk","message":"it looks very messy...","date":"2018-08-07T22:36:34.476Z","type":"message"}
{"nick":"apowers313","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T22:36:39.732Z","type":"quit"}
{"nick":"sterns","date":"2018-08-07T22:37:35.514Z","type":"join"}
{"nick":"jkridner","date":"2018-08-07T22:37:37.569Z","type":"join"}
{"nick":"neoshaman","date":"2018-08-07T22:37:51.507Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 244 seconds","date":"2018-08-07T22:38:59.611Z","type":"quit"}
{"nick":"duderonomy","reason":"Ping timeout: 240 seconds","date":"2018-08-07T22:40:35.491Z","type":"quit"}
{"nick":"duderonomy","date":"2018-08-07T22:41:15.504Z","type":"join"}
{"nick":"duderonomy","reason":"Client Quit","date":"2018-08-07T22:41:59.713Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-08-07T22:42:37.972Z","type":"quit"}
{"nick":"yehowyada","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-07T22:42:59.649Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-08-07T22:43:19.495Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-08-07T22:43:25.629Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-08-07T22:44:05.908Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-08-07T22:44:12.265Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-08-07T22:44:53.254Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-08-07T22:44:59.288Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-08-07T22:45:39.699Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-08-07T22:45:45.941Z","type":"quit"}
{"nick":"gloomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T22:46:03.072Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-08-07T22:46:26.769Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-08-07T22:47:10.090Z","type":"quit"}
{"nick":"chargen","reason":"Ping timeout: 240 seconds","date":"2018-08-07T22:48:22.261Z","type":"quit"}
{"nick":"supernov1h","message":"if you want to tidy it up, braces go on the same line as the if, space after the if, space before that brace, comma after value: d.value","date":"2018-08-07T22:49:14.552Z","type":"message"}
{"nick":"supernov1h","message":"also (!A && !B) is !(A | B)","date":"2018-08-07T22:49:57.581Z","type":"message"}
{"nick":"captain_morgan","reason":"Quit: Ex-Chat","date":"2018-08-07T22:50:02.444Z","type":"quit"}
{"nick":"captain_morgan","date":"2018-08-07T22:50:34.505Z","type":"join"}
{"nick":"leptonix","reason":"Quit: leaving","date":"2018-08-07T22:50:37.559Z","type":"quit"}
{"nick":"leptonix","date":"2018-08-07T22:51:10.604Z","type":"join"}
{"nick":"captain_morgan","reason":"Remote host closed the connection","date":"2018-08-07T22:51:20.762Z","type":"quit"}
{"nick":"captain_morgan_","date":"2018-08-07T22:52:11.497Z","type":"join"}
{"nick":"captain_morgan_","reason":"Remote host closed the connection","date":"2018-08-07T22:53:13.972Z","type":"quit"}
{"nick":"captain_morgan__","date":"2018-08-07T22:54:05.680Z","type":"join"}
{"nick":"gajus","message":"https://clinicjs.org/blog/introducing-bubbleprof/","date":"2018-08-07T22:54:28.411Z","type":"message"}
{"nick":"on3pk","message":"supernov1h, I also threw in some comments.  That helps me, personally, at least","date":"2018-08-07T22:54:29.414Z","type":"message"}
{"nick":"gajus","message":"This is really neat","date":"2018-08-07T22:54:32.535Z","type":"message"}
{"nick":"gajus","message":"I am still getting my head around it though","date":"2018-08-07T22:54:43.510Z","type":"message"}
{"nick":"on3pk","message":"bbiab...","date":"2018-08-07T22:55:02.318Z","type":"message"}
{"nick":"jphase","date":"2018-08-07T22:55:45.342Z","type":"join"}
{"nick":"scrptktty","reason":"Quit: Connection closed for inactivity","date":"2018-08-07T22:56:15.198Z","type":"quit"}
{"nick":"u0m3","date":"2018-08-07T22:56:36.738Z","type":"join"}
{"nick":"jesse","date":"2018-08-07T22:56:51.265Z","type":"join"}
{"nick":"jesse","reason":"K-Lined","date":"2018-08-07T22:56:53.656Z","type":"quit"}
{"nick":"captain_morgan__","reason":"Remote host closed the connection","date":"2018-08-07T22:57:09.736Z","type":"quit"}
{"nick":"captain_morgan","date":"2018-08-07T22:57:28.570Z","type":"join"}
{"nick":"jphase","reason":"Ping timeout: 240 seconds","date":"2018-08-07T22:59:51.362Z","type":"quit"}
{"nick":"romeoh","reason":"Ping timeout: 240 seconds","date":"2018-08-07T23:00:05.528Z","type":"quit"}
{"nick":"schneid3306","reason":"Quit: ZZZzzz…","date":"2018-08-07T23:00:16.708Z","type":"quit"}
{"nick":"varunest","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T23:00:48.714Z","type":"quit"}
{"nick":"akiva","reason":"Ping timeout: 240 seconds","date":"2018-08-07T23:03:35.476Z","type":"quit"}
{"nick":"Combinatorialist","date":"2018-08-07T23:04:37.380Z","type":"join"}
{"nick":"spacesuitdiver","date":"2018-08-07T23:04:55.875Z","type":"join"}
{"nick":"EyePulp","reason":"Remote host closed the connection","date":"2018-08-07T23:06:28.884Z","type":"quit"}
{"nick":"asteele","reason":"Read error: Connection reset by peer","date":"2018-08-07T23:06:59.160Z","type":"quit"}
{"nick":"asteele","date":"2018-08-07T23:07:33.686Z","type":"join"}
{"nick":"jkridner","reason":"Remote host closed the connection","date":"2018-08-07T23:09:48.316Z","type":"quit"}
{"nick":"chargen","date":"2018-08-07T23:10:58.524Z","type":"join"}
{"nick":"khrome","date":"2018-08-07T23:11:04.740Z","type":"join"}
{"nick":"wsieroci","date":"2018-08-07T23:11:36.920Z","type":"join"}
{"nick":"zava","reason":"Quit: WeeChat 2.2","date":"2018-08-07T23:12:30.452Z","type":"quit"}
{"nick":"jkridner","date":"2018-08-07T23:12:53.721Z","type":"join"}
{"nick":"horsey","date":"2018-08-07T23:13:22.934Z","type":"join"}
{"nick":"tristanp","reason":"Remote host closed the connection","date":"2018-08-07T23:15:29.947Z","type":"quit"}
{"nick":"kakashiAL","date":"2018-08-07T23:15:32.604Z","type":"join"}
{"nick":"jphase","date":"2018-08-07T23:15:34.748Z","type":"join"}
{"nick":"chargen","reason":"Ping timeout: 240 seconds","date":"2018-08-07T23:15:35.475Z","type":"quit"}
{"nick":"wsieroci","reason":"Ping timeout: 256 seconds","date":"2018-08-07T23:16:32.287Z","type":"quit"}
{"nick":"horsey","reason":"Ping timeout: 256 seconds","date":"2018-08-07T23:17:48.728Z","type":"quit"}
{"nick":"kakashiAL","reason":"Ping timeout: 240 seconds","date":"2018-08-07T23:19:35.510Z","type":"quit"}
{"nick":"orbyt_","date":"2018-08-07T23:19:49.256Z","type":"join"}
{"nick":"FunnyLookinHat","reason":"Remote host closed the connection","date":"2018-08-07T23:21:44.923Z","type":"quit"}
{"nick":"altab","date":"2018-08-07T23:21:57.763Z","type":"join"}
{"nick":"Akinator","date":"2018-08-07T23:22:01.668Z","type":"join"}
{"nick":"marthinal","date":"2018-08-07T23:27:38.355Z","type":"join"}
{"nick":"zava","date":"2018-08-07T23:29:37.374Z","type":"join"}
{"nick":"mezod","message":"what can it be that every time I run a pm2 command pm2 hangs up? memory?","date":"2018-08-07T23:31:08.651Z","type":"message"}
{"nick":"marthinal","reason":"Ping timeout: 240 seconds","date":"2018-08-07T23:31:51.382Z","type":"quit"}
{"nick":"notnull","date":"2018-08-07T23:40:32.808Z","type":"join"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2018-08-07T23:45:33.017Z","type":"quit"}
{"nick":"Singmyr","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T23:46:42.282Z","type":"quit"}
{"nick":"wrkrcoop","date":"2018-08-07T23:49:17.123Z","type":"join"}
{"nick":"duderonomy","date":"2018-08-07T23:49:36.752Z","type":"join"}
{"nick":"wrkrcoop","message":"hey. i created a cluster, now i want each child process to execute a callback … can i do that?","date":"2018-08-07T23:49:41.355Z","type":"message"}
{"nick":"traumschule","message":"is there a way to access deepl.com from the cli?","date":"2018-08-07T23:53:01.179Z","type":"message"}
{"nick":"ljharb","message":"traumschule: that's kind of specific to that website, not really a node question","date":"2018-08-07T23:53:34.384Z","type":"message"}
{"nick":"duderonomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-08-07T23:55:12.329Z","type":"quit"}
{"nick":"traumschule","message":"true, i thought somebody came up with something to access it easily. do you have a suggestion where this is better asked?","date":"2018-08-07T23:55:18.028Z","type":"message"}
{"nick":"ljharb","message":"traumschule: i'd probably ask that company directly","date":"2018-08-07T23:56:44.311Z","type":"message"}
{"nick":"khrome","reason":"Quit: khrome","date":"2018-08-07T23:57:25.954Z","type":"quit"}
{"nick":"Caspinol","date":"2018-08-07T23:58:15.619Z","type":"join"}
{"nick":"Sharaal","date":"2018-08-07T23:58:57.330Z","type":"join"}
{"nick":"traumschule","message":"they offered an api key but not anymore, so one needs access the web interface and execute the js","date":"2018-08-07T23:59:26.158Z","type":"message"}
