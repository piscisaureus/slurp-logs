{"nick":"Arcarc","reason":"Ping timeout: 246 seconds","date":"2018-03-16T00:42:34.379Z","type":"quit"}
{"nick":"samgoody","date":"2018-03-16T03:45:25.199Z","type":"join"}
{"nick":"samgoody","reason":"Quit: Leaving.","date":"2018-03-16T04:29:58.742Z","type":"quit"}
{"nick":"markh","date":"2018-03-16T04:30:01.819Z","type":"join"}
{"nick":"Roughy","reason":"Quit: Meadow Fresh milk","date":"2018-03-16T05:06:25.287Z","type":"quit"}
{"nick":"Avinash","date":"2018-03-16T05:22:52.332Z","type":"join"}
{"nick":"Avinash_","date":"2018-03-16T05:44:49.411Z","type":"join"}
{"nick":"Avinash","reason":"Ping timeout: 260 seconds","date":"2018-03-16T05:45:09.360Z","type":"quit"}
{"nick":"Avinash","date":"2018-03-16T06:16:05.925Z","type":"join"}
{"nick":"Avinash_","reason":"Ping timeout: 264 seconds","date":"2018-03-16T06:17:45.342Z","type":"quit"}
{"nick":"lpin","date":"2018-03-16T06:22:36.295Z","type":"join"}
{"nick":"Avinash","reason":"Ping timeout: 268 seconds","date":"2018-03-16T06:35:45.745Z","type":"quit"}
{"nick":"Avinash","date":"2018-03-16T06:38:17.890Z","type":"join"}
{"nick":"Avinash_","date":"2018-03-16T06:42:33.663Z","type":"join"}
{"nick":"Avinash","reason":"Ping timeout: 248 seconds","date":"2018-03-16T06:44:49.562Z","type":"quit"}
{"nick":"Avinash_","reason":"Ping timeout: 246 seconds","date":"2018-03-16T06:47:57.971Z","type":"quit"}
{"nick":"Avinash","date":"2018-03-16T07:14:26.782Z","type":"join"}
{"nick":"Avinash","reason":"Ping timeout: 248 seconds","date":"2018-03-16T07:18:57.425Z","type":"quit"}
{"nick":"Avinash","date":"2018-03-16T07:19:23.194Z","type":"join"}
{"nick":"Avinash","reason":"Ping timeout: 246 seconds","date":"2018-03-16T07:24:43.012Z","type":"quit"}
{"nick":"markh","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-16T07:58:53.434Z","type":"quit"}
{"nick":"lpin","reason":"Read error: Connection reset by peer","date":"2018-03-16T07:59:39.706Z","type":"quit"}
{"nick":"Guest72943","new_nick":"towb","date":"2018-03-16T08:00:24.714Z","type":"nick"}
{"nick":"Arcarc","date":"2018-03-16T08:42:50.298Z","type":"join"}
{"nick":"Avinash","date":"2018-03-16T09:18:56.163Z","type":"join"}
{"nick":"Avinash","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-16T09:33:15.128Z","type":"quit"}
{"nick":"inara`","reason":"Quit: Leaving","date":"2018-03-16T09:57:21.353Z","type":"quit"}
{"nick":"inara","date":"2018-03-16T10:00:35.801Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-16T10:25:12.085Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-16T10:25:41.437Z","type":"join"}
{"nick":"Avinash","date":"2018-03-16T10:53:37.313Z","type":"join"}
{"nick":"Avinash","reason":"Client Quit","date":"2018-03-16T10:57:20.209Z","type":"quit"}
{"nick":"Avinash","date":"2018-03-16T11:08:13.784Z","type":"join"}
{"nick":"lpin","date":"2018-03-16T11:16:28.189Z","type":"join"}
{"nick":"Avinash_","date":"2018-03-16T11:21:57.248Z","type":"join"}
{"nick":"Avinash","reason":"Ping timeout: 240 seconds","date":"2018-03-16T11:22:27.810Z","type":"quit"}
{"nick":"Avinash","date":"2018-03-16T11:32:08.048Z","type":"join"}
{"nick":"Avinash_","reason":"Ping timeout: 260 seconds","date":"2018-03-16T11:32:49.303Z","type":"quit"}
{"nick":"galileo_","reason":"Remote host closed the connection","date":"2018-03-16T11:33:48.859Z","type":"quit"}
{"nick":"Avinash_","date":"2018-03-16T11:43:53.060Z","type":"join"}
{"nick":"Avinash","reason":"Ping timeout: 252 seconds","date":"2018-03-16T11:44:21.272Z","type":"quit"}
{"nick":"Avinash","date":"2018-03-16T11:48:36.313Z","type":"join"}
{"nick":"Avinash_","reason":"Ping timeout: 265 seconds","date":"2018-03-16T11:48:42.458Z","type":"quit"}
{"nick":"plp676","date":"2018-03-16T12:25:35.298Z","type":"join"}
{"nick":"plp676","reason":"Remote host closed the connection","date":"2018-03-16T12:25:36.422Z","type":"quit"}
{"nick":"Avinash","reason":"Ping timeout: 246 seconds","date":"2018-03-16T12:27:07.051Z","type":"quit"}
{"nick":"Avinash_","date":"2018-03-16T12:27:16.875Z","type":"join"}
{"nick":"gloomy","date":"2018-03-16T12:30:34.130Z","type":"join"}
{"nick":"gloomy","message":"Hello","date":"2018-03-16T12:30:46.997Z","type":"message"}
{"nick":"gloomy","message":"Say I have some page that allows adding a comment.","date":"2018-03-16T12:31:16.244Z","type":"message"}
{"nick":"gloomy","message":"What is in your opinion the best way to handle server-side validation?","date":"2018-03-16T12:31:33.407Z","type":"message"}
{"nick":"gloomy","message":"In the mdsn intro they show something like:","date":"2018-03-16T12:32:11.090Z","type":"message"}
{"nick":"gloomy","message":"if (!errors.isEmpty()) {","date":"2018-03-16T12:32:40.151Z","type":"message"}
{"nick":"gloomy","message":"      res.render('page', { title: 'Page title',data: data, errors: errors.array()});","date":"2018-03-16T12:32:40.344Z","type":"message"}
{"nick":"gloomy","message":" }","date":"2018-03-16T12:32:42.192Z","type":"message"}
{"nick":"gloomy","message":"But that seems rather cumbersome for larger pages where the adding of a comment is only a minor part (it means re-sending the whole page)","date":"2018-03-16T12:33:29.562Z","type":"message"}
{"nick":"commma","message":"in that case you'd make an ajax request to the server and re-render the portion of the page","date":"2018-03-16T12:34:10.065Z","type":"message"}
{"nick":"gloomy","message":"So how would that look like server-side?","date":"2018-03-16T12:35:35.420Z","type":"message"}
{"nick":"gloomy","message":"res.send(... response containing the error array)  ?","date":"2018-03-16T12:36:02.867Z","type":"message"}
{"nick":"commma","message":"it depends on how you do things on the clientside, but if you talk to the server in json then `res.json({data, errors})`","date":"2018-03-16T12:37:03.405Z","type":"message"}
{"nick":"gloomy","message":"for now I'm just using the form submit button with no client-side javascript ( form(action='/url' method='POST' )","date":"2018-03-16T12:38:23.591Z","type":"message"}
{"nick":"gloomy","message":"What would you suggest instead?","date":"2018-03-16T12:38:41.024Z","type":"message"}
{"nick":"commma","message":"honestly i'd recommend just re-rendering the page rather than getting into all of this :v","date":"2018-03-16T12:39:04.896Z","type":"message"}
{"nick":"commma","message":"but if you want, you can hook into the `submit` even on the form and send it off yourself and catch the response and re-render the parts of the page you need as you need","date":"2018-03-16T12:39:28.787Z","type":"message"}
{"nick":"gloomy","message":"something like an onSubmit function with fetch(// post at url etc).then(//populate the form with the received errors) ?","date":"2018-03-16T12:40:17.342Z","type":"message"}
{"nick":"commma","message":"yep","date":"2018-03-16T12:41:26.815Z","type":"message"}
{"nick":"gloomy","message":"Ok, will try that out. Thanks for the tips :)","date":"2018-03-16T12:42:02.173Z","type":"message"}
{"nick":"commma","message":"np","date":"2018-03-16T12:42:19.985Z","type":"message"}
{"nick":"gloomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-16T12:46:06.890Z","type":"quit"}
{"nick":"gloomy","date":"2018-03-16T12:48:36.338Z","type":"join"}
{"nick":"gloomy","reason":"Read error: Connection reset by peer","date":"2018-03-16T12:56:53.725Z","type":"quit"}
{"nick":"Avinash_","new_nick":"Avinash","date":"2018-03-16T12:59:29.802Z","type":"nick"}
{"nick":"gloomy","date":"2018-03-16T13:01:26.820Z","type":"join"}
{"nick":"gloomy","message":"Little question more as I don't really seem to find a best practice for it (said every web-developer ever), how would you include client-side javascript in an express app (with pug as template engine)?","date":"2018-03-16T13:05:35.547Z","type":"message"}
{"nick":"gloomy","message":"include tag in the pug template?","date":"2018-03-16T13:06:08.125Z","type":"message"}
{"nick":"gloomy","message":"*script tag, not include","date":"2018-03-16T13:10:10.735Z","type":"message"}
{"nick":"commma","message":"yep","date":"2018-03-16T13:17:20.428Z","type":"message"}
{"nick":"Avinash_","date":"2018-03-16T13:22:56.909Z","type":"join"}
{"nick":"Avinash","reason":"Ping timeout: 276 seconds","date":"2018-03-16T13:23:05.801Z","type":"quit"}
{"nick":"Avinash","date":"2018-03-16T13:29:12.774Z","type":"join"}
{"nick":"Avinash_","reason":"Ping timeout: 260 seconds","date":"2018-03-16T13:31:49.296Z","type":"quit"}
{"nick":"Avinash","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-16T14:41:56.541Z","type":"quit"}
{"nick":"greggerz","date":"2018-03-16T14:41:59.334Z","type":"join"}
{"nick":"gloomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-16T14:46:55.390Z","type":"quit"}
{"nick":"gloomy","date":"2018-03-16T15:00:15.358Z","type":"join"}
{"nick":"Roughy","date":"2018-03-16T15:13:32.029Z","type":"join"}
{"nick":"Arcarcarc","date":"2018-03-16T15:41:16.277Z","type":"join"}
{"nick":"Arcarc","reason":"Ping timeout: 260 seconds","date":"2018-03-16T15:45:24.308Z","type":"quit"}
{"nick":"bengl_","date":"2018-03-16T15:55:26.458Z","type":"join"}
{"nick":"jakutis","date":"2018-03-16T15:57:39.812Z","type":"join"}
{"nick":"jakutis_","reason":"*.net *.split","date":"2018-03-16T16:03:01.990Z","type":"quit"}
{"nick":"bengl","reason":"*.net *.split","date":"2018-03-16T16:03:04.229Z","type":"quit"}
{"nick":"bengl_","new_nick":"bengl","date":"2018-03-16T16:03:07.222Z","type":"nick"}
{"nick":"Arcarcarc","reason":"Ping timeout: 264 seconds","date":"2018-03-16T16:30:57.212Z","type":"quit"}
{"nick":"gloomy","message":"I'm confused again :)","date":"2018-03-16T16:51:28.406Z","type":"message"}
{"nick":"gloomy","message":"Why is it that when I send a response to a 'post' request (`res.json({'message': 'hello'})`), my browser displays a new page with the json response instead of calling what's inside the fetch(...).then((res)=>{...}) function?","date":"2018-03-16T16:53:09.227Z","type":"message"}
{"nick":"hillct","message":"Is there a way to inject a bodyParser within a middleware method for a particular route, rather than setting it up using app.use() before routes are parsed?","date":"2018-03-16T16:58:06.845Z","type":"message"}
{"nick":"hillct","message":"In my case, I’d like to be able to use the raw body parser ONLY in the case of a specific (my own) middlware call","date":"2018-03-16T16:58:50.860Z","type":"message"}
{"nick":"commma","message":"gloomy: that's an issue with your clientside js","date":"2018-03-16T17:26:29.491Z","type":"message"}
{"nick":"commma","message":"hillct: of course, just use multer or something and use it as middleware","date":"2018-03-16T17:26:58.399Z","type":"message"}
{"nick":"hillct","message":"commma: I’m specifically interested in using body-parser.raw(). I can really just call it from within my own middleware method?","date":"2018-03-16T17:30:05.019Z","type":"message"}
{"nick":"hillct","message":"or would I need to add it as a callback in app.post(‘/my/route/here’,bodyParser.raw(bla bla bla),MyOtherMiddlewareHere());","date":"2018-03-16T17:31:20.616Z","type":"message"}
{"nick":"commma","message":"hillct: yeah the second way is how i'd do it","date":"2018-03-16T17:32:29.303Z","type":"message"}
{"nick":"hillct","message":"commma: neat that it can work, but I’m going for code clenliness. If I provide me own middleware, I’d rather not have to instruct users to call it with the bodyPerser.raw() call preceeding it in the route setup. I guess I can call it within my own middleware method, passing req, res, and defining my middleare content as the next() callback method","date":"2018-03-16T17:34:55.446Z","type":"message"}
{"nick":"hillct","message":"does that sound sane, or am I missing something?","date":"2018-03-16T17:35:11.774Z","type":"message"}
{"nick":"humanBird_","date":"2018-03-16T18:09:52.006Z","type":"join"}
{"nick":"humanBird_","date":"2018-03-16T18:10:28.207Z","type":"part"}
{"nick":"Arcarc","date":"2018-03-16T18:40:16.359Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-03-16T18:42:28.791Z","type":"quit"}
{"nick":"Arcarc","reason":"Ping timeout: 260 seconds","date":"2018-03-16T18:47:24.356Z","type":"quit"}
{"nick":"Ryuno-Ki[m]","message":"> honestly i'd recommend just re-rendering the page rather than getting into all of this :v","date":"2018-03-16T18:56:15.707Z","type":"message"}
{"nick":"Ryuno-Ki[m]","message":"gloomy: That would be my advise as well. You could move the validation logic into a separate method and consume it in both, the request handler of the form (with page re-render) and ReST endpoint (with fetch and replacing of small bit of page).","date":"2018-03-16T18:56:16.400Z","type":"message"}
{"nick":"Ryuno-Ki[m]","message":"That would be progressive enhancement.","date":"2018-03-16T18:56:17.091Z","type":"message"}
{"nick":"gloomy","reason":"Ping timeout: 264 seconds","date":"2018-03-16T19:00:57.231Z","type":"quit"}
{"nick":"samgoody","date":"2018-03-16T19:09:16.292Z","type":"join"}
{"nick":"samgoody","reason":"Quit: Leaving.","date":"2018-03-16T19:35:09.693Z","type":"quit"}
{"nick":"Arcarc","date":"2018-03-16T19:40:42.382Z","type":"join"}
{"nick":"Arcarc","reason":"Ping timeout: 264 seconds","date":"2018-03-16T19:49:34.351Z","type":"quit"}
{"nick":"hillct","message":"IF I wanted to run the raw bodyPerser arbitrarily inside my own code, could I call it this way and expect it to work? require(‘body-parser’).raw({type: \"application/json”})(req,res,function(){  // My own middleware code here in effectively next() callback });","date":"2018-03-16T19:56:27.684Z","type":"message"}
{"nick":"commma","message":"hillct: you could, but why? just do `router.post('/here', bodyParser, (req, res, next) => {yourCode})`","date":"2018-03-16T20:00:18.523Z","type":"message"}
{"nick":"hillct","message":"commma: my code is structured such that I want my middleware to be self-contained. Code clenliness prevents me from adjusting the routes, in order to make my middleware sufficiently portable","date":"2018-03-16T20:02:46.050Z","type":"message"}
{"nick":"commma","message":"that's ... a little silly, how about you just export a router instance or something","date":"2018-03-16T20:03:27.740Z","type":"message"}
{"nick":"commma","message":"routers can be mounted on more routers all the way down","date":"2018-03-16T20:03:33.772Z","type":"message"}
{"nick":"commma","message":"`const routes = router.post(bodyParser, yourCode); router.post('/here', routes)`","date":"2018-03-16T20:04:03.005Z","type":"message"}
{"nick":"commma","message":"much cleaner","date":"2018-03-16T20:04:13.018Z","type":"message"}
{"nick":"hillct","message":"from within my code? ie, after the target request has been made?","date":"2018-03-16T20:04:58.752Z","type":"message"}
{"nick":"hillct","message":"or as part of the setup, such that I have to maintain more lifecycle elements in my middleware?","date":"2018-03-16T20:05:45.198Z","type":"message"}
{"nick":"commma","message":"i'm confused just what you're trying to do here and why, do you have any example?","date":"2018-03-16T20:06:39.509Z","type":"message"}
{"nick":"hillct","message":"not in a publically accessible place, but what I’m trying to avoid is requiring a user of my middleware to call body-perser.raw() before using my middleware. I’d rather they call just my middleware, and body-Perser.raw() is simply run behind the scenes. Alternatively, I can perform operations to simulate body-parser, but I’d rather use it directly, in order to avoid introduction of future incompatibility","date":"2018-03-16T20:10:24.861Z","type":"message"}
{"nick":"hillct","message":"I’ll publish something shortly, maybe tomorrow, but I wanted to solve this first","date":"2018-03-16T20:10:57.608Z","type":"message"}
{"nick":"commma","message":"well everything is middleware so you can just handle it however you want then","date":"2018-03-16T20:11:53.664Z","type":"message"}
{"nick":"commma","message":"though you have to watch out, that if somebody uses a different type of body parser before you use yours","date":"2018-03-16T20:12:09.910Z","type":"message"}
{"nick":"commma","message":"they'll already consume the parts of the request you want","date":"2018-03-16T20:12:23.118Z","type":"message"}
{"nick":"hillct","message":"right. This is why I want to stick to using the core Express raw perser","date":"2018-03-16T20:12:43.479Z","type":"message"}
{"nick":"hillct","message":"which would assure compatibility","date":"2018-03-16T20:13:13.523Z","type":"message"}
{"nick":"gloomy","date":"2018-03-16T20:17:24.459Z","type":"join"}
{"nick":"samgoody","date":"2018-03-16T20:42:43.756Z","type":"join"}
{"nick":"rorro","date":"2018-03-16T21:24:36.477Z","type":"join"}
{"nick":"greggerz","reason":"Quit: Leaving","date":"2018-03-16T21:37:17.880Z","type":"quit"}
{"nick":"Roughy","reason":"*.net *.split","date":"2018-03-16T22:07:24.317Z","type":"quit"}
{"nick":"Roughy","date":"2018-03-16T22:07:52.842Z","type":"join"}
{"nick":"samgoody","reason":"Quit: Leaving.","date":"2018-03-16T22:39:52.176Z","type":"quit"}
{"nick":"galileo_","date":"2018-03-16T23:15:20.443Z","type":"join"}
