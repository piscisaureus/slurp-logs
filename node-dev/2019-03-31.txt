{"nick":"gajus","reason":"Quit: Connection closed for inactivity","date":"2019-03-31T00:55:59.008Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T01:02:32.432Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-03-31T01:06:52.316Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T01:28:31.136Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-03-31T01:33:10.029Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-03-31T01:50:05.156Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T01:52:34.359Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-03-31T01:57:04.728Z","type":"quit"}
{"nick":"shree","date":"2019-03-31T03:45:44.997Z","type":"join"}
{"nick":"shree","reason":"Remote host closed the connection","date":"2019-03-31T03:46:04.424Z","type":"quit"}
{"nick":"shree","date":"2019-03-31T03:46:40.192Z","type":"join"}
{"nick":"zsoc","reason":"Ping timeout: 250 seconds","date":"2019-03-31T03:52:12.837Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-03-31T04:07:59.005Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T04:34:26.080Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-03-31T04:39:01.019Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T04:52:42.121Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-03-31T04:57:03.013Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T05:12:42.642Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-03-31T05:17:07.117Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T05:31:05.992Z","type":"join"}
{"nick":"lpin","date":"2019-03-31T05:58:55.572Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-03-31T06:33:24.786Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T06:45:32.632Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-03-31T06:50:02.132Z","type":"quit"}
{"nick":"kriskropd","reason":"Read error: Connection reset by peer","date":"2019-03-31T07:56:00.871Z","type":"quit"}
{"nick":"kriskropd","date":"2019-03-31T07:57:24.643Z","type":"join"}
{"nick":"dbevenius","date":"2019-03-31T08:36:51.164Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-03-31T08:41:07.051Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T08:54:27.353Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-03-31T08:58:40.622Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T09:12:47.891Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-03-31T09:17:07.250Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T10:12:58.868Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-03-31T10:17:07.118Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T10:32:57.248Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-03-31T10:37:22.795Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T10:52:59.311Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-03-31T10:57:26.065Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-03-31T11:04:14.676Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T12:09:10.426Z","type":"join"}
{"nick":"mgol","date":"2019-03-31T12:21:12.074Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-03-31T13:10:28.307Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T13:23:51.124Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-03-31T13:28:24.037Z","type":"quit"}
{"nick":"gajus_","date":"2019-03-31T13:35:25.318Z","type":"join"}
{"nick":"gajus_","reason":"Client Quit","date":"2019-03-31T13:37:10.518Z","type":"quit"}
{"nick":"gajus_","date":"2019-03-31T13:37:37.240Z","type":"join"}
{"nick":"gajus_","new_nick":"gajus","date":"2019-03-31T13:38:19.965Z","type":"nick"}
{"nick":"julianduque","date":"2019-03-31T13:40:46.810Z","type":"join"}
{"nick":"dbevenius","date":"2019-03-31T13:42:07.462Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-03-31T13:46:22.265Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T14:04:49.869Z","type":"join"}
{"nick":"dbevenius","reason":"Read error: Connection reset by peer","date":"2019-03-31T14:07:37.685Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T14:07:57.168Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-03-31T14:42:45.044Z","type":"quit"}
{"nick":"loco41211","date":"2019-03-31T14:57:42.284Z","type":"join"}
{"nick":"loco41211","reason":"\"Leaving\"","date":"2019-03-31T15:04:09.205Z","type":"part"}
{"nick":"zsoc","date":"2019-03-31T15:17:28.291Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-03-31T15:33:09.055Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T15:43:08.321Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-03-31T15:47:38.883Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T16:04:18.173Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-03-31T16:08:34.049Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T17:12:21.112Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-03-31T17:16:49.024Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T17:28:44.460Z","type":"join"}
{"nick":"al-damiri","date":"2019-03-31T18:23:58.317Z","type":"join"}
{"nick":"zeds","date":"2019-03-31T18:26:50.981Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-03-31T18:28:22.478Z","type":"quit"}
{"nick":"zeds","date":"2019-03-31T18:35:56.706Z","type":"part"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-03-31T18:42:38.005Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T18:57:01.209Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-03-31T19:01:58.738Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T19:33:17.237Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-03-31T19:37:44.858Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T19:46:06.055Z","type":"join"}
{"nick":"devsnek","message":"is it too late to remove Atomics.wake for v12","date":"2019-03-31T19:58:05.937Z","type":"message"}
{"nick":"AtumT","date":"2019-03-31T20:09:03.349Z","type":"join"}
{"nick":"joyee","message":"addaleax hi, are you around?","date":"2019-03-31T20:21:32.574Z","type":"message"}
{"nick":"kriskropd","reason":"Quit: kriskropd","date":"2019-03-31T20:34:05.281Z","type":"quit"}
{"nick":"joyee","message":"devsnek: I though it was already removed? I saw a patch removing it a while back","date":"2019-03-31T20:35:11.268Z","type":"message"}
{"nick":"devsnek","message":"joyee: its still in master","date":"2019-03-31T20:35:30.532Z","type":"message"}
{"nick":"devsnek","message":"v8 7.4 at least","date":"2019-03-31T20:35:47.607Z","type":"message"}
{"nick":"joyee","message":"devsnek: 7.4 is probably about 3 months old...so yeah makes sense","date":"2019-03-31T20:35:56.649Z","type":"message"}
{"nick":"devsnek","message":"actually","date":"2019-03-31T20:36:22.382Z","type":"message"}
{"nick":"devsnek","message":"v8 master still installs Atomics.wake","date":"2019-03-31T20:36:29.430Z","type":"message"}
{"nick":"joyee","message":"um, right, I think the patch I saw is wasm-only, the JS side still installs it","date":"2019-03-31T20:38:07.069Z","type":"message"}
{"nick":"joyee","message":"I think it should be safe to just remove it in 12 though, but the cutoff has passed","date":"2019-03-31T20:39:31.784Z","type":"message"}
{"nick":"addaleax","message":"joyee: hi – yup i am around :)","date":"2019-03-31T20:40:18.035Z","type":"message"}
{"nick":"joyee","message":"addaleax: so, if I move a class up in the hierarchy (there's no additional data memebers or virtual stuff), does that break ABI at all? For example, C used to inherit from A, now I make it inherit from B which also inherits from A, so C is now a grandchild instead of a direct child","date":"2019-03-31T20:41:55.954Z","type":"message"}
{"nick":"addaleax","message":"joyee: it breaks ABI if and only if B has data fields or introduces new virtual methods, I think","date":"2019-03-31T20:42:34.066Z","type":"message"}
{"nick":"addaleax","message":"at least if C is part of the ABI","date":"2019-03-31T20:42:58.621Z","type":"message"}
{"nick":"joyee","message":"addaleax: yeah, that's what I figured as well, just want to confirm because all the guides I can find just vaguely say \"changing class hierarchy breaks ABI\" but I see no reason why.","date":"2019-03-31T20:43:29.842Z","type":"message"}
{"nick":"joyee","message":"Thanks!","date":"2019-03-31T20:43:33.493Z","type":"message"}
{"nick":"addaleax","message":"np :) i also don’t know this for sure, but i’m basically on the same page – i see no reason why it would change anything","date":"2019-03-31T20:44:41.371Z","type":"message"}
{"nick":"joyee","message":"addaleax: for context, C is v8::Private, and B is v8::Value. For some weird reasons, v8::Private is a merely v8::Data, but the internal hierarchy does not have that limitation at all. It's probably not too late to change it before 7.6, so we can get Array of private names.","date":"2019-03-31T20:46:56.427Z","type":"message"}
{"nick":"addaleax","message":"joyee: yeah okay, all the V8 handle classes don’t have any fields at all anyway, so they’re just raw pointers in the end … this really shouldn’t make a difference","date":"2019-03-31T20:47:46.745Z","type":"message"}
{"nick":"joyee","message":"s/B is v8::Value/A is../","date":"2019-03-31T20:47:51.212Z","type":"message"}
{"nick":"joyee","message":"oh wait, A is Data, now I am just confused","date":"2019-03-31T20:48:15.124Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-03-31T20:48:22.224Z","type":"quit"}
{"nick":"addaleax","message":"i think i know what you mean :)","date":"2019-03-31T20:56:32.490Z","type":"message"}
{"nick":"addaleax","message":"i’m not exactly sure what you have in mind, but this might still break API rather than ABI","date":"2019-03-31T20:56:59.662Z","type":"message"}
{"nick":"dbevenius","date":"2019-03-31T21:03:14.539Z","type":"join"}
{"nick":"joyee","message":"addaleax: yeah, but I suppose it's not really breaking a lot since it's only moving a class one level up in the hierarchy? At least the API tests are all happy about it.","date":"2019-03-31T21:05:49.316Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-03-31T21:07:33.291Z","type":"quit"}
{"nick":"joyee","message":"addaleax: WIP is in https://chromium-review.googlesource.com/c/v8/v8/+/1546559 BTW, if you are interested in taking a look :) I plan to send it out next week, after I get off the plane","date":"2019-03-31T21:11:04.444Z","type":"message"}
{"nick":"mgol","date":"2019-03-31T21:11:53.407Z","type":"join"}
{"nick":"devsnek","message":"joyee: is this a flake? https://ci.nodejs.org/job/node-test-commit-linux/26590/nodes=ubuntu1804-64/testReport/junit/(root)/test/sequential_test_fs_readfile_tostring_fail/","date":"2019-03-31T21:12:42.960Z","type":"message"}
{"nick":"addaleax","message":"joyee: I think that that’s not breaking API or ABI, but the V8 API has so far been rather strict about v8::Value only representing JS values… like, by making it a Value you could actually expose it to JS, I think? I’m not sure if that’s intended :/","date":"2019-03-31T21:13:04.126Z","type":"message"}
{"nick":"addaleax","message":"although I guess v8::External might also be counted as an exception to that rule","date":"2019-03-31T21:13:17.106Z","type":"message"}
{"nick":"devsnek","message":"also about v8::Private","date":"2019-03-31T21:13:21.162Z","type":"message"}
{"nick":"devsnek","message":"it was done this way because there was/is uncertainty about private representation within the language itself","date":"2019-03-31T21:13:48.187Z","type":"message"}
{"nick":"joyee","message":"addaleax: yeah, that makes sense to me as well. I'll check with Sathya","date":"2019-03-31T21:14:24.917Z","type":"message"}
{"nick":"devsnek","message":"i won't say i haven't memcpy'd a Local<Private> into a Local<Symbol> though","date":"2019-03-31T21:14:29.880Z","type":"message"}
{"nick":"joyee","message":"(Sathya = the person who implemented private fields)","date":"2019-03-31T21:15:04.240Z","type":"message"}
{"nick":"devsnek","message":"private being a symbol is basically an implementation detail atm","date":"2019-03-31T21:15:47.976Z","type":"message"}
{"nick":"joyee","message":"devsnek: I think it's probably going to stay for a while, at least for private fields. But either way, in the spec those are represented as PrivateNames which are some kind of internal values so it makes sense to expose that concept in API.","date":"2019-03-31T21:17:43.351Z","type":"message"}
{"nick":"devsnek","message":"in the c++ api sure, but once they get into js land they're symbols","date":"2019-03-31T21:18:05.888Z","type":"message"}
{"nick":"devsnek","message":"which is problematic","date":"2019-03-31T21:18:09.641Z","type":"message"}
{"nick":"joyee","message":"We just need to make sure they are not exposed to user land as symbols then","date":"2019-03-31T21:18:53.370Z","type":"message"}
{"nick":"devsnek","message":"we aren't the only consumers of v8 though","date":"2019-03-31T21:19:05.911Z","type":"message"}
{"nick":"devsnek","message":"perhaps GetPrivateNames should be GetPrivateEntries","date":"2019-03-31T21:19:31.756Z","type":"message"}
{"nick":"devsnek","message":"which just gives string names and the values","date":"2019-03-31T21:19:41.654Z","type":"message"}
{"nick":"devsnek","message":"or something like that","date":"2019-03-31T21:19:47.707Z","type":"message"}
{"nick":"devsnek","message":"i should probably comment this all on the cl","date":"2019-03-31T21:20:16.513Z","type":"message"}
{"nick":"joyee","message":"devsnek: yeah, I thought about that as well, but not sure if that's enough for our use cases","date":"2019-03-31T21:20:46.453Z","type":"message"}
{"nick":"devsnek","message":"our use case is util.inspect right?","date":"2019-03-31T21:21:00.465Z","type":"message"}
{"nick":"joyee","message":"devsnek: yep, at least that's what I can think of at the moment","date":"2019-03-31T21:21:36.536Z","type":"message"}
{"nick":"devsnek","message":"GetPrivateEntires should be enough for that","date":"2019-03-31T21:21:57.301Z","type":"message"}
{"nick":"devsnek","message":"i can write something up if you want","date":"2019-03-31T21:22:03.389Z","type":"message"}
{"nick":"joyee","message":"devsnek: I think I can just copy code from value mirrors","date":"2019-03-31T21:24:01.278Z","type":"message"}
{"nick":"devsnek","message":"👍","date":"2019-03-31T21:24:09.092Z","type":"message"}
{"nick":"joyee","message":"(or just DRY the code)","date":"2019-03-31T21:25:57.383Z","type":"message"}
{"nick":"devsnek","message":"i think there's a JSObject::GetEntries","date":"2019-03-31T21:27:24.899Z","type":"message"}
{"nick":"dbevenius","date":"2019-03-31T21:27:31.424Z","type":"join"}
{"nick":"joyee","message":"devsnek: I believe the inspector support for the private names are mostly written from scratch other than one property filter. I gave it a try a while back and was stuck on enum combinations, Sathya solved it with PRIVATE_NAMES_ONLY","date":"2019-03-31T21:30:28.404Z","type":"message"}
{"nick":"joyee","message":"But it does not respect conversions at the moment, and does not have support to filter out private names added by outer classes","date":"2019-03-31T21:31:08.078Z","type":"message"}
{"nick":"joyee","message":"The current implementation is good enough for devtools anyway, I was overthinking","date":"2019-03-31T21:31:24.321Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-03-31T21:31:52.363Z","type":"quit"}
{"nick":"devsnek","message":"joyee: can we use v8::debug things in node code?","date":"2019-03-31T21:42:57.255Z","type":"message"}
{"nick":"joyee","message":"devsnek: Although...I believe some APIs for getting the bare privates will have to be added in the end in order to support modifications in DevTools. Probably possible to just live under `v8::debug` though","date":"2019-03-31T21:43:10.047Z","type":"message"}
{"nick":"devsnek","message":"v8::debug::GetPrivateProperties seems to return an array of name, value, name, value","date":"2019-03-31T21:43:14.401Z","type":"message"}
{"nick":"joyee","message":"devsnek: I don't think so? Are they even exposed to us?","date":"2019-03-31T21:44:20.584Z","type":"message"}
{"nick":"devsnek","message":"i dunno","date":"2019-03-31T21:44:25.015Z","type":"message"}
{"nick":"devsnek","message":"its defined in api.cc so i think maybe","date":"2019-03-31T21:44:34.138Z","type":"message"}
{"nick":"joyee","message":"devsnek: it's in src/debug.h","date":"2019-03-31T21:45:00.308Z","type":"message"}
{"nick":"joyee","message":"src/debug/debug.h","date":"2019-03-31T21:45:06.154Z","type":"message"}
{"nick":"devsnek","message":"implemented in api.cc","date":"2019-03-31T21:45:14.213Z","type":"message"}
{"nick":"dbevenius","date":"2019-03-31T21:45:24.815Z","type":"join"}
{"nick":"joyee","message":"devsnek: yeah..probably that's only for convinience, like how we used to put everything in node.cc","date":"2019-03-31T21:45:53.445Z","type":"message"}
{"nick":"devsnek","message":"ugh ok","date":"2019-03-31T21:46:00.460Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-03-31T21:49:58.045Z","type":"quit"}
{"nick":"dbevenius","date":"2019-03-31T22:05:46.249Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-03-31T22:07:35.967Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-03-31T22:12:31.990Z","type":"quit"}
{"nick":"joyee","message":"devsnek: alright, I've updated https://chromium-review.googlesource.com/c/v8/v8/+/1546559 to be less transparent, probably won't dry the code unless the reviewers want me to","date":"2019-03-31T23:13:37.500Z","type":"message"}
{"nick":"devsnek","message":"joyee: v8 adds the `#` to the description when it creates the name?","date":"2019-03-31T23:15:28.449Z","type":"message"}
{"nick":"joyee","message":"devsnek: yep","date":"2019-03-31T23:15:35.670Z","type":"message"}
{"nick":"devsnek","message":"then this seems 👌","date":"2019-03-31T23:15:43.269Z","type":"message"}
{"nick":"joyee","message":"devsnek: fun fact: they currently tell if a variable is private by checking the first character even after building AST","date":"2019-03-31T23:16:24.392Z","type":"message"}
{"nick":"devsnek","message":"aaaaaaaaaaa","date":"2019-03-31T23:16:32.270Z","type":"message"}
{"nick":"devsnek","message":"don't tell me things like that","date":"2019-03-31T23:16:35.220Z","type":"message"}
{"nick":"joyee","message":"Did I unleash zalgo on you?","date":"2019-03-31T23:16:56.710Z","type":"message"}
{"nick":"devsnek","message":"it would seem so :(","date":"2019-03-31T23:17:16.325Z","type":"message"}
{"nick":"joyee","message":"oops, sorry","date":"2019-03-31T23:18:05.851Z","type":"message"}
