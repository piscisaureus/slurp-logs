{"nick":"zeds","reason":"Read error: Connection reset by peer","date":"2018-06-09T02:02:03.288Z","type":"quit"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 260 seconds","date":"2018-06-09T03:09:40.592Z","type":"quit"}
{"nick":"ChALkeR","reason":"Ping timeout: 260 seconds","date":"2018-06-09T03:16:05.575Z","type":"quit"}
{"nick":"devsnek","message":"does napi freak out if it doesn't recognize the type of arguments","date":"2018-06-09T03:40:26.667Z","type":"message"}
{"nick":"devsnek","message":"i wanted to add some bigint stuff by manually casting to v8::Value when needed but napi just does invalid arguments when i call the exported function :(","date":"2018-06-09T03:40:55.691Z","type":"message"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-06-09T04:39:21.501Z","type":"quit"}
{"nick":"lpin","date":"2018-06-09T04:56:46.675Z","type":"join"}
{"nick":"lpin","reason":"Read error: Connection reset by peer","date":"2018-06-09T07:39:22.453Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-06-09T08:01:13.321Z","type":"join"}
{"nick":"lpin","date":"2018-06-09T08:05:41.612Z","type":"join"}
{"nick":"ChALkeR","reason":"Quit: Konversation terminated!","date":"2018-06-09T09:10:59.011Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-06-09T09:11:10.525Z","type":"join"}
{"nick":"tkore","date":"2018-06-09T09:21:13.084Z","type":"join"}
{"nick":"tkore\\","reason":"Ping timeout: 248 seconds","date":"2018-06-09T09:23:13.501Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-09T09:53:50.103Z","type":"join"}
{"nick":"seishun","date":"2018-06-09T10:18:46.472Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-06-09T10:25:08.770Z","type":"quit"}
{"nick":"mylesborins","date":"2018-06-09T10:25:39.578Z","type":"join"}
{"nick":"ChALkeR","reason":"Quit: Konversation terminated!","date":"2018-06-09T10:31:31.147Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-06-09T10:31:40.417Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-09T10:52:12.336Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-09T10:55:53.688Z","type":"join"}
{"nick":"lpin","reason":"Read error: Connection reset by peer","date":"2018-06-09T11:09:36.789Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 264 seconds","date":"2018-06-09T11:51:57.962Z","type":"quit"}
{"nick":"ChALkeR","reason":"Ping timeout: 264 seconds","date":"2018-06-09T12:28:34.014Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-09T12:29:36.990Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-06-09T12:34:23.332Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-06-09T12:46:49.555Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-06-09T12:56:54.365Z","type":"join"}
{"nick":"gabrielschulhof","date":"2018-06-09T13:08:22.484Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-06-09T13:11:50.504Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-06-09T13:28:36.237Z","type":"join"}
{"nick":"ChALkeR","reason":"Ping timeout: 264 seconds","date":"2018-06-09T13:33:22.031Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-06-09T13:42:03.220Z","type":"join"}
{"nick":"seishun","date":"2018-06-09T13:48:00.380Z","type":"join"}
{"nick":"benjamingr_","date":"2018-06-09T13:49:15.775Z","type":"join"}
{"nick":"ChALkeR","reason":"Quit: Konversation terminated!","date":"2018-06-09T13:50:22.341Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-06-09T14:24:10.078Z","type":"join"}
{"nick":"ChALkeR","date":"2018-06-09T14:33:58.812Z","type":"join"}
{"nick":"devsnek","message":"addaleax: do you think it would be confusing if Workers were eventtargets instead of eventemitters","date":"2018-06-09T14:53:04.774Z","type":"message"}
{"nick":"ljharb","message":"why would a worker be a target","date":"2018-06-09T14:53:30.133Z","type":"message"}
{"nick":"devsnek","message":"aren't they event targets in spec","date":"2018-06-09T14:53:49.141Z","type":"message"}
{"nick":"ljharb","message":"like in web workers?","date":"2018-06-09T14:53:57.599Z","type":"message"}
{"nick":"AtumT_","date":"2018-06-09T14:53:57.921Z","type":"join"}
{"nick":"devsnek","message":"they have like message events and stuff","date":"2018-06-09T14:53:57.921Z","type":"message"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-06-09T14:54:02.441Z","type":"quit"}
{"nick":"devsnek","message":"ye","date":"2018-06-09T14:54:03.104Z","type":"message"}
{"nick":"ljharb","message":"i guess they probably both send and receive","date":"2018-06-09T14:54:16.013Z","type":"message"}
{"nick":"devsnek","message":"postMessage and addEventListener('message')","date":"2018-06-09T14:54:26.560Z","type":"message"}
{"nick":"AtumT","reason":"Ping timeout: 264 seconds","date":"2018-06-09T14:54:58.139Z","type":"quit"}
{"nick":"ljharb","message":"postMessage is separate from events tho, isn’t it? Even tho it’s event-like","date":"2018-06-09T14:55:10.557Z","type":"message"}
{"nick":"ljharb","message":"or i guess it’s just a custom trigger","date":"2018-06-09T14:55:21.173Z","type":"message"}
{"nick":"devsnek","message":"i haven't seen the idl but its like","date":"2018-06-09T14:55:28.116Z","type":"message"}
{"nick":"devsnek","message":"class Worker extends EventTarget { postMessage() {} }","date":"2018-06-09T14:55:39.585Z","type":"message"}
{"nick":"addaleax","message":"devsnek: sooo ... there are downsides and upsides, right? i could imagine us providing a dual API where it's both an EE and an ET","date":"2018-06-09T14:55:43.251Z","type":"message"}
{"nick":"devsnek","message":"i was also trying to think of pros/cons to making our eventemitters also have event target emission behaviour","date":"2018-06-09T14:56:16.926Z","type":"message"}
{"nick":"addaleax","message":"we've discussed this at least once before in the issue tracker","date":"2018-06-09T14:56:32.129Z","type":"message"}
{"nick":"addaleax","message":"i think it didn't go anywhere because they do have conceptual differences between each other","date":"2018-06-09T14:56:47.338Z","type":"message"}
{"nick":"AtumT","date":"2018-06-09T14:59:16.443Z","type":"join"}
{"nick":"devsnek","message":"we would have to wrap events emitted from .emit and unwrap from .dispatchEvent","date":"2018-06-09T14:59:19.785Z","type":"message"}
{"nick":"devsnek","message":"seems slow","date":"2018-06-09T14:59:23.923Z","type":"message"}
{"nick":"juggernaut451","date":"2018-06-09T15:00:30.257Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 268 seconds","date":"2018-06-09T15:01:07.719Z","type":"quit"}
{"nick":"seishun","message":"devsnek: why doesn't lint error on \"Buffer\"? Where is that defined?","date":"2018-06-09T15:02:21.729Z","type":"message"}
{"nick":"ChALkeR","reason":"Ping timeout: 260 seconds","date":"2018-06-09T15:06:35.601Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-06-09T15:06:52.936Z","type":"join"}
{"nick":"devsnek","message":"seishun: eslint has a preset for node","date":"2018-06-09T15:07:10.278Z","type":"message"}
{"nick":"devsnek","message":"it has stuff like `process` and `Buffer`","date":"2018-06-09T15:07:21.827Z","type":"message"}
{"nick":"seishun","message":"can't we add BigInt to that?","date":"2018-06-09T15:07:40.595Z","type":"message"}
{"nick":"devsnek","message":"no","date":"2018-06-09T15:09:03.212Z","type":"message"}
{"nick":"devsnek","message":"eslint won't accept bigint until it's stage 4","date":"2018-06-09T15:09:11.742Z","type":"message"}
{"nick":"devsnek","message":"and even then we would have to wait for them to release","date":"2018-06-09T15:09:21.823Z","type":"message"}
{"nick":"ChALkeR","reason":"Client Quit","date":"2018-06-09T15:11:10.711Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-06-09T15:11:21.915Z","type":"join"}
{"nick":"seishun","message":"when was the last time node added a global?","date":"2018-06-09T15:11:59.499Z","type":"message"}
{"nick":"devsnek","message":"v10","date":"2018-06-09T15:12:46.263Z","type":"message"}
{"nick":"devsnek","message":"URL and URLSearchParams","date":"2018-06-09T15:12:53.864Z","type":"message"}
{"nick":"seishun","message":"were those added to eslint preset?","date":"2018-06-09T15:13:46.731Z","type":"message"}
{"nick":"devsnek","message":"no idea","date":"2018-06-09T15:14:46.302Z","type":"message"}
{"nick":"ljharb","message":"you can add it to the linter globals","date":"2018-06-09T15:15:15.856Z","type":"message"}
{"nick":"ljharb","message":"stage 4 stuff only matters for eslint for syntax","date":"2018-06-09T15:15:23.820Z","type":"message"}
{"nick":"seishun","message":"perhaps sindresorhus/globals","date":"2018-06-09T15:17:20.873Z","type":"message"}
{"nick":"seishun","message":" will agree to add BigInt as a node-specific global?","date":"2018-06-09T15:17:21.073Z","type":"message"}
{"nick":"ljharb","message":"you can just put it in your eslintrc tho","date":"2018-06-09T15:18:22.468Z","type":"message"}
{"nick":"devsnek","message":"ljharb: I was just considering if they would agree","date":"2018-06-09T15:18:25.123Z","type":"message"}
{"nick":"devsnek","message":"I was thinking it could be on the same grounds as process or buffer","date":"2018-06-09T15:18:41.024Z","type":"message"}
{"nick":"ljharb","message":"and you can use the Bigint constructor before eslint supports the syntax","date":"2018-06-09T15:18:46.032Z","type":"message"}
{"nick":"ljharb","message":"And later there will be a rule that forces syntax where possible for Bigint, to clean those up","date":"2018-06-09T15:19:00.880Z","type":"message"}
{"nick":"devsnek","message":"at this rate esprima should be a peer dep for eslint","date":"2018-06-09T15:19:22.456Z","type":"message"}
{"nick":"seishun","message":"I'm just not comfortable adding it to the globals object, it seems out of place there","date":"2018-06-09T15:23:42.746Z","type":"message"}
{"nick":"ljharb","message":"why? It’s a global","date":"2018-06-09T15:24:03.678Z","type":"message"}
{"nick":"ljharb","message":"that’s literally the only place for it in an eslint config","date":"2018-06-09T15:24:11.592Z","type":"message"}
{"nick":"seishun","message":"https://github.com/nodejs/node/blob/master/.eslintrc.js#L245 you mean here?","date":"2018-06-09T15:24:21.081Z","type":"message"}
{"nick":"ljharb","message":"yup","date":"2018-06-09T15:24:48.992Z","type":"message"}
{"nick":"ljharb","message":"until eslint adds support for whichever language year it lands in","date":"2018-06-09T15:25:04.924Z","type":"message"}
{"nick":"seishun","message":"oh well","date":"2018-06-09T15:25:18.566Z","type":"message"}
{"nick":"devsnek","message":"ljharb: why would a server give a 304 without the client giving it an etag or modified-since header or something","date":"2018-06-09T15:26:16.382Z","type":"message"}
{"nick":"seishun","message":"any reason why that object doesn't have a trailing comma?","date":"2018-06-09T15:26:40.610Z","type":"message"}
{"nick":"ljharb","message":"devsnek: it would have to provide those headers, ofc","date":"2018-06-09T15:26:53.219Z","type":"message"}
{"nick":"devsnek","message":"seishun: we don't enforce it","date":"2018-06-09T15:27:29.468Z","type":"message"}
{"nick":"devsnek","message":"I strongly recommend adding it though","date":"2018-06-09T15:27:37.565Z","type":"message"}
{"nick":"seishun","message":"I shall","date":"2018-06-09T15:27:51.253Z","type":"message"}
{"nick":"devsnek","message":"we would enforce it if there weren't so many cases where it isn't followed","date":"2018-06-09T15:27:56.139Z","type":"message"}
{"nick":"seishun","message":"is there any way to enforce for new code?","date":"2018-06-09T15:28:49.482Z","type":"message"}
{"nick":"devsnek","message":"sounds like a fun eslint plugin","date":"2018-06-09T15:29:59.039Z","type":"message"}
{"nick":"devsnek","message":"generate git blame for every change","date":"2018-06-09T15:30:25.120Z","type":"message"}
{"nick":"devsnek","message":"then compare hashes","date":"2018-06-09T15:30:29.760Z","type":"message"}
{"nick":"devsnek","message":"would take a long time","date":"2018-06-09T15:30:36.620Z","type":"message"}
{"nick":"seishun","message":"why blame? just look at the last commit only","date":"2018-06-09T15:31:17.370Z","type":"message"}
{"nick":"devsnek","message":"cuz only new changes would be valid for the rule you want to enforce","date":"2018-06-09T15:32:03.989Z","type":"message"}
{"nick":"devsnek","message":"some of the files in node have lines that haven't been changed in like 7 years","date":"2018-06-09T15:32:20.617Z","type":"message"}
{"nick":"seishun","message":"right, so it needs to know which changes are \"new\"","date":"2018-06-09T15:33:23.482Z","type":"message"}
{"nick":"devsnek","message":"so you generate the blame for every file which tells you the last commit for each line","date":"2018-06-09T15:34:18.676Z","type":"message"}
{"nick":"devsnek","message":"then you check the timestamps on those","date":"2018-06-09T15:34:31.366Z","type":"message"}
{"nick":"ljharb","message":"for JS? Of corse there’s a rule","date":"2018-06-09T15:35:00.643Z","type":"message"}
{"nick":"ljharb","message":"comma-dangle","date":"2018-06-09T15:35:04.750Z","type":"message"}
{"nick":"ljharb","message":"it has an autofix too, you could just run it and commit the result","date":"2018-06-09T15:35:18.133Z","type":"message"}
{"nick":"devsnek","message":"they were asking if we could apply rules to only new code","date":"2018-06-09T15:35:23.029Z","type":"message"}
{"nick":"devsnek","message":"node doesn't do mass fixes like that because it messes up git blame","date":"2018-06-09T15:35:37.824Z","type":"message"}
{"nick":"seishun","message":"instead of looking at every file, wouldn't it be more efficient to look only at the files that were touched by the relevant commits?","date":"2018-06-09T15:36:58.593Z","type":"message"}
{"nick":"ljharb","message":"ah, k","date":"2018-06-09T15:37:03.745Z","type":"message"}
{"nick":"ljharb","message":"seishun: you can’t that reliably if you have rules that check across files, or if the eslint config changed, or package.jso","date":"2018-06-09T15:37:22.754Z","type":"message"}
{"nick":"ljharb","message":"n","date":"2018-06-09T15:37:24.901Z","type":"message"}
{"nick":"juggernaut451","reason":"Ping timeout: 260 seconds","date":"2018-06-09T15:57:12.212Z","type":"quit"}
