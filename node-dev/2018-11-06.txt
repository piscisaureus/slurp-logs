{"nick":"marthinal","date":"2018-11-06T00:05:37.009Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 268 seconds","date":"2018-11-06T00:10:08.923Z","type":"quit"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 246 seconds","date":"2018-11-06T00:11:43.284Z","type":"quit"}
{"nick":"psha","date":"2018-11-06T00:14:04.433Z","type":"join"}
{"nick":"d10n-work","reason":"Quit: Connection closed for inactivity","date":"2018-11-06T00:25:45.286Z","type":"quit"}
{"nick":"doodadjs","date":"2018-11-06T01:04:12.251Z","type":"join"}
{"nick":"doodadjs","reason":"Ping timeout: 246 seconds","date":"2018-11-06T02:00:13.251Z","type":"quit"}
{"nick":"psha","reason":"Ping timeout: 256 seconds","date":"2018-11-06T02:04:57.181Z","type":"quit"}
{"nick":"devsnek","message":"joyee: can you confirm reports that node is getting rid of all js in core /s","date":"2018-11-06T02:19:25.891Z","type":"message"}
{"nick":"joyee","message":"devsnek: I want to get rid of more JS during bootstrap - and then we are safe to move more parts that are not in bootstrap to JS","date":"2018-11-06T02:20:52.887Z","type":"message"}
{"nick":"joyee","message":"The bottleneck of the startup performance is the JS compilation, and since our code is a bit of spaghetti, if you want to require one native JS module, you potentially require a bunch of other stuff that you don't need, and it incurs a cross boundary call - if most of that is not JS anymore, the bottleneck would be partially gone","date":"2018-11-06T02:23:39.220Z","type":"message"}
{"nick":"joyee","message":"And you can leave the spaghetti problem to post-bootstrap, so to speak","date":"2018-11-06T02:24:42.730Z","type":"message"}
{"nick":"joyee","message":"Right now they are all intertwined together but I could see that conceptually, Node core is bootstrap + builtin modules, where builtin modules are conceptually not too different from addons or pure JS npm modules, they are just in core because they are commonly needed.","date":"2018-11-06T02:27:29.620Z","type":"message"}
{"nick":"d10n-work","date":"2018-11-06T02:32:18.758Z","type":"join"}
{"nick":"t0dd1v","date":"2018-11-06T02:38:08.771Z","type":"join"}
{"nick":"zeds","date":"2018-11-06T03:38:44.376Z","type":"join"}
{"nick":"refack","message":"Get rid of the JS in core. That will make the merger with JSF make even more sense 😐","date":"2018-11-06T03:45:16.470Z","type":"message"}
{"nick":"refack","message":"Core could be compiled wasm, then we can reduce the cross boundary cost significantly","date":"2018-11-06T03:46:52.812Z","type":"message"}
{"nick":"refack","message":"😶","date":"2018-11-06T03:47:38.180Z","type":"message"}
{"nick":"zeds","date":"2018-11-06T03:48:19.037Z","type":"part"}
{"nick":"refack","action":"having a weird evening","date":"2018-11-06T03:50:59.573Z","type":"action"}
{"nick":"marthinal","date":"2018-11-06T04:06:02.726Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 252 seconds","date":"2018-11-06T04:10:24.702Z","type":"quit"}
{"nick":"t0dd1v","reason":"Quit: Connection closed for inactivity","date":"2018-11-06T05:07:25.554Z","type":"quit"}
{"nick":"joyee","message":"doesn't wasm still incur boundary cost? (I know the one proposing the idea is gone so I am probably speaking to my self)","date":"2018-11-06T05:15:54.571Z","type":"message"}
{"nick":"Trott","message":"mmarchini: https://nodejs-ci-health.mmarchini.me/#/detailed-jobs seems to have stale data. Most recent jobs listed are from October 30.","date":"2018-11-06T05:26:15.726Z","type":"message"}
{"nick":"Trott","message":"Whoops, meant for that to be in #node-build.","date":"2018-11-06T05:26:37.707Z","type":"message"}
{"nick":"marthinal","date":"2018-11-06T05:51:00.401Z","type":"join"}
{"nick":"Trott","message":"Made a mistake, force pushed it out, and re-landed. All probably within less than a minute. Sorry/thanks.","date":"2018-11-06T06:03:54.993Z","type":"message"}
{"nick":"lpin","date":"2018-11-06T06:28:58.621Z","type":"join"}
{"nick":"d10n-work","reason":"Quit: Connection closed for inactivity","date":"2018-11-06T06:49:13.822Z","type":"quit"}
{"nick":"bellare","date":"2018-11-06T07:08:36.728Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-11-06T07:10:53.211Z","type":"quit"}
{"nick":"bellare","date":"2018-11-06T07:33:32.523Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-06T08:12:39.529Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-06T08:12:48.965Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-06T08:13:34.516Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-06T08:14:05.750Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-06T08:15:16.341Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-06T08:20:12.616Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-06T08:20:25.933Z","type":"join"}
{"nick":"m00dy","reason":"Quit: Leaving...","date":"2018-11-06T08:26:34.136Z","type":"quit"}
{"nick":"chux0519","date":"2018-11-06T09:28:24.197Z","type":"join"}
{"nick":"addaleax","message":"joyee: do you think converting our `CHECK`s that are behind `#ifdef DEBUG` to `DCHECK`s would be okay for Code & Learn for somebody who's familiar with C++?","date":"2018-11-06T09:30:09.072Z","type":"message"}
{"nick":"martianboy","reason":"Ping timeout: 252 seconds","date":"2018-11-06T09:52:18.771Z","type":"quit"}
{"nick":"joyee","message":"addaleax: yeah I mean it's jsut macros to macros?","date":"2018-11-06T09:56:03.574Z","type":"message"}
{"nick":"addaleax","message":"joyee: yeah. I was more thinking whether we should expect some pushback (from bnoordhuis e.g.?) and that that might make it ... a bit awkward? so I want to know what you think and whether you'd help making it happen if it really comes to a discussion ^^","date":"2018-11-06T09:57:09.343Z","type":"message"}
{"nick":"joyee","message":"addaleax: I'd LGTM them","date":"2018-11-06T09:58:02.782Z","type":"message"}
{"nick":"joyee","message":"Are you going to have a code and learn soon?","date":"2018-11-06T09:58:21.326Z","type":"message"}
{"nick":"joyee","message":"Also the thing I landed in v8 could be potential code and learn tasks","date":"2018-11-06T09:58:55.856Z","type":"message"}
{"nick":"joyee","message":"I am working on getting rid of push_values_to_array_function because it's just so weird to watch, but there are plenty of other converting-values-to-array in C++","date":"2018-11-06T10:00:05.314Z","type":"message"}
{"nick":"addaleax","message":"joyee: oh, nice :) which patch is that? and yes, we are having one at nodeconf.eu today :)","date":"2018-11-06T10:09:47.335Z","type":"message"}
{"nick":"joyee","message":"https://chromium-review.googlesource.com/c/1317049","date":"2018-11-06T10:11:33.282Z","type":"message"}
{"nick":"joyee","message":"I'll open a cherry-pick first, them","date":"2018-11-06T10:11:45.063Z","type":"message"}
{"nick":"joyee","message":"Oh wait, it's probably too short notice..if it's today","date":"2018-11-06T10:12:06.542Z","type":"message"}
{"nick":"addaleax","message":"joyee: oh, nice ... yeah, it might be a bit short. :D but please, feel free to open a cherry-pick PR, this makes for 'good first contribution's either way","date":"2018-11-06T10:15:15.644Z","type":"message"}
{"nick":"joyee","message":"OK I'll open one with a cherry-pick and a proof of concept to convince there is a perf boost first..","date":"2018-11-06T10:16:22.987Z","type":"message"}
{"nick":"joyee","message":"(Or at least it's not too much perf lost)","date":"2018-11-06T10:16:33.646Z","type":"message"}
{"nick":"joyee","message":"(But I am fairly certain it's a boost)","date":"2018-11-06T10:16:58.602Z","type":"message"}
{"nick":"addaleax","message":"i'd definitely expect a significant impact","date":"2018-11-06T10:17:33.868Z","type":"message"}
{"nick":"addaleax","message":"i'd definitely expect a significant impact","date":"2018-11-06T10:18:14.830Z","type":"message"}
{"nick":"addaleax","message":"(sorry for the double post :P)","date":"2018-11-06T10:18:22.638Z","type":"message"}
{"nick":"chux0519","reason":"Ping timeout: 256 seconds","date":"2018-11-06T10:29:17.169Z","type":"quit"}
{"nick":"joyee","message":"I did that sometimes, IRC cloud issues","date":"2018-11-06T10:31:06.626Z","type":"message"}
{"nick":"joyee","message":"https://www.irccloud.com/pastebin/8DkV29Ek/","date":"2018-11-06T10:47:46.649Z","type":"message"}
{"nick":"joyee","message":"eh there is a significant difference when the array is long enough","date":"2018-11-06T10:48:02.570Z","type":"message"}
{"nick":"joyee","message":"But that's a bit specific to the way readdir is implemented :/ It's not really using that function correctly","date":"2018-11-06T10:48:44.288Z","type":"message"}
{"nick":"joyee","message":"Oh wait I didn't implement the sync version..","date":"2018-11-06T11:01:38.749Z","type":"message"}
{"nick":"joyee","message":"https://www.irccloud.com/pastebin/Uk3blLm9/","date":"2018-11-06T11:01:43.608Z","type":"message"}
{"nick":"joyee","message":"Looks good","date":"2018-11-06T11:01:47.148Z","type":"message"}
{"nick":"lpin","date":"2018-11-06T11:31:56.444Z","type":"join"}
{"nick":"zsoc","reason":"Read error: Connection reset by peer","date":"2018-11-06T11:47:58.998Z","type":"quit"}
{"nick":"zsoc","date":"2018-11-06T11:48:20.869Z","type":"join"}
{"nick":"joyee","message":"addaleax: I am probably going to refactor out the push_values_to_array ones because I don't want to drag this for too long...(I REALLY want to delete `setupProcessObject` and continue my refactoring :S)","date":"2018-11-06T11:51:03.687Z","type":"message"}
{"nick":"joyee","message":"addaleax: but there are plenty of `->Set\\(.*, i` that can be removed from a glance","date":"2018-11-06T11:53:23.430Z","type":"message"}
{"nick":"joyee","message":"Those seem to be much less convoluted than push_values_to_array since that's like weird V8 hack","date":"2018-11-06T11:55:12.633Z","type":"message"}
{"nick":"doodadjs","date":"2018-11-06T12:21:44.109Z","type":"join"}
{"nick":"marthinal","date":"2018-11-06T12:43:47.661Z","type":"quit"}
{"nick":"marthinal","date":"2018-11-06T12:45:53.341Z","type":"join"}
{"nick":"gabrielschulhof","date":"2018-11-06T12:56:03.756Z","type":"join"}
{"nick":"m00dy","date":"2018-11-06T12:56:36.692Z","type":"join"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 272 seconds","date":"2018-11-06T13:00:58.949Z","type":"quit"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-06T13:13:08.365Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-06T13:13:42.907Z","type":"join"}
{"nick":"ryzokuken","message":"hi joyee!","date":"2018-11-06T13:14:40.175Z","type":"message"}
{"nick":"ryzokuken","message":"how do you want me to proceed with https://github.com/nodejs/node/pull/24069 again?","date":"2018-11-06T13:14:49.613Z","type":"message"}
{"nick":"ryzokuken","message":"It wasn't exactly clear.","date":"2018-11-06T13:14:55.223Z","type":"message"}
{"nick":"ryzokuken","message":"Let's close all three PRs ASAP 😄","date":"2018-11-06T13:15:05.219Z","type":"message"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-06T13:17:27.464Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-06T13:17:42.393Z","type":"join"}
{"nick":"joyee","message":"ryzokuken: if it were me - I will just label this semver-major, and return the function from vm.compileFunction without modification","date":"2018-11-06T13:20:14.969Z","type":"message"}
{"nick":"joyee","message":"And remove the produceCache option","date":"2018-11-06T13:20:36.972Z","type":"message"}
{"nick":"seishun","date":"2018-11-06T13:20:43.366Z","type":"join"}
{"nick":"ryzokuken","message":"like... altogether?","date":"2018-11-06T13:20:57.864Z","type":"message"}
{"nick":"joyee","message":"If we want to remove the option, sooner is better than later","date":"2018-11-06T13:21:04.334Z","type":"message"}
{"nick":"ryzokuken","message":"what's wrong with producing cache on the JS-layer?","date":"2018-11-06T13:21:15.092Z","type":"message"}
{"nick":"ryzokuken","message":"that way, you can do it if you want to.","date":"2018-11-06T13:21:23.317Z","type":"message"}
{"nick":"joyee","message":"Oh sorry, my suggestion was orthogonal to createCacheForFunction","date":"2018-11-06T13:22:01.868Z","type":"message"}
{"nick":"ryzokuken","message":"Ah, okay.","date":"2018-11-06T13:22:12.215Z","type":"message"}
{"nick":"ryzokuken","message":"I was wondering how to proceed in THAT particular PR.","date":"2018-11-06T13:22:32.148Z","type":"message"}
{"nick":"ryzokuken","message":"Oh, wait. You propose exactly that.","date":"2018-11-06T13:22:54.423Z","type":"message"}
{"nick":"ryzokuken","message":"That I remove caching at the C++ level but not reimplement it in JS-land?","date":"2018-11-06T13:23:12.099Z","type":"message"}
{"nick":"joyee","message":" What I have in mind is like `vm.compileFunction(..., {cachedData: v8.createCacheForFunction( vm.compileFunction()).cachedData })`","date":"2018-11-06T13:23:24.700Z","type":"message"}
{"nick":"joyee","message":"You'll need to call into C++ twice that way, but I don't think it matters for the majority of the use cases","date":"2018-11-06T13:24:07.838Z","type":"message"}
{"nick":"ryzokuken","message":"Hmm, okay.","date":"2018-11-06T13:24:53.409Z","type":"message"}
{"nick":"joyee","message":"I am not even sure it worth being a semver-major, to be honest. The addtional returned values are neither tested nor documented and the users are supposed to handle them being falsy anyway","date":"2018-11-06T13:24:59.366Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 244 seconds","date":"2018-11-06T13:25:05.435Z","type":"quit"}
{"nick":"joyee","message":"And they are only released 2 months ago","date":"2018-11-06T13:25:21.895Z","type":"message"}
{"nick":"ryzokuken","message":"What's wrong with `vm.compileFunction(..., { cachedData: vm.compileFunction(...).cachedData })`, though?","date":"2018-11-06T13:26:07.369Z","type":"message"}
{"nick":"joyee","message":"for one, cached data is a v8 thing","date":"2018-11-06T13:26:24.872Z","type":"message"}
{"nick":"ryzokuken","message":"that's fine. It can be a v8 thingie. I just wanted to be handled inside `vm.compileFunction`","date":"2018-11-06T13:27:10.885Z","type":"message"}
{"nick":"joyee","message":"also composing the API by addition special options and returning special values hanging off a normal function is just weird, IMO","date":"2018-11-06T13:27:27.211Z","type":"message"}
{"nick":"ryzokuken","message":"Like... not want-want it. I just don't get what's wrong with it handling caching internally for you.","date":"2018-11-06T13:27:32.592Z","type":"message"}
{"nick":"ryzokuken","message":"Okay, that's fair.","date":"2018-11-06T13:27:47.909Z","type":"message"}
{"nick":"ryzokuken","message":"Adding weird options to functions is definitely not a good idea, you're right.","date":"2018-11-06T13:28:03.510Z","type":"message"}
{"nick":"seishun","date":"2018-11-06T13:28:06.979Z","type":"join"}
{"nick":"joyee","message":"If someone actually knows what this is, they are likely to know about the V8 API","date":"2018-11-06T13:28:16.549Z","type":"message"}
{"nick":"ryzokuken","message":"okay. I'll remove `produceCache` option then.","date":"2018-11-06T13:28:30.511Z","type":"message"}
{"nick":"ryzokuken","message":"And move `createCacheForFunction` to `v8`?","date":"2018-11-06T13:28:49.454Z","type":"message"}
{"nick":"seishun","reason":"Disconnected by services","date":"2018-11-06T13:28:52.342Z","type":"quit"}
{"nick":"seishun","date":"2018-11-06T13:28:58.818Z","type":"join"}
{"nick":"ryzokuken","message":"like... as an API method, right?","date":"2018-11-06T13:29:04.333Z","type":"message"}
{"nick":"joyee","message":"Yeah I mean..you can just document the option as invalid, since the returned values are not documented you don't even change that","date":"2018-11-06T13:30:04.001Z","type":"message"}
{"nick":"joyee","message":"We have removed older undocumented things with a simple semver-major bump before","date":"2018-11-06T13:32:28.436Z","type":"message"}
{"nick":"joyee","message":"So for something that has only been released for 2 months, at least I think it should be safe to remove them","date":"2018-11-06T13:33:04.982Z","type":"message"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-06T13:40:49.903Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-06T13:48:47.215Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-11-06T14:11:03.562Z","type":"quit"}
{"nick":"shisama","date":"2018-11-06T14:18:24.162Z","type":"join"}
{"nick":"bengl","message":"Just a heads up that code & learn is starting now","date":"2018-11-06T14:18:58.272Z","type":"message"}
{"nick":"early","reason":"Quit: Leaving","date":"2018-11-06T14:25:10.878Z","type":"quit"}
{"nick":"early","date":"2018-11-06T14:28:15.863Z","type":"join"}
{"nick":"refack","message":"Thanks","date":"2018-11-06T14:32:16.937Z","type":"message"}
{"nick":"marthinal","date":"2018-11-06T14:48:25.534Z","type":"join"}
{"nick":"refack","message":"bengl: make ask participant to rebase now that https://github.com/nodejs/node/pull/23739 landed","date":"2018-11-06T14:51:48.222Z","type":"message"}
{"nick":"refack","message":"*maybe","date":"2018-11-06T14:55:44.039Z","type":"message"}
{"nick":"refack","message":"(no need to \"make\" anyone to do anything :facepalm:)","date":"2018-11-06T14:56:29.222Z","type":"message"}
{"nick":"d10n-work","date":"2018-11-06T15:18:08.283Z","type":"join"}
{"nick":"zsoc","reason":"Read error: Connection reset by peer","date":"2018-11-06T15:21:46.219Z","type":"quit"}
{"nick":"zsoc","date":"2018-11-06T15:22:09.389Z","type":"join"}
