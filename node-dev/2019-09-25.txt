{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-25T00:28:20.152Z","type":"quit"}
{"nick":"mgol","date":"2019-09-25T00:46:02.028Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-25T00:52:25.590Z","type":"quit"}
{"nick":"mgol","date":"2019-09-25T01:01:07.022Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-25T01:06:13.825Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-09-25T01:12:00.843Z","type":"quit"}
{"nick":"shree","date":"2019-09-25T01:23:36.795Z","type":"join"}
{"nick":"shree","reason":"Remote host closed the connection","date":"2019-09-25T01:26:12.651Z","type":"quit"}
{"nick":"shree","date":"2019-09-25T01:26:54.130Z","type":"join"}
{"nick":"mgol","date":"2019-09-25T01:32:53.741Z","type":"join"}
{"nick":"mgol","reason":"Client Quit","date":"2019-09-25T01:35:05.881Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 245 seconds","date":"2019-09-25T01:47:32.913Z","type":"quit"}
{"nick":"octetcloud","date":"2019-09-25T01:50:02.363Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-25T04:04:45.178Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 245 seconds","date":"2019-09-25T04:15:03.418Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2019-09-25T05:12:01.654Z","type":"join"}
{"nick":"AbedB__","reason":"Read error: Connection reset by peer","date":"2019-09-25T05:43:02.567Z","type":"quit"}
{"nick":"AbedB","date":"2019-09-25T06:54:25.255Z","type":"join"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 265 seconds","date":"2019-09-25T07:00:24.560Z","type":"quit"}
{"nick":"shree","date":"2019-09-25T07:44:47.449Z","type":"join"}
{"nick":"AbedB","reason":"Remote host closed the connection","date":"2019-09-25T08:05:22.554Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-25T08:21:28.297Z","type":"quit"}
{"nick":"shree","date":"2019-09-25T08:24:14.178Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-25T08:47:21.629Z","type":"quit"}
{"nick":"[OverCoder]","reason":"Changing host","date":"2019-09-25T10:29:06.566Z","type":"quit"}
{"nick":"[OverCoder]","date":"2019-09-25T10:29:06.688Z","type":"join"}
{"nick":"[OverCoder]","new_nick":"OverCoder","date":"2019-09-25T10:33:45.874Z","type":"nick"}
{"nick":"AtumT","date":"2019-09-25T10:39:17.320Z","type":"join"}
{"nick":"lpin","date":"2019-09-25T12:42:12.017Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-09-25T12:46:40.475Z","type":"quit"}
{"nick":"octetcloud","date":"2019-09-25T14:09:05.057Z","type":"join"}
{"nick":"AbedB","date":"2019-09-25T14:34:23.593Z","type":"join"}
{"nick":"gabrielschulhof","date":"2019-09-25T14:38:26.277Z","type":"join"}
{"nick":"AbedB_","date":"2019-09-25T15:04:26.270Z","type":"join"}
{"nick":"AbedB","reason":"Ping timeout: 265 seconds","date":"2019-09-25T15:07:07.444Z","type":"quit"}
{"nick":"mgol","date":"2019-09-25T15:20:07.940Z","type":"join"}
{"nick":"shree","date":"2019-09-25T15:20:48.368Z","type":"join"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 245 seconds","date":"2019-09-25T15:27:32.235Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-25T15:55:55.992Z","type":"quit"}
{"nick":"malevolence","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-09-25T16:56:33.166Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-25T17:05:26.277Z","type":"quit"}
{"nick":"ljharb","message":"is there any chance that https://github.com/nodejs/node/pull/29522 (full-icu) will affect compilation on machines? i'm particularly asking about usage with nvm, and wondering if i'm going to get a huge new wave of bug reports.","date":"2019-09-25T17:05:46.312Z","type":"message"}
{"nick":"shree","date":"2019-09-25T17:10:52.573Z","type":"join"}
{"nick":"mgol","date":"2019-09-25T17:18:12.455Z","type":"join"}
{"nick":"mgol","reason":"Read error: Connection reset by peer","date":"2019-09-25T17:27:32.837Z","type":"quit"}
{"nick":"mgol","date":"2019-09-25T17:28:45.464Z","type":"join"}
{"nick":"AbedB_","reason":"Read error: Connection reset by peer","date":"2019-09-25T17:54:03.265Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-09-25T18:11:52.067Z","type":"quit"}
{"nick":"devsnek","message":"ljharb: compiling requires more ram","date":"2019-09-25T18:57:57.724Z","type":"message"}
{"nick":"ljharb","message":"devsnek: do the default machines on travis have sufficient ram to compile it?","date":"2019-09-25T18:59:04.388Z","type":"message"}
{"nick":"ljharb","message":"(when compiling is needed)","date":"2019-09-25T18:59:14.087Z","type":"message"}
{"nick":"devsnek","message":"definitely","date":"2019-09-25T18:59:22.391Z","type":"message"}
{"nick":"devsnek","message":"the concern was about old rpis and stuff","date":"2019-09-25T18:59:34.597Z","type":"message"}
{"nick":"devsnek","message":"it just has to hold the new icu data in memory because its compressed","date":"2019-09-25T18:59:57.482Z","type":"message"}
{"nick":"ljharb","message":"k","date":"2019-09-25T19:01:25.368Z","type":"message"}
{"nick":"bradleymeck","message":"its not possible to replace the value reference that a builtin returns right?","date":"2019-09-25T19:46:53.820Z","type":"message"}
{"nick":"bradleymeck","action":"is ignoring require.cache goofiness, just thinking about when that isn't involved","date":"2019-09-25T19:47:21.890Z","type":"action"}
{"nick":"joyee","message":"bradleymeck: by builtin you mean core modules?","date":"2019-09-25T19:47:32.973Z","type":"message"}
{"nick":"bradleymeck","message":"yea `require('fs')`","date":"2019-09-25T19:47:47.971Z","type":"message"}
{"nick":"joyee","message":"You can replace it, whether it takes effect depends on when it's loaded in other places","date":"2019-09-25T19:48:29.725Z","type":"message"}
{"nick":"bradleymeck","message":"you can't replace the `module.exports` of a builtin to my knowledge though","date":"2019-09-25T19:49:05.911Z","type":"message"}
{"nick":"joyee","message":"if you replace `require('fs').readFile` to something else, anyone who has required `fs` and saved readFile to another variable before you (e.g. other core modules) won't notice","date":"2019-09-25T19:49:24.042Z","type":"message"}
{"nick":"bradleymeck","message":"you have to shadow `require` somehow (or do `require.cache` shenanigans )","date":"2019-09-25T19:49:26.571Z","type":"message"}
{"nick":"bradleymeck","message":"i mean the value returned, not props off the value","date":"2019-09-25T19:49:39.728Z","type":"message"}
{"nick":"bradleymeck","message":"so the Object containing readFile","date":"2019-09-25T19:49:51.094Z","type":"message"}
{"nick":"joyee","message":"Oh you mean the whole thing","date":"2019-09-25T19:49:53.711Z","type":"message"}
{"nick":"devsnek","message":"not possible","date":"2019-09-25T19:50:14.292Z","type":"message"}
{"nick":"devsnek","message":"unless we make call expressions valid assignment targets","date":"2019-09-25T19:50:31.397Z","type":"message"}
{"nick":"joyee","message":"The core modules are not stored in require.cache, but I think you can hack it so that it takes precedence","date":"2019-09-25T19:50:35.597Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: require.cache always takes precedence XD","date":"2019-09-25T19:50:47.288Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: i think we need to just hook it up to loaders","date":"2019-09-25T19:51:07.004Z","type":"message"}
{"nick":"joyee","message":"Altering require.cache counts as hacking to me ;)","date":"2019-09-25T19:51:30.414Z","type":"message"}
{"nick":"devsnek","message":"idk i'm a fan of `require('xyz') = abc`","date":"2019-09-25T19:52:09.596Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: can you clarify the call expressions bit, I'm looking at https://github.com/nodejs/node/blob/954bf56c1e9a4a1c195114f61d9b0fe39c80ca2e/lib/internal/bootstrap/loaders.js#L176 and making sure we don't directly expose those module objects","date":"2019-09-25T19:52:26.020Z","type":"message"}
{"nick":"devsnek","message":"lol i was making a joke","date":"2019-09-25T19:52:53.324Z","type":"message"}
{"nick":"devsnek","message":"i think we should use loaders","date":"2019-09-25T19:53:00.768Z","type":"message"}
{"nick":"bradleymeck","message":"oh","date":"2019-09-25T19:53:01.633Z","type":"message"}
{"nick":"devsnek","message":"call expressions as assignment targets","date":"2019-09-25T19:53:10.672Z","type":"message"}
{"nick":"devsnek","message":"like assigning to require","date":"2019-09-25T19:53:19.315Z","type":"message"}
{"nick":"joyee","message":"The references can only be altered by modifying the NativeModule.map","date":"2019-09-25T19:53:23.018Z","type":"message"}
{"nick":"joyee","message":"And IIUC we have tests to make sure that cannot happen","date":"2019-09-25T19:53:32.727Z","type":"message"}
{"nick":"joyee","message":"modulo --expose-internals","date":"2019-09-25T19:53:40.271Z","type":"message"}
{"nick":"devsnek","message":"if we can just intercept require with loader hooks","date":"2019-09-25T19:54:03.353Z","type":"message"}
{"nick":"devsnek","message":"everything will just work(tm)","date":"2019-09-25T19:54:13.639Z","type":"message"}
{"nick":"bradleymeck","message":"sounds dreamy","date":"2019-09-25T19:54:49.229Z","type":"message"}
{"nick":"bradleymeck","message":"i'd be ecstatic to have CJS loader hooks","date":"2019-09-25T19:55:06.960Z","type":"message"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-25T21:46:49.993Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2019-09-25T22:29:35.773Z","type":"join"}
{"nick":"mgol","date":"2019-09-25T22:44:07.602Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-09-25T23:40:39.304Z","type":"quit"}
