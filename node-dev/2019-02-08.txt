{"nick":"dbevenius","date":"2019-02-08T00:01:01.404Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-02-08T00:05:28.352Z","type":"quit"}
{"nick":"d10n-work","reason":"Quit: Connection closed for inactivity","date":"2019-02-08T00:32:12.748Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T00:58:42.339Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-08T01:03:13.316Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T01:31:38.873Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 272 seconds","date":"2019-02-08T01:36:46.969Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T01:48:44.270Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-08T01:53:00.777Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T02:02:41.383Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-02-08T02:07:08.308Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T02:19:42.236Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-08T02:24:12.550Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T02:38:46.368Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-02-08T02:43:23.367Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T02:48:54.552Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-08T02:53:14.505Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T03:08:37.149Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-08T03:13:18.054Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T03:28:47.514Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-02-08T03:33:07.368Z","type":"quit"}
{"nick":"joyee","message":"Not sure if porting `node_env_var.cc` to use uv_os_{get, set, unset}env would be a good first issue or not..","date":"2019-02-08T03:43:49.942Z","type":"message"}
{"nick":"dbevenius","date":"2019-02-08T04:00:25.163Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-02-08T04:22:41.477Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T04:22:54.773Z","type":"join"}
{"nick":"zsoc","reason":"Ping timeout: 246 seconds","date":"2019-02-08T04:45:42.065Z","type":"quit"}
{"nick":"dbeveniu_","date":"2019-02-08T04:47:55.168Z","type":"join"}
{"nick":"dbevenius","reason":"Read error: Connection reset by peer","date":"2019-02-08T04:47:55.513Z","type":"quit"}
{"nick":"lpin","date":"2019-02-08T06:26:16.590Z","type":"join"}
{"nick":"howdoi","date":"2019-02-08T07:09:17.998Z","type":"join"}
{"nick":"lundibundi","date":"2019-02-08T07:50:51.577Z","type":"join"}
{"nick":"AtumT","date":"2019-02-08T10:07:36.438Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 250 seconds","date":"2019-02-08T10:13:56.525Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-08T10:24:29.370Z","type":"join"}
{"nick":"antsmartian","date":"2019-02-08T12:56:53.907Z","type":"join"}
{"nick":"fcanela","reason":"Ping timeout: 252 seconds","date":"2019-02-08T13:19:31.063Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-02-08T13:25:44.223Z","type":"quit"}
{"nick":"zsoc","date":"2019-02-08T14:05:31.931Z","type":"join"}
{"nick":"fcanela","date":"2019-02-08T14:09:42.621Z","type":"join"}
{"nick":"yaelhe","reason":"Remote host closed the connection","date":"2019-02-08T14:17:56.714Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 246 seconds","date":"2019-02-08T14:47:07.381Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-08T14:48:18.429Z","type":"join"}
{"nick":"qbit","new_nick":"not_qbit","date":"2019-02-08T14:50:16.339Z","type":"nick"}
{"nick":"not_qbit","new_nick":"qbit","date":"2019-02-08T14:51:13.760Z","type":"nick"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-02-08T15:35:28.376Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-08T16:01:03.782Z","type":"join"}
{"nick":"julianduque","reason":"Changing host","date":"2019-02-08T16:01:05.525Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-08T16:01:05.601Z","type":"join"}
{"nick":"qbit","reason":"Quit: WeeChat 2.3","date":"2019-02-08T16:20:35.396Z","type":"quit"}
{"nick":"dbeveniu_","reason":"Remote host closed the connection","date":"2019-02-08T16:35:00.524Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T16:42:54.434Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-08T16:47:50.454Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-08T16:49:43.374Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-02-08T16:53:18.032Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T16:59:17.736Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 244 seconds","date":"2019-02-08T17:07:43.351Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-02-08T17:07:58.316Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T17:29:04.388Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 272 seconds","date":"2019-02-08T17:34:22.833Z","type":"quit"}
{"nick":"qbit","date":"2019-02-08T17:40:07.341Z","type":"join"}
{"nick":"dbevenius","date":"2019-02-08T17:49:20.195Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-02-08T17:54:04.886Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T18:10:19.885Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-08T18:14:56.539Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T18:33:20.102Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-08T18:38:00.085Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T18:42:13.772Z","type":"join"}
{"nick":"Trott","message":"If I want to cache `Object.keys` and other things so that a user can monkey-patch it but not affect core code, is that already happening somewhere? Where in the code base is the right place to do this?  bradleymeck","date":"2019-02-08T18:46:59.237Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-02-08T18:47:06.750Z","type":"quit"}
{"nick":"bradleymeck","message":"Trott: we have been putting stuff in safe globals, but joyee made a full on `primordials` object in a recent PR","date":"2019-02-08T18:47:53.213Z","type":"message"}
{"nick":"bradleymeck","message":"Trott: you can just grab it off https://github.com/nodejs/node/blob/c2359bdad62b83d40976d91e91097684c23a7ae3/lib/internal/bootstrap/primordials.js#L12","date":"2019-02-08T18:49:10.615Z","type":"message"}
{"nick":"ljharb","message":"lol i just got bit by `delete Object.keys` breaking the CJS module loader, so i'm glad to hear more people care about that","date":"2019-02-08T18:52:24.689Z","type":"message"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-02-08T18:52:51.357Z","type":"quit"}
{"nick":"bradleymeck","message":"ljharb: be aware we do sometimes break people's code by patching those things","date":"2019-02-08T18:57:09.158Z","type":"message"}
{"nick":"bradleymeck","message":"i did get at least 1 DM about breaking a decent sized product","date":"2019-02-08T18:57:23.280Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: i don't mind if node patches builtins in a spec compliant way","date":"2019-02-08T18:57:39.573Z","type":"message"}
{"nick":"ljharb","message":"ohhh you mean by making things more robust","date":"2019-02-08T18:57:44.625Z","type":"message"}
{"nick":"bradleymeck","message":"yea","date":"2019-02-08T18:57:53.631Z","type":"message"}
{"nick":"ljharb","message":"fair, but it'd be great to have a semver-major that fully hardens node core","date":"2019-02-08T18:58:12.495Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: frozen intrinsics PR is up","date":"2019-02-08T18:58:25.861Z","type":"message"}
{"nick":"bradleymeck","message":"but chrome isn't feeling comfy patching override mistake anymore","date":"2019-02-08T18:58:40.125Z","type":"message"}
{"nick":"bradleymeck","message":"so freezing intrinsics... makes some usage patterns not great","date":"2019-02-08T18:58:51.800Z","type":"message"}
{"nick":"ljharb","message":"that's not what i mean","date":"2019-02-08T18:59:24.830Z","type":"message"}
{"nick":"ljharb","message":"that just makes node non-javascripty imo","date":"2019-02-08T18:59:31.269Z","type":"message"}
{"nick":"ljharb","message":"i mean, making it so that node caches all intrinsics and uses them safely, leaving them mutable","date":"2019-02-08T18:59:47.413Z","type":"message"}
{"nick":"bradleymeck","message":"it isn't practical for devs to write robust code without some stuff like that","date":"2019-02-08T18:59:58.483Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: yes, robustness is a separate concern","date":"2019-02-08T19:00:07.984Z","type":"message"}
{"nick":"ljharb","message":"freezing the intrinsics will break airbnb's polyfills in production","date":"2019-02-08T19:00:25.209Z","type":"message"}
{"nick":"ljharb","message":"that'd be a really bad idea.","date":"2019-02-08T19:00:35.638Z","type":"message"}
{"nick":"ljharb","message":"(at least by default; opt-in is fine)","date":"2019-02-08T19:00:48.857Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: only if you don't separate polyfilling lifecycle","date":"2019-02-08T19:00:55.083Z","type":"message"}
{"nick":"ljharb","message":"of course we don't","date":"2019-02-08T19:01:21.658Z","type":"message"}
{"nick":"ljharb","message":"it's handled by various packages","date":"2019-02-08T19:01:28.936Z","type":"message"}
{"nick":"bradleymeck","message":"yup, so w/e opt-in to frozen stuff is likely to require different coding patterns here","date":"2019-02-08T19:02:09.471Z","type":"message"}
{"nick":"bradleymeck","message":"this has been true of all the secure execution patterns from various companies, so it makes sense","date":"2019-02-08T19:02:28.597Z","type":"message"}
{"nick":"ljharb","message":"as long as freezing is opt-in that's totally fine","date":"2019-02-08T19:02:36.161Z","type":"message"}
{"nick":"ljharb","message":"that doesn't really make things robust tho, because even with a separate polyfilling lifecycle, node could be depending on nonstandard behavior, or on the *absence* of things that polyfills provide","date":"2019-02-08T19:03:02.897Z","type":"message"}
{"nick":"bradleymeck","message":"yea, policies will be all sorts of nightmare breakage","date":"2019-02-08T19:03:09.373Z","type":"message"}
{"nick":"ljharb","message":"so robustness of node core is what i really want","date":"2019-02-08T19:03:11.332Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: separate desires, but yea core is slowly becoming robust... faster these days","date":"2019-02-08T19:03:36.931Z","type":"message"}
{"nick":"bradleymeck","message":"Symbol.iterator protocol etc. are a bit of a thorn","date":"2019-02-08T19:04:08.135Z","type":"message"}
{"nick":"bradleymeck","message":"makes us need to avoid various patterns","date":"2019-02-08T19:04:15.084Z","type":"message"}
{"nick":"dbevenius","date":"2019-02-08T19:49:19.354Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-08T19:53:43.281Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-08T20:13:41.442Z","type":"join"}
{"nick":"ljharb","message":"Trott: commented on your PR with the changes needed to make it robust","date":"2019-02-08T20:37:26.340Z","type":"message"}
{"nick":"ljharb","message":"lol, nvm","date":"2019-02-08T20:51:19.324Z","type":"message"}
{"nick":"dbevenius","date":"2019-02-08T20:52:05.699Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-02-08T20:56:26.595Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T21:18:15.118Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 244 seconds","date":"2019-02-08T21:22:57.350Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T21:41:03.292Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-08T21:45:22.332Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-02-08T21:55:03.373Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T22:00:32.412Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-08T22:04:51.069Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T22:22:12.265Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-08T22:26:40.334Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T22:39:34.881Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-02-08T22:42:57.721Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-08T22:44:02.794Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-08T22:59:31.378Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-02-08T23:03:48.359Z","type":"quit"}
{"nick":"yaelhe","date":"2019-02-08T23:18:23.594Z","type":"join"}
{"nick":"yaelhe","message":"devsnek: I started looking into your locks-api branch, and I also read the spec. You said earlier that the lock processing needs to occur entirely in background threads. I was wondering if you meant that it’s the reason it doesn’t adhere to the spec? because I don’t see this requirement in the spec. or is this unrelated to the spec? and if so, what exactly doesn’t adhere to the spec in your implementation?","date":"2019-02-08T23:34:17.790Z","type":"message"}
{"nick":"yaelhe","message":"also, in node case, do we consider “same origin” being the “same node process”? So if for example you run a cluster which runs worker_threads and use locks, they would not coordinate, is this expected?","date":"2019-02-08T23:38:23.268Z","type":"message"}
{"nick":"devsnek","message":"origins are per process","date":"2019-02-08T23:40:00.458Z","type":"message"}
{"nick":"devsnek","message":"in node everything is the same origin","date":"2019-02-08T23:40:07.593Z","type":"message"}
{"nick":"devsnek","message":"and everything that is queued outside the microtask queue happens in node's background thread","date":"2019-02-08T23:41:06.645Z","type":"message"}
{"nick":"yaelhe","message":"yeah, so should there be another dedicated thread for lock processing?","date":"2019-02-08T23:43:47.920Z","type":"message"}
{"nick":"dbevenius","date":"2019-02-08T23:59:36.352Z","type":"join"}
