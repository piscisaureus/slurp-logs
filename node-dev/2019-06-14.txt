{"nick":"AtumT_","reason":"Quit: AtumT_","date":"2019-06-14T00:42:37.274Z","type":"quit"}
{"nick":"matthiaskrgr","reason":"*.net *.split","date":"2019-06-14T03:22:00.715Z","type":"quit"}
{"nick":"mhdawson___","reason":"*.net *.split","date":"2019-06-14T03:22:00.801Z","type":"quit"}
{"nick":"matthiaskrgr","date":"2019-06-14T03:38:04.086Z","type":"join"}
{"nick":"mhdawson___","date":"2019-06-14T03:38:04.173Z","type":"join"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2019-06-14T04:14:57.609Z","type":"quit"}
{"nick":"octetcloud","reason":"Quit: Konversation terminated!","date":"2019-06-14T04:51:50.526Z","type":"quit"}
{"nick":"octetcloud","date":"2019-06-14T04:52:08.294Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 248 seconds","date":"2019-06-14T04:58:35.320Z","type":"quit"}
{"nick":"AbedB_","date":"2019-06-14T05:12:35.339Z","type":"join"}
{"nick":"AbedB","reason":"Ping timeout: 258 seconds","date":"2019-06-14T05:15:46.168Z","type":"quit"}
{"nick":"AbedB__","date":"2019-06-14T05:18:06.332Z","type":"join"}
{"nick":"AbedB_","reason":"Ping timeout: 248 seconds","date":"2019-06-14T05:20:59.377Z","type":"quit"}
{"nick":"lundibundi","date":"2019-06-14T07:10:55.775Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 248 seconds","date":"2019-06-14T07:27:28.665Z","type":"quit"}
{"nick":"AbedB_","date":"2019-06-14T08:00:23.409Z","type":"join"}
{"nick":"AbedB__","reason":"Ping timeout: 272 seconds","date":"2019-06-14T08:03:49.851Z","type":"quit"}
{"nick":"lundibundi","date":"2019-06-14T09:17:08.412Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 248 seconds","date":"2019-06-14T09:21:31.285Z","type":"quit"}
{"nick":"lundibundi","date":"2019-06-14T09:34:36.732Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 248 seconds","date":"2019-06-14T09:39:12.673Z","type":"quit"}
{"nick":"lundibundi","date":"2019-06-14T09:47:02.415Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 248 seconds","date":"2019-06-14T09:58:19.248Z","type":"quit"}
{"nick":"lundibundi","date":"2019-06-14T11:10:31.804Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 248 seconds","date":"2019-06-14T11:47:44.662Z","type":"quit"}
{"nick":"lundibundi","date":"2019-06-14T11:55:50.617Z","type":"join"}
{"nick":"AbedB_","reason":"Read error: Connection reset by peer","date":"2019-06-14T12:24:56.505Z","type":"quit"}
{"nick":"AtumT","date":"2019-06-14T12:38:48.265Z","type":"join"}
{"nick":"lpin","date":"2019-06-14T12:39:36.940Z","type":"join"}
{"nick":"octetcloud","date":"2019-06-14T13:52:55.320Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 244 seconds","date":"2019-06-14T14:10:55.564Z","type":"quit"}
{"nick":"octetcloud","reason":"Read error: Connection reset by peer","date":"2019-06-14T14:46:50.294Z","type":"quit"}
{"nick":"Rudd0","reason":"Ping timeout: 245 seconds","date":"2019-06-14T15:03:23.494Z","type":"quit"}
{"nick":"Rudd0","date":"2019-06-14T15:18:17.779Z","type":"join"}
{"nick":"lundibundi","date":"2019-06-14T15:44:02.183Z","type":"join"}
{"nick":"AbedB","date":"2019-06-14T16:04:30.043Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 258 seconds","date":"2019-06-14T16:16:15.022Z","type":"quit"}
{"nick":"boneskull","message":"is there some way to automate adding Reviewed-By to commit msgs","date":"2019-06-14T16:21:43.162Z","type":"message"}
{"nick":"devsnek","message":"how do i pass a define to the build","date":"2019-06-14T16:21:51.765Z","type":"message"}
{"nick":"devsnek","message":"like `U_HAVE_MMAP=0`","date":"2019-06-14T16:21:55.693Z","type":"message"}
{"nick":"boneskull","message":"or does that happen automatically when landing","date":"2019-06-14T16:22:08.576Z","type":"message"}
{"nick":"boneskull","message":"Trott: ^","date":"2019-06-14T16:42:26.714Z","type":"message"}
{"nick":"AbedB","reason":"Ping timeout: 272 seconds","date":"2019-06-14T16:54:32.699Z","type":"quit"}
{"nick":"boneskull","message":"joyee: can you cut a new `core-validate-commit`?  latest on npm does not recognize `report` subsystem","date":"2019-06-14T17:02:59.533Z","type":"message"}
{"nick":"howdoi","date":"2019-06-14T17:43:57.271Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-06-14T17:59:32.998Z","type":"quit"}
{"nick":"lundibundi","date":"2019-06-14T18:50:27.609Z","type":"join"}
{"nick":"octetcloud","date":"2019-06-14T19:13:39.429Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 244 seconds","date":"2019-06-14T20:30:40.896Z","type":"quit"}
{"nick":"ssample812","date":"2019-06-14T21:04:44.234Z","type":"join"}
{"nick":"joyee","message":"boneskull: pretty sure that patch has been released. The unreleased commits do not affect functionality: https://github.com/nodejs/core-validate-commit/commits/master","date":"2019-06-14T21:07:09.038Z","type":"message"}
{"nick":"boneskull","message":"weird, hm.","date":"2019-06-14T21:07:28.739Z","type":"message"}
{"nick":"boneskull","message":"joyee: I think it was an nvm problem","date":"2019-06-14T21:08:28.673Z","type":"message"}
{"nick":"boneskull","message":"joyee: nm!","date":"2019-06-14T21:08:32.316Z","type":"message"}
{"nick":"ljharb","message":"hm?","date":"2019-06-14T21:16:56.686Z","type":"message"}
{"nick":"joyee","message":"devsnek: what's the purpose of node::errors::TryCatchsCope used with CatchMode::kNormal? It seems to behave the same as `v8::TryCatch` in that mode?","date":"2019-06-14T21:19:25.597Z","type":"message"}
{"nick":"devsnek","message":"joyee: its pretty much the same","date":"2019-06-14T21:20:38.400Z","type":"message"}
{"nick":"devsnek","message":"do you remember that pr i had which completely rewrote fatal error handling","date":"2019-06-14T21:21:01.972Z","type":"message"}
{"nick":"joyee","message":"devsnek: yeah, but I don't remember why there was a normal mode","date":"2019-06-14T21:21:30.573Z","type":"message"}
{"nick":"devsnek","message":"well i mean","date":"2019-06-14T21:21:43.579Z","type":"message"}
{"nick":"devsnek","message":"using a consistent interface is good","date":"2019-06-14T21:21:48.597Z","type":"message"}
{"nick":"devsnek","message":"plus TryCatchScope has a few other things to make sure it isn't accidentally used not in a scoped manner","date":"2019-06-14T21:22:11.119Z","type":"message"}
{"nick":"joyee","message":"Probably, if there are some comments about the modes","date":"2019-06-14T21:22:16.291Z","type":"message"}
{"nick":"joyee","message":"Because we don't really enforce using `node::errors::TryCatchsCope` either, so it makes you wonder why use the Node.js one if they are basically the same","date":"2019-06-14T21:23:33.250Z","type":"message"}
{"nick":"devsnek","message":"because sometimes we have the fatal one","date":"2019-06-14T21:23:54.669Z","type":"message"}
{"nick":"devsnek","message":"and being consistent is good","date":"2019-06-14T21:23:58.193Z","type":"message"}
{"nick":"devsnek","message":"if we have some sort of place to put recommendations like this i would add one saying \"use node::TryCatchScope\"","date":"2019-06-14T21:24:18.389Z","type":"message"}
{"nick":"joyee","message":"c++ style guide?","date":"2019-06-14T21:24:28.251Z","type":"message"}
{"nick":"devsnek","message":"do we have one of those","date":"2019-06-14T21:24:53.036Z","type":"message"}
{"nick":"joyee","message":"That's basically node::Persistent kind of situation, but  `node::Persistent` has comments about why it exists","date":"2019-06-14T21:25:02.380Z","type":"message"}
{"nick":"devsnek","message":"the original reason i created TryCatchScope is not currently existent","date":"2019-06-14T21:25:24.868Z","type":"message"}
{"nick":"joyee","message":"Although it's now gone","date":"2019-06-14T21:25:27.288Z","type":"message"}
{"nick":"devsnek","message":"i would like to revisit it though","date":"2019-06-14T21:25:35.350Z","type":"message"}
{"nick":"devsnek","message":"basically rewriting how we format stack traces","date":"2019-06-14T21:25:46.279Z","type":"message"}
{"nick":"devsnek","message":"to make it more consistent and such","date":"2019-06-14T21:25:51.360Z","type":"message"}
{"nick":"devsnek","message":"the subclass was needed to capture stack information","date":"2019-06-14T21:26:17.892Z","type":"message"}
{"nick":"joyee","message":"that is also possible with `v8::TryCatch`?","date":"2019-06-14T21:26:56.605Z","type":"message"}
{"nick":"devsnek","message":"not really","date":"2019-06-14T21:27:07.308Z","type":"message"}
{"nick":"joyee","message":"why?","date":"2019-06-14T21:27:16.852Z","type":"message"}
{"nick":"devsnek","message":"so you know uh","date":"2019-06-14T21:27:29.811Z","type":"message"}
{"nick":"devsnek","message":"there is this metadata that v8 has about exceptions","date":"2019-06-14T21:27:40.816Z","type":"message"}
{"nick":"ssample812","reason":"Quit: Page closed","date":"2019-06-14T21:27:41.770Z","type":"quit"}
{"nick":"devsnek","message":"which includes the line and location","date":"2019-06-14T21:27:45.828Z","type":"message"}
{"nick":"joyee","message":"Message?","date":"2019-06-14T21:27:51.226Z","type":"message"}
{"nick":"devsnek","message":"yeah that thing","date":"2019-06-14T21:27:55.216Z","type":"message"}
{"nick":"joyee","message":"That's also available through `try_catch.Message()`?","date":"2019-06-14T21:28:10.487Z","type":"message"}
{"nick":"devsnek","message":"ok yes","date":"2019-06-14T21:28:20.061Z","type":"message"}
{"nick":"devsnek","message":"but only if the exception is a native error","date":"2019-06-14T21:28:25.246Z","type":"message"}
{"nick":"devsnek","message":"and we also support stuff like `throw 5`","date":"2019-06-14T21:28:39.527Z","type":"message"}
{"nick":"devsnek","message":"v8 obviously can't store a Message on `5`","date":"2019-06-14T21:29:07.349Z","type":"message"}
{"nick":"devsnek","message":"so i needed to capture the message from the try_catch exactly when it throws","date":"2019-06-14T21:29:20.985Z","type":"message"}
{"nick":"joyee","message":"You mean it's only possible to inject some code in the destructor with subclassing?","date":"2019-06-14T21:30:35.336Z","type":"message"}
{"nick":"devsnek","message":"yeah","date":"2019-06-14T21:30:43.440Z","type":"message"}
{"nick":"devsnek","message":"the original TryCatchScope overrode `ReThrow` to save the Message if the target wasn't a native exception","date":"2019-06-14T21:31:13.387Z","type":"message"}
{"nick":"devsnek","message":"but when i split it into a separate pr i removed that part","date":"2019-06-14T21:31:32.003Z","type":"message"}
{"nick":"joyee","message":"`ReThrow()` is not virtual though?","date":"2019-06-14T21:32:27.664Z","type":"message"}
{"nick":"devsnek","message":"i'll be honest i still don't understand what virtual methods are","date":"2019-06-14T21:35:40.440Z","type":"message"}
{"nick":"devsnek","message":"but TryCatchScope had its own ReThrow which then called `v8::TryCatch::ReThrow()`","date":"2019-06-14T21:36:07.091Z","type":"message"}
{"nick":"joyee","message":"If you call `try_catch->ReThrow()` where  try_catch is a `TryCatch*` that points to a `TryCatchScope`, you are still going to invoke the `TryCatch::ReThrow()` if it's not virtual. If it's virtual, you are going to invoke `TryCatchScope::ReThrow()` instead","date":"2019-06-14T21:39:31.666Z","type":"message"}
{"nick":"joyee","message":"The same applies to references","date":"2019-06-14T21:40:09.243Z","type":"message"}
{"nick":"devsnek","message":"ic","date":"2019-06-14T21:40:19.771Z","type":"message"}
{"nick":"devsnek","message":"well since TryCatch is a fairly localized structure","date":"2019-06-14T21:40:31.261Z","type":"message"}
{"nick":"devsnek","message":"i don't think its much of a problem","date":"2019-06-14T21:40:35.831Z","type":"message"}
{"nick":"devsnek","message":"the only place we pass them out is fatal exceptions","date":"2019-06-14T21:40:46.697Z","type":"message"}
{"nick":"devsnek","message":"so that the fatal exception can inspect the call site and stuff","date":"2019-06-14T21:40:55.112Z","type":"message"}
{"nick":"devsnek","message":"not rethrow it","date":"2019-06-14T21:40:56.717Z","type":"message"}
{"nick":"joyee","message":"I remember we had something like `FatalTryCatch` at one point?","date":"2019-06-14T21:47:00.917Z","type":"message"}
{"nick":"devsnek","message":"TryCatchScope replaced FatalTryCatch","date":"2019-06-14T21:47:43.828Z","type":"message"}
{"nick":"ohad","date":"2019-06-14T22:25:58.268Z","type":"join"}
{"nick":"qbit","reason":"Quit: WeeChat 2.4","date":"2019-06-14T23:09:33.776Z","type":"quit"}
{"nick":"ohad","reason":"Quit: Page closed","date":"2019-06-14T23:59:59.113Z","type":"quit"}
