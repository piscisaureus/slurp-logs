{"nick":"dbevenius","date":"2019-01-24T00:14:23.315Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-01-24T00:19:03.212Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-01-24T00:19:46.000Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T00:34:11.433Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-01-24T00:38:48.376Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T00:56:26.288Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-01-24T01:00:52.297Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2019-01-24T01:09:22.210Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T01:25:29.655Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-24T01:29:56.676Z","type":"quit"}
{"nick":"antsmartian","date":"2019-01-24T01:49:32.065Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-24T01:54:26.321Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-01-24T01:58:48.341Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T02:14:32.516Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-24T02:18:47.414Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T02:35:22.587Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 244 seconds","date":"2019-01-24T02:39:57.353Z","type":"quit"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-01-24T02:43:32.672Z","type":"quit"}
{"nick":"antsmartian","date":"2019-01-24T02:49:32.787Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-01-24T02:53:30.312Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T02:55:32.765Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-24T03:00:32.743Z","type":"quit"}
{"nick":"bradleymeck","message":"joyee: https://github.com/nodejs/node/compare/master...bmeck:policy-worker-fix#diff-2fac8ba6c6d089daac449456cdd97917R11 , it does start up a lot later and lazier, but the timing is still... uncertain?","date":"2019-01-24T03:19:33.060Z","type":"message"}
{"nick":"bradleymeck","message":"moved it far enough that it happens after CJS starts up","date":"2019-01-24T03:20:00.418Z","type":"message"}
{"nick":"dbevenius","date":"2019-01-24T03:45:36.362Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-01-24T03:50:03.648Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T04:04:19.035Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-01-24T04:08:42.040Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T04:11:09.663Z","type":"join"}
{"nick":"wawasho","reason":"Ping timeout: 264 seconds","date":"2019-01-24T05:12:40.066Z","type":"quit"}
{"nick":"seishun","date":"2019-01-24T06:29:35.609Z","type":"join"}
{"nick":"lpin","date":"2019-01-24T06:31:45.784Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2019-01-24T07:05:47.409Z","type":"quit"}
{"nick":"seishun","date":"2019-01-24T07:48:07.148Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2019-01-24T07:52:27.328Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-24T08:10:26.716Z","type":"join"}
{"nick":"yaelhe","date":"2019-01-24T08:45:00.513Z","type":"join"}
{"nick":"yaelhe","reason":"Remote host closed the connection","date":"2019-01-24T09:18:08.590Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 240 seconds","date":"2019-01-24T09:34:26.636Z","type":"quit"}
{"nick":"zeds","date":"2019-01-24T09:43:52.780Z","type":"join"}
{"nick":"zeds","date":"2019-01-24T09:47:02.946Z","type":"part"}
{"nick":"yaelhe","date":"2019-01-24T10:15:35.196Z","type":"join"}
{"nick":"yaelhe","reason":"Remote host closed the connection","date":"2019-01-24T10:28:39.608Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-24T12:13:00.565Z","type":"join"}
{"nick":"al-damiri","date":"2019-01-24T12:42:32.598Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 240 seconds","date":"2019-01-24T13:06:07.341Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-24T13:12:27.427Z","type":"join"}
{"nick":"yaelhe","date":"2019-01-24T13:21:15.319Z","type":"join"}
{"nick":"yaelhe","reason":"Remote host closed the connection","date":"2019-01-24T13:34:15.218Z","type":"quit"}
{"nick":"antsmartian","date":"2019-01-24T14:14:20.611Z","type":"join"}
{"nick":"joyee","message":"bradleymeck: on master it's now only added when the command line API is accessed","date":"2019-01-24T14:23:07.573Z","type":"message"}
{"nick":"joyee","message":"https://github.com/nodejs/node/commit/d3806f9f3cded6bce9831f5d8ff88372ba7e5861","date":"2019-01-24T14:24:50.031Z","type":"message"}
{"nick":"zeds1","date":"2019-01-24T14:39:15.026Z","type":"join"}
{"nick":"zeds1","date":"2019-01-24T14:39:21.703Z","type":"part"}
{"nick":"bradleymeck","message":"gah, something has made my env variables now break the tests??","date":"2019-01-24T15:27:54.790Z","type":"message"}
{"nick":"bradleymeck","message":"they are parsing my env variables in node-report?","date":"2019-01-24T15:28:01.864Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: NODE_OPTIONS?","date":"2019-01-24T15:29:09.964Z","type":"message"}
{"nick":"bradleymeck","message":"ITERM_PREV_PS1 isn't properly being serialized somewhere in a report file","date":"2019-01-24T15:29:27.935Z","type":"message"}
{"nick":"bradleymeck","message":"it contains a newline and is freaking things out","date":"2019-01-24T15:29:35.931Z","type":"message"}
{"nick":"joyee","message":"huh? It dumps environment variables?","date":"2019-01-24T15:30:43.134Z","type":"message"}
{"nick":"joyee","message":"oh, it does","date":"2019-01-24T15:30:47.458Z","type":"message"}
{"nick":"joyee","message":"hmm, that's kind of worrying","date":"2019-01-24T15:30:56.112Z","type":"message"}
{"nick":"bradleymeck","message":"it is quite worrying XD","date":"2019-01-24T15:31:03.647Z","type":"message"}
{"nick":"joyee","message":"At least it should be opt-in, or provides filters..","date":"2019-01-24T15:31:24.712Z","type":"message"}
{"nick":"Hu0p","date":"2019-01-24T15:34:29.667Z","type":"join"}
{"nick":"bradleymeck","message":"found it, it deals with node_report.cc not properly escaping JSON","date":"2019-01-24T15:37:43.715Z","type":"message"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-01-24T15:42:04.251Z","type":"quit"}
{"nick":"guybedford","date":"2019-01-24T15:47:16.255Z","type":"join"}
{"nick":"guybedford","message":"devsnek are you around to discuss vm dynamic import?","date":"2019-01-24T15:49:21.086Z","type":"message"}
{"nick":"devsnek","message":"guybedford: hello","date":"2019-01-24T15:49:29.905Z","type":"message"}
{"nick":"guybedford","message":"so as you know my goal is to try and move forward with that PR","date":"2019-01-24T15:49:54.494Z","type":"message"}
{"nick":"devsnek","message":"indeed","date":"2019-01-24T15:49:58.072Z","type":"message"}
{"nick":"guybedford","message":"and we attempted to do the dynamic import implementation there but there was a segmentation fault happening on the reference","date":"2019-01-24T15:50:20.182Z","type":"message"}
{"nick":"guybedford","message":"the naive fix would have been to make the reference persistent but I just can't bring myself to write an intentional memory leak in Node","date":"2019-01-24T15:50:51.124Z","type":"message"}
{"nick":"guybedford","message":"so I'm not sure what is the best approach moving forward","date":"2019-01-24T15:51:06.317Z","type":"message"}
{"nick":"devsnek","message":"guybedford: so right now we tie the lifetime of the v8::Module to the lifetime of our ModuleWrap","date":"2019-01-24T15:51:27.161Z","type":"message"}
{"nick":"devsnek","message":"i think the fix would be doing the opposite","date":"2019-01-24T15:51:34.096Z","type":"message"}
{"nick":"devsnek","message":"saying the ModuleWrap cannot die until the v8::Module dies","date":"2019-01-24T15:51:43.733Z","type":"message"}
{"nick":"bradleymeck","message":"I don't think v8::Module has lifecycle hooks to know when it dies though?","date":"2019-01-24T15:52:14.233Z","type":"message"}
{"nick":"devsnek","message":"ðŸ¤·","date":"2019-01-24T15:52:20.479Z","type":"message"}
{"nick":"bradleymeck","message":"only the realm being nuked?","date":"2019-01-24T15:52:24.352Z","type":"message"}
{"nick":"guybedford","message":"right it's really about realm disposal","date":"2019-01-24T15:52:33.110Z","type":"message"}
{"nick":"devsnek","message":"whether it does or doesn't isn't really the problem on our end","date":"2019-01-24T15:52:36.023Z","type":"message"}
{"nick":"guybedford","message":"but it does block us...","date":"2019-01-24T15:52:43.006Z","type":"message"}
{"nick":"devsnek","message":"like if that becomes a problem","date":"2019-01-24T15:52:52.127Z","type":"message"}
{"nick":"guybedford","message":"unless we are ok with a permanent memory leak on this API?","date":"2019-01-24T15:52:52.431Z","type":"message"}
{"nick":"guybedford","message":"right now all modules in the root realm are persistent and additive","date":"2019-01-24T15:53:16.396Z","type":"message"}
{"nick":"devsnek","message":"we can just go to v8 and ask them to increase the granularity of the gc for modules","date":"2019-01-24T15:53:18.640Z","type":"message"}
{"nick":"guybedford","message":"which is ok because we only have one realm and registry and there is no module disposal","date":"2019-01-24T15:53:26.211Z","type":"message"}
{"nick":"guybedford","message":"but VM is different","date":"2019-01-24T15:53:30.547Z","type":"message"}
{"nick":"guybedford","message":"because VM is all about being able to spin up new realms and get rid of them","date":"2019-01-24T15:53:39.765Z","type":"message"}
{"nick":"guybedford","message":"if the \"get rid of them\" part is a false promise that will bite someone who assumes otherwise","date":"2019-01-24T15:53:53.764Z","type":"message"}
{"nick":"guybedford","message":"when they run out of memory","date":"2019-01-24T15:53:57.682Z","type":"message"}
{"nick":"devsnek","message":"well they're tied to the v8::Context afaik","date":"2019-01-24T15:54:11.183Z","type":"message"}
{"nick":"devsnek","message":"assuming we don't ref them to live longer with our ModuleWrap","date":"2019-01-24T15:54:23.642Z","type":"message"}
{"nick":"guybedford","message":"if there is no solution to this issue, we might need to just revert the VM implementation of dynamic import entirely until there is a suitable approach","date":"2019-01-24T15:54:33.276Z","type":"message"}
{"nick":"guybedford","message":"any thoughts on a suitable path forward?","date":"2019-01-24T15:55:35.353Z","type":"message"}
{"nick":"devsnek","message":"what was the original problem again?","date":"2019-01-24T15:55:52.376Z","type":"message"}
{"nick":"devsnek","message":"the ModuleWrap was being collected too early right?","date":"2019-01-24T15:56:09.226Z","type":"message"}
{"nick":"guybedford","message":"no the reference to the vm.Script and dynamic import callback are being collected - https://github.com/nodejs/node/issues/25424","date":"2019-01-24T15:56:35.869Z","type":"message"}
{"nick":"devsnek","message":"well the callback itself isn't being collected","date":"2019-01-24T15:57:37.450Z","type":"message"}
{"nick":"guybedford","message":"yes it is","date":"2019-01-24T15:58:13.483Z","type":"message"}
{"nick":"devsnek","message":"no, because it gets called","date":"2019-01-24T15:58:24.739Z","type":"message"}
{"nick":"guybedford","message":"because changing the WeakMap in the bootstrapper to a Map fixes the issue","date":"2019-01-24T15:58:25.687Z","type":"message"}
{"nick":"devsnek","message":"i really wish my debug build had workd","date":"2019-01-24T15:59:13.522Z","type":"message"}
{"nick":"guybedford","message":"if it was collected it might still be called right? Because it still \"exists\" in memory?","date":"2019-01-24T16:00:28.165Z","type":"message"}
{"nick":"guybedford","message":"(just trying to work out why the console.log is working)","date":"2019-01-24T16:01:06.126Z","type":"message"}
{"nick":"devsnek","message":"for the console.log to work it has to do the weakmap get","date":"2019-01-24T16:01:25.263Z","type":"message"}
{"nick":"devsnek","message":"at the time of the import call","date":"2019-01-24T16:01:29.669Z","type":"message"}
{"nick":"guybedford","message":"and the weakmap wouldn't return an object that had been disposed I guess","date":"2019-01-24T16:01:58.463Z","type":"message"}
{"nick":"devsnek","message":"well just because they key of a weakmap has been collected doesn't mean the value is","date":"2019-01-24T16:02:20.959Z","type":"message"}
{"nick":"devsnek","message":"`const a = {}; weak.set({}, a)`","date":"2019-01-24T16:02:30.330Z","type":"message"}
{"nick":"guybedford","message":"ok well something is being disposed that shouldn't be is the point","date":"2019-01-24T16:02:34.744Z","type":"message"}
{"nick":"guybedford","message":"because the refernce model simply isn't sound","date":"2019-01-24T16:02:43.949Z","type":"message"}
{"nick":"devsnek","message":"yeah there's definitely a problem somewhere","date":"2019-01-24T16:02:53.245Z","type":"message"}
{"nick":"guybedford","message":"so to move this PR forward it's kind of tricky because I can't see another option other than:","date":"2019-01-24T16:03:16.301Z","type":"message"}
{"nick":"bradleymeck","message":"would it be simpler to just state that you can only make an import handler when you create a vm.Context ?","date":"2019-01-24T16:03:17.173Z","type":"message"}
{"nick":"guybedford","message":"1. Make it a persistent memory leak ( / eternal reference)","date":"2019-01-24T16:03:31.311Z","type":"message"}
{"nick":"guybedford","message":"2. revert vm.Script importModuleDynamically","date":"2019-01-24T16:03:41.694Z","type":"message"}
{"nick":"guybedford","message":"3. Move forward without the importModuleDynamically callback on vm.Script","date":"2019-01-24T16:03:59.494Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: tying it to the realm means you can't use them in the main realm","date":"2019-01-24T16:04:09.777Z","type":"message"}
{"nick":"bradleymeck","message":"sure","date":"2019-01-24T16:04:19.053Z","type":"message"}
{"nick":"devsnek","message":"guybedford: 4. tie it to the lifetime of the actual module in v8 instead?","date":"2019-01-24T16:04:30.820Z","type":"message"}
{"nick":"guybedford","message":"sorry I mean 3. Without the importModuleDynamically callback on vm.compileFunction","date":"2019-01-24T16:04:37.251Z","type":"message"}
{"nick":"devsnek","message":"well compileFunction needs it","date":"2019-01-24T16:04:54.467Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: does the realms api have modules yet, or still just script eval","date":"2019-01-24T16:05:17.850Z","type":"message"}
{"nick":"bradleymeck","message":"they are finalizing stuff, but it does not work like vm.*","date":"2019-01-24T16:05:39.990Z","type":"message"}
{"nick":"guybedford","message":"So the v8.Module would carry the reference to the importModuleDynamically callback and vm.Script","date":"2019-01-24T16:05:40.598Z","type":"message"}
{"nick":"guybedford","message":"I guess the next question is when is the v8.Module disposed?","date":"2019-01-24T16:06:06.865Z","type":"message"}
{"nick":"guybedford","message":"for vm?","date":"2019-01-24T16:06:09.059Z","type":"message"}
{"nick":"devsnek","message":"whenever v8 is done with it?","date":"2019-01-24T16:06:20.011Z","type":"message"}
{"nick":"bradleymeck","message":"you can't make a Script/Module and get a 1st class value for it, and you cannot make one in the top Realm","date":"2019-01-24T16:06:35.349Z","type":"message"}
{"nick":"guybedford","message":"Can v8.Module be disposed while there is module code still executing?","date":"2019-01-24T16:06:49.336Z","type":"message"}
{"nick":"guybedford","message":"I think so, right?","date":"2019-01-24T16:06:55.008Z","type":"message"}
{"nick":"devsnek","message":"its just a normal heap object","date":"2019-01-24T16:07:02.522Z","type":"message"}
{"nick":"guybedford","message":"Because it is only needed to get the bindings set up?","date":"2019-01-24T16:07:09.908Z","type":"message"}
{"nick":"guybedford","message":"although it does contain the cells for the bindings themselves","date":"2019-01-24T16:07:21.302Z","type":"message"}
{"nick":"bradleymeck","message":"guybedford: I guess that depends, its local import map would still be alive","date":"2019-01-24T16:07:24.758Z","type":"message"}
{"nick":"guybedford","message":"the cells are kind of crucial right?","date":"2019-01-24T16:07:35.673Z","type":"message"}
{"nick":"guybedford","message":"for live bindings that's where they are?","date":"2019-01-24T16:07:40.761Z","type":"message"}
{"nick":"guybedford","message":"in this module Cell* reference","date":"2019-01-24T16:07:45.831Z","type":"message"}
{"nick":"devsnek","message":"the cells are the actual lexical environment that code runs in","date":"2019-01-24T16:07:52.927Z","type":"message"}
{"nick":"guybedford","message":"so I don't think they do get disposed like any other heap object?","date":"2019-01-24T16:07:56.012Z","type":"message"}
{"nick":"devsnek","message":"as long as there are references to those, it can't be collected","date":"2019-01-24T16:08:09.090Z","type":"message"}
{"nick":"devsnek","message":"like any other heap object, if v8 clears all references it will remove it","date":"2019-01-24T16:08:51.815Z","type":"message"}
{"nick":"devsnek","message":"it just has a different idea of references than a js object","date":"2019-01-24T16:09:03.904Z","type":"message"}
{"nick":"guybedford","message":"I think it is more than that though?","date":"2019-01-24T16:09:14.830Z","type":"message"}
{"nick":"guybedford","message":"because the bindings live in there like they live in a context","date":"2019-01-24T16:09:24.932Z","type":"message"}
{"nick":"guybedford","message":"so I think v8.Module needs explicit disposal","date":"2019-01-24T16:09:31.233Z","type":"message"}
{"nick":"devsnek","message":"yeah the bindings are also references","date":"2019-01-24T16:09:34.213Z","type":"message"}
{"nick":"devsnek","message":"it just has more references","date":"2019-01-24T16:09:45.828Z","type":"message"}
{"nick":"guybedford","message":"it's not a HeapObject","date":"2019-01-24T16:10:06.887Z","type":"message"}
{"nick":"guybedford","message":"it doesn't extend from HeapObject","date":"2019-01-24T16:10:13.248Z","type":"message"}
{"nick":"guybedford","message":"(like eg FixedArray)","date":"2019-01-24T16:10:32.196Z","type":"message"}
{"nick":"devsnek","message":"yeah it does","date":"2019-01-24T16:10:37.186Z","type":"message"}
{"nick":"guybedford","message":"no it doesnt","date":"2019-01-24T16:10:40.672Z","type":"message"}
{"nick":"devsnek","message":"it extends Struct","date":"2019-01-24T16:10:46.198Z","type":"message"}
{"nick":"guybedford","message":"https://github.com/v8/v8/blob/master/src/objects/module.h#L30","date":"2019-01-24T16:10:48.423Z","type":"message"}
{"nick":"devsnek","message":"which extends HeapObject","date":"2019-01-24T16:10:49.559Z","type":"message"}
{"nick":"devsnek","message":"structs are just heap objects with known named slots","date":"2019-01-24T16:11:04.771Z","type":"message"}
{"nick":"guybedford","message":"ok... yes","date":"2019-01-24T16:11:35.846Z","type":"message"}
{"nick":"guybedford","message":"but the issue is that if v8.Module is disposed, you lose the bindings of that module","date":"2019-01-24T16:12:01.308Z","type":"message"}
{"nick":"guybedford","message":"for example:","date":"2019-01-24T16:12:06.040Z","type":"message"}
{"nick":"guybedford","message":"export var p = 5;","date":"2019-01-24T16:12:13.421Z","type":"message"}
{"nick":"devsnek","message":"yeah i get what you're saying","date":"2019-01-24T16:12:18.815Z","type":"message"}
{"nick":"guybedford","message":"setInterval(() => { console.log(p) })","date":"2019-01-24T16:12:23.828Z","type":"message"}
{"nick":"guybedford","message":"will break if you dispose the module object","date":"2019-01-24T16:12:28.488Z","type":"message"}
{"nick":"devsnek","message":"indeed","date":"2019-01-24T16:12:32.722Z","type":"message"}
{"nick":"guybedford","message":"so we are relying on the fact that the loader holds a persistent reference","date":"2019-01-24T16:12:38.856Z","type":"message"}
{"nick":"guybedford","message":"that the execution keeps working","date":"2019-01-24T16:12:41.588Z","type":"message"}
{"nick":"devsnek","message":"so v8 won't collect it if you do that","date":"2019-01-24T16:12:46.110Z","type":"message"}
{"nick":"devsnek","message":"you have to lose both modules","date":"2019-01-24T16:12:57.147Z","type":"message"}
{"nick":"guybedford","message":"won't collect the module?","date":"2019-01-24T16:12:59.523Z","type":"message"}
{"nick":"devsnek","message":"right","date":"2019-01-24T16:13:04.844Z","type":"message"}
{"nick":"guybedford","message":"even without a persistent reference?","date":"2019-01-24T16:13:05.194Z","type":"message"}
{"nick":"guybedford","message":"why?","date":"2019-01-24T16:13:08.538Z","type":"message"}
{"nick":"devsnek","message":"because it has its own internal references for the bindings","date":"2019-01-24T16:13:37.223Z","type":"message"}
{"nick":"devsnek","message":"ok i need to run to class, will you be around later?","date":"2019-01-24T16:14:13.666Z","type":"message"}
{"nick":"guybedford","message":"So Module -> regular_exports (FixedArray of Cells) -> Cell binding","date":"2019-01-24T16:14:39.307Z","type":"message"}
{"nick":"guybedford","message":"where all are GC'd","date":"2019-01-24T16:14:42.663Z","type":"message"}
{"nick":"guybedford","message":"so the cell can be held independently","date":"2019-01-24T16:14:48.592Z","type":"message"}
{"nick":"guybedford","message":"yes I see what you are saying","date":"2019-01-24T16:14:52.061Z","type":"message"}
{"nick":"guybedford","message":"it's all on the graph","date":"2019-01-24T16:14:57.053Z","type":"message"}
{"nick":"guybedford","message":"sure I'll stick around here, just ping me","date":"2019-01-24T16:15:21.769Z","type":"message"}
{"nick":"devsnek","message":"later","date":"2019-01-24T16:15:29.023Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 244 seconds","date":"2019-01-24T16:16:17.355Z","type":"quit"}
{"nick":"DanielKrom","reason":"Quit: Connection closed for inactivity","date":"2019-01-24T16:19:46.576Z","type":"quit"}
{"nick":"antsmartian","date":"2019-01-24T16:26:47.715Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-01-24T16:30:51.577Z","type":"quit"}
{"nick":"AtumT","date":"2019-01-24T16:39:28.834Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-01-24T16:44:32.136Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T16:54:51.580Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-01-24T16:55:38.551Z","type":"quit"}
{"nick":"antsmartian","date":"2019-01-24T16:55:49.486Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-24T16:55:52.064Z","type":"join"}
{"nick":"zeds","date":"2019-01-24T17:06:11.973Z","type":"join"}
{"nick":"zeds","reason":"Excess Flood","date":"2019-01-24T17:06:14.393Z","type":"quit"}
{"nick":"zeds","date":"2019-01-24T17:06:36.974Z","type":"join"}
{"nick":"zeds","date":"2019-01-24T17:07:03.097Z","type":"part"}
{"nick":"julianduque","reason":"Quit: Lost terminal","date":"2019-01-24T17:28:51.401Z","type":"quit"}
{"nick":"seishun","date":"2019-01-24T17:34:38.229Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-01-24T17:58:48.683Z","type":"quit"}
{"nick":"julianduque","date":"2019-01-24T18:21:39.350Z","type":"join"}
{"nick":"gamelaster","date":"2019-01-24T18:36:55.948Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-01-24T18:38:26.569Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T18:45:36.887Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-24T18:50:07.330Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-01-24T18:58:27.475Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2019-01-24T19:12:26.086Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T19:24:54.716Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-24T19:29:26.703Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T19:45:14.268Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-24T19:50:02.020Z","type":"quit"}
{"nick":"guybedford","reason":"Quit: Page closed","date":"2019-01-24T19:56:46.300Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T20:05:51.391Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-01-24T20:10:28.301Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T20:24:53.049Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-01-24T20:29:23.994Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-24T20:31:20.210Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-24T20:46:15.353Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 244 seconds","date":"2019-01-24T20:50:38.354Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2019-01-24T21:12:56.591Z","type":"quit"}
{"nick":"mrkmg","date":"2019-01-24T21:23:21.768Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 246 seconds","date":"2019-01-24T21:30:39.057Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T21:36:09.806Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-24T21:40:26.582Z","type":"quit"}
{"nick":"zeds","date":"2019-01-24T21:54:58.459Z","type":"join"}
{"nick":"zeds","date":"2019-01-24T21:55:53.143Z","type":"part"}
{"nick":"dbevenius","date":"2019-01-24T21:55:54.713Z","type":"join"}
{"nick":"mrkmg","reason":"Remote host closed the connection","date":"2019-01-24T22:00:10.238Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-24T22:00:26.631Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T22:05:26.358Z","type":"join"}
{"nick":"gamelaster","reason":"Ping timeout: 268 seconds","date":"2019-01-24T22:05:41.869Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-01-24T22:09:38.348Z","type":"quit"}
{"nick":"devsnek","message":"guybedford: i'm around now if you still are","date":"2019-01-24T22:15:49.966Z","type":"message"}
{"nick":"wawasho","date":"2019-01-24T23:10:46.636Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-24T23:18:59.694Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-01-24T23:20:32.404Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-24T23:23:26.590Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-24T23:27:06.351Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 244 seconds","date":"2019-01-24T23:31:19.350Z","type":"quit"}
{"nick":"trevnorris","date":"2019-01-24T23:44:11.971Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-24T23:46:01.668Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-01-24T23:50:28.371Z","type":"quit"}
