{"nick":"dbevenius","date":"2019-02-19T00:14:34.172Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-19T00:18:57.077Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T00:37:09.188Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-02-19T00:41:44.192Z","type":"quit"}
{"nick":"neo4","date":"2019-02-19T01:14:27.397Z","type":"join"}
{"nick":"dbevenius","date":"2019-02-19T01:15:39.312Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-02-19T01:20:04.098Z","type":"quit"}
{"nick":"julianduque","reason":"Ping timeout: 245 seconds","date":"2019-02-19T01:35:28.321Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T02:14:49.116Z","type":"join"}
{"nick":"joepie91","reason":"Excess Flood","date":"2019-02-19T02:15:29.566Z","type":"quit"}
{"nick":"joepie91","date":"2019-02-19T02:15:53.882Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-19T02:19:00.006Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T02:35:39.747Z","type":"join"}
{"nick":"dbevenius","date":"2019-02-19T02:35:41.772Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-19T02:39:52.547Z","type":"quit"}
{"nick":"julianduque","reason":"Ping timeout: 268 seconds","date":"2019-02-19T02:40:29.715Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T02:54:41.018Z","type":"join"}
{"nick":"julianduque","date":"2019-02-19T02:56:40.011Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-19T02:58:56.775Z","type":"quit"}
{"nick":"julianduque","reason":"Ping timeout: 246 seconds","date":"2019-02-19T03:01:21.010Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T03:17:42.507Z","type":"join"}
{"nick":"dbevenius","date":"2019-02-19T03:37:44.876Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-02-19T03:42:20.855Z","type":"quit"}
{"nick":"julianduque","reason":"Ping timeout: 250 seconds","date":"2019-02-19T03:48:20.498Z","type":"quit"}
{"nick":"neo4","reason":"Ping timeout: 246 seconds","date":"2019-02-19T03:49:04.344Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T04:04:09.868Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 255 seconds","date":"2019-02-19T04:08:53.807Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T04:13:39.711Z","type":"join"}
{"nick":"dbevenius","date":"2019-02-19T04:20:46.483Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-19T04:25:07.266Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T04:31:05.103Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-02-19T04:37:36.224Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T04:37:47.351Z","type":"join"}
{"nick":"Trott","message":"hemx To get coverage, I think you have to re-build.  Like, `make coverage-build` or something like that. But I'm not sure as I've never done coverage for a single file. bcoe is the person who's done the most with coverage lately, but they don't hang out on IRC AFAIK.","date":"2019-02-19T04:42:26.974Z","type":"message"}
{"nick":"Trott","message":"ljharb bradleymeck Would be interested in your take on the `SystemError` suggestion in https://github.com/nodejs/node/issues/8342.  Would also be interested in who else you would ping. I'm not sure who else is a TC-39 regular attendee.","date":"2019-02-19T04:43:23.522Z","type":"message"}
{"nick":"ljharb","message":"Trott: i mean, node can certainly do that. However I’d want node to provide a cross-realm SystemError.is kind of check, since instanceof isn’t reliable, and providing a new global error type is kind of a big deal","date":"2019-02-19T04:48:08.767Z","type":"message"}
{"nick":"ljharb","message":"as for typescript, i both think that should never be a motivator, and also there’s nothing stopping TS from having a NodeError type that’s Error plus an interface containing each of the error codes, hardcoded.","date":"2019-02-19T04:49:25.335Z","type":"message"}
{"nick":"devsnek","message":"Trott: rn its just the difference of instead of `error = new Error(); error.code = -1; error.errno = 5` to `error = new SystemError(); ...`","date":"2019-02-19T04:50:05.364Z","type":"message"}
{"nick":"devsnek","message":"we don't need to go to tc39 or anything","date":"2019-02-19T04:50:14.920Z","type":"message"}
{"nick":"devsnek","message":"unless we wanted to add match catch (which i wouldn't argue with but i think others would)","date":"2019-02-19T04:50:57.952Z","type":"message"}
{"nick":"Trott","message":"I know we don't need TC-39 to bless it or anything. But it seems like the kind of thing that would have ramifications that they would be more aware of than, say, me.","date":"2019-02-19T04:51:11.213Z","type":"message"}
{"nick":"devsnek","message":"oh i thought you were suggesting adding a new SystemError to js","date":"2019-02-19T04:51:49.532Z","type":"message"}
{"nick":"devsnek","message":"my bad lol","date":"2019-02-19T04:51:52.529Z","type":"message"}
{"nick":"Trott","message":"I'm neutral. I just want to make sure the right people are aware of the issue and offering relevant insight.","date":"2019-02-19T04:53:55.541Z","type":"message"}
{"nick":"devsnek","message":"on the subject of errors, does anyone else find it weird that we document the js errors in our documentation","date":"2019-02-19T04:54:03.782Z","type":"message"}
{"nick":"Trott","message":"Yes.","date":"2019-02-19T04:54:28.039Z","type":"message"}
{"nick":"Trott","message":"I'd prefer we link to MDN or something if we need to list them out.","date":"2019-02-19T04:55:32.393Z","type":"message"}
{"nick":"Trott","message":"(Or the spec if it's straightforward.)","date":"2019-02-19T04:55:45.450Z","type":"message"}
{"nick":"devsnek","message":"definitely mdn","date":"2019-02-19T04:55:57.297Z","type":"message"}
{"nick":"devsnek","message":"i think the only place we link the spec is in the vm module docs","date":"2019-02-19T04:56:18.152Z","type":"message"}
{"nick":"Trott","message":"https://www.irccloud.com/pastebin/1ck4CurW/","date":"2019-02-19T04:57:19.773Z","type":"message"}
{"nick":"neo4","date":"2019-02-19T04:58:27.848Z","type":"join"}
{"nick":"Trott","message":"Or if you don't want to click that link: Looks like we link to it in 4 other docs, for what it's worth. (n-api, intl, assert, and util.)","date":"2019-02-19T04:58:57.484Z","type":"message"}
{"nick":"joyee","message":"I can’t really see how having error subclasses help TS users if they cannot throw these errors themselves","date":"2019-02-19T04:59:17.482Z","type":"message"}
{"nick":"Trott","message":"It could be hung off a built-in module somewhere, the way `AssertionError` is available in the `assert` module, maybe?","date":"2019-02-19T05:00:00.872Z","type":"message"}
{"nick":"joyee","message":"Being able to group the errors is cetailnly a good point though","date":"2019-02-19T05:00:08.285Z","type":"message"}
{"nick":"Trott","message":"Yes. Might argue for less-specific `code` properties.","date":"2019-02-19T05:00:33.353Z","type":"message"}
{"nick":"joyee","message":"Trott That will add more hassle when we change these errors","date":"2019-02-19T05:01:01.554Z","type":"message"}
{"nick":"Trott","message":"Or removing `code` properties altogether and reverting to builtin JS error types. (ducks)","date":"2019-02-19T05:01:15.360Z","type":"message"}
{"nick":"Trott","message":"Yeah, I'm kind of kidding.","date":"2019-02-19T05:01:26.474Z","type":"message"}
{"nick":"Trott","message":"The error codes are an area where, knowing myself, I could bike-shed for a month and convince myself of five contradictory opinions. So, best if I just leave it in the hands of others who are better-suited for it. :-D","date":"2019-02-19T05:02:17.558Z","type":"message"}
{"nick":"Trott","message":"Anyway, I agree that grouping would be useful, without commenting on how to actually achieve that....","date":"2019-02-19T05:03:40.839Z","type":"message"}
{"nick":"devsnek","message":"does anyone know how to apply a corrupt patch","date":"2019-02-19T05:09:25.959Z","type":"message"}
{"nick":"devsnek","message":"like some line number or something in it is wrong, but the actual changes in it are correct","date":"2019-02-19T05:09:44.719Z","type":"message"}
{"nick":"joyee","message":"err.name has the error code in square brackets and you can’t really rely on instanceof because realms","date":"2019-02-19T05:09:52.269Z","type":"message"}
{"nick":"joyee","message":"So I don’t really know how to group them either","date":"2019-02-19T05:10:11.547Z","type":"message"}
{"nick":"devsnek","message":"err.code has the code without square brackets","date":"2019-02-19T05:10:11.998Z","type":"message"}
{"nick":"devsnek","message":"i think that's a fine way to switch off","date":"2019-02-19T05:10:39.093Z","type":"message"}
{"nick":"devsnek","message":"i don't even know how to conceptually group them","date":"2019-02-19T05:11:20.304Z","type":"message"}
{"nick":"joyee","message":"Switch off?","date":"2019-02-19T05:11:20.569Z","type":"message"}
{"nick":"devsnek","message":"\"branch\" is a better word i guess","date":"2019-02-19T05:11:36.260Z","type":"message"}
{"nick":"joyee","message":"Well all the libuv errors can be grouped for instance","date":"2019-02-19T05:11:41.863Z","type":"message"}
{"nick":"devsnek","message":"but application logic probably doesn't care if an error came from libuv","date":"2019-02-19T05:12:03.433Z","type":"message"}
{"nick":"devsnek","message":"it cares more about the meaning of that error","date":"2019-02-19T05:12:17.270Z","type":"message"}
{"nick":"joyee","message":"libuv errors usually means syscall errors","date":"2019-02-19T05:12:28.744Z","type":"message"}
{"nick":"devsnek","message":"yeah but like","date":"2019-02-19T05:12:34.236Z","type":"message"}
{"nick":"devsnek","message":"i care about \"file failed to write\" not \"this was a failure of libuv\"","date":"2019-02-19T05:12:43.601Z","type":"message"}
{"nick":"joyee","message":"Users may care about that this is a syscall error","date":"2019-02-19T05:13:13.918Z","type":"message"}
{"nick":"devsnek","message":"they may, sure","date":"2019-02-19T05:13:33.467Z","type":"message"}
{"nick":"devsnek","message":"my bigger point is that our grouping probably won't match other people's groupings","date":"2019-02-19T05:14:02.245Z","type":"message"}
{"nick":"joyee","message":"Then you will be able to distinguish them with other kinds of errors, e.g. stream mid manipulation","date":"2019-02-19T05:14:03.869Z","type":"message"}
{"nick":"devsnek","message":"like i don't care if an error was due to a syscall or not, but someone else cares about it being a syscall or not","date":"2019-02-19T05:14:57.904Z","type":"message"}
{"nick":"joyee","message":"Better than no grouping at all I guess","date":"2019-02-19T05:15:08.836Z","type":"message"}
{"nick":"devsnek","message":"so do we add like some complex system that groups fs errors into something and then tags certain errors with syscall info and etc etc etc","date":"2019-02-19T05:15:22.651Z","type":"message"}
{"nick":"devsnek","message":"then higher up we have to group those into runtime or not, like addaleax was saying, because some people would care about that too","date":"2019-02-19T05:16:01.436Z","type":"message"}
{"nick":"joyee","message":"That doesn’t seem too difficult if we subclass","date":"2019-02-19T05:18:59.403Z","type":"message"}
{"nick":"joyee","message":"Just when there’s errors from another realm you’ll need some kind of helper to learn about the hierarchy","date":"2019-02-19T05:21:03.883Z","type":"message"}
{"nick":"julianduque","reason":"Ping timeout: 268 seconds","date":"2019-02-19T05:22:03.898Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T05:37:57.179Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 258 seconds","date":"2019-02-19T05:42:39.097Z","type":"quit"}
{"nick":"lpin","date":"2019-02-19T05:57:43.161Z","type":"join"}
{"nick":"julianduque","date":"2019-02-19T05:59:00.007Z","type":"join"}
{"nick":"dbeveniu_","date":"2019-02-19T06:01:03.352Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 246 seconds","date":"2019-02-19T06:03:41.999Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 244 seconds","date":"2019-02-19T06:04:17.350Z","type":"quit"}
{"nick":"MylesBorins","reason":"Read error: Connection reset by peer","date":"2019-02-19T06:10:24.084Z","type":"quit"}
{"nick":"MylesBorins","date":"2019-02-19T06:15:20.935Z","type":"join"}
{"nick":"julianduque","date":"2019-02-19T06:20:00.912Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 250 seconds","date":"2019-02-19T06:24:46.950Z","type":"quit"}
{"nick":"neo4","reason":"Ping timeout: 268 seconds","date":"2019-02-19T06:33:35.717Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T06:41:00.365Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 245 seconds","date":"2019-02-19T06:45:28.375Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-02-19T06:48:20.806Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-19T06:49:35.101Z","type":"join"}
{"nick":"julianduque","date":"2019-02-19T07:02:05.007Z","type":"join"}
{"nick":"neo4","date":"2019-02-19T07:05:36.841Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 246 seconds","date":"2019-02-19T07:06:42.069Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T07:23:06.306Z","type":"join"}
{"nick":"neo4","reason":"Ping timeout: 255 seconds","date":"2019-02-19T07:27:47.852Z","type":"quit"}
{"nick":"julianduque","reason":"Ping timeout: 246 seconds","date":"2019-02-19T07:27:49.355Z","type":"quit"}
{"nick":"ljharb","message":"i don’t understand why error codes aren’t more than enough","date":"2019-02-19T07:32:38.284Z","type":"message"}
{"nick":"julianduque","date":"2019-02-19T07:44:06.985Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 250 seconds","date":"2019-02-19T07:48:50.789Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 246 seconds","date":"2019-02-19T08:01:18.109Z","type":"quit"}
{"nick":"joyee","message":"addaleax: is the tracing controller essentially per-process? Are there any locks for that?","date":"2019-02-19T08:03:50.449Z","type":"message"}
{"nick":"julianduque","date":"2019-02-19T08:05:09.780Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 255 seconds","date":"2019-02-19T08:10:05.836Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T08:26:07.340Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 240 seconds","date":"2019-02-19T08:30:27.387Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-19T09:13:21.364Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-02-19T09:18:23.312Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T09:28:48.268Z","type":"join"}
{"nick":"dbeveniu_","reason":"Read error: Connection reset by peer","date":"2019-02-19T09:28:48.379Z","type":"quit"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-02-19T09:55:49.888Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T09:58:15.415Z","type":"join"}
{"nick":"lundibundi","date":"2019-02-19T10:13:12.941Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-02-19T10:15:38.260Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T10:27:01.293Z","type":"join"}
{"nick":"dbevenius","date":"2019-02-19T10:28:55.361Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 246 seconds","date":"2019-02-19T10:31:34.266Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 250 seconds","date":"2019-02-19T10:37:24.930Z","type":"quit"}
{"nick":"addaleax","message":"joyee: yes, it is per-process – if there are, the relevant ones are probably on the V8 side? I’m not sure though","date":"2019-02-19T10:55:21.313Z","type":"message"}
{"nick":"lundibundi","date":"2019-02-19T11:26:46.396Z","type":"join"}
{"nick":"hemx","date":"2019-02-19T12:04:04.197Z","type":"join"}
{"nick":"hemx","message":"Hi, I would like to create a unit test for the node.js url parser module. I want to run only my test with coverage enabled. I already know how to run only my own test with the python tool but the coverage option seems to have no effect. Anyone here who can help?","date":"2019-02-19T12:06:51.573Z","type":"message"}
{"nick":"julianduque","date":"2019-02-19T12:27:45.080Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 246 seconds","date":"2019-02-19T12:32:12.041Z","type":"quit"}
{"nick":"lpin","date":"2019-02-19T13:09:29.155Z","type":"join"}
{"nick":"hemx","date":"2019-02-19T13:14:52.083Z","type":"part"}
{"nick":"antsmartian","date":"2019-02-19T13:42:36.145Z","type":"join"}
{"nick":"julianduque","date":"2019-02-19T14:28:18.790Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 246 seconds","date":"2019-02-19T14:33:04.343Z","type":"quit"}
{"nick":"bradleymeck","message":"Trott: I'm neutral/don't think it would actually help over time. Doesn't look like a categorical fix","date":"2019-02-19T14:44:01.880Z","type":"message"}
{"nick":"bradleymeck","message":"to clarify, even if we make some level of specialized classing for what could through, if we call user code, anything could happen. and lots of node calls user code.","date":"2019-02-19T14:56:44.707Z","type":"message"}
{"nick":"bradleymeck","message":"could throw*","date":"2019-02-19T14:56:58.309Z","type":"message"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-02-19T15:10:18.708Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T15:12:42.443Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-02-19T15:30:28.381Z","type":"quit"}
{"nick":"Trott","message":"hemx To get coverage, I think you have to re-build.  Like, `make coverage-build` or something like that. But I'm not sure as I've never done coverage for a single file. bcoe is the person who's done the most with coverage lately, but they don't hang out on IRC AFAIK.","date":"2019-02-19T15:57:28.834Z","type":"message"}
{"nick":"antsmartian","date":"2019-02-19T16:14:23.434Z","type":"join"}
{"nick":"bradleymeck","message":"synthetic modules for loaders get weird, like what do you do when a CJS source isn't from a file, for now throwing seems fine","date":"2019-02-19T16:14:52.872Z","type":"message"}
{"nick":"bradleymeck","message":"but like... what will happen to people if they expect to reach into require.cache and see they don't exist","date":"2019-02-19T16:15:15.179Z","type":"message"}
{"nick":"bradleymeck","message":"cjs is such a wild place though already, maybe it is fine to just have __filename/__dirname be undefined?","date":"2019-02-19T16:16:44.434Z","type":"message"}
{"nick":"ljharb","message":"in a CJS module?","date":"2019-02-19T16:22:43.377Z","type":"message"}
{"nick":"bradleymeck","message":"yea, in general Synthetic modules don't quite mimic host modules since they are not coming from the host, they are coming from userland","date":"2019-02-19T16:23:52.029Z","type":"message"}
{"nick":"bradleymeck","message":"loaders have to setup the envs to mimic stuff if they want because host doesn't know what to do","date":"2019-02-19T16:24:14.458Z","type":"message"}
{"nick":"bradleymeck","message":"like if you return a CJS module with src `exports.foo = 1` but it isn't mapped to a host known path, host doesn't know where to put that thing","date":"2019-02-19T16:25:02.772Z","type":"message"}
{"nick":"bradleymeck","message":"so a loader would have to ensure it gets added to require.cache wherever it expects","date":"2019-02-19T16:25:22.544Z","type":"message"}
{"nick":"bradleymeck","message":"but even then it might not make sense and the loader might not be putting it in the cache since it is synthetic","date":"2019-02-19T16:25:40.791Z","type":"message"}
{"nick":"ljharb","message":"ah ok sure, so te loader has to inject the location and related info","date":"2019-02-19T16:25:44.182Z","type":"message"}
{"nick":"bradleymeck","message":"inject it via source, since it varies pretty wildly","date":"2019-02-19T16:25:58.177Z","type":"message"}
{"nick":"bradleymeck","message":"yea","date":"2019-02-19T16:26:01.145Z","type":"message"}
{"nick":"ljharb","message":"what is __dirname etc in `node -e`?","date":"2019-02-19T16:26:03.218Z","type":"message"}
{"nick":"bradleymeck","message":"cwd, __filename = cwd + '[eval]'","date":"2019-02-19T16:26:20.238Z","type":"message"}
{"nick":"ljharb","message":"seems like that should be the default then, and loaders could choose to override it","date":"2019-02-19T16:26:35.383Z","type":"message"}
{"nick":"bradleymeck","message":"or filename is [eval] not cwd+[eval]","date":"2019-02-19T16:26:41.896Z","type":"message"}
{"nick":"bradleymeck","message":"no cause it has collisions if we actually provide values and --eval does all sorts of odd setup","date":"2019-02-19T16:27:03.791Z","type":"message"}
{"nick":"bradleymeck","message":"makes globals etc","date":"2019-02-19T16:27:07.560Z","type":"message"}
{"nick":"ljharb","message":"i don’t mean, follow eval - i just mean those two vars","date":"2019-02-19T16:27:28.900Z","type":"message"}
{"nick":"ljharb","message":"like it seems a reasonable case for code to have to handle already","date":"2019-02-19T16:27:44.588Z","type":"message"}
{"nick":"bradleymeck","message":"why? those are really incorrect values most of the time?","date":"2019-02-19T16:27:46.652Z","type":"message"}
{"nick":"ljharb","message":"more correct than being missing imo","date":"2019-02-19T16:27:59.174Z","type":"message"}
{"nick":"bradleymeck","message":"how so?","date":"2019-02-19T16:28:07.059Z","type":"message"}
{"nick":"bradleymeck","message":"they are missing because the host doesn't know a good value","date":"2019-02-19T16:28:14.433Z","type":"message"}
{"nick":"bradleymeck","message":"empty strings are at least invalid paths","date":"2019-02-19T16:28:25.276Z","type":"message"}
{"nick":"ljharb","message":"code expects them to be always present, and currently they are","date":"2019-02-19T16:28:25.348Z","type":"message"}
{"nick":"bradleymeck","message":"they are not always present actually","date":"2019-02-19T16:28:34.465Z","type":"message"}
{"nick":"ljharb","message":"oh you’re suggesting present but empty string","date":"2019-02-19T16:28:35.771Z","type":"message"}
{"nick":"ljharb","message":"when are they not?","date":"2019-02-19T16:28:45.660Z","type":"message"}
{"nick":"bradleymeck","message":"people mucking with require('module')","date":"2019-02-19T16:28:56.382Z","type":"message"}
{"nick":"bradleymeck","message":"which is... many","date":"2019-02-19T16:29:00.972Z","type":"message"}
{"nick":"ljharb","message":"sure but those people then know what they’re getting into :-)","date":"2019-02-19T16:29:19.444Z","type":"message"}
{"nick":"bradleymeck","message":"lots of test frameworks etc can make intermediary modules or muck with the cache in weird ways","date":"2019-02-19T16:29:20.427Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: they do not","date":"2019-02-19T16:29:27.617Z","type":"message"}
{"nick":"bradleymeck","message":"they think if it is exposed it is safe","date":"2019-02-19T16:29:35.015Z","type":"message"}
{"nick":"ljharb","message":"most modules are written to assume those dirname/filename vars exist, i think","date":"2019-02-19T16:29:40.202Z","type":"message"}
{"nick":"ljharb","message":"not making a claim about all the other stuff","date":"2019-02-19T16:29:50.276Z","type":"message"}
{"nick":"bradleymeck","message":"the variables will exist, but the values are non-sensical for modules made from in-mem resources","date":"2019-02-19T16:30:54.565Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: for now banning them seems fine, can remove throw later","date":"2019-02-19T16:32:19.456Z","type":"message"}
{"nick":"bradleymeck","message":"https://github.com/bmeck/ecmascript-modules/blob/thready-loaders/lib/internal/modules/esm/translators.js#L71","date":"2019-02-19T16:32:21.637Z","type":"message"}
{"nick":"julianduque","reason":"Read error: Connection reset by peer","date":"2019-02-19T16:35:52.631Z","type":"quit"}
{"nick":"julianduque","date":"2019-02-19T16:36:10.391Z","type":"join"}
{"nick":"jesopo","reason":"Changing host","date":"2019-02-19T16:38:28.649Z","type":"quit"}
{"nick":"jesopo","date":"2019-02-19T16:38:28.759Z","type":"join"}
{"nick":"AtumT","date":"2019-02-19T16:45:22.952Z","type":"join"}
{"nick":"devsnek","message":"oh the fork was named ecmascript-modules","date":"2019-02-19T16:48:29.667Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: why would there be synthetic cjs","date":"2019-02-19T16:54:03.256Z","type":"message"}
{"nick":"bradleymeck","message":"someone returns application/node as the content type. just filling out the translators","date":"2019-02-19T16:54:31.647Z","type":"message"}
{"nick":"bradleymeck","message":"we still have cjs translators in the kernel","date":"2019-02-19T16:54:48.536Z","type":"message"}
{"nick":"devsnek","message":"ah read the link now, makes sense","date":"2019-02-19T16:55:36.366Z","type":"message"}
{"nick":"jesopo","reason":"Quit: et nos unum sumus","date":"2019-02-19T17:06:14.524Z","type":"quit"}
{"nick":"jesopo","date":"2019-02-19T17:09:38.842Z","type":"join"}
{"nick":"jesopo","reason":"Changing host","date":"2019-02-19T17:09:38.842Z","type":"quit"}
{"nick":"jesopo","date":"2019-02-19T17:09:38.842Z","type":"join"}
{"nick":"bradleymeck","message":"devsnek: the worst change to fix a mem leak is still needed for that loader though, attaching lifetimes/pre-allocating locations for synthetic resources. so that you can actually make a sane synthetic loader graph :(","date":"2019-02-19T17:12:33.783Z","type":"message"}
{"nick":"bradleymeck","message":"most of the stuff we do has leaks from making things last forever, and/or not being able to allocate locations that have lifetimes","date":"2019-02-19T17:13:01.918Z","type":"message"}
{"nick":"bradleymeck","message":"so, make the location reify to an object with GC for synthetic stuff and use identity","date":"2019-02-19T17:13:27.185Z","type":"message"}
{"nick":"bradleymeck","message":"thats a rather big change though, but other than that loaders are workable","date":"2019-02-19T17:13:40.590Z","type":"message"}
{"nick":"bradleymeck","message":"still perf problems though","date":"2019-02-19T17:13:47.810Z","type":"message"}
{"nick":"bradleymeck","message":"kind of expected","date":"2019-02-19T17:13:55.311Z","type":"message"}
{"nick":"devsnek","message":"who needs performance when you have imparative loaders","date":"2019-02-19T17:17:05.643Z","type":"message"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-02-19T17:45:16.364Z","type":"quit"}
{"nick":"bradleymeck","message":"devsnek: if we just expose lower level features, we will make it better, definitely not make it harder to optimize","date":"2019-02-19T17:48:10.296Z","type":"message"}
{"nick":"bradleymeck","action":"shudders","date":"2019-02-19T17:48:18.270Z","type":"action"}
{"nick":"devsnek","message":"how can we represent this with nothing but posix syscalls /s","date":"2019-02-19T17:49:02.211Z","type":"message"}
{"nick":"jesopo","reason":"Remote host closed the connection","date":"2019-02-19T17:53:32.381Z","type":"quit"}
{"nick":"jesopo","date":"2019-02-19T17:53:47.078Z","type":"join"}
{"nick":"lundibundi","date":"2019-02-19T18:09:06.151Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-02-19T18:48:59.333Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T19:18:16.887Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-19T19:23:02.561Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-02-19T19:25:44.811Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T19:45:25.103Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-19T19:49:49.323Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T19:59:34.986Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-02-19T20:04:14.834Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T20:39:56.638Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-19T20:44:04.313Z","type":"quit"}
{"nick":"hemx","date":"2019-02-19T20:48:53.249Z","type":"join"}
{"nick":"hemx","message":"Hi, how to run a single unit test with coverage on the node.js url parser module?","date":"2019-02-19T20:50:32.911Z","type":"message"}
{"nick":"AtumT_","date":"2019-02-19T21:27:10.883Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 250 seconds","date":"2019-02-19T21:30:26.886Z","type":"quit"}
{"nick":"AtumT","date":"2019-02-19T21:41:01.945Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 246 seconds","date":"2019-02-19T21:41:42.046Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 246 seconds","date":"2019-02-19T21:43:27.056Z","type":"quit"}
{"nick":"hemx","reason":"Quit: Page closed","date":"2019-02-19T22:15:14.161Z","type":"quit"}
{"nick":"gamelaster","date":"2019-02-19T22:25:08.368Z","type":"join"}
{"nick":"ljharb","message":"um, how long have node promises had a `.domain` on them","date":"2019-02-19T22:28:50.694Z","type":"message"}
{"nick":"bradleymeck","message":"4x?","date":"2019-02-19T22:29:59.299Z","type":"message"}
{"nick":"ljharb","message":"and what on earth is the thing that's a `Symbol(kWeak)` on them???","date":"2019-02-19T22:41:22.749Z","type":"message"}
{"nick":"ljharb","message":"invoking its constructor kills the repl with abort trap 6, lulz","date":"2019-02-19T22:41:44.128Z","type":"message"}
{"nick":"devsnek","message":"ljharb: it only happens when domains are active","date":"2019-02-19T22:44:09.478Z","type":"message"}
{"nick":"devsnek","message":"if you use the prototype repl it's not a problem","date":"2019-02-19T22:44:41.104Z","type":"message"}
{"nick":"ljharb","message":"devsnek: i just typed `node`. why would domains be active","date":"2019-02-19T22:45:05.473Z","type":"message"}
{"nick":"ljharb","message":"or you mean the abort trap","date":"2019-02-19T22:45:08.161Z","type":"message"}
{"nick":"ljharb","message":"so why is there a `.domain` property when domains are not active?","date":"2019-02-19T22:45:17.788Z","type":"message"}
{"nick":"devsnek","message":"the repl uses domains","date":"2019-02-19T22:45:24.196Z","type":"message"}
{"nick":"devsnek","message":"to catch errors","date":"2019-02-19T22:45:27.657Z","type":"message"}
{"nick":"ljharb","message":"oof, ok","date":"2019-02-19T22:45:30.245Z","type":"message"}
{"nick":"devsnek","message":"ikr","date":"2019-02-19T22:45:33.499Z","type":"message"}
{"nick":"ljharb","message":"so real node doesn't?","date":"2019-02-19T22:45:34.366Z","type":"message"}
{"nick":"devsnek","message":"real node does not","date":"2019-02-19T22:45:43.271Z","type":"message"}
{"nick":"devsnek","message":"but the repl does","date":"2019-02-19T22:45:46.639Z","type":"message"}
{"nick":"devsnek","message":"it confused me for a while too lol","date":"2019-02-19T22:45:53.373Z","type":"message"}
{"nick":"ljharb","message":"phew, ok","date":"2019-02-19T22:54:07.211Z","type":"message"}
{"nick":"devsnek","message":"I wish the property wasnt enumerable","date":"2019-02-19T23:00:01.492Z","type":"message"}
{"nick":"devsnek","message":"would be a good pr tbh","date":"2019-02-19T23:00:07.934Z","type":"message"}
{"nick":"gamelaster","reason":"Ping timeout: 244 seconds","date":"2019-02-19T23:06:46.355Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T23:25:25.674Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-02-19T23:29:38.357Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-19T23:41:04.488Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-02-19T23:45:34.133Z","type":"quit"}
{"nick":"ljharb","message":"devsnek: lol can you link me to where it's added","date":"2019-02-19T23:48:28.200Z","type":"message"}
{"nick":"devsnek","message":"ljharb: I've absolutely no idea :p","date":"2019-02-19T23:49:04.723Z","type":"message"}
{"nick":"devsnek","message":"if you want to go down the rabbit hole start with domain.js","date":"2019-02-19T23:49:21.888Z","type":"message"}
{"nick":"ljharb","message":"devsnek: ok i'm going to regret saying this but \"looks like an easy net-one-character change!\"","date":"2019-02-19T23:54:12.482Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2019-02-19T23:54:31.943Z","type":"message"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-02-19T23:54:46.242Z","type":"quit"}
{"nick":"ljharb","message":"ok i already regret it, i was looking at the wrong line","date":"2019-02-19T23:56:36.073Z","type":"message"}
{"nick":"ljharb","message":"ok it's here - https://github.com/nodejs/node/blob/master/lib/domain.js#L61 - but i suspect folks would object to making it non-enumerable everywhere","date":"2019-02-19T23:57:26.162Z","type":"message"}
{"nick":"devsnek","message":"🤷","date":"2019-02-19T23:58:46.662Z","type":"message"}
