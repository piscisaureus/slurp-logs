{"nick":"Hu0p","date":"2018-09-06T00:01:56.147Z","type":"join"}
{"nick":"nemix","date":"2018-09-06T00:31:16.015Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-09-06T00:41:32.556Z","type":"quit"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T00:46:24.841Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T00:47:44.476Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T00:48:08.483Z","type":"quit"}
{"nick":"ShaRose","reason":"Quit: I appear to have left for some reason.","date":"2018-09-06T01:08:02.810Z","type":"quit"}
{"nick":"ShaRose","date":"2018-09-06T01:08:15.611Z","type":"join"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2018-09-06T01:10:50.034Z","type":"quit"}
{"nick":"dc13ff","date":"2018-09-06T01:17:26.714Z","type":"join"}
{"nick":"devsnek","message":"gabrielschulhof: it wouldn't be correct","date":"2018-09-06T02:54:15.039Z","type":"message"}
{"nick":"devsnek","message":"accessor descriptors have no value","date":"2018-09-06T02:54:30.380Z","type":"message"}
{"nick":"devsnek","message":"if `get` or `set` and `value` are reachable at the same time when defining a property it will throw","date":"2018-09-06T02:55:15.199Z","type":"message"}
{"nick":"zaiste","reason":"Ping timeout: 244 seconds","date":"2018-09-06T03:10:12.530Z","type":"quit"}
{"nick":"zaiste","date":"2018-09-06T03:12:07.612Z","type":"join"}
{"nick":"fixplz","reason":"Quit: Connection closed for inactivity","date":"2018-09-06T03:40:05.632Z","type":"quit"}
{"nick":"dc13ff","reason":"Quit: Connection closed for inactivity","date":"2018-09-06T04:16:17.777Z","type":"quit"}
{"nick":"Guest21233","reason":"Changing host","date":"2018-09-06T04:29:08.553Z","type":"quit"}
{"nick":"Guest21233","date":"2018-09-06T04:29:08.741Z","type":"join"}
{"nick":"Guest21233","reason":"Changing host","date":"2018-09-06T04:29:08.741Z","type":"quit"}
{"nick":"Guest21233","date":"2018-09-06T04:29:08.741Z","type":"join"}
{"nick":"Guest21233","new_nick":"matthiaskrgr","date":"2018-09-06T04:29:21.318Z","type":"nick"}
{"nick":"nemix","reason":"Ping timeout: 272 seconds","date":"2018-09-06T04:34:46.762Z","type":"quit"}
{"nick":"marthinal","date":"2018-09-06T04:52:13.661Z","type":"join"}
{"nick":"nemix","date":"2018-09-06T05:35:12.398Z","type":"join"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 245 seconds","date":"2018-09-06T05:35:53.285Z","type":"quit"}
{"nick":"nemix","reason":"Ping timeout: 246 seconds","date":"2018-09-06T05:48:55.248Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T05:55:00.657Z","type":"join"}
{"nick":"seishun","date":"2018-09-06T06:05:28.476Z","type":"join"}
{"nick":"Hu0p_","date":"2018-09-06T06:25:30.821Z","type":"join"}
{"nick":"Hu0p","reason":"Ping timeout: 246 seconds","date":"2018-09-06T06:26:22.257Z","type":"quit"}
{"nick":"seishun","reason":"Disconnected by services","date":"2018-09-06T06:45:08.355Z","type":"quit"}
{"nick":"seishun","date":"2018-09-06T06:45:14.708Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 252 seconds","date":"2018-09-06T07:03:30.373Z","type":"quit"}
{"nick":"Hu0p","date":"2018-09-06T07:32:44.982Z","type":"join"}
{"nick":"Hu0p_","reason":"Ping timeout: 252 seconds","date":"2018-09-06T07:34:30.707Z","type":"quit"}
{"nick":"gamelaster","date":"2018-09-06T07:50:33.396Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T08:04:11.932Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T08:04:27.850Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T08:04:58.321Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T08:05:11.848Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T08:05:44.658Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T08:06:00.092Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T08:06:31.035Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T08:06:46.800Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T08:07:17.486Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T08:07:31.801Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T08:08:04.105Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T08:08:21.823Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T08:08:50.659Z","type":"quit"}
{"nick":"nemix","date":"2018-09-06T09:18:09.782Z","type":"join"}
{"nick":"nemix","reason":"Ping timeout: 252 seconds","date":"2018-09-06T09:25:36.618Z","type":"quit"}
{"nick":"zeds","date":"2018-09-06T10:50:54.383Z","type":"join"}
{"nick":"zeds","reason":"Excess Flood","date":"2018-09-06T10:50:56.596Z","type":"quit"}
{"nick":"zeds","date":"2018-09-06T10:51:39.342Z","type":"join"}
{"nick":"zeds","date":"2018-09-06T10:51:46.295Z","type":"part"}
{"nick":"gabrielschulhof","date":"2018-09-06T12:44:29.813Z","type":"join"}
{"nick":"gamelaster","reason":"Ping timeout: 240 seconds","date":"2018-09-06T12:45:47.428Z","type":"quit"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 272 seconds","date":"2018-09-06T12:49:24.805Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-09-06T13:04:01.377Z","type":"quit"}
{"nick":"zsoc","date":"2018-09-06T13:04:16.447Z","type":"join"}
{"nick":"zsoc","reason":"Changing host","date":"2018-09-06T13:04:16.744Z","type":"quit"}
{"nick":"zsoc","date":"2018-09-06T13:04:16.744Z","type":"join"}
{"nick":"gabrielschulhof","date":"2018-09-06T13:14:58.440Z","type":"join"}
{"nick":"fixplz","date":"2018-09-06T13:16:38.676Z","type":"join"}
{"nick":"marthinal","date":"2018-09-06T13:54:31.065Z","type":"join"}
{"nick":"wa7son","message":"Just found this weird behavior where reported rss suddenly is smaller than the heap. My normal logic says that should be impossible. But as far as I can see it has been like this in multiple Node versions, so maybe I'm just going nuts?","date":"2018-09-06T13:54:51.250Z","type":"message"}
{"nick":"wa7son","message":"https://usercontent.irccloud-cdn.com/file/4pJadGhJ/rss-bug.gif","date":"2018-09-06T13:54:58.515Z","type":"message"}
{"nick":"bradleymeck","message":"wa7son: i could see that as possible if you have objects which are not reserved within the heap. try allocating huge empty typed arrays and see if that matches up?","date":"2018-09-06T14:06:12.160Z","type":"message"}
{"nick":"wa7son","message":"bradleymeck: by not reserved you mean that nothing points to it?","date":"2018-09-06T14:06:46.585Z","type":"message"}
{"nick":"bradleymeck","message":"not exactly","date":"2018-09-06T14:06:57.225Z","type":"message"}
{"nick":"bradleymeck","message":"just that v8 doesn't need to use up as much physical memory as it logically represents","date":"2018-09-06T14:07:18.455Z","type":"message"}
{"nick":"wa7son","message":"hmm... still not sure I follow ðŸ¤”","date":"2018-09-06T14:09:19.485Z","type":"message"}
{"nick":"bradleymeck","message":"imagine i have 2 strings, one is a book, and another is a substring representing some chapter of the book","date":"2018-09-06T14:09:42.791Z","type":"message"}
{"nick":"bradleymeck","message":"v8 could physically in ram share the content of the book and just keep ptr+length as the structure for each of those 2 strings (much smaller than the string contents on their own)","date":"2018-09-06T14:10:23.309Z","type":"message"}
{"nick":"wa7son","message":"ah so if you add the length of the two stings together, that is larger than the whole?","date":"2018-09-06T14:10:23.457Z","type":"message"}
{"nick":"wa7son","message":"got'ya","date":"2018-09-06T14:10:52.198Z","type":"message"}
{"nick":"wa7son","message":"thanks for explaining :D","date":"2018-09-06T14:10:59.102Z","type":"message"}
{"nick":"bradleymeck","message":"i'm betting shenanigans like that is going on","date":"2018-09-06T14:11:04.685Z","type":"message"}
{"nick":"wa7son","message":"I'm pretty sure.... I'm making a test program for showing how a closure memory leak works and initialize a large string full of **** over and over again","date":"2018-09-06T14:12:13.212Z","type":"message"}
{"nick":"bradleymeck","message":"v8 gonna fight ya","date":"2018-09-06T14:13:11.617Z","type":"message"}
{"nick":"bradleymeck","message":"use big arrays and fill em with empty objects","date":"2018-09-06T14:13:22.557Z","type":"message"}
{"nick":"bradleymeck","message":"v8 can't share that :cackling:","date":"2018-09-06T14:13:32.472Z","type":"message"}
{"nick":"wa7son","message":"hehe","date":"2018-09-06T14:13:41.881Z","type":"message"}
{"nick":"bradleymeck","message":"Array.from({length: 666}, ()=>({}))","date":"2018-09-06T14:13:55.633Z","type":"message"}
{"nick":"devsnek","message":"i'll be damned if i let v8 optimize *my* memory","date":"2018-09-06T14:17:11.755Z","type":"message"}
{"nick":"zeds","date":"2018-09-06T14:17:13.793Z","type":"join"}
{"nick":"zeds","date":"2018-09-06T14:17:20.983Z","type":"part"}
{"nick":"JamJam_kid","date":"2018-09-06T14:17:57.437Z","type":"join"}
{"nick":"wa7son","message":"bradleymeck: yep, if I use your Array it goes away :)","date":"2018-09-06T14:28:04.893Z","type":"message"}
{"nick":"al-damiri","date":"2018-09-06T14:50:34.671Z","type":"join"}
{"nick":"JamJam_kid","reason":"Remote host closed the connection","date":"2018-09-06T15:07:49.430Z","type":"quit"}
{"nick":"JamJam_kid","date":"2018-09-06T15:08:14.598Z","type":"join"}
{"nick":"JamJam_kid","reason":"Remote host closed the connection","date":"2018-09-06T15:12:42.833Z","type":"quit"}
{"nick":"JamJam_kid","date":"2018-09-06T15:13:04.411Z","type":"join"}
{"nick":"bcoe","date":"2018-09-06T15:18:03.905Z","type":"join"}
{"nick":"nemix","date":"2018-09-06T15:18:12.576Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T15:21:06.256Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T15:21:23.819Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T15:21:52.740Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T15:22:11.099Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T15:22:39.746Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T15:22:55.848Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T15:23:26.482Z","type":"quit"}
{"nick":"nemix","reason":"Ping timeout: 252 seconds","date":"2018-09-06T15:23:27.588Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T15:23:40.771Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T15:24:13.040Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T15:24:30.822Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T15:24:59.321Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T15:25:13.885Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T15:25:45.644Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T15:26:02.812Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T15:26:32.114Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-06T15:26:48.861Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-06T15:27:18.368Z","type":"quit"}
{"nick":"JamJam_kid","reason":"Ping timeout: 240 seconds","date":"2018-09-06T15:39:27.418Z","type":"quit"}
{"nick":"joyee","message":"I though v8 measures the heap size by adding sizes of its memory pages? The size of those data structures should not be taken into account when calculating the heap size","date":"2018-09-06T15:47:28.144Z","type":"message"}
{"nick":"joyee","message":"I think I have seen similar bugs in cores issue tracker","date":"2018-09-06T15:47:56.882Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: i don't think it does that for heap used?","date":"2018-09-06T15:51:26.846Z","type":"message"}
{"nick":"joyee","message":"The RSS size comes from libuv which calls into the system to get the resource usage so it should be more reliable, itâ€™s likely that V8 somehow ends up with a number bigger than itâ€™s supposed to be","date":"2018-09-06T15:51:28.515Z","type":"message"}
{"nick":"bradleymeck","message":"i thought it used shallow size as things are allocated","date":"2018-09-06T15:51:36.376Z","type":"message"}
{"nick":"bradleymeck","message":"heap total being on page allocation makes sense","date":"2018-09-06T15:52:03.271Z","type":"message"}
{"nick":"bradleymeck","message":"but it doesn't for heap used due to fragmentation","date":"2018-09-06T15:52:10.816Z","type":"message"}
{"nick":"joyee","message":"Oh I thought itâ€™s heap total","date":"2018-09-06T15:52:20.271Z","type":"message"}
{"nick":"joyee","message":"The gif moves too fast","date":"2018-09-06T15:52:40.884Z","type":"message"}
{"nick":"bradleymeck","message":"also heap total can be > RSS since it could just be using unmodified memory which could be pushed to virtual mem by OS","date":"2018-09-06T15:52:59.461Z","type":"message"}
{"nick":"seishun","date":"2018-09-06T15:55:56.391Z","type":"join"}
{"nick":"benjamincoe","date":"2018-09-06T15:58:47.721Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T16:03:28.919Z","type":"quit"}
{"nick":"joyee","message":"Hmm, I think the paged spaces are using the AccountingStats which is maintained during allocation and collection","date":"2018-09-06T16:03:30.586Z","type":"message"}
{"nick":"seishun","reason":"Disconnected by services","date":"2018-09-06T16:04:27.367Z","type":"quit"}
{"nick":"joyee","message":"Hard to tell if it is accurate without traces","date":"2018-09-06T16:04:31.755Z","type":"message"}
{"nick":"seishun","date":"2018-09-06T16:04:35.470Z","type":"join"}
{"nick":"bradleymeck","message":"joyee: accurate vs what","date":"2018-09-06T16:06:33.997Z","type":"message"}
{"nick":"benjamincoe","date":"2018-09-06T16:07:01.765Z","type":"join"}
{"nick":"joyee","message":"What the objects are actually using","date":"2018-09-06T16:07:11.934Z","type":"message"}
{"nick":"bradleymeck","message":"oh that is completely different in intent","date":"2018-09-06T16:07:56.235Z","type":"message"}
{"nick":"bradleymeck","message":"reserved is different from used","date":"2018-09-06T16:08:14.439Z","type":"message"}
{"nick":"joyee","message":"Heap used is mostly adding those stats (except the new space)","date":"2018-09-06T16:08:58.270Z","type":"message"}
{"nick":"bradleymeck","message":"heap used should be shallow sizes not physically used within heap total","date":"2018-09-06T16:10:45.154Z","type":"message"}
{"nick":"joyee","message":"Heap total should be calculated based on pages","date":"2018-09-06T16:10:47.014Z","type":"message"}
{"nick":"bradleymeck","message":"see string ropes in heap snapshots and you can likely see this directly","date":"2018-09-06T16:11:05.039Z","type":"message"}
{"nick":"bradleymeck","message":"heap total should be on space that the heap is able to occupy currently without realloc","date":"2018-09-06T16:11:46.031Z","type":"message"}
{"nick":"bradleymeck","message":"heap used should be space logically occupied by objects in heap","date":"2018-09-06T16:12:01.123Z","type":"message"}
{"nick":"bradleymeck","message":"rss should be space physically occupied","date":"2018-09-06T16:12:10.007Z","type":"message"}
{"nick":"joyee","message":"The heap code maintain the accounting stats when creating cons strings yeah","date":"2018-09-06T16:12:46.853Z","type":"message"}
{"nick":"bradleymeck","message":"external is unmanaged by heap (likely not to show up in rss unless modified)","date":"2018-09-06T16:12:50.409Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: and cons strings can have some sharing like wa7son saw","date":"2018-09-06T16:13:08.819Z","type":"message"}
{"nick":"joyee","message":"I just guess that it may or may not make mistakes when maintaining the accounting stats","date":"2018-09-06T16:13:18.948Z","type":"message"}
{"nick":"bradleymeck","message":"so if it double counts, it can be misleading if you think heap used represents physically used space instead of logically","date":"2018-09-06T16:13:29.691Z","type":"message"}
{"nick":"joyee","message":"Since thatâ€™s what the API actually output from","date":"2018-09-06T16:13:34.058Z","type":"message"}
{"nick":"joyee","message":"Those three numbers are calculated from different sources, ultimately","date":"2018-09-06T16:14:48.795Z","type":"message"}
{"nick":"bradleymeck","message":"you could probably figure out heapReserved but that might be more costly","date":"2018-09-06T16:16:10.091Z","type":"message"}
{"nick":"joyee","message":"RSS is from OS, heap total from pages minus header sizes, and heap used from the accounting stats","date":"2018-09-06T16:16:17.954Z","type":"message"}
{"nick":"bradleymeck","message":"since you have to ensure something doesn't get double counted while traversing and/or allocating","date":"2018-09-06T16:16:31.989Z","type":"message"}
{"nick":"joyee","message":"The API does not count though, it just reads the accounting stats of the paged spaces, and do a subtraction for the semispace","date":"2018-09-06T16:17:37.165Z","type":"message"}
{"nick":"bradleymeck","message":"but what are the accounting stats composed of?","date":"2018-09-06T16:18:20.722Z","type":"message"}
{"nick":"joyee","message":"The subtraction is unlikely to go wrong, but the accounting stats..IDK","date":"2018-09-06T16:18:22.170Z","type":"message"}
{"nick":"bradleymeck","message":"the accounting stats likely are per node","date":"2018-09-06T16:18:34.721Z","type":"message"}
{"nick":"joyee","message":"They are maintained during allocation and collection","date":"2018-09-06T16:18:35.875Z","type":"message"}
{"nick":"bradleymeck","message":"which would lead to this idea of logical usage not physical usage","date":"2018-09-06T16:18:50.880Z","type":"message"}
{"nick":"joyee","message":"And also during promotion I think","date":"2018-09-06T16:19:28.973Z","type":"message"}
{"nick":"joyee","message":"Itâ€™s pretty hard to tell without a live heap","date":"2018-09-06T16:20:14.305Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: you can see similar behavior here from the JSON heap snapshots","date":"2018-09-06T16:21:13.395Z","type":"message"}
{"nick":"joyee","message":"Um, how is the heap snapshot related?","date":"2018-09-06T16:23:57.445Z","type":"message"}
{"nick":"devsnek","message":"someone here who is good with c++","date":"2018-09-06T16:24:15.338Z","type":"message"}
{"nick":"joyee","message":"That is a detailed graph of the heap","date":"2018-09-06T16:24:18.313Z","type":"message"}
{"nick":"devsnek","message":"addaleax suggested i change `inline std::string x() const { return x_ }` to be `std::string&`","date":"2018-09-06T16:24:36.245Z","type":"message"}
{"nick":"joyee","message":"The accounting stats are numbers maintained along side the objects...","date":"2018-09-06T16:24:49.418Z","type":"message"}
{"nick":"devsnek","message":"which means i should also remove the const qualifier right?","date":"2018-09-06T16:25:26.786Z","type":"message"}
{"nick":"devsnek","message":"but then if my this target is const qualified, the methods don't work","date":"2018-09-06T16:26:27.525Z","type":"message"}
{"nick":"joyee","message":"devsnek: you can return a const string& right?","date":"2018-09-06T16:27:27.875Z","type":"message"}
{"nick":"devsnek","message":"honestly i have no idea how most of these combinations of types work","date":"2018-09-06T16:27:57.747Z","type":"message"}
{"nick":"joyee","message":"Then the qualifier can be kept","date":"2018-09-06T16:28:05.875Z","type":"message"}
{"nick":"devsnek","message":"before i had `inline const char* x() const {}`","date":"2018-09-06T16:28:18.743Z","type":"message"}
{"nick":"devsnek","message":"so should the new thing be `inline const std::string& x() {}`","date":"2018-09-06T16:28:31.115Z","type":"message"}
{"nick":"joyee","message":"inline const string& x() const {}","date":"2018-09-06T16:29:08.587Z","type":"message"}
{"nick":"devsnek","message":"lots of const","date":"2018-09-06T16:29:36.039Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: i'm stating that the metrics being shown in the snapshot include size of nodes","date":"2018-09-06T16:30:34.672Z","type":"message"}
{"nick":"bradleymeck","message":"size of nodes total can greatly differ from rss","date":"2018-09-06T16:30:53.311Z","type":"message"}
{"nick":"bradleymeck","message":"including being > rss","date":"2018-09-06T16:30:58.188Z","type":"message"}
{"nick":"bradleymeck","message":"i'm thinking the concept of heap used seems to consistently be logical/virtual usage, not reserved","date":"2018-09-06T16:31:18.705Z","type":"message"}
{"nick":"joyee","message":"The const before {} means you cannot let the caller modify the objectâ€™s state, if the reference you return is not a const reference, the caller can use that to modify x","date":"2018-09-06T16:31:21.359Z","type":"message"}
{"nick":"lundibundi","date":"2018-09-06T16:32:33.437Z","type":"join"}
{"nick":"joyee","message":"bradleymeck: what do you mean by reserved? You mean the memory taken by the pages?","date":"2018-09-06T16:32:36.010Z","type":"message"}
{"nick":"bradleymeck","message":"physically in ram","date":"2018-09-06T16:33:52.716Z","type":"message"}
{"nick":"bradleymeck","message":"unrelated to memory taken by pages","date":"2018-09-06T16:34:24.872Z","type":"message"}
{"nick":"bradleymeck","message":"memory taken by pages is probably also virtual","date":"2018-09-06T16:34:41.700Z","type":"message"}
{"nick":"bradleymeck","message":"resident not reserved* gah","date":"2018-09-06T16:36:51.523Z","type":"message"}
{"nick":"joyee","message":"The physical committed memory are not exposed by nodeâ€™s API, itâ€™s in heap statistics though","date":"2018-09-06T16:36:55.011Z","type":"message"}
{"nick":"bradleymeck","message":"thats the typical term","date":"2018-09-06T16:36:58.246Z","type":"message"}
{"nick":"bradleymeck","message":"but the OS may not have all that memory in RSS just because it was alloc'd","date":"2018-09-06T16:37:32.223Z","type":"message"}
{"nick":"bradleymeck","message":"https://en.wikipedia.org/wiki/Memory_overcommitment and all","date":"2018-09-06T16:37:45.874Z","type":"message"}
{"nick":"joyee","message":"Oh yeah in that case we will need to see the heap statistics","date":"2018-09-06T16:40:31.343Z","type":"message"}
{"nick":"joyee","message":"Not heap total and heap used, those are only part of the heap statistics","date":"2018-09-06T16:40:53.006Z","type":"message"}
{"nick":"joyee","message":"The heap statistics includes an entry about physically committed memory, although itâ€™s still an estimation","date":"2018-09-06T16:41:34.850Z","type":"message"}
{"nick":"devsnek","message":"does any part of ThreadPoolWork run in the main thread","date":"2018-09-06T16:42:14.212Z","type":"message"}
{"nick":"devsnek","message":"or hmm","date":"2018-09-06T16:42:38.457Z","type":"message"}
{"nick":"joyee","message":"We donâ€™t seem to have an API to get the VSZ...hmm","date":"2018-09-06T16:47:44.164Z","type":"message"}
{"nick":"joyee","message":"Maybe itâ€™s because thatâ€™s hard to model on non-linux platforms(shrug","date":"2018-09-06T16:49:42.595Z","type":"message"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T16:59:35.941Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T17:01:02.503Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T17:01:53.817Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T17:05:37.403Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T17:06:33.501Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 245 seconds","date":"2018-09-06T17:08:48.300Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T17:09:15.596Z","type":"join"}
{"nick":"devsnek","message":"seems like the finished callback runs in the loop thread","date":"2018-09-06T17:13:02.455Z","type":"message"}
{"nick":"gamelaster","date":"2018-09-06T17:15:30.789Z","type":"join"}
{"nick":"devsnek","message":"how would i have a mutex that locks to the whole thread","date":"2018-09-06T17:15:32.817Z","type":"message"}
{"nick":"devsnek","message":"not a callsite","date":"2018-09-06T17:15:34.410Z","type":"message"}
{"nick":"devsnek","message":"so like if i try to lock the mutex twice in the same thread both locks pass","date":"2018-09-06T17:15:59.382Z","type":"message"}
{"nick":"TimothyGu","message":"devsnek: not sure if this is what you're looking for but a semaphore?","date":"2018-09-06T17:16:28.002Z","type":"message"}
{"nick":"devsnek","message":"maybe","date":"2018-09-06T17:17:10.250Z","type":"message"}
{"nick":"seishun","date":"2018-09-06T17:17:33.734Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 246 seconds","date":"2018-09-06T17:31:43.249Z","type":"quit"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 244 seconds","date":"2018-09-06T17:37:41.434Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2018-09-06T17:45:09.293Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-09-06T18:00:49.654Z","type":"quit"}
{"nick":"lundibundi","date":"2018-09-06T18:03:42.394Z","type":"join"}
{"nick":"marthinal","date":"2018-09-06T18:08:56.590Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-09-06T18:10:52.565Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 246 seconds","date":"2018-09-06T18:25:58.244Z","type":"quit"}
{"nick":"lundibundi","date":"2018-09-06T18:30:01.433Z","type":"join"}
{"nick":"JamJam_kid","date":"2018-09-06T18:36:07.734Z","type":"join"}
{"nick":"JamJam_kid","reason":"Ping timeout: 252 seconds","date":"2018-09-06T18:40:33.608Z","type":"quit"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T18:50:23.038Z","type":"quit"}
{"nick":"AtumT","date":"2018-09-06T18:50:52.622Z","type":"join"}
{"nick":"benjamincoe","date":"2018-09-06T18:54:27.524Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T18:56:11.409Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T18:56:34.456Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T18:57:18.258Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T18:58:57.521Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T18:59:01.356Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 244 seconds","date":"2018-09-06T19:11:43.459Z","type":"quit"}
{"nick":"seishun","date":"2018-09-06T19:14:15.119Z","type":"join"}
{"nick":"marthinal","date":"2018-09-06T19:16:27.526Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 245 seconds","date":"2018-09-06T19:20:28.303Z","type":"quit"}
{"nick":"marthinal","date":"2018-09-06T19:29:31.905Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-09-06T19:39:09.472Z","type":"quit"}
{"nick":"gamelaster","reason":"Ping timeout: 272 seconds","date":"2018-09-06T19:49:18.838Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2018-09-06T19:51:13.084Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T20:32:53.795Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T20:45:45.940Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T20:48:30.585Z","type":"join"}
{"nick":"jbenet","reason":"Ping timeout: 252 seconds","date":"2018-09-06T21:02:10.218Z","type":"quit"}
{"nick":"wa7son","reason":"Ping timeout: 252 seconds","date":"2018-09-06T21:02:10.218Z","type":"quit"}
{"nick":"TimothyGu","reason":"Ping timeout: 252 seconds","date":"2018-09-06T21:02:10.218Z","type":"quit"}
{"nick":"seishun","date":"2018-09-06T21:02:42.895Z","type":"join"}
{"nick":"othiym23","reason":"Ping timeout: 252 seconds","date":"2018-09-06T21:02:43.429Z","type":"quit"}
{"nick":"bengl","reason":"Ping timeout: 252 seconds","date":"2018-09-06T21:02:43.429Z","type":"quit"}
{"nick":"othiym23","date":"2018-09-06T21:03:37.725Z","type":"join"}
{"nick":"bengl","date":"2018-09-06T21:03:38.022Z","type":"join"}
{"nick":"TimothyGu","date":"2018-09-06T21:03:39.831Z","type":"join"}
{"nick":"wa7son","date":"2018-09-06T21:03:42.624Z","type":"join"}
{"nick":"jbenet","date":"2018-09-06T21:03:54.730Z","type":"join"}
{"nick":"marthinal","date":"2018-09-06T21:13:19.064Z","type":"join"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 245 seconds","date":"2018-09-06T21:13:48.337Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2018-09-06T21:15:58.371Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 252 seconds","date":"2018-09-06T21:17:33.899Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 246 seconds","date":"2018-09-06T21:42:19.250Z","type":"quit"}
{"nick":"dc13ff","date":"2018-09-06T21:48:57.958Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T21:52:15.198Z","type":"quit"}
{"nick":"zeds1","date":"2018-09-06T21:57:41.367Z","type":"join"}
{"nick":"benjamincoe","date":"2018-09-06T22:00:56.597Z","type":"join"}
{"nick":"zeds1","date":"2018-09-06T22:01:05.003Z","type":"part"}
{"nick":"lundibundi","reason":"Ping timeout: 252 seconds","date":"2018-09-06T22:03:51.496Z","type":"quit"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T22:15:12.661Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T22:17:11.731Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T22:17:17.513Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T22:17:51.469Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T22:17:51.469Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T22:18:06.802Z","type":"join"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2018-09-06T22:21:21.836Z","type":"quit"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T22:32:45.881Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T22:33:24.573Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T22:37:07.565Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T22:48:10.556Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T23:05:43.368Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-06T23:13:45.015Z","type":"join"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-06T23:22:10.304Z","type":"quit"}
{"nick":"nemix","date":"2018-09-06T23:40:46.649Z","type":"join"}
{"nick":"benjamincoe","date":"2018-09-06T23:50:32.055Z","type":"join"}
