{"nick":"devsnek","message":"addaleax: do you know how much tls handshake info is exposed to end users?","date":"2018-03-12T00:39:56.874Z","type":"message"}
{"nick":"devsnek","message":"i've been reading through caddy's mitm detection and wondering if it can be applied to node :D","date":"2018-03-12T00:40:18.430Z","type":"message"}
{"nick":"addaleax","message":"devsnek: not really, beyond the finished messages which we just started exposing","date":"2018-03-12T00:41:45.774Z","type":"message"}
{"nick":"devsnek","message":"i think all i need is the list of ciphers in the specific order the client sent it","date":"2018-03-12T00:42:10.480Z","type":"message"}
{"nick":"devsnek","message":"not sure tho","date":"2018-03-12T00:42:13.162Z","type":"message"}
{"nick":"devsnek","message":"this is some noodley code","date":"2018-03-12T00:42:19.671Z","type":"message"}
{"nick":"addaleax","message":"it should just be replaced completely tbh","date":"2018-03-12T00:42:40.353Z","type":"message"}
{"nick":"devsnek","message":"heh","date":"2018-03-12T00:43:40.982Z","type":"message"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-03-12T00:53:57.819Z","type":"quit"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 264 seconds","date":"2018-03-12T01:00:22.101Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2018-03-12T01:36:09.351Z","type":"join"}
{"nick":"BridgeAR","reason":"Remote host closed the connection","date":"2018-03-12T01:45:43.767Z","type":"quit"}
{"nick":"ChALkeR","reason":"Quit: Konversation terminated!","date":"2018-03-12T02:21:04.773Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-03-12T02:21:22.438Z","type":"join"}
{"nick":"ChALkeR","reason":"Remote host closed the connection","date":"2018-03-12T02:28:20.554Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-03-12T02:34:06.664Z","type":"quit"}
{"nick":"marthinal","date":"2018-03-12T03:27:11.390Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 256 seconds","date":"2018-03-12T03:31:42.287Z","type":"quit"}
{"nick":"howdoi","date":"2018-03-12T05:12:15.788Z","type":"join"}
{"nick":"qard","reason":"Quit: qard","date":"2018-03-12T05:41:59.247Z","type":"quit"}
{"nick":"marthinal","date":"2018-03-12T05:48:39.495Z","type":"join"}
{"nick":"lpin","date":"2018-03-12T06:00:34.728Z","type":"join"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 245 seconds","date":"2018-03-12T06:11:52.185Z","type":"quit"}
{"nick":"othiym23_","date":"2018-03-12T06:27:24.324Z","type":"join"}
{"nick":"robinak","date":"2018-03-12T06:29:54.063Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-12T06:34:05.344Z","type":"join"}
{"nick":"robink","reason":"*.net *.split","date":"2018-03-12T06:34:46.301Z","type":"quit"}
{"nick":"othiym23","reason":"*.net *.split","date":"2018-03-12T06:34:46.499Z","type":"quit"}
{"nick":"mmarchini","reason":"*.net *.split","date":"2018-03-12T06:34:46.565Z","type":"quit"}
{"nick":"Domenic","reason":"*.net *.split","date":"2018-03-12T06:34:46.702Z","type":"quit"}
{"nick":"gowpen","reason":"*.net *.split","date":"2018-03-12T06:34:48.278Z","type":"quit"}
{"nick":"othiym23_","new_nick":"othiym23","date":"2018-03-12T06:34:50.996Z","type":"nick"}
{"nick":"gowpen","date":"2018-03-12T06:35:51.440Z","type":"join"}
{"nick":"Domenic","date":"2018-03-12T06:42:49.334Z","type":"join"}
{"nick":"mmarchini","date":"2018-03-12T06:43:45.340Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-12T06:45:17.958Z","type":"quit"}
{"nick":"BridgeAR","date":"2018-03-12T06:46:57.342Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-12T07:03:18.030Z","type":"join"}
{"nick":"tkore\\work\\","date":"2018-03-12T07:31:17.515Z","type":"join"}
{"nick":"tkore\\work\\","reason":"Changing host","date":"2018-03-12T07:31:17.516Z","type":"quit"}
{"nick":"tkore\\work\\","date":"2018-03-12T07:31:17.583Z","type":"join"}
{"nick":"BridgeAR","reason":"Remote host closed the connection","date":"2018-03-12T07:39:07.548Z","type":"quit"}
{"nick":"BridgeAR","date":"2018-03-12T07:48:43.752Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-12T07:53:49.108Z","type":"quit"}
{"nick":"BridgeAR","reason":"Remote host closed the connection","date":"2018-03-12T08:11:15.244Z","type":"quit"}
{"nick":"chan201","date":"2018-03-12T08:21:18.375Z","type":"join"}
{"nick":"chan201","reason":"Ping timeout: 260 seconds","date":"2018-03-12T08:46:09.974Z","type":"quit"}
{"nick":"tkore\\work\\","new_nick":"tkore\\work","date":"2018-03-12T09:09:02.031Z","type":"nick"}
{"nick":"BridgeAR","date":"2018-03-12T09:10:36.973Z","type":"join"}
{"nick":"BridgeAR","reason":"Ping timeout: 264 seconds","date":"2018-03-12T09:41:46.124Z","type":"quit"}
{"nick":"juggerna_","date":"2018-03-12T09:54:48.592Z","type":"join"}
{"nick":"juggernaut451","reason":"Ping timeout: 240 seconds","date":"2018-03-12T09:56:35.476Z","type":"quit"}
{"nick":"chan201","date":"2018-03-12T10:02:44.151Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-12T10:25:08.481Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-12T10:25:39.058Z","type":"join"}
{"nick":"juggerna_","reason":"Remote host closed the connection","date":"2018-03-12T10:46:49.330Z","type":"quit"}
{"nick":"chan201","reason":"Ping timeout: 264 seconds","date":"2018-03-12T11:00:22.125Z","type":"quit"}
{"nick":"BridgeAR","date":"2018-03-12T11:10:48.076Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-12T11:17:50.448Z","type":"join"}
{"nick":"chan201","date":"2018-03-12T11:26:06.824Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-12T11:48:28.088Z","type":"quit"}
{"nick":"chan201","reason":"Remote host closed the connection","date":"2018-03-12T11:49:45.187Z","type":"quit"}
{"nick":"AtumT","date":"2018-03-12T12:03:37.480Z","type":"join"}
{"nick":"evanlucas","date":"2018-03-12T12:34:41.004Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-12T12:35:01.749Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-03-12T12:35:14.356Z","type":"quit"}
{"nick":"marthinal","date":"2018-03-12T12:36:47.882Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-12T13:04:03.698Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-03-12T13:20:22.466Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-03-12T13:23:17.697Z","type":"join"}
{"nick":"tkore\\work","reason":"Quit: time to go home","date":"2018-03-12T13:45:53.668Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-03-12T14:00:24.370Z","type":"quit"}
{"nick":"marthinal","date":"2018-03-12T14:00:45.557Z","type":"join"}
{"nick":"gabrielschulhof","date":"2018-03-12T14:04:23.450Z","type":"join"}
{"nick":"srl295","date":"2018-03-12T14:09:24.327Z","type":"join"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 265 seconds","date":"2018-03-12T14:10:55.371Z","type":"quit"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-12T14:29:50.394Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-03-12T14:34:16.880Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-12T14:55:40.899Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-03-12T15:04:20.043Z","type":"join"}
{"nick":"bartosh","date":"2018-03-12T15:06:52.066Z","type":"join"}
{"nick":"bartosh","reason":"Client Quit","date":"2018-03-12T15:07:43.014Z","type":"quit"}
{"nick":"bartosh","date":"2018-03-12T15:08:07.042Z","type":"join"}
{"nick":"Fishrock123","date":"2018-03-12T15:12:26.105Z","type":"join"}
{"nick":"al-damiri","date":"2018-03-12T15:13:45.923Z","type":"join"}
{"nick":"Fishrock123","message":"are any of the n-api folks in here?","date":"2018-03-12T15:14:00.434Z","type":"message"}
{"nick":"Fishrock123","message":"or well, someone familiar with node::MakeCallback would also do","date":"2018-03-12T15:22:54.530Z","type":"message"}
{"nick":"Fishrock123","message":"gah I wish I could just @here-mention teams","date":"2018-03-12T15:23:39.049Z","type":"message"}
{"nick":"Fishrock123","message":"or whatever the equivalent would be","date":"2018-03-12T15:24:02.782Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: are you around?","date":"2018-03-12T15:24:48.916Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: pong","date":"2018-03-12T15:27:28.409Z","type":"message"}
{"nick":"addaleax","message":"what’s up? :)","date":"2018-03-12T15:27:35.649Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: Why might node::MakeCallback return an empty MaybeLocal?","date":"2018-03-12T15:28:29.670Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: because there is an exception pending","date":"2018-03-12T15:28:46.275Z","type":"message"}
{"nick":"addaleax","message":"that’s what an empty Maybe or MaybeLocal stands for in the V8 API, and our MakeCallback is similar to like fn->Call(), so we adopted that","date":"2018-03-12T15:29:19.256Z","type":"message"}
{"nick":"chan201","date":"2018-03-12T15:29:53.351Z","type":"join"}
{"nick":"Fishrock123","message":"addaleax: is there a way to have the exception thrown as if it were a js exception anywhere elesE?","date":"2018-03-12T15:31:43.780Z","type":"message"}
{"nick":"devsnek","message":"is there any chance of ever getting promise result/promise status in napi","date":"2018-03-12T15:32:41.401Z","type":"message"}
{"nick":"Fishrock123","message":"ok well","date":"2018-03-12T15:34:04.068Z","type":"message"}
{"nick":"Fishrock123","message":"I guess i'm just gona console.log this","date":"2018-03-12T15:34:11.905Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: it depends – if you have a JS stack below you, you can just pass it through, I guess. if not, you will have to handle it in some way; I think mafintosh has/had a PR upcoming which would allow you essentially pass it through like a “normal” uncaught exception","date":"2018-03-12T15:34:30.277Z","type":"message"}
{"nick":"Fishrock123","message":"it would ahve helped if napi told mere there was an exception rather than \"generic falure\" (whatever the hell that means)","date":"2018-03-12T15:34:36.835Z","type":"message"}
{"nick":"Fishrock123","message":"-sigh-","date":"2018-03-12T15:34:44.245Z","type":"message"}
{"nick":"mafintosh","message":"addaleax: Fishrock123 i have the pr coming today!","date":"2018-03-12T15:35:12.185Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: I *think* it should tell you that? :/","date":"2018-03-12T15:35:36.893Z","type":"message"}
{"nick":"devsnek","message":"if i make changes to node_api.cc and node_api.h will they get automatically shown in the node-addon-api repo","date":"2018-03-12T15:36:35.047Z","type":"message"}
{"nick":"addaleax","message":"devsnek: I think so far they were always ported over manually (if there was explicit porting necessary)","date":"2018-03-12T15:37:13.517Z","type":"message"}
{"nick":"devsnek","message":"just trying to figure out the scope of contributing to napi","date":"2018-03-12T15:37:37.033Z","type":"message"}
{"nick":"devsnek","message":"external-napi repo hasn't been updated in 10 months","date":"2018-03-12T15:37:57.526Z","type":"message"}
{"nick":"devsnek","message":"folder","date":"2018-03-12T15:37:59.708Z","type":"message"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-12T15:38:03.141Z","type":"quit"}
{"nick":"devsnek","message":"oh that file is just a weird placeholder","date":"2018-03-12T15:38:26.754Z","type":"message"}
{"nick":"juggernaut451","date":"2018-03-12T15:40:12.714Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-12T15:59:16.857Z","type":"quit"}
{"nick":"bartosh","reason":"Quit: bartosh","date":"2018-03-12T16:06:35.758Z","type":"quit"}
{"nick":"ryzokuken","date":"2018-03-12T16:20:10.402Z","type":"join"}
{"nick":"qard","date":"2018-03-12T16:25:43.875Z","type":"join"}
{"nick":"devsnek","message":"i'm having a weird issue with typedef","date":"2018-03-12T16:26:34.520Z","type":"message"}
{"nick":"devsnek","message":"well probably not a weird issue","date":"2018-03-12T16:26:39.400Z","type":"message"}
{"nick":"devsnek","message":"probably just me not being good at c","date":"2018-03-12T16:26:45.167Z","type":"message"}
{"nick":"devsnek","message":"i added a typedef enum to node_api_types.h","date":"2018-03-12T16:26:59.714Z","type":"message"}
{"nick":"devsnek","message":"but the enum isn't available to napi.h","date":"2018-03-12T16:27:20.604Z","type":"message"}
{"nick":"devsnek","message":"`unknown type name 'napi_promise_state'`","date":"2018-03-12T16:27:44.704Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: sorry for the awful mess in this, but do you think you could check if I am doing something wrong with \"data\" (the char**)? https://github.com/Fishrock123/bob/blob/C%2B%2B/addon/js-passthrough.cc","date":"2018-03-12T16:28:14.159Z","type":"message"}
{"nick":"Fishrock123","message":"for some reason when I recreate the JS object it is arbitrary memory rather than what it was assigned to","date":"2018-03-12T16:28:44.739Z","type":"message"}
{"nick":"devsnek","message":"node_api_types is included by node_api which is included by napi","date":"2018-03-12T16:29:14.720Z","type":"message"}
{"nick":"Fishrock123","message":"devsnek: doesn't it need to be in the header?","date":"2018-03-12T16:29:48.981Z","type":"message"}
{"nick":"Fishrock123","message":"oh hmm","date":"2018-03-12T16:29:55.773Z","type":"message"}
{"nick":"Fishrock123","message":"maybe you need to include the types file in napi.h?","date":"2018-03-12T16:30:05.119Z","type":"message"}
{"nick":"devsnek","message":"it is in the header","date":"2018-03-12T16:30:38.450Z","type":"message"}
{"nick":"devsnek","message":"i haven't even gotten to writing any real code yet","date":"2018-03-12T16:30:38.558Z","type":"message"}
{"nick":"devsnek","message":"i got stuck with typing it","date":"2018-03-12T16:30:38.558Z","type":"message"}
{"nick":"devsnek","message":"other types are used","date":"2018-03-12T16:30:46.232Z","type":"message"}
{"nick":"devsnek","message":"from it","date":"2018-03-12T16:30:46.387Z","type":"message"}
{"nick":"Fishrock123","message":"devsnek: which repo?","date":"2018-03-12T16:32:36.452Z","type":"message"}
{"nick":"devsnek","message":"node-addon-api","date":"2018-03-12T16:32:40.616Z","type":"message"}
{"nick":"devsnek","message":"i added the enum to src/node_api_types.h","date":"2018-03-12T16:32:47.368Z","type":"message"}
{"nick":"chan201","reason":"Ping timeout: 264 seconds","date":"2018-03-12T16:33:22.180Z","type":"quit"}
{"nick":"devsnek","message":"https://www.irccloud.com/pastebin/sHXfkNpg/node-addon-api.diff","date":"2018-03-12T16:33:23.318Z","type":"message"}
{"nick":"chan201","date":"2018-03-12T16:33:29.545Z","type":"join"}
{"nick":"addaleax","message":"Fishrock123: it's hard to tell... I don't see anything wrong but reinterpret_casts are confusing to track when reading code","date":"2018-03-12T16:33:40.724Z","type":"message"}
{"nick":"addaleax","message":"What does it mean that your errors are void**s?","date":"2018-03-12T16:34:33.943Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: It means I don't care yet - anything that re-casts into some kind of napi_value","date":"2018-03-12T16:34:55.116Z","type":"message"}
{"nick":"Fishrock123","message":":P","date":"2018-03-12T16:34:57.795Z","type":"message"}
{"nick":"Fishrock123","message":"which is probably an error because they would need t be refed but","date":"2018-03-12T16:35:21.069Z","type":"message"}
{"nick":"Fishrock123","message":"that hasn't exploded yet","date":"2018-03-12T16:35:28.218Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: if you have some kind of reproducible failure I can take a look later","date":"2018-03-12T16:38:34.003Z","type":"message"}
{"nick":"devsnek","message":"do either of you see what i did wrong declaring this type :(","date":"2018-03-12T16:38:56.958Z","type":"message"}
{"nick":"Fishrock123","message":"devsnek: I don't unfortunately :s","date":"2018-03-12T16:39:19.484Z","type":"message"}
{"nick":"devsnek","message":"same :s","date":"2018-03-12T16:39:24.745Z","type":"message"}
{"nick":"devsnek","message":"whelp i gotta go to class, if anyone sees just ping me and i'll see when i finish class","date":"2018-03-12T16:39:54.211Z","type":"message"}
{"nick":"addaleax","message":"devsnek: the c++ package might use node_api.h from your node installation if it is available?","date":"2018-03-12T16:41:19.330Z","type":"message"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-12T16:47:23.140Z","type":"quit"}
{"nick":"Fishrock123","message":"napi_get_buffer_info should give me back a pointer in (, , void** data, ), right?","date":"2018-03-12T16:51:37.629Z","type":"message"}
{"nick":"Fishrock123","message":"it's giving me 0x0 :|","date":"2018-03-12T16:51:43.350Z","type":"message"}
{"nick":"AtumT","reason":"Ping timeout: 248 seconds","date":"2018-03-12T16:52:17.441Z","type":"quit"}
{"nick":"chan201","reason":"Ping timeout: 265 seconds","date":"2018-03-12T16:55:44.415Z","type":"quit"}
{"nick":"AtumT","date":"2018-03-12T16:57:41.809Z","type":"join"}
{"nick":"qard","date":"2018-03-12T16:59:08.540Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-12T17:10:18.764Z","type":"join"}
{"nick":"bartosh","date":"2018-03-12T17:19:56.231Z","type":"join"}
{"nick":"Fishrock123","message":"ok well I fixed that but now the pointer still changes after I've gotten it (??)","date":"2018-03-12T17:28:02.228Z","type":"message"}
{"nick":"Fishrock123","message":" \"got buffer from [0x10280ea00], [0x7fff5fbf5cf0]\"... then I pass it to another C++ function and it's suddenly \"reated buffer from [0x102806800], [0x7fff5fbf5c10]\" (where the 2nd is the pointer to the pointer)","date":"2018-03-12T17:30:43.510Z","type":"message"}
{"nick":"Fishrock123","message":"oh god","date":"2018-03-12T17:32:13.577Z","type":"message"}
{"nick":"Fishrock123","message":"the reference IS different","date":"2018-03-12T17:32:17.869Z","type":"message"}
{"nick":"addaleax","message":"The 2nd values are stack-allocated","date":"2018-03-12T17:33:28.100Z","type":"message"}
{"nick":"addaleax","message":"So maybe you have a & too much?","date":"2018-03-12T17:33:41.437Z","type":"message"}
{"nick":"devsnek","message":"addaleax: how would any local development work","date":"2018-03-12T17:35:19.358Z","type":"message"}
{"nick":"devsnek","message":"i'm just doing `npm run test` in the repo","date":"2018-03-12T17:35:28.009Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: the first still shouldn't change though? that's the real problem anyways","date":"2018-03-12T17:35:37.414Z","type":"message"}
{"nick":"Fishrock123","message":"It's just a char* being printed using %x","date":"2018-03-12T17:35:56.776Z","type":"message"}
{"nick":"addaleax","message":"devsnek: yea I think you just have to switch Node versions locally to try different scenarios?","date":"2018-03-12T17:37:24.674Z","type":"message"}
{"nick":"devsnek","message":"the gyp build doesn't link the files in the local directory?","date":"2018-03-12T17:38:01.339Z","type":"message"}
{"nick":"chan201","date":"2018-03-12T17:38:42.413Z","type":"join"}
{"nick":"devsnek","message":"it links using `require('../')`","date":"2018-03-12T17:39:20.826Z","type":"message"}
{"nick":"devsnek","message":"which points to the local repo","date":"2018-03-12T17:39:27.074Z","type":"message"}
{"nick":"addaleax","message":"devsnek: I don't think so.. why should it? You essentially want to develop the same way that users are consuming it, right","date":"2018-03-12T17:39:32.586Z","type":"message"}
{"nick":"devsnek","message":"how does anyone test the code in this repo then","date":"2018-03-12T17:39:48.439Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: not sure, would have to run the code","date":"2018-03-12T17:39:51.101Z","type":"message"}
{"nick":"devsnek","message":"if you make a change to these files","date":"2018-03-12T17:39:52.635Z","type":"message"}
{"nick":"addaleax","message":"devsnek: use node 6?","date":"2018-03-12T17:39:59.722Z","type":"message"}
{"nick":"devsnek","message":"just switch to a version of node without napi and then it will use the local dir?","date":"2018-03-12T17:40:20.803Z","type":"message"}
{"nick":"addaleax","message":"I assume so","date":"2018-03-12T17:40:32.161Z","type":"message"}
{"nick":"devsnek","message":"fun","date":"2018-03-12T17:40:35.427Z","type":"message"}
{"nick":"addaleax","message":"It's what it does when it's being used by other modules","date":"2018-03-12T17:40:47.331Z","type":"message"}
{"nick":"devsnek","message":"oh hey its actually building the files no","date":"2018-03-12T17:40:56.860Z","type":"message"}
{"nick":"addaleax","message":"So it should do the same thing locally","date":"2018-03-12T17:40:57.212Z","type":"message"}
{"nick":"devsnek","message":"i think it worked","date":"2018-03-12T17:41:04.256Z","type":"message"}
{"nick":"gabrielschulhof","date":"2018-03-12T17:42:10.682Z","type":"join"}
{"nick":"devsnek","message":"tests passed woot","date":"2018-03-12T17:43:42.211Z","type":"message"}
{"nick":"devsnek","message":"now to just write the actual c behind all this","date":"2018-03-12T17:43:48.974Z","type":"message"}
{"nick":"bartosh","reason":"Ping timeout: 260 seconds","date":"2018-03-12T17:46:54.347Z","type":"quit"}
{"nick":"chan201","reason":"Read error: Connection reset by peer","date":"2018-03-12T17:56:54.789Z","type":"quit"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-12T18:01:27.690Z","type":"quit"}
{"nick":"BridgeAR","reason":"Ping timeout: 264 seconds","date":"2018-03-12T18:06:22.204Z","type":"quit"}
{"nick":"qard","date":"2018-03-12T18:06:29.181Z","type":"join"}
{"nick":"ljharb","topic":"Get registered on freenode ( https://git.io/vaTS2 ) | Node.js Current: v9.8.0 | LTS: v8.10.0 \"Carbon\", v6.13.1 \"Boron\", v4.8.7 \"Argon\" -- https://nodejs.org/ -- IRC Logs: http://logs.libuv.org/node-dev/latest -- Channel Info: http://nodeirc.info/#node-dev -- Newcomers welcome: http://nodeschool.io/ -- dev channel for all things node core","date":"2018-03-12T18:09:05.959Z","type":"topic"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-12T18:18:07.450Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-03-12T18:22:45.610Z","type":"quit"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-12T18:30:12.735Z","type":"quit"}
{"nick":"qard","date":"2018-03-12T18:32:24.758Z","type":"join"}
{"nick":"qard","reason":"Client Quit","date":"2018-03-12T18:35:43.934Z","type":"quit"}
{"nick":"qard","date":"2018-03-12T18:37:47.594Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-03-12T19:05:31.714Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-03-12T19:18:52.467Z","type":"join"}
{"nick":"bartosh","date":"2018-03-12T19:29:26.249Z","type":"join"}
{"nick":"bartosh","reason":"Client Quit","date":"2018-03-12T19:30:40.475Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-03-12T19:51:04.570Z","type":"quit"}
{"nick":"marthinal","date":"2018-03-12T20:00:52.482Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 260 seconds","date":"2018-03-12T20:05:44.281Z","type":"quit"}
{"nick":"BridgeAR","date":"2018-03-12T20:31:17.345Z","type":"join"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-12T20:35:29.206Z","type":"quit"}
{"nick":"qard","date":"2018-03-12T20:40:00.154Z","type":"join"}
{"nick":"Fishrock123","message":"addaleax: still maybe there? Dx","date":"2018-03-12T20:48:49.040Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: yup!","date":"2018-03-12T20:48:57.472Z","type":"message"}
{"nick":"addaleax","message":"also have more time now :)","date":"2018-03-12T20:49:12.318Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: Buffer::Copy(iso, char*, length) is segfaulting with EXC_BAD_ACCESS","date":"2018-03-12T20:49:42.986Z","type":"message"}
{"nick":"Fishrock123","message":"is there a likely general reason for that?","date":"2018-03-12T20:50:01.218Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: Also I was using the wrong api earlier","date":"2018-03-12T20:50:10.156Z","type":"message"}
{"nick":"Fishrock123","message":"so the bad poitners were a return value only :X","date":"2018-03-12T20:50:21.158Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: I think that can only happen when char* is invalid or length goes out of bounds","date":"2018-03-12T20:50:36.042Z","type":"message"}
{"nick":"Fishrock123","message":"when the pointer is invalid, or the data? (or both?)","date":"2018-03-12T20:50:58.928Z","type":"message"}
{"nick":"Fishrock123","message":"hmmm... setting length to 1 does indeed work","date":"2018-03-12T20:51:56.194Z","type":"message"}
{"nick":"addaleax","message":"not sure how to answer that :D when the pointer points to something that is not a valid region of memory Buffer::Copy() doesn’t do more with the data than copying it into a new memory region","date":"2018-03-12T20:52:00.655Z","type":"message"}
{"nick":"Fishrock123","message":"right, it;s always valid unless it is out of bounds pointer, doh","date":"2018-03-12T20:52:40.706Z","type":"message"}
{"nick":"Fishrock123","message":"hmmm, I feel like А����P�0P� is not \"Hello World\\n\"","date":"2018-03-12T20:53:13.223Z","type":"message"}
{"nick":"devsnek","message":"where are you getting the char* from","date":"2018-03-12T20:53:59.613Z","type":"message"}
{"nick":"devsnek","message":"a fairly common mistake is doing operator(*) on a Utf8Value inline","date":"2018-03-12T20:54:22.536Z","type":"message"}
{"nick":"Fishrock123","message":"my own code","date":"2018-03-12T20:54:42.160Z","type":"message"}
{"nick":"Fishrock123","message":"Aren't Node buffers stored as char* under the hood?","date":"2018-03-12T20:55:02.217Z","type":"message"}
{"nick":"Fishrock123","message":"or is that just libuv?","date":"2018-03-12T20:55:06.750Z","type":"message"}
{"nick":"Fishrock123","message":"I guess I could just pass void* around...","date":"2018-03-12T20:55:19.424Z","type":"message"}
{"nick":"Fishrock123","message":"oh","date":"2018-03-12T20:55:35.191Z","type":"message"}
{"nick":"Fishrock123","message":"devsnek: you mean for Buffer::Copy? it definitely takes a const char*","date":"2018-03-12T20:55:55.556Z","type":"message"}
{"nick":"devsnek","message":"no like getting a const char* from a v8::String::Utf8Value","date":"2018-03-12T20:56:23.010Z","type":"message"}
{"nick":"devsnek","message":"it was a shot in the dark","date":"2018-03-12T20:56:32.603Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: can you not create buffers with a size of > 32768?","date":"2018-03-12T21:05:30.350Z","type":"message"}
{"nick":"Fishrock123","message":"I'm getting a 64kb buffer from JS and getting it;s data and szie, and doing a copy into a new one from c++","date":"2018-03-12T21:05:57.866Z","type":"message"}
{"nick":"Fishrock123","message":"but it seems to fail at more than 32kb...","date":"2018-03-12T21:06:07.192Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: you can, the maximum size is something around 1 GB or so","date":"2018-03-12T21:06:08.109Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: can you link to your current code & where you suspect it’s failing?","date":"2018-03-12T21:06:24.046Z","type":"message"}
{"nick":"Fishrock123","message":"one sec","date":"2018-03-12T21:06:38.866Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: lldb says it fails here: https://github.com/Fishrock123/bob/blob/C%2B%2B/addon/js-passthrough.cc#L189","date":"2018-03-12T21:07:54.801Z","type":"message"}
{"nick":"Fishrock123","message":"changing the input buffer allocation - which is actually at https://github.com/Fishrock123/bob/blob/C%2B%2B/fs/file-sink.js#L107","date":"2018-03-12T21:09:09.551Z","type":"message"}
{"nick":"Fishrock123","message":"to 32 * 1024 makes it pass..","date":"2018-03-12T21:09:17.275Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: yea, that’s a weird call. reinterpret_cast<void**>(&data)? shouldn’t that just be `data`?","date":"2018-03-12T21:09:31.857Z","type":"message"}
{"nick":"evanlucas","reason":"Remote host closed the connection","date":"2018-03-12T21:10:35.302Z","type":"quit"}
{"nick":"addaleax","message":"you want to pass in data but instead you pass in &data, so it creates a buffer that points to the location of the `data` pointer itself (which is in the arguments list of the function)","date":"2018-03-12T21:10:36.738Z","type":"message"}
{"nick":"Fishrock123","message":"oh","date":"2018-03-12T21:10:40.754Z","type":"message"}
{"nick":"Fishrock123","message":"https://nodejs.org/api/n-api.html#n_api_napi_create_buffer_copy","date":"2018-03-12T21:10:59.410Z","type":"message"}
{"nick":"Fishrock123","message":"hmmm","date":"2018-03-12T21:11:38.694Z","type":"message"}
{"nick":"Fishrock123","message":"I must still ahve more such problems","date":"2018-03-12T21:11:51.489Z","type":"message"}
{"nick":"addaleax","message":"yea, `const void* data` … no casting needed, i think","date":"2018-03-12T21:11:53.161Z","type":"message"}
{"nick":"Fishrock123","message":"now it is sporadic","date":"2018-03-12T21:11:55.620Z","type":"message"}
{"nick":"Fishrock123","message":"no huh?","date":"2018-03-12T21:12:07.682Z","type":"message"}
{"nick":"Fishrock123","message":"oh yeah it compiles without the cast","date":"2018-03-12T21:12:36.414Z","type":"message"}
{"nick":"addaleax","message":"yea, casting any pointer to to void* ist valid C++, the other way around is where you need a static_cast","date":"2018-03-12T21:13:00.858Z","type":"message"}
{"nick":"addaleax","message":"*is :P","date":"2018-03-12T21:13:22.292Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: does every pointer pass a typecheck for void*?","date":"2018-03-12T21:13:51.493Z","type":"message"}
{"nick":"addaleax","message":"typecheck?","date":"2018-03-12T21:14:06.948Z","type":"message"}
{"nick":"addaleax","message":"it converts implicitly to void*, yes","date":"2018-03-12T21:14:11.824Z","type":"message"}
{"nick":"addaleax","message":"that’s also why your previous code worked … you passed in void**, which was silently converted to void*","date":"2018-03-12T21:14:37.944Z","type":"message"}
{"nick":"Fishrock123","message":"apparently not: no known conversion from 'char **' to 'void **'","date":"2018-03-12T21:15:09.444Z","type":"message"}
{"nick":"addaleax","message":"yea you can’t cast char** -> void**","date":"2018-03-12T21:15:31.872Z","type":"message"}
{"nick":"addaleax","message":"but char** -> void* would work","date":"2018-03-12T21:15:36.903Z","type":"message"}
{"nick":"addaleax","message":"i mean, it would compile","date":"2018-03-12T21:15:49.944Z","type":"message"}
{"nick":"addaleax","message":"it’s probably not what you actually want","date":"2018-03-12T21:15:54.693Z","type":"message"}
{"nick":"Fishrock123","message":"omg!","date":"2018-03-12T21:16:35.954Z","type":"message"}
{"nick":"Fishrock123","message":"i removed the extra & fro the other site and it works!","date":"2018-03-12T21:16:46.937Z","type":"message"}
{"nick":"Fishrock123","message":"finally haha","date":"2018-03-12T21:16:51.757Z","type":"message"}
{"nick":"Fishrock123","message":"thanks!! :D","date":"2018-03-12T21:16:55.853Z","type":"message"}
{"nick":"addaleax","message":"no problem :)","date":"2018-03-12T21:16:59.557Z","type":"message"}
{"nick":"Fishrock123","message":"I bet this thing leaks all over the place","date":"2018-03-12T21:18:10.731Z","type":"message"}
{"nick":"Fishrock123","message":"I do really need to like, clean up all pointers, right?","date":"2018-03-12T21:18:32.897Z","type":"message"}
{"nick":"addaleax","message":"it depends","date":"2018-03-12T21:19:15.770Z","type":"message"}
{"nick":"addaleax","message":"you do need to keep track which pointers are owned by what piece of code/by what other objects","date":"2018-03-12T21:19:29.893Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: what would be the simplest example of where i'd have to delete a pointer?","date":"2018-03-12T21:23:58.340Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: https://github.com/Fishrock123/bob/blob/C%2B%2B/addon/js-passthrough.cc#L149","date":"2018-03-12T21:24:24.748Z","type":"message"}
{"nick":"addaleax","message":"generally everywhere where you use `new something`, because everything where node takes ownership (which is essentially only buffers) uses malloc()/free()","date":"2018-03-12T21:24:59.233Z","type":"message"}
{"nick":"addaleax","message":"or you could use sth like `std::vector<char>` in that place, which would automatically free memory at the end of the scope","date":"2018-03-12T21:25:34.728Z","type":"message"}
{"nick":"Fishrock123","message":"right","date":"2018-03-12T21:25:42.937Z","type":"message"}
{"nick":"Fishrock123","message":"or a unique pointer of char","date":"2018-03-12T21:25:58.438Z","type":"message"}
{"nick":"Fishrock123","message":"I think","date":"2018-03-12T21:26:00.633Z","type":"message"}
{"nick":"Fishrock123","message":"err I guess it'd have to be an array of unique pointers","date":"2018-03-12T21:26:23.975Z","type":"message"}
{"nick":"Fishrock123","message":"not exactly efficient","date":"2018-03-12T21:26:27.922Z","type":"message"}
{"nick":"addaleax","message":"std::unique_ptr<char[]> is a thing","date":"2018-03-12T21:26:43.782Z","type":"message"}
{"nick":"addaleax","message":"an array of `unique_ptr<char>`s wouldn’t give you a single contiguous memory block anyway, if that’s what you were thinking","date":"2018-03-12T21:27:11.562Z","type":"message"}
{"nick":"Fishrock123","message":"lol","date":"2018-03-12T21:27:40.940Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: does https://github.com/Fishrock123/bob/blob/C%2B%2B/addon/js-passthrough.cc#L25 look right to you? I added the if statements to the ~PassThrough and suddenly the compiler complained and said I needed PassThrough:: there...","date":"2018-03-12T21:28:37.038Z","type":"message"}
{"nick":"Fishrock123","message":"PassThrough::Destructor is called by napi somehow","date":"2018-03-12T21:29:01.283Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: it does not look right to me … you almost never call a destructor directly in C++","date":"2018-03-12T21:29:49.544Z","type":"message"}
{"nick":"Fishrock123","message":"the napi examples had this so... yeah","date":"2018-03-12T21:30:10.019Z","type":"message"}
{"nick":"addaleax","message":"`delete static_cast<PassThrough*>(nativeObject);`","date":"2018-03-12T21:30:20.907Z","type":"message"}
{"nick":"addaleax","message":"generally, if you have a `new` for something, you want a corresponding `delete` or something that takes ownership of your object","date":"2018-03-12T21:30:51.349Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: what example is that? mind if i take a look?","date":"2018-03-12T21:31:32.289Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: the class has napi references that need to be claned up though","date":"2018-03-12T21:33:10.996Z","type":"message"}
{"nick":"Fishrock123","message":"or JS object will never be freed","date":"2018-03-12T21:33:16.849Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: I took it from the test since the examples are.. old I think: https://github.com/nodejs/node/blob/master/test/addons-napi/6_object_wrap/myobject.cc","date":"2018-03-12T21:34:19.376Z","type":"message"}
{"nick":"addaleax","message":"idk if it’s obvious but `delete foo;` does call foo’s destructor","date":"2018-03-12T21:34:36.480Z","type":"message"}
{"nick":"addaleax","message":"but you’re right","date":"2018-03-12T21:34:47.265Z","type":"message"}
{"nick":"Fishrock123","message":"would that be more idomatic?","date":"2018-03-12T21:35:00.663Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: i’m not sure … the thing is, as long as you have those napi references as members of your class, they can’t be garbage collected until the destructor is run; which means you’d have to make sure there are absolutely no backreferences from those js objects to your passthrough object","date":"2018-03-12T21:37:16.036Z","type":"message"}
{"nick":"addaleax","message":"you could probably store weak references instead (initial refcount = 0) and instead remember those objects by setting them as properties on the js object for your passthrough","date":"2018-03-12T21:37:55.677Z","type":"message"}
{"nick":"addaleax","message":"i think that should work","date":"2018-03-12T21:37:57.902Z","type":"message"}
{"nick":"Fishrock123","message":"ooh hmmm ok","date":"2018-03-12T21:38:54.267Z","type":"message"}
{"nick":"not-an-aardvark","date":"2018-03-12T21:44:17.951Z","type":"join"}
{"nick":"Fishrock123","message":"addaleax: for `char* buf = new char[string_length];` would it be `delete buf`, or `delete *buf`?","date":"2018-03-12T21:48:23.624Z","type":"message"}
{"nick":"holdsworth","reason":"Quit: No Ping reply in 180 seconds.","date":"2018-03-12T21:48:28.357Z","type":"quit"}
{"nick":"Fishrock123","message":"I do want to clear the memory underneath, so option 2 I think?","date":"2018-03-12T21:48:37.940Z","type":"message"}
{"nick":"holdsworth_","date":"2018-03-12T21:48:38.739Z","type":"join"}
{"nick":"qbit","reason":"Ping timeout: 260 seconds","date":"2018-03-12T21:49:34.651Z","type":"quit"}
{"nick":"addaleax","message":"Fishrock123: delete[] buf;","date":"2018-03-12T21:49:36.509Z","type":"message"}
{"nick":"Fishrock123","message":"oh, delete[] is a thing","date":"2018-03-12T21:49:37.353Z","type":"message"}
{"nick":"Fishrock123","message":"heh","date":"2018-03-12T21:49:41.498Z","type":"message"}
{"nick":"addaleax","message":"i think delete *buf; wouldn’t compile","date":"2018-03-12T21:50:06.054Z","type":"message"}
{"nick":"robertkowalski","reason":"Ping timeout: 260 seconds","date":"2018-03-12T21:50:09.929Z","type":"quit"}
{"nick":"addaleax","message":"delete buf; unfortunately would and we’ve even had memory leaks in node because of that :/","date":"2018-03-12T21:50:19.319Z","type":"message"}
{"nick":"robertkowalski","date":"2018-03-12T21:50:35.586Z","type":"join"}
{"nick":"qbit","date":"2018-03-12T21:54:21.386Z","type":"join"}
{"nick":"Fishrock123","message":"addaleax: hmm, my compiler didn't like the delete suggestion:","date":"2018-03-12T22:07:13.137Z","type":"message"}
{"nick":"Fishrock123","message":"warning: delete called on non-final 'PassThrough' that has virtual functions but non-virtual destructor [-Wdelete-non-virtual-dtor]","date":"2018-03-12T22:07:26.438Z","type":"message"}
{"nick":"Fishrock123","message":"> delete static_cast<PassThrough*>(nativeObject);","date":"2018-03-12T22:07:31.421Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: never seen that, but yes, marking `PassThrough` as `final` probably doesn’t hurt :)","date":"2018-03-12T22:08:19.552Z","type":"message"}
{"nick":"addaleax","message":"and it should get rid of the warning","date":"2018-03-12T22:08:30.029Z","type":"message"}
{"nick":"seishun","date":"2018-03-12T22:08:30.892Z","type":"join"}
{"nick":"addaleax","message":"idk if you want to know why it complains that way or not, if you do i’m happy to go into more details","date":"2018-03-12T22:09:02.475Z","type":"message"}
{"nick":"doodadjs_","date":"2018-03-12T22:19:26.857Z","type":"join"}
{"nick":"doodadjs","reason":"Ping timeout: 240 seconds","date":"2018-03-12T22:19:57.796Z","type":"quit"}
{"nick":"Fishrock123","message":"addaleax: I don't know what \"marking it as final\" means :S","date":"2018-03-12T22:20:29.904Z","type":"message"}
{"nick":"Fishrock123","message":"ima get the mail real quick, be back in <10","date":"2018-03-12T22:20:39.989Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: sure :) it means starting the class declaration with `class PassThrough final {` instead of `class PassThrough {`","date":"2018-03-12T22:21:52.314Z","type":"message"}
{"nick":"devsnek","message":"hey addaleax do you know anything about v8 specific stuff like creating platforms and such","date":"2018-03-12T22:23:04.857Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: https://isocpp.org/wiki/faq/virtual-functions#virtual-dtors has some more info on the “why” of things, if you’re curious","date":"2018-03-12T22:23:27.806Z","type":"message"}
{"nick":"addaleax","message":"devsnek: i would like to think that i do ;)","date":"2018-03-12T22:23:39.940Z","type":"message"}
{"nick":"devsnek","message":"can i pick your brain for a few minutes then","date":"2018-03-12T22:23:52.308Z","type":"message"}
{"nick":"devsnek","message":"`V8::InitializePlatform(platform.get());` aborts with signal 11","date":"2018-03-12T22:24:13.954Z","type":"message"}
{"nick":"devsnek","message":"i've made applications with v8 before and i've never gotten this behavior","date":"2018-03-12T22:24:24.956Z","type":"message"}
{"nick":"addaleax","message":"devsnek: is this in the general context of node, or are you working with a brand new thing?","date":"2018-03-12T22:24:53.391Z","type":"message"}
{"nick":"devsnek","message":"brand new thing","date":"2018-03-12T22:24:58.634Z","type":"message"}
{"nick":"addaleax","message":"signal 11 would mean segfault, so my first guess is that `platform.get()` might not be valid?","date":"2018-03-12T22:25:08.311Z","type":"message"}
{"nick":"devsnek","message":"its a unique_ptr","date":"2018-03-12T22:25:18.885Z","type":"message"}
{"nick":"devsnek","message":"and this code is like almost straight from the hello world","date":"2018-03-12T22:25:32.813Z","type":"message"}
{"nick":"devsnek","message":"the only difference is i disabled snapshots so i'm not calling InitializeExternalStartupData","date":"2018-03-12T22:26:09.038Z","type":"message"}
{"nick":"addaleax","message":"devsnek: I think that would only happen after the platform initialization anyway, right?","date":"2018-03-12T22:26:29.541Z","type":"message"}
{"nick":"devsnek","message":"hello world calls it before platform stuff","date":"2018-03-12T22:26:40.768Z","type":"message"}
{"nick":"devsnek","message":"i assume its unrelated tho?","date":"2018-03-12T22:26:48.500Z","type":"message"}
{"nick":"devsnek","message":"here i just pushed it up https://github.com/devsnek/ivan/blob/master/src/ivan.cc#L91","date":"2018-03-12T22:27:04.491Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: I may need to inherit from this though","date":"2018-03-12T22:31:37.499Z","type":"message"}
{"nick":"addaleax","message":"devsnek: i don’t see anything standing out as obviously incorrect","date":"2018-03-12T22:31:39.937Z","type":"message"}
{"nick":"devsnek","message":"yea i have no idea at this point","date":"2018-03-12T22:31:50.925Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: okay, then you want a virtual destructor","date":"2018-03-12T22:31:52.185Z","type":"message"}
{"nick":"devsnek","message":"i'm linking against v8 6.6 lgkr","date":"2018-03-12T22:32:07.715Z","type":"message"}
{"nick":"devsnek","message":"lkgr*","date":"2018-03-12T22:32:10.793Z","type":"message"}
{"nick":"addaleax","message":"devsnek: are you okay with c++ debugger tools like gdb/lldb? that would probably be the easiest route forward","date":"2018-03-12T22:32:11.656Z","type":"message"}
{"nick":"devsnek","message":"yea","date":"2018-03-12T22:32:17.811Z","type":"message"}
{"nick":"devsnek","message":"i heva  trace","date":"2018-03-12T22:32:20.024Z","type":"message"}
{"nick":"devsnek","message":"spelling","date":"2018-03-12T22:32:23.424Z","type":"message"}
{"nick":"devsnek","message":"https://www.irccloud.com/pastebin/opKVftFG/trace","date":"2018-03-12T22:32:45.916Z","type":"message"}
{"nick":"addaleax","message":"devsnek: so i guess `trace_buffer_` is null or sth? it’s a shame james isn’t here, he’s been really into this tracing stuff recently","date":"2018-03-12T22:35:33.881Z","type":"message"}
{"nick":"devsnek","message":"i don't know what this tracing stuff is tho ;-;","date":"2018-03-12T22:35:46.913Z","type":"message"}
{"nick":"devsnek","message":"i didn't ask for tracing","date":"2018-03-12T22:35:53.502Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2018-03-12T22:39:27.378Z","type":"quit"}
{"nick":"addaleax","message":"devsnek: yea … it’s weird that the default platform doesn’t already provide something","date":"2018-03-12T22:41:41.344Z","type":"message"}
{"nick":"devsnek","message":"i'm not sure where to go with this","date":"2018-03-12T22:42:35.394Z","type":"message"}
{"nick":"devsnek","message":"i'd ask in #v8 but its dead 24/7","date":"2018-03-12T22:42:54.095Z","type":"message"}
{"nick":"addaleax","message":"the comment in the v8 header says `If |tracing_controller| is nullptr, the default platform will create a v8::platform::TracingController instance and use it.`","date":"2018-03-12T22:43:47.982Z","type":"message"}
{"nick":"devsnek","message":"is this something i can pass to NewDefaultPlatform?","date":"2018-03-12T22:44:09.505Z","type":"message"}
{"nick":"addaleax","message":"you can pass one to it, yes","date":"2018-03-12T22:44:24.805Z","type":"message"}
{"nick":"devsnek","message":"i guess i can try doing that","date":"2018-03-12T22:44:33.732Z","type":"message"}
{"nick":"addaleax","message":"it shouldn’t be necessary, the comment seems to indicate that","date":"2018-03-12T22:44:38.756Z","type":"message"}
{"nick":"devsnek","message":"should i open a bug?","date":"2018-03-12T22:44:45.941Z","type":"message"}
{"nick":"devsnek","message":"this *is* an lkgr branch so it seems unlikely to be v8's fault","date":"2018-03-12T22:45:06.705Z","type":"message"}
{"nick":"addaleax","message":"devsnek: so … could you give a full stack trace for that crash?","date":"2018-03-12T22:46:15.870Z","type":"message"}
{"nick":"devsnek","message":"would that involve rebuilding v8 with debug?","date":"2018-03-12T22:46:30.752Z","type":"message"}
{"nick":"addaleax","message":"don’t you already have that? otherwise it seems weird that the debugger shows you a code snippet :D","date":"2018-03-12T22:46:56.116Z","type":"message"}
{"nick":"devsnek","message":"`is_debug = false` in my gn config","date":"2018-03-12T22:47:05.948Z","type":"message"}
{"nick":"devsnek","message":"i assume its not a debug build","date":"2018-03-12T22:47:09.726Z","type":"message"}
{"nick":"addaleax","message":"anyway, worst case you can always just add `if(!trace_buffer_) return;` before the line in that file","date":"2018-03-12T22:47:23.704Z","type":"message"}
{"nick":"addaleax","message":"should be safe","date":"2018-03-12T22:47:28.038Z","type":"message"}
{"nick":"devsnek","message":"well uh","date":"2018-03-12T22:47:45.954Z","type":"message"}
{"nick":"devsnek","message":"i'll rebuild v8","date":"2018-03-12T22:47:48.298Z","type":"message"}
{"nick":"devsnek","message":"and get back to you in an hour","date":"2018-03-12T22:47:52.158Z","type":"message"}
{"nick":"doodadjs_","reason":"Ping timeout: 260 seconds","date":"2018-03-12T23:03:39.290Z","type":"quit"}
{"nick":"doodadjs","date":"2018-03-12T23:07:02.484Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2018-03-12T23:09:46.111Z","type":"quit"}
{"nick":"ryzokuken","reason":"Quit: Connection closed for inactivity","date":"2018-03-12T23:09:46.905Z","type":"quit"}
{"nick":"devsnek","message":"addaleax: nothing much useful in the full thread backtrace","date":"2018-03-12T23:18:16.824Z","type":"message"}
{"nick":"devsnek","message":"https://www.irccloud.com/pastebin/XTEziY4y/","date":"2018-03-12T23:18:19.705Z","type":"message"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-12T23:20:31.508Z","type":"quit"}
{"nick":"doodadjs","reason":"Ping timeout: 240 seconds","date":"2018-03-12T23:22:35.524Z","type":"quit"}
{"nick":"addaleax","message":"devsnek: yeah … debug build would be nice :/","date":"2018-03-12T23:23:04.748Z","type":"message"}
{"nick":"devsnek","message":"everything is debug","date":"2018-03-12T23:23:17.868Z","type":"message"}
{"nick":"addaleax","message":"i won’t be here in an hour, but if you send me dms i’ll read them in the morning","date":"2018-03-12T23:23:17.868Z","type":"message"}
{"nick":"devsnek","message":"`use_debug = true`","date":"2018-03-12T23:23:20.938Z","type":"message"}
{"nick":"devsnek","message":"`--ggdb`","date":"2018-03-12T23:23:25.944Z","type":"message"}
{"nick":"devsnek","message":"`--debug`","date":"2018-03-12T23:23:29.158Z","type":"message"}
{"nick":"addaleax","message":"ok, great :)","date":"2018-03-12T23:23:32.255Z","type":"message"}
{"nick":"devsnek","message":"thats what i got","date":"2018-03-12T23:23:36.640Z","type":"message"}
{"nick":"devsnek","message":";-;","date":"2018-03-12T23:23:38.355Z","type":"message"}
{"nick":"addaleax","message":"did you try just adding `if(!trace_buffer_) return;` there? i think it’s totally possible that V8 is not used to dealing with embedders that don’t have tracing support","date":"2018-03-12T23:24:15.155Z","type":"message"}
{"nick":"qard","date":"2018-03-12T23:24:46.388Z","type":"join"}
{"nick":"devsnek","message":"i'll try it","date":"2018-03-12T23:27:34.269Z","type":"message"}
{"nick":"doodadjs","date":"2018-03-12T23:28:47.199Z","type":"join"}
{"nick":"devsnek","message":"and what would i have to do to \"add tracing support\"","date":"2018-03-12T23:29:39.290Z","type":"message"}
{"nick":"devsnek","message":"like v8's hello world and past stuff i've made never needed any of this","date":"2018-03-12T23:29:54.827Z","type":"message"}
{"nick":"devsnek","message":"`Check failed: (params.array_buffer_allocator) != nullptr` what","date":"2018-03-12T23:31:18.990Z","type":"message"}
{"nick":"devsnek","message":"this is turning into a pattern of things being nullptr","date":"2018-03-12T23:31:30.776Z","type":"message"}
{"nick":"addaleax","message":"devsnek: i mean this is a little clearer, no? :D","date":"2018-03-12T23:32:27.652Z","type":"message"}
{"nick":"devsnek","message":"how is the array_buffer_allocator a nullptr ;-;","date":"2018-03-12T23:32:52.383Z","type":"message"}
{"nick":"devsnek","message":"thats two things now","date":"2018-03-12T23:32:57.650Z","type":"message"}
{"nick":"robinak","reason":"Quit: http://quassel-irc.org - Chat comfortably. Anywhere.","date":"2018-03-12T23:33:46.992Z","type":"quit"}
{"nick":"addaleax","message":"devsnek: i don’t know how that happened, but at least there’s a clear path to checking where that comes from, right?","date":"2018-03-12T23:34:27.149Z","type":"message"}
{"nick":"devsnek","message":"i guess","date":"2018-03-12T23:34:35.192Z","type":"message"}
{"nick":"doodadjs","reason":"Ping timeout: 264 seconds","date":"2018-03-12T23:36:22.163Z","type":"quit"}
{"nick":"devsnek","message":"https://gc.gy/ǳ.png","date":"2018-03-12T23:36:25.482Z","type":"message"}
{"nick":"addaleax","message":"devsnek: you could check what params.array_buffer_allocator is at that point","date":"2018-03-12T23:37:34.407Z","type":"message"}
{"nick":"addaleax","message":"in a debugger","date":"2018-03-12T23:37:37.496Z","type":"message"}
{"nick":"doodadjs","date":"2018-03-12T23:37:39.308Z","type":"join"}
{"nick":"devsnek","message":"oyea","date":"2018-03-12T23:38:14.283Z","type":"message"}
{"nick":"devsnek","message":"frame variable returns nothing :/","date":"2018-03-12T23:38:48.994Z","type":"message"}
{"nick":"devsnek","message":"oh wrong frame","date":"2018-03-12T23:40:07.521Z","type":"message"}
{"nick":"devsnek","message":"`array_buffer_allocator = 0x6f63000a736d2066` not a nullptr","date":"2018-03-12T23:40:54.729Z","type":"message"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-12T23:41:33.989Z","type":"quit"}
{"nick":"marthinal","date":"2018-03-12T23:41:46.378Z","type":"join"}
{"nick":"devsnek","message":"this is going way over my head :(","date":"2018-03-12T23:42:07.400Z","type":"message"}
{"nick":"marthinal","reason":"Ping timeout: 260 seconds","date":"2018-03-12T23:46:14.357Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2018-03-12T23:46:39.709Z","type":"quit"}
{"nick":"addaleax","message":"devsnek: but not a valid pointer either","date":"2018-03-12T23:46:53.079Z","type":"message"}
{"nick":"devsnek","message":"oh how do you know","date":"2018-03-12T23:47:07.083Z","type":"message"}
{"nick":"addaleax","message":"devsnek: all of the bytes in it are valid ascii, and a pointer to a “real” c++ object (like the array buffer allocator) would at least be 4-byte-aligned (more likely 8), which is not the case when the pointer ends in `6`","date":"2018-03-12T23:48:34.915Z","type":"message"}
{"nick":"devsnek","message":"i see","date":"2018-03-12T23:48:46.248Z","type":"message"}
{"nick":"devsnek","message":"so where do i go from here","date":"2018-03-12T23:49:13.572Z","type":"message"}
{"nick":"addaleax","message":"have you tried running this in valgrind or a similar tool?","date":"2018-03-12T23:49:44.791Z","type":"message"}
{"nick":"devsnek","message":"no","date":"2018-03-12T23:49:49.045Z","type":"message"}
{"nick":"addaleax","message":"that’s always a decent first step when it comes to memory corruption","date":"2018-03-12T23:49:57.039Z","type":"message"}
{"nick":"devsnek","message":"hmm i just went to find install instructios","date":"2018-03-12T23:50:27.802Z","type":"message"}
{"nick":"devsnek","message":"apparently it doesn't run properly on macos","date":"2018-03-12T23:50:33.529Z","type":"message"}
{"nick":"addaleax","message":"devsnek: would it make sense for me to clone your repo & try to build & run it?","date":"2018-03-12T23:51:33.673Z","type":"message"}
{"nick":"devsnek","message":"if you're feeling up to it i wouldn't say no","date":"2018-03-12T23:51:44.303Z","type":"message"}
{"nick":"addaleax","message":"devsnek: what are the build steps? copy v8 from a local checkout, then ninja?","date":"2018-03-12T23:53:21.949Z","type":"message"}
{"nick":"devsnek","message":"yea","date":"2018-03-12T23:53:27.985Z","type":"message"}
{"nick":"devsnek","message":"it just expects a built v8 in `deps/v8`","date":"2018-03-12T23:53:40.908Z","type":"message"}
{"nick":"robink","date":"2018-03-12T23:56:00.011Z","type":"join"}
{"nick":"addaleax","message":"ok, need to rebuild, might take a while","date":"2018-03-12T23:56:21.956Z","type":"message"}
{"nick":"devsnek","message":"np","date":"2018-03-12T23:58:36.080Z","type":"message"}
