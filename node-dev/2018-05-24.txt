{"nick":"devsnek","message":"ljharb: propertyIsEnumerable throws reference error","date":"2018-05-24T00:08:51.321Z","type":"message"}
{"nick":"devsnek","message":"for..in throws reference error","date":"2018-05-24T00:08:55.888Z","type":"message"}
{"nick":"ChALkeR","reason":"Ping timeout: 260 seconds","date":"2018-05-24T00:09:30.036Z","type":"quit"}
{"nick":"zeds","date":"2018-05-24T00:19:00.642Z","type":"part"}
{"nick":"devsnek","message":"according to the v8 dev anything that uses [[GetOwnProperty]] will throw","date":"2018-05-24T00:26:50.097Z","type":"message"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2018-05-24T01:53:36.695Z","type":"quit"}
{"nick":"robink","reason":"Ping timeout: 245 seconds","date":"2018-05-24T01:57:17.475Z","type":"quit"}
{"nick":"apapirovski","date":"2018-05-24T02:05:04.533Z","type":"join"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2018-05-24T02:06:21.042Z","type":"quit"}
{"nick":"apapirovski","reason":"Ping timeout: 245 seconds","date":"2018-05-24T02:09:22.386Z","type":"quit"}
{"nick":"apapirovski","date":"2018-05-24T02:28:06.879Z","type":"join"}
{"nick":"apapirov_","date":"2018-05-24T02:28:40.481Z","type":"join"}
{"nick":"apapirovski","reason":"Ping timeout: 252 seconds","date":"2018-05-24T02:32:26.886Z","type":"quit"}
{"nick":"DavidCai1993","date":"2018-05-24T02:44:35.018Z","type":"join"}
{"nick":"Ruben","date":"2018-05-24T02:44:49.472Z","type":"join"}
{"nick":"BridgeAR2","reason":"Ping timeout: 245 seconds","date":"2018-05-24T02:47:42.345Z","type":"quit"}
{"nick":"DavidCai1993","reason":"Client Quit","date":"2018-05-24T02:48:41.825Z","type":"quit"}
{"nick":"Ruben","reason":"Ping timeout: 245 seconds","date":"2018-05-24T02:53:10.401Z","type":"quit"}
{"nick":"ljharb","message":"wow","date":"2018-05-24T02:55:26.105Z","type":"message"}
{"nick":"ljharb","message":"devsnek: seems like a v8 bug; you should be able to get anything that's not \"the value\"","date":"2018-05-24T02:55:38.728Z","type":"message"}
{"nick":"ljharb","message":"devsnek: isEnumerable, keys, getOwnPropertyNames; should all work, because none of them touch the value","date":"2018-05-24T02:55:54.676Z","type":"message"}
{"nick":"devsnek","message":"so is the bug that the v8 dev thinks that [[GetOwnProperty]] should be where it throws?","date":"2018-05-24T02:56:17.877Z","type":"message"}
{"nick":"devsnek","message":"ljharb: ^","date":"2018-05-24T02:57:12.145Z","type":"message"}
{"nick":"ljharb","message":"i think that it shouldn't throw on [[GetOwnProperty]], it should throw on when it would be observable what the value (or getter/setter) is","date":"2018-05-24T02:57:13.506Z","type":"message"}
{"nick":"ljharb","message":"iow anything that's static - and won't change after evaluation - should be accessible always","date":"2018-05-24T02:57:35.118Z","type":"message"}
{"nick":"devsnek","message":"is there a part of the spec i can link to to explain this","date":"2018-05-24T02:57:56.440Z","type":"message"}
{"nick":"ljharb","message":"i don't think it needs teh spec","date":"2018-05-24T02:58:32.788Z","type":"message"}
{"nick":"ljharb","message":"i think you just say `Object.keys(namespaceObject)` should always work because that info is statically known","date":"2018-05-24T02:58:45.933Z","type":"message"}
{"nick":"ljharb","message":"and logically, gOPN should also work, as should isEnumerable","date":"2018-05-24T02:58:58.995Z","type":"message"}
{"nick":"devsnek","message":"whats gOPN","date":"2018-05-24T02:59:11.347Z","type":"message"}
{"nick":"devsnek","message":"oh","date":"2018-05-24T02:59:17.753Z","type":"message"}
{"nick":"devsnek","message":"getOwnPropertyNames works","date":"2018-05-24T02:59:24.397Z","type":"message"}
{"nick":"devsnek","message":"thats the only thing that works atm","date":"2018-05-24T02:59:30.483Z","type":"message"}
{"nick":"ljharb","message":"ok, that's good","date":"2018-05-24T02:59:31.875Z","type":"message"}
{"nick":"ljharb","message":"but yeah keys should definitely work then","date":"2018-05-24T02:59:37.899Z","type":"message"}
{"nick":"ljharb","message":"as should for..in, tbh","date":"2018-05-24T02:59:42.547Z","type":"message"}
{"nick":"ljharb","message":"and `Reflect.ownKeys`","date":"2018-05-24T02:59:48.646Z","type":"message"}
{"nick":"ljharb","message":"basically everything that doesn't expose the value, or a getter/setter, should work","date":"2018-05-24T03:00:00.670Z","type":"message"}
{"nick":"d3r3k","reason":"Quit: Connection closed for inactivity","date":"2018-05-24T03:37:13.159Z","type":"quit"}
{"nick":"ljharb","topic":"Get registered on freenode ( https://git.io/vaTS2 ) | Node.js Current: v10.2.0  | LTS: Carbon v8.11.2, Boron v6.14.2; EOL: Argon v4.9.1, v9, v7, v5, <= v4 | -- https://nodejs.org/ -- IRC Logs: http://logs.libuv.org/node-dev/latest -- Channel Info: http://nodeirc.info/#node-dev -- Newcomers welcome: http://nodeschool.io/ -- dev channel for all things node core","date":"2018-05-24T03:50:05.089Z","type":"topic"}
{"nick":"marthinal","date":"2018-05-24T04:05:07.546Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 245 seconds","date":"2018-05-24T04:09:22.315Z","type":"quit"}
{"nick":"apapirov_","reason":"Ping timeout: 245 seconds","date":"2018-05-24T04:46:02.344Z","type":"quit"}
{"nick":"marthinal","date":"2018-05-24T04:55:47.611Z","type":"join"}
{"nick":"fiet250","date":"2018-05-24T04:59:07.372Z","type":"join"}
{"nick":"fiet250","reason":"Client Quit","date":"2018-05-24T04:59:12.475Z","type":"quit"}
{"nick":"apapirovski","date":"2018-05-24T05:00:32.978Z","type":"join"}
{"nick":"apapirovski","reason":"Remote host closed the connection","date":"2018-05-24T05:01:37.014Z","type":"quit"}
{"nick":"apapirovski","date":"2018-05-24T05:02:09.930Z","type":"join"}
{"nick":"apapirovski","reason":"Remote host closed the connection","date":"2018-05-24T05:02:19.863Z","type":"quit"}
{"nick":"apapirovski","date":"2018-05-24T05:02:31.753Z","type":"join"}
{"nick":"lpin","date":"2018-05-24T05:09:44.282Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-05-24T05:35:06.220Z","type":"quit"}
{"nick":"lpin","reason":"Read error: Connection reset by peer","date":"2018-05-24T06:10:33.081Z","type":"quit"}
{"nick":"lpin","date":"2018-05-24T06:11:44.095Z","type":"join"}
{"nick":"lpin","reason":"Client Quit","date":"2018-05-24T06:11:58.110Z","type":"quit"}
{"nick":"lpin","date":"2018-05-24T06:12:12.897Z","type":"join"}
{"nick":"seishun","date":"2018-05-24T07:38:49.375Z","type":"join"}
{"nick":"apapirovski","reason":"Remote host closed the connection","date":"2018-05-24T07:45:25.916Z","type":"quit"}
