{"nick":"shree","date":"2019-11-02T00:11:01.191Z","type":"join"}
{"nick":"mgol","date":"2019-11-02T00:20:03.372Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-11-02T00:23:31.285Z","type":"quit"}
{"nick":"shree","date":"2019-11-02T00:26:29.488Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-11-02T00:29:32.043Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-11-02T00:47:22.292Z","type":"quit"}
{"nick":"Deacyde","date":"2019-11-02T00:56:20.775Z","type":"join"}
{"nick":"Gireesh","date":"2019-11-02T01:57:02.645Z","type":"join"}
{"nick":"Gireesh","reason":"Ping timeout: 260 seconds","date":"2019-11-02T02:35:11.772Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 268 seconds","date":"2019-11-02T03:25:45.600Z","type":"quit"}
{"nick":"antsmartian","date":"2019-11-02T03:57:39.768Z","type":"join"}
{"nick":"shree","date":"2019-11-02T04:24:35.090Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-11-02T04:26:15.362Z","type":"quit"}
{"nick":"antsmartian","reason":"Read error: Connection reset by peer","date":"2019-11-02T04:36:27.462Z","type":"quit"}
{"nick":"antsmartian","date":"2019-11-02T04:36:48.354Z","type":"join"}
{"nick":"AbedB_","date":"2019-11-02T05:21:16.526Z","type":"join"}
{"nick":"AbedB_","reason":"Read error: Connection reset by peer","date":"2019-11-02T05:21:56.234Z","type":"quit"}
{"nick":"AbedB","reason":"Ping timeout: 276 seconds","date":"2019-11-02T05:24:17.668Z","type":"quit"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-11-02T06:58:34.751Z","type":"quit"}
{"nick":"orkon","date":"2019-11-02T07:30:09.091Z","type":"join"}
{"nick":"orkon","reason":"Client Quit","date":"2019-11-02T07:31:58.915Z","type":"quit"}
{"nick":"mgol","date":"2019-11-02T08:00:42.177Z","type":"join"}
{"nick":"lundibundi","date":"2019-11-02T08:02:30.134Z","type":"join"}
{"nick":"antsmartian","date":"2019-11-02T08:53:56.597Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-11-02T09:09:50.993Z","type":"quit"}
{"nick":"antsmartian","date":"2019-11-02T09:15:07.512Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-11-02T09:28:34.835Z","type":"quit"}
{"nick":"antsmartian","date":"2019-11-02T09:39:56.678Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-11-02T09:40:19.282Z","type":"quit"}
{"nick":"antsmartian","date":"2019-11-02T09:48:06.238Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-11-02T09:53:14.864Z","type":"quit"}
{"nick":"kriskropd","reason":"Ping timeout: 268 seconds","date":"2019-11-02T10:05:22.497Z","type":"quit"}
{"nick":"kriskropd","date":"2019-11-02T10:06:31.994Z","type":"join"}
{"nick":"gajus","message":"In Node.js core, is there somewhere a magic constant equal to ~500ms that dictates when to throw unhandled promise rejection?","date":"2019-11-02T10:32:44.987Z","type":"message"}
{"nick":"gajus","message":"specifically, this code throws unhandled promise rejection https://gist.github.com/gajus/f7364dfb3f0184d67bce0d7291e52a66#file-test-js-L10","date":"2019-11-02T10:33:10.626Z","type":"message"}
{"nick":"gajus","message":"but if I change delay to 499, it does not","date":"2019-11-02T10:33:17.180Z","type":"message"}
{"nick":"gajus","message":"uh...","date":"2019-11-02T10:57:30.530Z","type":"message"}
{"nick":"gajus","message":"never mind.","date":"2019-11-02T10:57:31.868Z","type":"message"}
{"nick":"othiym23__","reason":"Quit: Connection closed for inactivity","date":"2019-11-02T12:03:42.943Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-11-02T13:19:54.825Z","type":"quit"}
{"nick":"antsmartian","date":"2019-11-02T15:01:48.698Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-11-02T15:15:37.451Z","type":"quit"}
{"nick":"mgol","date":"2019-11-02T15:19:08.599Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-11-02T15:27:18.411Z","type":"quit"}
{"nick":"NicQ","date":"2019-11-02T15:32:11.072Z","type":"join"}
{"nick":"mgol","date":"2019-11-02T15:32:51.393Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 240 seconds","date":"2019-11-02T15:52:03.029Z","type":"quit"}
{"nick":"lundibundi","date":"2019-11-02T16:04:01.554Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-11-02T16:27:38.041Z","type":"quit"}
{"nick":"addaleax","message":"joyee: Is `primordials` exposed somehow, for tests etc.?","date":"2019-11-02T16:40:10.218Z","type":"message"}
{"nick":"addaleax","message":"Like, can I access it in the REPL to look at it?","date":"2019-11-02T16:40:22.094Z","type":"message"}
{"nick":"devsnek","message":"addaleax: lib/internal/testing I think","date":"2019-11-02T16:47:05.118Z","type":"message"}
{"nick":"devsnek","message":"that might only expose internalBinding but you could add primordials","date":"2019-11-02T16:47:20.006Z","type":"message"}
{"nick":"addaleax","message":"I know","date":"2019-11-02T16:48:08.662Z","type":"message"}
{"nick":"addaleax","message":"But I wanted to know if it was already exposed","date":"2019-11-02T16:48:20.498Z","type":"message"}
{"nick":"NicQ","reason":"Read error: Connection reset by peer","date":"2019-11-02T17:45:54.682Z","type":"quit"}
{"nick":"NicQ","date":"2019-11-02T17:46:27.600Z","type":"join"}
{"nick":"NicQ","reason":"Ping timeout: 268 seconds","date":"2019-11-02T17:50:56.601Z","type":"quit"}
{"nick":"sergiocrisostomo","reason":"Remote host closed the connection","date":"2019-11-02T17:55:37.764Z","type":"quit"}
{"nick":"sergiocrisostomo","date":"2019-11-02T17:57:09.842Z","type":"join"}
{"nick":"joyee","message":"addaleax: no, I don’t think they are exposed currently","date":"2019-11-02T18:24:08.893Z","type":"message"}
{"nick":"mgol","date":"2019-11-02T18:50:19.101Z","type":"join"}
{"nick":"mgol","reason":"Ping timeout: 240 seconds","date":"2019-11-02T18:54:51.093Z","type":"quit"}
{"nick":"mgol","date":"2019-11-02T19:23:28.827Z","type":"join"}
{"nick":"octetcloud","date":"2019-11-02T19:47:30.495Z","type":"join"}
{"nick":"devsnek","message":"is there any way to get the original process._rawDebug at runtime","date":"2019-11-02T19:54:36.547Z","type":"message"}
{"nick":"devsnek","message":"like without it going through util.inspect","date":"2019-11-02T19:54:42.280Z","type":"message"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-11-02T19:57:38.397Z","type":"quit"}
{"nick":"mgol","date":"2019-11-02T20:12:42.599Z","type":"join"}
{"nick":"addaleax","message":"devsnek: internalBinding('process_methods')._rawDebug","date":"2019-11-02T20:18:06.206Z","type":"message"}
{"nick":"devsnek","message":"oof","date":"2019-11-02T20:18:24.204Z","type":"message"}
{"nick":"devsnek","message":"thx","date":"2019-11-02T20:18:26.851Z","type":"message"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-11-02T20:18:44.071Z","type":"quit"}
{"nick":"mgol","date":"2019-11-02T20:21:24.658Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-11-02T20:26:18.336Z","type":"quit"}
{"nick":"mgol","date":"2019-11-02T20:30:24.459Z","type":"join"}
{"nick":"mgol","reason":"Client Quit","date":"2019-11-02T20:31:52.299Z","type":"quit"}
{"nick":"mgol","date":"2019-11-02T21:49:19.856Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-11-02T21:58:38.448Z","type":"quit"}
