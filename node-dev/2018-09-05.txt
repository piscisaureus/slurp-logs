{"nick":"bcoe","date":"2018-09-05T00:36:41.841Z","type":"join"}
{"nick":"devsnek","message":"I still don't think chromium and node need to have similar security models","date":"2018-09-05T00:38:17.032Z","type":"message"}
{"nick":"bcoe","reason":"Ping timeout: 240 seconds","date":"2018-09-05T00:41:04.689Z","type":"quit"}
{"nick":"benjamincoe","date":"2018-09-05T01:01:09.083Z","type":"quit"}
{"nick":"marthinal","date":"2018-09-05T01:03:30.540Z","type":"join"}
{"nick":"matthiaskrgr_","reason":"Ping timeout: 252 seconds","date":"2018-09-05T01:04:55.043Z","type":"quit"}
{"nick":"matth1askrgr","date":"2018-09-05T01:06:14.329Z","type":"join"}
{"nick":"matth1askrgr","new_nick":"Guest32521","date":"2018-09-05T01:06:38.090Z","type":"nick"}
{"nick":"marthinal","reason":"Ping timeout: 245 seconds","date":"2018-09-05T01:07:58.373Z","type":"quit"}
{"nick":"zeds","date":"2018-09-05T01:13:00.336Z","type":"join"}
{"nick":"zeds","date":"2018-09-05T01:13:34.546Z","type":"part"}
{"nick":"zeds","date":"2018-09-05T01:25:21.340Z","type":"join"}
{"nick":"zeds","date":"2018-09-05T01:35:38.715Z","type":"part"}
{"nick":"Guest10212","new_nick":"feross","date":"2018-09-05T01:42:40.719Z","type":"nick"}
{"nick":"bhughes_","date":"2018-09-05T02:44:09.722Z","type":"join"}
{"nick":"bhughes","reason":"Ping timeout: 260 seconds","date":"2018-09-05T02:44:11.343Z","type":"quit"}
{"nick":"Guest32521","reason":"Ping timeout: 260 seconds","date":"2018-09-05T02:44:46.497Z","type":"quit"}
{"nick":"phillipj_","reason":"Ping timeout: 260 seconds","date":"2018-09-05T02:45:21.609Z","type":"quit"}
{"nick":"phillipj_","date":"2018-09-05T02:48:06.441Z","type":"join"}
{"nick":"matthiaskrgr","date":"2018-09-05T02:48:53.597Z","type":"join"}
{"nick":"matthiaskrgr","new_nick":"Guest21233","date":"2018-09-05T02:49:17.186Z","type":"nick"}
{"nick":"Connecting","date":"2018-09-05T02:55:44.738Z","type":"join"}
{"nick":"Connecting","reason":"Remote host closed the connection","date":"2018-09-05T02:58:35.801Z","type":"quit"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 245 seconds","date":"2018-09-05T03:42:33.291Z","type":"quit"}
{"nick":"bonuspunkt","reason":"Ping timeout: 250 seconds","date":"2018-09-05T04:07:20.743Z","type":"quit"}
{"nick":"bonuspunkt","date":"2018-09-05T04:13:32.317Z","type":"join"}
{"nick":"lanceball","reason":"Excess Flood","date":"2018-09-05T04:31:36.746Z","type":"quit"}
{"nick":"lanceball","date":"2018-09-05T04:33:53.582Z","type":"join"}
{"nick":"marthinal","date":"2018-09-05T04:34:48.634Z","type":"join"}
{"nick":"doodadjs","reason":"Ping timeout: 272 seconds","date":"2018-09-05T04:50:24.915Z","type":"quit"}
{"nick":"devsnek","message":"addalex: is it possible to create a net.Socket from c++","date":"2018-09-05T05:02:55.182Z","type":"message"}
{"nick":"devsnek","message":"addaleax: ^","date":"2018-09-05T05:12:47.861Z","type":"message"}
{"nick":"bcoe","date":"2018-09-05T05:25:29.398Z","type":"join"}
{"nick":"Trott","message":"Hi, folks! I'm trying to help someone get Node.js compiled with tests passing, but they're on Windows and I'm...not. Hopefully simple question: Running `vcbuild test` from PowerShell should work or you would expect to see some test failures?","date":"2018-09-05T05:26:42.349Z","type":"message"}
{"nick":"Syfer","date":"2018-09-05T05:34:29.080Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:37:33.329Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T05:37:48.810Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:38:19.759Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T05:38:36.916Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:39:06.245Z","type":"quit"}
{"nick":"Syfer","reason":"Remote host closed the connection","date":"2018-09-05T05:39:15.542Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T05:39:26.049Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:39:53.773Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T05:40:08.857Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:40:40.149Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T05:40:53.729Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:41:26.535Z","type":"quit"}
{"nick":"lpin","date":"2018-09-05T05:41:40.159Z","type":"join"}
{"nick":"bcoe","date":"2018-09-05T05:41:43.734Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:42:12.936Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T05:42:28.862Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:42:59.328Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T05:43:13.811Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:43:45.883Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T05:44:03.736Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T05:44:32.206Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T05:45:40.468Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-09-05T05:54:32.309Z","type":"quit"}
{"nick":"seishun","date":"2018-09-05T06:00:53.347Z","type":"join"}
{"nick":"nemix","date":"2018-09-05T06:05:05.621Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T06:07:02.236Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T06:07:15.861Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T06:07:48.674Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T06:08:04.060Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T06:08:35.930Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T06:08:53.723Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T06:09:22.508Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T06:09:38.724Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T06:10:08.913Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T06:10:23.723Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T06:10:55.377Z","type":"quit"}
{"nick":"bcoe","date":"2018-09-05T06:11:13.092Z","type":"join"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2018-09-05T06:11:42.057Z","type":"quit"}
{"nick":"nemix","reason":"Ping timeout: 252 seconds","date":"2018-09-05T06:28:24.301Z","type":"quit"}
{"nick":"JamJam_kid","reason":"Ping timeout: 260 seconds","date":"2018-09-05T06:41:01.337Z","type":"quit"}
{"nick":"deed0239213","date":"2018-09-05T06:54:40.375Z","type":"join"}
{"nick":"deed0239213","reason":"Remote host closed the connection","date":"2018-09-05T06:59:24.489Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 252 seconds","date":"2018-09-05T06:59:24.638Z","type":"quit"}
{"nick":"nemix","date":"2018-09-05T07:20:20.501Z","type":"join"}
{"nick":"nemix","reason":"Ping timeout: 245 seconds","date":"2018-09-05T07:26:18.351Z","type":"quit"}
{"nick":"doodadjs","date":"2018-09-05T08:12:17.299Z","type":"join"}
{"nick":"ilkka","reason":"Ping timeout: 272 seconds","date":"2018-09-05T08:57:24.902Z","type":"quit"}
{"nick":"ilkka","date":"2018-09-05T09:00:28.597Z","type":"join"}
{"nick":"lundibundi","date":"2018-09-05T10:21:36.817Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 252 seconds","date":"2018-09-05T11:39:54.574Z","type":"quit"}
{"nick":"fixplz","date":"2018-09-05T11:40:30.841Z","type":"join"}
{"nick":"fixplz","reason":"Client Quit","date":"2018-09-05T11:41:05.340Z","type":"quit"}
{"nick":"fixplz","date":"2018-09-05T11:41:13.719Z","type":"join"}
{"nick":"lundibundi","date":"2018-09-05T12:01:36.509Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2018-09-05T12:49:38.289Z","type":"quit"}
{"nick":"bradleymeck","message":"devsnek: even if the security models don't match up I'm trying to figure out how on earth to handle the somewhat vague threat that I don't see/know of from some people I'm talking to","date":"2018-09-05T12:52:46.166Z","type":"message"}
{"nick":"bradleymeck","message":"saying they are skeptical is pretty normal, being soo firm in their resolve isn't","date":"2018-09-05T12:53:04.882Z","type":"message"}
{"nick":"bradleymeck","message":"some things do have legitimate problems even if node stays single process, like Spectre reads","date":"2018-09-05T12:53:28.594Z","type":"message"}
{"nick":"bradleymeck","message":"so someone (not I) should/could look into a way of doing CORB like behavior in Node","date":"2018-09-05T12:53:50.881Z","type":"message"}
{"nick":"bradleymeck","message":"but that approach to mitigation requires multiple processes","date":"2018-09-05T12:54:05.526Z","type":"message"}
{"nick":"bradleymeck","message":"API would probably look something between SecureString from C# and ModuleKeys from TC39 proposal","date":"2018-09-05T12:54:39.686Z","type":"message"}
{"nick":"bradleymeck","message":"and keep all the data out of the current process address space","date":"2018-09-05T12:54:53.558Z","type":"message"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-09-05T12:58:59.473Z","type":"quit"}
{"nick":"lundibundi","date":"2018-09-05T13:01:01.443Z","type":"join"}
{"nick":"zsoc","date":"2018-09-05T13:05:55.520Z","type":"join"}
{"nick":"nemix","date":"2018-09-05T13:20:21.943Z","type":"join"}
{"nick":"gabrielschulhof","date":"2018-09-05T13:22:46.893Z","type":"join"}
{"nick":"nemix","reason":"Ping timeout: 272 seconds","date":"2018-09-05T13:25:56.862Z","type":"quit"}
{"nick":"marthinal","date":"2018-09-05T13:26:43.529Z","type":"join"}
{"nick":"nemix","date":"2018-09-05T13:32:29.756Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2018-09-05T13:48:23.364Z","type":"quit"}
{"nick":"nemix","reason":"Ping timeout: 252 seconds","date":"2018-09-05T14:04:33.627Z","type":"quit"}
{"nick":"lundibundi","date":"2018-09-05T14:17:15.836Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 252 seconds","date":"2018-09-05T14:36:27.590Z","type":"quit"}
{"nick":"devsnek","message":"bradleymeck: I don't disagree that this is a valid threat, I just don't understand why it's in node's domain instead of an application's domain","date":"2018-09-05T14:56:48.760Z","type":"message"}
{"nick":"bradleymeck","message":"because the application needs to ensure the values never get put back into the process address space","date":"2018-09-05T14:58:29.063Z","type":"message"}
{"nick":"bradleymeck","message":"it can't use `fs.write(value)` where value needs to be out of process","date":"2018-09-05T14:58:46.605Z","type":"message"}
{"nick":"bradleymeck","message":"node could though as a runtime by using an arbiter process like chromium does","date":"2018-09-05T14:59:14.052Z","type":"message"}
{"nick":"bradleymeck","message":"same as deno does roughly","date":"2018-09-05T14:59:19.391Z","type":"message"}
{"nick":"devsnek","message":"that's slow af though","date":"2018-09-05T15:00:16.663Z","type":"message"}
{"nick":"devsnek","message":"node and browser have different definitions of fast","date":"2018-09-05T15:00:25.569Z","type":"message"}
{"nick":"bradleymeck","message":"it isn't that slow","date":"2018-09-05T15:00:25.718Z","type":"message"}
{"nick":"bradleymeck","message":"in addition, some things like private keys / stuff for code signing being subject to in-process side-channel reads isn't really something you can compromise on anyway","date":"2018-09-05T15:00:51.196Z","type":"message"}
{"nick":"bradleymeck","message":"you have to take the perf hit when you enable security","date":"2018-09-05T15:01:03.604Z","type":"message"}
{"nick":"bradleymeck","message":"it isn't terrible","date":"2018-09-05T15:01:11.719Z","type":"message"}
{"nick":"bradleymeck","message":"ESM is slow as well, we make the thing properly, then we optimize as best we can","date":"2018-09-05T15:01:47.282Z","type":"message"}
{"nick":"bradleymeck","message":"if we deem certain compromises necessary in order to gain perf back, that seems fine","date":"2018-09-05T15:02:20.143Z","type":"message"}
{"nick":"bradleymeck","message":"but we can't patch a leaky boat as easily as we can poke holes in a new boat","date":"2018-09-05T15:02:37.134Z","type":"message"}
{"nick":"bradleymeck","message":"afk sec","date":"2018-09-05T15:02:50.032Z","type":"message"}
{"nick":"al-damiri","date":"2018-09-05T15:21:15.721Z","type":"join"}
{"nick":"bradleymeck","message":"back","date":"2018-09-05T15:30:25.172Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: have you seen isolated-vm","date":"2018-09-05T15:37:25.697Z","type":"message"}
{"nick":"bradleymeck","message":"yes","date":"2018-09-05T15:38:05.483Z","type":"message"}
{"nick":"bradleymeck","message":"that does well for object capability like isolation, but it doesn't seem to address the entire address space leak that Spectre was famous for showing","date":"2018-09-05T15:39:58.799Z","type":"message"}
{"nick":"bradleymeck","message":"object capabilities work for preventing arbitrary execution still, but aren't safe for read operations","date":"2018-09-05T15:40:35.536Z","type":"message"}
{"nick":"seishun","date":"2018-09-05T16:15:18.389Z","type":"join"}
{"nick":"devsnek","message":"bradleymeck: you should talk to v8 about that","date":"2018-09-05T16:19:37.199Z","type":"message"}
{"nick":"devsnek","message":"they have all sorts of cool bytecode tricks they use for preventing reads as a compile time option","date":"2018-09-05T16:19:51.983Z","type":"message"}
{"nick":"bradleymeck","message":"i'm talking with the chromium security team and people?","date":"2018-09-05T16:20:09.840Z","type":"message"}
{"nick":"devsnek","message":"probably the same people","date":"2018-09-05T16:20:56.662Z","type":"message"}
{"nick":"bradleymeck","message":"Chris Palmer in particular doesn't think it possible to protect against so far","date":"2018-09-05T16:21:06.346Z","type":"message"}
{"nick":"devsnek","message":"you can always assume that there's some exploit you haven't guarded against","date":"2018-09-05T16:21:49.037Z","type":"message"}
{"nick":"bradleymeck","message":"well spectre is visible already.","date":"2018-09-05T16:23:28.500Z","type":"message"}
{"nick":"bradleymeck","message":"so what do you do","date":"2018-09-05T16:23:37.879Z","type":"message"}
{"nick":"devsnek","message":"I don't run untrusted code lol","date":"2018-09-05T16:24:14.446Z","type":"message"}
{"nick":"devsnek","message":"I would be more interested in looking at signing packages and forming chains of trust and such","date":"2018-09-05T16:28:16.777Z","type":"message"}
{"nick":"bradleymeck","message":"you have to read and understand code to trust it","date":"2018-09-05T16:29:51.373Z","type":"message"}
{"nick":"bradleymeck","message":"that takes a tremendous amount of effort","date":"2018-09-05T16:30:00.358Z","type":"message"}
{"nick":"bradleymeck","message":"hence usage of constraints to ease such","date":"2018-09-05T16:30:06.096Z","type":"message"}
{"nick":"devsnek","message":"that's what a chain is for","date":"2018-09-05T16:30:18.256Z","type":"message"}
{"nick":"bradleymeck","message":"how does a chain of trust help","date":"2018-09-05T16:30:30.486Z","type":"message"}
{"nick":"bradleymeck","message":"all code signing does is state that the code is what was reviewed","date":"2018-09-05T16:30:42.034Z","type":"message"}
{"nick":"bradleymeck","message":"and allow revoking trust","date":"2018-09-05T16:30:48.488Z","type":"message"}
{"nick":"bradleymeck","message":"subresource integrity gives you the ability as well to state that the code is what was reviewed","date":"2018-09-05T16:31:04.242Z","type":"message"}
{"nick":"bradleymeck","message":"but you still have to review code","date":"2018-09-05T16:31:23.346Z","type":"message"}
{"nick":"devsnek","message":"that's the only true solution here","date":"2018-09-05T16:33:08.063Z","type":"message"}
{"nick":"bradleymeck","message":"if you want to mark code as trusted, yes","date":"2018-09-05T16:33:31.974Z","type":"message"}
{"nick":"bradleymeck","message":"but you cannot feasibly mark code as trusted in isolation","date":"2018-09-05T16:33:43.639Z","type":"message"}
{"nick":"bradleymeck","message":"especially not in JS","date":"2018-09-05T16:33:47.715Z","type":"message"}
{"nick":"devsnek","message":"if you're worried about spectre you can force V8 to not compile certain scripts","date":"2018-09-05T16:33:49.052Z","type":"message"}
{"nick":"bradleymeck","message":"so you have to add other things","date":"2018-09-05T16:33:52.188Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: even if it doesn't compile certain scripts, you want to ensure keys/signatures are not being leaked around","date":"2018-09-05T16:34:23.164Z","type":"message"}
{"nick":"bradleymeck","message":"so they would still need to live in a separate address space","date":"2018-09-05T16:34:37.314Z","type":"message"}
{"nick":"bradleymeck","message":"you have to mark scripts as untrusted in your model (probably defaulted to untrusted)","date":"2018-09-05T16:35:05.274Z","type":"message"}
{"nick":"bradleymeck","message":"but it doesn't help you audit and review code to state it is trustable","date":"2018-09-05T16:35:14.912Z","type":"message"}
{"nick":"bradleymeck","message":"you need to take steps like freezing primordials and constraining/removing APIs just to make auditing realistic","date":"2018-09-05T16:35:35.782Z","type":"message"}
{"nick":"devsnek","message":"I think that's part of a larger problem with how people use NPM","date":"2018-09-05T16:36:00.120Z","type":"message"}
{"nick":"bradleymeck","message":"how do you propose easing people audit code on npm?","date":"2018-09-05T16:36:32.074Z","type":"message"}
{"nick":"bradleymeck","message":"auditing*","date":"2018-09-05T16:36:43.166Z","type":"message"}
{"nick":"devsnek","message":"I would say use fewer deps and let's work to form standardized ways of signing and certifying packages and bundles","date":"2018-09-05T16:37:29.718Z","type":"message"}
{"nick":"bradleymeck","message":"cause some code might look fine in isolation, but then you import a broken APM / anything mutating primordials and it could leak information","date":"2018-09-05T16:37:38.362Z","type":"message"}
{"nick":"bradleymeck","message":"signing isn't useful if you can't feasibly audit code","date":"2018-09-05T16:37:49.798Z","type":"message"}
{"nick":"devsnek","message":"I get what you're saying","date":"2018-09-05T16:38:30.893Z","type":"message"}
{"nick":"bradleymeck","message":"and the way to write secure code is insane right now for most people to be expected to write such","date":"2018-09-05T16:38:47.038Z","type":"message"}
{"nick":"devsnek","message":"I just don't think it leads to a place where we all sit back and don't worry about bad deps","date":"2018-09-05T16:38:49.983Z","type":"message"}
{"nick":"bradleymeck","message":"you never get to such a point","date":"2018-09-05T16:38:59.898Z","type":"message"}
{"nick":"bradleymeck","message":"that is not what security models provide, that is sandboxing","date":"2018-09-05T16:39:11.778Z","type":"message"}
{"nick":"bradleymeck","message":"and node can't sandbox itself, use os sandboxing tools","date":"2018-09-05T16:39:32.890Z","type":"message"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-09-05T16:39:46.858Z","type":"quit"}
{"nick":"marthinal","date":"2018-09-05T16:40:00.039Z","type":"join"}
{"nick":"bradleymeck","message":"and even then, we probably can't use that","date":"2018-09-05T16:40:01.163Z","type":"message"}
{"nick":"bradleymeck","message":"because we load C++ addons","date":"2018-09-05T16:40:12.719Z","type":"message"}
{"nick":"bradleymeck","message":"and that would largely break those, child_process etc. if we suddenly enforced sandboxing","date":"2018-09-05T16:40:32.732Z","type":"message"}
{"nick":"devsnek","message":"aren't you the one saying to use sandboxing","date":"2018-09-05T16:42:17.458Z","type":"message"}
{"nick":"bradleymeck","message":"no","date":"2018-09-05T16:42:38.538Z","type":"message"}
{"nick":"bradleymeck","message":"i'm just working with the object model and how to obtain trusted references","date":"2018-09-05T16:42:54.757Z","type":"message"}
{"nick":"bradleymeck","message":"which isn't useful without signing/integrity, and signing/integrity audits aren't realistic without locking down references","date":"2018-09-05T16:43:36.922Z","type":"message"}
{"nick":"bradleymeck","message":"gotta have both, and neither is stating that your app is \"secure\"","date":"2018-09-05T16:43:54.546Z","type":"message"}
{"nick":"bradleymeck","message":"if you define \"secure\" to be the inability to perform malicious actions","date":"2018-09-05T16:44:12.468Z","type":"message"}
{"nick":"devsnek","message":"i don't think its possible to have a runtime that stops malicious actions","date":"2018-09-05T16:55:18.598Z","type":"message"}
{"nick":"bradleymeck","message":"i'd agree","date":"2018-09-05T16:56:20.248Z","type":"message"}
{"nick":"bradleymeck","message":"the best you can do it make it possible to state code is \"trusted\"","date":"2018-09-05T16:56:30.947Z","type":"message"}
{"nick":"bradleymeck","message":"to be useful runtimes must have access to dangerous APIs, either in process (like node) or via IPC (like deno and chromium)","date":"2018-09-05T16:57:08.281Z","type":"message"}
{"nick":"bradleymeck","message":"and that is pretty much end game already to me","date":"2018-09-05T16:57:23.943Z","type":"message"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 272 seconds","date":"2018-09-05T17:07:36.798Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2018-09-05T17:09:48.619Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-09-05T17:19:44.173Z","type":"quit"}
{"nick":"marthinal","date":"2018-09-05T17:26:08.463Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-09-05T17:26:21.682Z","type":"quit"}
{"nick":"zeds","date":"2018-09-05T17:59:42.351Z","type":"join"}
{"nick":"zeds","date":"2018-09-05T18:00:03.952Z","type":"part"}
{"nick":"littledan_","date":"2018-09-05T18:29:44.146Z","type":"quit"}
{"nick":"littledan","date":"2018-09-05T18:30:14.676Z","type":"join"}
{"nick":"benjamincoe","date":"2018-09-05T18:39:19.637Z","type":"join"}
{"nick":"devsnek","message":"where should i put a structure that is shared between the main thread and workers","date":"2018-09-05T18:40:04.277Z","type":"message"}
{"nick":"benjamincoe","reason":"Remote host closed the connection","date":"2018-09-05T18:46:34.729Z","type":"quit"}
{"nick":"lundibundi","date":"2018-09-05T19:10:10.671Z","type":"join"}
{"nick":"bhughes_","reason":"Quit: ZNC - http://znc.in","date":"2018-09-05T19:14:54.784Z","type":"quit"}
{"nick":"bhughes","date":"2018-09-05T19:15:03.120Z","type":"join"}
{"nick":"rtn","date":"2018-09-05T19:18:14.447Z","type":"join"}
{"nick":"rtn","new_nick":"ralphtheninja","date":"2018-09-05T19:18:32.523Z","type":"nick"}
{"nick":"not-an-aardvark","date":"2018-09-05T19:53:09.662Z","type":"join"}
{"nick":"benjamincoe","date":"2018-09-05T20:07:48.497Z","type":"join"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 252 seconds","date":"2018-09-05T20:34:30.663Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2018-09-05T20:36:32.255Z","type":"join"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 246 seconds","date":"2018-09-05T20:41:52.255Z","type":"quit"}
{"nick":"JamJam_kid","date":"2018-09-05T20:51:01.601Z","type":"join"}
{"nick":"lundibundi","reason":"Remote host closed the connection","date":"2018-09-05T20:58:34.354Z","type":"quit"}
{"nick":"zsoc","reason":"Ping timeout: 245 seconds","date":"2018-09-05T21:18:23.377Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 246 seconds","date":"2018-09-05T21:20:01.251Z","type":"quit"}
{"nick":"zeds","date":"2018-09-05T21:37:25.374Z","type":"join"}
{"nick":"zeds","date":"2018-09-05T21:38:12.724Z","type":"part"}
{"nick":"tniessen","reason":"Remote host closed the connection","date":"2018-09-05T21:48:54.379Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-09-05T22:02:53.506Z","type":"quit"}
{"nick":"ralphtheninja","reason":"Ping timeout: 240 seconds","date":"2018-09-05T22:07:34.690Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2018-09-05T22:24:19.308Z","type":"join"}
{"nick":"ralphtheninja","date":"2018-09-05T22:42:39.722Z","type":"join"}
{"nick":"boneskull","message":"I don't understand why `AsyncCall` in `node_file.cc` wants yr function to return an int rc value","date":"2018-09-05T23:04:23.030Z","type":"message"}
{"nick":"boneskull","message":"is that used in the case of an immediate failure?","date":"2018-09-05T23:05:12.930Z","type":"message"}
{"nick":"gabrielschulhof","reason":"Changing host","date":"2018-09-05T23:20:04.116Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2018-09-05T23:20:04.305Z","type":"join"}
{"nick":"gabrielschulhof","message":"Hey, all! I have an ABI stability question: We have napi_property_descriptor which has a field napi_value value. When defining a function- or property accessor-valued property and you provide the native function pointers, the field gets ignored. Would it constitute an ABI break if napi_define_properties were modified to fill in that field with the resulting JavaScript function (in case of an","date":"2018-09-05T23:22:42.516Z","type":"message"}
{"nick":"gabrielschulhof","message":"accessor, the getter) rendered as a napi_value?","date":"2018-09-05T23:22:48.510Z","type":"message"}
{"nick":"JamJam_kid","reason":"Remote host closed the connection","date":"2018-09-05T23:33:15.777Z","type":"quit"}
{"nick":"JamJam_kid","date":"2018-09-05T23:33:37.431Z","type":"join"}
{"nick":"ralphtheninja","reason":"Ping timeout: 244 seconds","date":"2018-09-05T23:37:51.499Z","type":"quit"}
{"nick":"JamJam_kid","reason":"Ping timeout: 240 seconds","date":"2018-09-05T23:41:27.420Z","type":"quit"}
