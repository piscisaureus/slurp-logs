{"nick":"tniessen","message":"devsnek: you mean like https://github.com/nodejs/node/blame/master/doc/api/crypto.md#L124 ?","date":"2018-03-15T00:17:53.914Z","type":"message"}
{"nick":"devsnek","message":"hmm spaces there","date":"2018-03-15T00:18:13.982Z","type":"message"}
{"nick":"devsnek","message":"i hope spaces aren't required","date":"2018-03-15T00:18:21.866Z","type":"message"}
{"nick":"devsnek","message":"ahhh its beautiful https://gc.gy/PŤ♄.png","date":"2018-03-15T00:20:07.743Z","type":"message"}
{"nick":"devsnek","message":"this is a bit weird though https://gc.gy/♫嵐☮.png","date":"2018-03-15T00:21:10.102Z","type":"message"}
{"nick":"tniessen","message":"devsnek: is that the github md renderer or using our tools?","date":"2018-03-15T00:24:18.734Z","type":"message"}
{"nick":"BridgeAR2","date":"2018-03-15T00:24:26.211Z","type":"join"}
{"nick":"devsnek","message":"`make doc-only`","date":"2018-03-15T00:24:32.511Z","type":"message"}
{"nick":"devsnek","message":"`serve out/doc`","date":"2018-03-15T00:24:36.901Z","type":"message"}
{"nick":"devsnek","message":"all css files loading ok","date":"2018-03-15T00:24:41.791Z","type":"message"}
{"nick":"devsnek","message":"all pages have this issue","date":"2018-03-15T00:24:48.190Z","type":"message"}
{"nick":"devsnek","message":"only the last codeblock on the page","date":"2018-03-15T00:25:01.199Z","type":"message"}
{"nick":"BridgeAR1","reason":"Ping timeout: 260 seconds","date":"2018-03-15T00:27:34.351Z","type":"quit"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-15T00:34:17.803Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-03-15T01:07:06.001Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-15T01:17:22.565Z","type":"join"}
{"nick":"juggernaut451","reason":"Ping timeout: 260 seconds","date":"2018-03-15T01:21:49.333Z","type":"quit"}
{"nick":"BridgeAR2","reason":"Ping timeout: 264 seconds","date":"2018-03-15T01:24:57.510Z","type":"quit"}
{"nick":"marthinal","date":"2018-03-15T01:41:57.866Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 240 seconds","date":"2018-03-15T01:46:27.736Z","type":"quit"}
{"nick":"doodadjs","reason":"Read error: Connection reset by peer","date":"2018-03-15T02:02:04.411Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2018-03-15T02:03:15.030Z","type":"quit"}
{"nick":"howdoi","date":"2018-03-15T04:15:09.988Z","type":"join"}
{"nick":"chan201","date":"2018-03-15T04:38:29.861Z","type":"join"}
{"nick":"ChALkeR","date":"2018-03-15T04:44:33.924Z","type":"join"}
{"nick":"chan201","reason":"Read error: Connection reset by peer","date":"2018-03-15T04:54:50.489Z","type":"quit"}
{"nick":"doodadjs","date":"2018-03-15T05:01:40.398Z","type":"join"}
{"nick":"ChALkeR","reason":"Ping timeout: 246 seconds","date":"2018-03-15T05:16:00.949Z","type":"quit"}
{"nick":"sgimeno","reason":"Ping timeout: 240 seconds","date":"2018-03-15T05:23:33.151Z","type":"quit"}
{"nick":"marthinal","date":"2018-03-15T05:26:37.476Z","type":"join"}
{"nick":"sgimeno","date":"2018-03-15T05:30:34.213Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 264 seconds","date":"2018-03-15T05:31:33.214Z","type":"quit"}
{"nick":"[6667]ThinkTanko","date":"2018-03-15T05:51:55.510Z","type":"join"}
{"nick":"[6667]ThinkTanko","reason":"Client Quit","date":"2018-03-15T05:52:00.199Z","type":"quit"}
{"nick":"qard","date":"2018-03-15T05:56:33.351Z","type":"join"}
{"nick":"marthinal","date":"2018-03-15T05:57:34.387Z","type":"join"}
{"nick":"qard","reason":"Ping timeout: 260 seconds","date":"2018-03-15T06:01:49.333Z","type":"quit"}
{"nick":"BridgeAR2","date":"2018-03-15T06:11:02.917Z","type":"join"}
{"nick":"lpin","date":"2018-03-15T06:18:19.942Z","type":"join"}
{"nick":"homaar","date":"2018-03-15T06:25:52.945Z","type":"join"}
{"nick":"homaar","date":"2018-03-15T06:26:06.413Z","type":"part"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 260 seconds","date":"2018-03-15T06:38:34.645Z","type":"quit"}
{"nick":"BridgeAR2","reason":"Ping timeout: 246 seconds","date":"2018-03-15T06:47:22.004Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-15T07:16:46.804Z","type":"quit"}
{"nick":"tkore\\w","date":"2018-03-15T07:31:13.610Z","type":"join"}
{"nick":"tkore\\w","reason":"Changing host","date":"2018-03-15T07:31:13.678Z","type":"quit"}
{"nick":"tkore\\w","date":"2018-03-15T07:31:13.679Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-15T07:38:40.609Z","type":"join"}
{"nick":"juggerna_","date":"2018-03-15T07:41:47.181Z","type":"join"}
{"nick":"juggernaut451","reason":"Ping timeout: 268 seconds","date":"2018-03-15T07:45:31.606Z","type":"quit"}
{"nick":"juggerna_","reason":"Remote host closed the connection","date":"2018-03-15T08:30:24.837Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-03-15T08:32:58.149Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-15T08:34:22.687Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-15T08:34:47.186Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-03-15T08:35:47.625Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-15T08:43:46.496Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-03-15T08:45:47.622Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-15T09:01:40.925Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-03-15T09:25:18.765Z","type":"join"}
{"nick":"joyee","message":"hm, does it make sense if we have a SimpleHTTPServer equivalent in core? I guess that does not need too much code if it's just a \"simple\" static server? i.e. not for production","date":"2018-03-15T09:33:21.003Z","type":"message"}
{"nick":"joyee","message":"devsnek: you mean, the `{require}` is not rendered into a signature? I guess you need to write it as `{function}` because `require` is not a type?","date":"2018-03-15T09:36:17.648Z","type":"message"}
{"nick":"juggerna_","date":"2018-03-15T09:39:04.278Z","type":"join"}
{"nick":"juggernaut451","reason":"Ping timeout: 240 seconds","date":"2018-03-15T09:42:27.772Z","type":"quit"}
{"nick":"juggerna_","reason":"Quit: Leaving...","date":"2018-03-15T09:45:57.675Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-03-15T09:46:16.331Z","type":"join"}
{"nick":"juggernaut451","message":"@rvagg can you please look into this https://github.com/nodejs/build/issues/1001","date":"2018-03-15T09:49:39.916Z","type":"message"}
{"nick":"ChALkeR","reason":"Quit: Konversation terminated!","date":"2018-03-15T09:50:03.266Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-03-15T09:50:24.108Z","type":"join"}
{"nick":"ChALkeR","reason":"Ping timeout: 264 seconds","date":"2018-03-15T10:03:22.005Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-15T10:25:10.458Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-15T10:25:41.183Z","type":"join"}
{"nick":"ChALkeR","date":"2018-03-15T10:36:23.336Z","type":"join"}
{"nick":"seishun","date":"2018-03-15T10:55:35.808Z","type":"join"}
{"nick":"seishun","reason":"Client Quit","date":"2018-03-15T10:56:26.540Z","type":"quit"}
{"nick":"seishun","date":"2018-03-15T10:57:01.295Z","type":"join"}
{"nick":"juggerna_","date":"2018-03-15T11:13:30.045Z","type":"join"}
{"nick":"juggernaut451","reason":"Read error: Connection reset by peer","date":"2018-03-15T11:13:49.115Z","type":"quit"}
{"nick":"tkore","reason":"Read error: Connection reset by peer","date":"2018-03-15T11:18:57.956Z","type":"quit"}
{"nick":"tkore","date":"2018-03-15T11:19:25.719Z","type":"join"}
{"nick":"marthina_","date":"2018-03-15T11:19:28.511Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-15T11:20:06.799Z","type":"join"}
{"nick":"fcanela_","date":"2018-03-15T11:21:36.146Z","type":"join"}
{"nick":"cxreg2","date":"2018-03-15T11:22:37.284Z","type":"join"}
{"nick":"chalker_","date":"2018-03-15T11:22:52.102Z","type":"join"}
{"nick":"juggerna_","reason":"*.net *.split","date":"2018-03-15T11:27:19.636Z","type":"quit"}
{"nick":"fcanela","reason":"*.net *.split","date":"2018-03-15T11:27:21.048Z","type":"quit"}
{"nick":"cxreg","reason":"*.net *.split","date":"2018-03-15T11:27:22.114Z","type":"quit"}
{"nick":"marthinal","reason":"Ping timeout: 260 seconds","date":"2018-03-15T11:28:53.186Z","type":"quit"}
{"nick":"ChALkeR","reason":"Ping timeout: 260 seconds","date":"2018-03-15T11:28:54.175Z","type":"quit"}
{"nick":"tniessen","reason":"Ping timeout: 260 seconds","date":"2018-03-15T11:28:54.313Z","type":"quit"}
{"nick":"tniessen","date":"2018-03-15T11:31:28.322Z","type":"join"}
{"nick":"targos","date":"2018-03-15T11:44:22.538Z","type":"join"}
{"nick":"targos","message":"joyee: hey","date":"2018-03-15T11:44:44.705Z","type":"message"}
{"nick":"targos","message":"joyee: do we have a list somewhere of what still needs to be done about error codes?","date":"2018-03-15T11:46:45.609Z","type":"message"}
{"nick":"targos","message":"I'm hoping that we can finish the work for Node 10","date":"2018-03-15T11:47:47.403Z","type":"message"}
{"nick":"joyee","message":"targos: https://github.com/nodejs/node/issues/18106","date":"2018-03-15T11:49:35.615Z","type":"message"}
{"nick":"joyee","message":"At the moment I think we are mostly left with C++ errors","date":"2018-03-15T11:49:49.279Z","type":"message"}
{"nick":"joyee","message":"I am trying to create the same error code mechanism  as the JS ones in C++","date":"2018-03-15T11:50:36.171Z","type":"message"}
{"nick":"targos","message":"I did something for that a while ago","date":"2018-03-15T11:50:53.436Z","type":"message"}
{"nick":"joyee","message":"targos: AFAICT, a lot of C++ errors cannot be easily migrated to JS land","date":"2018-03-15T11:51:15.740Z","type":"message"}
{"nick":"targos","message":"My approach was to define the error mechanism in a V8 extra library","date":"2018-03-15T11:51:23.672Z","type":"message"}
{"nick":"joyee","message":"So we might just want to attach error codes","date":"2018-03-15T11:51:25.230Z","type":"message"}
{"nick":"targos","message":"and use it from C++","date":"2018-03-15T11:51:46.708Z","type":"message"}
{"nick":"targos","message":"joyee: https://github.com/targos/node/commit/03997af7416c23ba92ac605bfdcee7158bd1e7d9","date":"2018-03-15T11:53:31.689Z","type":"message"}
{"nick":"joyee","message":"You mean calling into JS?","date":"2018-03-15T11:53:34.489Z","type":"message"}
{"nick":"targos","message":"sketchy poc","date":"2018-03-15T11:53:35.588Z","type":"message"}
{"nick":"joyee","message":"Hmm, yea this looks nice. I was thinking about `env->ERR_SOME_CODE`","date":"2018-03-15T11:56:43.271Z","type":"message"}
{"nick":"joyee","message":"But I think the v8 extras approach would be better","date":"2018-03-15T11:56:58.982Z","type":"message"}
{"nick":"targos","message":"can you point me to an error that cannot be migrated to JS?","date":"2018-03-15T11:58:43.151Z","type":"message"}
{"nick":"targos","message":"I thought your approach of passing a context object could be used anywhere","date":"2018-03-15T11:59:03.241Z","type":"message"}
{"nick":"joyee","message":"In general, search for `env->Throw.*` that's not inside a binding","date":"2018-03-15T12:00:37.154Z","type":"message"}
{"nick":"joyee","message":"Some of them are pretty deep","date":"2018-03-15T12:00:49.481Z","type":"message"}
{"nick":"joyee","message":"Hm, so I think with your approach, we still need to figure out how to refactor those nested throws?","date":"2018-03-15T12:02:33.550Z","type":"message"}
{"nick":"joyee","message":"targos: I think with the extras we are still going to create some helpers, probably on env..","date":"2018-03-15T12:03:41.688Z","type":"message"}
{"nick":"joyee","message":"It's just that we don't have to format the message in C++ land","date":"2018-03-15T12:04:03.766Z","type":"message"}
{"nick":"targos","message":"probably, yes","date":"2018-03-15T12:04:12.979Z","type":"message"}
{"nick":"targos","message":"I suppose we could have something like `env->ThrowErrorWithCode(code, args)`","date":"2018-03-15T12:05:14.926Z","type":"message"}
{"nick":"joyee","message":"I think most of those C++ errors don't have much message formatting right now, they are just throwing literal messages","date":"2018-03-15T12:05:48.497Z","type":"message"}
{"nick":"joyee","message":"The ones that do usually are UV errors, who already have existing .code","date":"2018-03-15T12:06:19.225Z","type":"message"}
{"nick":"joyee","message":"targos: we still need to associate error types with codes, don't we?","date":"2018-03-15T12:08:48.980Z","type":"message"}
{"nick":"targos","message":"with the new system, it's done when the error is defined","date":"2018-03-15T12:09:21.808Z","type":"message"}
{"nick":"targos","message":"you don't need to know the type on instantiation, except for a couple of them","date":"2018-03-15T12:10:55.070Z","type":"message"}
{"nick":"chalker_","reason":"Ping timeout: 240 seconds","date":"2018-03-15T12:11:13.146Z","type":"quit"}
{"nick":"targos","message":"joyee: btw we don't have to define a V8 extra. We can also have a new field on Environment and pass the errors module while bootstrapping","date":"2018-03-15T12:15:07.019Z","type":"message"}
{"nick":"targos","message":"I don't know if node-chakracore supports extras","date":"2018-03-15T12:16:19.858Z","type":"message"}
{"nick":"joyee","message":"I was thinking about the quickest way is define `env->ERR_SOME_CODE`, and convert all `env->ThrowSomething` to that. That way we are more likely to attach codes to all errors before v10","date":"2018-03-15T12:16:31.460Z","type":"message"}
{"nick":"joyee","message":"env->ERR_SOME_CODE will just instantiate an error, attach code and message, and then throw it","date":"2018-03-15T12:17:20.770Z","type":"message"}
{"nick":"joyee","message":"And all the `ERR_*` can be defined in macros with code, message, and types","date":"2018-03-15T12:17:56.678Z","type":"message"}
{"nick":"targos","message":"We can indeed start with this","date":"2018-03-15T12:18:59.572Z","type":"message"}
{"nick":"joyee","message":"Kind of like how`PER_ISOLATE_STRING_PROPERTIES` works","date":"2018-03-15T12:19:08.619Z","type":"message"}
{"nick":"targos","message":"if all these errors just have a fixed message and don't need context to create the message it would be enough","date":"2018-03-15T12:19:49.827Z","type":"message"}
{"nick":"targos","message":"and it's true that what we need to do before v10 is assign codes","date":"2018-03-15T12:20:28.793Z","type":"message"}
{"nick":"joyee","message":"The trickiest ones are the ones thrown in macros, like `THROW_AND_RETURN_IF_OOB`","date":"2018-03-15T12:20:34.906Z","type":"message"}
{"nick":"joyee","message":"This way we just need to alternative the macro","date":"2018-03-15T12:20:43.844Z","type":"message"}
{"nick":"joyee","message":"alternate","date":"2018-03-15T12:21:08.423Z","type":"message"}
{"nick":"AtumT","date":"2018-03-15T12:21:48.289Z","type":"join"}
{"nick":"joyee","message":"I think with the extras, we are still going to figure out what to pass to the error constructor in the C++ land?","date":"2018-03-15T12:24:14.001Z","type":"message"}
{"nick":"joyee","message":"We can attach code to the C++ errors first with macros, just use the original literal message, then work to implement the individual error codes in C++ so they have the same messages as the JS ones","date":"2018-03-15T12:25:49.752Z","type":"message"}
{"nick":"joyee","message":"targos: as long as we make sure the errors all have a .code to rely on, we can iterate on the messages in v10 without having to go semver-major","date":"2018-03-15T12:26:30.286Z","type":"message"}
{"nick":"targos","message":"joyee: yes, exactly","date":"2018-03-15T12:26:54.023Z","type":"message"}
{"nick":"targos","message":"can I help on something right now?","date":"2018-03-15T12:27:21.452Z","type":"message"}
{"nick":"chalker_","date":"2018-03-15T12:28:05.352Z","type":"join"}
{"nick":"joyee","message":"I think you can work on the errors that are easier to  be thrown in JS? Errors that are thrown in direct bindings and not inside macros?","date":"2018-03-15T12:29:17.957Z","type":"message"}
{"nick":"targos","message":"joyee: OK, I will do that","date":"2018-03-15T12:30:56.785Z","type":"message"}
{"nick":"joyee","message":"I think there are still many argument checking errors in the bindings, those can just be converted to proper JS errors and a bunch of CHECK in C++","date":"2018-03-15T12:31:04.467Z","type":"message"}
{"nick":"targos","message":"And first, I'm going to finish the migration in `lib`","date":"2018-03-15T12:31:21.815Z","type":"message"}
{"nick":"targos","message":"and add ESLint rules to forbid the use of native error constructors","date":"2018-03-15T12:31:46.423Z","type":"message"}
{"nick":"targos","message":"wdyt?","date":"2018-03-15T12:32:03.728Z","type":"message"}
{"nick":"joyee","message":"I think the last time I checked, there are not much left in lib, most of the ones left all have existing code which we cannot just change","date":"2018-03-15T12:32:12.643Z","type":"message"}
{"nick":"joyee","message":"ESLint rules SGTM","date":"2018-03-15T12:32:25.491Z","type":"message"}
{"nick":"joyee","message":"we can make exceptions for errors with existing code","date":"2018-03-15T12:32:35.557Z","type":"message"}
{"nick":"targos","message":"there are exactly 3 remaining in lib","date":"2018-03-15T12:32:49.580Z","type":"message"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-15T12:35:31.923Z","type":"quit"}
{"nick":"evanlucas","date":"2018-03-15T12:35:32.766Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-15T12:35:55.130Z","type":"join"}
{"nick":"joyee","message":"targos: Another idea I can think of is, finding out how people are parsing the messages, and create helpers published on npm. Because even with all errors having .code in v10, the npm packages still have to do compat things for errors coming from older version of node","date":"2018-03-15T12:38:00.173Z","type":"message"}
{"nick":"chalker_","reason":"Ping timeout: 260 seconds","date":"2018-03-15T12:38:29.269Z","type":"quit"}
{"nick":"joyee","message":"targos: If we maintain a module that can be relied on by package authors, then we might be able to reduce the dependency and help with the transition","date":"2018-03-15T12:38:42.167Z","type":"message"}
{"nick":"targos","message":"Are people really parsing messages IRL?","date":"2018-03-15T12:39:00.040Z","type":"message"}
{"nick":"joyee","message":"IDK, to be honest?","date":"2018-03-15T12:41:04.611Z","type":"message"}
{"nick":"targos","message":"I mean, in applications, probably. But I would be surprised if a lot of modules do that.","date":"2018-03-15T12:41:17.460Z","type":"message"}
{"nick":"joyee","message":"Whatever the reason that we have to treat error message changes as semver-major","date":"2018-03-15T12:41:35.258Z","type":"message"}
{"nick":"joyee","message":"Because until the last release line without full error codes support goes out of LTS, the reason might still remains for package authors","date":"2018-03-15T12:42:39.754Z","type":"message"}
{"nick":"joyee","message":"and application authors","date":"2018-03-15T12:43:58.145Z","type":"message"}
{"nick":"targos","message":"is it common for applications to support multiple versions of Node?","date":"2018-03-15T12:44:26.536Z","type":"message"}
{"nick":"joyee","message":"I don't think so, the applications should usually just run on a specified version","date":"2018-03-15T12:45:00.106Z","type":"message"}
{"nick":"joyee","message":"But if it's like, dev servers for frontend tools, then yes I think it's possible?","date":"2018-03-15T12:48:02.806Z","type":"message"}
{"nick":"joyee","message":"At least I believe they need to support LTS + Current if Current is not even numbered","date":"2018-03-15T12:48:46.451Z","type":"message"}
{"nick":"joyee","message":"For applications that go into \"production environment\", I think the version of Node or at least the release line is locked down","date":"2018-03-15T12:50:11.698Z","type":"message"}
{"nick":"joyee","message":"But if it's something that runs on dev machines, I think they usually need to support multiple release lines","date":"2018-03-15T12:53:17.213Z","type":"message"}
{"nick":"gabrielschulhof","date":"2018-03-15T13:01:27.997Z","type":"join"}
{"nick":"devsnek","message":"if this turbo http thing can really handle 100k requests per second it might be worth looking at","date":"2018-03-15T13:04:29.024Z","type":"message"}
{"nick":"joyee","message":"Do we have any public API for exposing the list of built-in modules? Looks like that's what people accessing process.binding('natives') for","date":"2018-03-15T13:04:41.073Z","type":"message"}
{"nick":"devsnek","message":"although it does appear to be missing a lot of functionality","date":"2018-03-15T13:04:41.878Z","type":"message"}
{"nick":"devsnek","message":"Module.builtinModules","date":"2018-03-15T13:04:49.263Z","type":"message"}
{"nick":"devsnek","message":"anything you can require without `--expose-internals` will be on that list","date":"2018-03-15T13:05:05.065Z","type":"message"}
{"nick":"joyee","message":"Probably should backport those to older release lines","date":"2018-03-15T13:05:37.374Z","type":"message"}
{"nick":"bradleymeck","date":"2018-03-15T13:06:05.286Z","type":"join"}
{"nick":"joyee","message":"devsnek: what's the turbo http thing?","date":"2018-03-15T13:06:15.644Z","type":"message"}
{"nick":"devsnek","message":"https://github.com/mafintosh/turbo-http","date":"2018-03-15T13:06:29.253Z","type":"message"}
{"nick":"devsnek","message":"someone linked this while talking about if node should have http in core","date":"2018-03-15T13:06:37.389Z","type":"message"}
{"nick":"devsnek","message":"it looks to me like they basically stopped crossing the js c++ barrier","date":"2018-03-15T13:06:54.297Z","type":"message"}
{"nick":"joyee","message":"interesting","date":"2018-03-15T13:07:36.184Z","type":"message"}
{"nick":"devsnek","message":"the tcp benchmark has similar claims:  `echo-classic: 1.3GB/s at ~100MB of ram` `echo-turbo: 3.4GB/s at ~35MB of ram`","date":"2018-03-15T13:07:52.345Z","type":"message"}
{"nick":"joyee","message":"So the secret is in https://github.com/mafintosh/turbo-net ?","date":"2018-03-15T13:08:11.542Z","type":"message"}
{"nick":"devsnek","message":"it looks like it","date":"2018-03-15T13:08:16.676Z","type":"message"}
{"nick":"devsnek","message":"it doesn't seem to have good windows support tho","date":"2018-03-15T13:08:29.406Z","type":"message"}
{"nick":"devsnek","message":"lowkey i kinda want this in core if these perf tests hold up","date":"2018-03-15T13:09:03.225Z","type":"message"}
{"nick":"joyee","message":"But..compat lol","date":"2018-03-15T13:09:30.525Z","type":"message"}
{"nick":"devsnek","message":"assuming all the compat is added*","date":"2018-03-15T13:09:42.780Z","type":"message"}
{"nick":"devsnek","message":"maybe thats where we lose our perf lol","date":"2018-03-15T13:09:56.681Z","type":"message"}
{"nick":"joyee","message":"The enemy of optimization","date":"2018-03-15T13:10:09.723Z","type":"message"}
{"nick":"joyee","message":"Looks like turbo-net needs an addon","date":"2018-03-15T13:12:57.879Z","type":"message"}
{"nick":"joyee","message":"The thing that we can do is to eliminate the need for that..","date":"2018-03-15T13:13:29.986Z","type":"message"}
{"nick":"joyee","message":"Those just look like super thin layer over the tcp APIs in libuv","date":"2018-03-15T13:14:47.516Z","type":"message"}
{"nick":"lpin","message":"joyee yes it's exactly that","date":"2018-03-15T13:15:06.934Z","type":"message"}
{"nick":"joyee","message":"I think I've heard that one reason to use process.binding is to access those kind of low-level things without going through our streams","date":"2018-03-15T13:16:23.149Z","type":"message"}
{"nick":"joyee","message":"I think turbo-net is basically try to avoid relying on process.binding, by reimplementing what process.biding('tcp_wrap') offers with NAPI","date":"2018-03-15T13:17:29.240Z","type":"message"}
{"nick":"mafintosh","message":"devsnek: works great on windows","date":"2018-03-15T13:19:27.160Z","type":"message"}
{"nick":"lpin","message":"it's cool, but I'm not sure what kind of effort is required to maintain compatibility (if possible at all). This is probably the reason why mafintosh created those modules","date":"2018-03-15T13:19:32.876Z","type":"message"}
{"nick":"joyee","message":"Hm, would a promise API for http be competitive to that? I think the promises are much faster in newer version of V8","date":"2018-03-15T13:19:41.462Z","type":"message"}
{"nick":"mafintosh","message":"The \"cost\" of doing native modules with n-api is tiny these days. I bundle prebuilds which means 99% of users never even notice it's native","date":"2018-03-15T13:21:18.173Z","type":"message"}
{"nick":"joyee","message":"that's great","date":"2018-03-15T13:21:38.255Z","type":"message"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-03-15T13:22:49.077Z","type":"quit"}
{"nick":"joyee","message":"https://www.irccloud.com/pastebin/W4KCtaUA/","date":"2018-03-15T13:23:55.353Z","type":"message"}
{"nick":"joyee","message":"looks like v9.x is failing the lint-md?","date":"2018-03-15T13:24:05.050Z","type":"message"}
{"nick":"joyee","message":"v9.x-staging","date":"2018-03-15T13:24:11.213Z","type":"message"}
{"nick":"joyee","message":"mylesborins","date":"2018-03-15T13:24:28.906Z","type":"message"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-15T13:26:54.753Z","type":"quit"}
{"nick":"devsnek","message":"its a warning not an error","date":"2018-03-15T13:29:58.409Z","type":"message"}
{"nick":"devsnek","message":"should still exit 0","date":"2018-03-15T13:30:06.377Z","type":"message"}
{"nick":"tkore\\w","reason":"Read error: Connection reset by peer","date":"2018-03-15T13:41:32.120Z","type":"quit"}
{"nick":"tkore\\w","date":"2018-03-15T13:42:49.454Z","type":"join"}
{"nick":"tkore\\w","reason":"Changing host","date":"2018-03-15T13:42:49.454Z","type":"quit"}
{"nick":"tkore\\w","date":"2018-03-15T13:42:49.454Z","type":"join"}
{"nick":"al-damiri","date":"2018-03-15T13:59:37.130Z","type":"join"}
{"nick":"juggernaut451","date":"2018-03-15T14:13:08.416Z","type":"join"}
{"nick":"marthina_","reason":"Remote host closed the connection","date":"2018-03-15T14:22:59.086Z","type":"quit"}
{"nick":"joyee","message":"devsnek: oh, didn't know that...thanks","date":"2018-03-15T14:23:54.278Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-15T14:24:02.626Z","type":"quit"}
{"nick":"devsnek","message":"👍","date":"2018-03-15T14:24:03.374Z","type":"message"}
{"nick":"marthinal","date":"2018-03-15T14:24:21.720Z","type":"join"}
{"nick":"joyee","message":"Hmm, looks like it exit with 1? `make[2]: *** [tools/.docmdlintstamp] Error 1`","date":"2018-03-15T14:24:54.170Z","type":"message"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-03-15T14:35:23.843Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-03-15T14:39:09.640Z","type":"join"}
{"nick":"addaleax","message":"joyee: as a heads up, I’m starting to port over some of the patches for cleaning up on `Environment` exit","date":"2018-03-15T14:45:31.081Z","type":"message"}
{"nick":"addaleax","message":"because https://github.com/nodejs/node/issues/19365 is basically a feature request for that :)","date":"2018-03-15T14:45:37.654Z","type":"message"}
{"nick":"joyee","message":"addaleax: ack, thanks","date":"2018-03-15T14:50:29.752Z","type":"message"}
{"nick":"addaleax","message":"would be cool if you could take a look at it once it’s done","date":"2018-03-15T14:52:17.558Z","type":"message"}
{"nick":"joyee","message":"addaleax: ping me when it's done then ;)","date":"2018-03-15T14:55:04.437Z","type":"message"}
{"nick":"joyee","message":"Just realized that there is a delivery-channel team now. Took me a few second to realize what that is","date":"2018-03-15T14:59:52.307Z","type":"message"}
{"nick":"addaleax","message":"yea, i was confused too ^^","date":"2018-03-15T15:00:06.780Z","type":"message"}
{"nick":"joyee","message":"Should've just read the description lol","date":"2018-03-15T15:00:45.095Z","type":"message"}
{"nick":"chalker_","date":"2018-03-15T15:01:37.481Z","type":"join"}
{"nick":"devsnek","message":"mfw having to rebase all my prs","date":"2018-03-15T15:03:04.802Z","type":"message"}
{"nick":"devsnek","message":"i regret touching module.js :D","date":"2018-03-15T15:03:08.949Z","type":"message"}
{"nick":"lpin","message":"lol","date":"2018-03-15T15:03:47.109Z","type":"message"}
{"nick":"joyee","message":"devsnek: sorry","date":"2018-03-15T15:03:59.818Z","type":"message"}
{"nick":"devsnek","message":"lol np","date":"2018-03-15T15:04:08.482Z","type":"message"}
{"nick":"joyee","message":"devsnek: You can try this trick: https://github.com/nodejs/node/pull/19177#issuecomment-370932540","date":"2018-03-15T15:05:01.083Z","type":"message"}
{"nick":"joyee","message":"Checking out from master then redo the PR by replacing all `lib/module.js` to `internal/modules/cjs/loader.js` in the patches should get them applied cleanly","date":"2018-03-15T15:06:41.133Z","type":"message"}
{"nick":"devsnek","message":"i'll try that in the future","date":"2018-03-15T15:08:58.039Z","type":"message"}
{"nick":"devsnek","message":"i thought git apply also had a \"looseness\" or something parameter","date":"2018-03-15T15:09:07.861Z","type":"message"}
{"nick":"devsnek","message":"when searching for renamed files","date":"2018-03-15T15:09:14.073Z","type":"message"}
{"nick":"devsnek","message":"maybe it was rebase","date":"2018-03-15T15:09:26.778Z","type":"message"}
{"nick":"devsnek","message":"--find-renames=90% would probably work","date":"2018-03-15T15:11:10.405Z","type":"message"}
{"nick":"joyee","message":"devsnek: interesting, didn't know about this option","date":"2018-03-15T15:12:40.142Z","type":"message"}
{"nick":"devsnek","message":"i've only used it once","date":"2018-03-15T15:12:55.687Z","type":"message"}
{"nick":"devsnek","message":"and it didn't work :P","date":"2018-03-15T15:13:00.613Z","type":"message"}
{"nick":"devsnek","message":"when i was trying to apply a v8 diff","date":"2018-03-15T15:13:32.784Z","type":"message"}
{"nick":"joyee","message":"Maybe lower the value a bit?","date":"2018-03-15T15:13:45.636Z","type":"message"}
{"nick":"joyee","message":"I usually use the format-patch + sed trick to move patches between Node's v8 and v8","date":"2018-03-15T15:14:45.627Z","type":"message"}
{"nick":"targos","message":"joyee: for patches to V8, you can create the patch normally and then apply it with `--directory=deps/v8`","date":"2018-03-15T15:17:46.937Z","type":"message"}
{"nick":"joyee","message":"targos: yeah, that's onedirectional though","date":"2018-03-15T15:18:20.477Z","type":"message"}
{"nick":"joyee","message":"I could't figure out how to use it to move patches to v8","date":"2018-03-15T15:18:46.465Z","type":"message"}
{"nick":"joyee","message":"from deps/v8","date":"2018-03-15T15:19:02.495Z","type":"message"}
{"nick":"targos","message":"ah I see","date":"2018-03-15T15:19:15.448Z","type":"message"}
{"nick":"targos","message":"sed trick it is, then :)","date":"2018-03-15T15:19:53.883Z","type":"message"}
{"nick":"devsnek","message":"i wish i knew about `--directory` then 😢","date":"2018-03-15T15:26:04.236Z","type":"message"}
{"nick":"devsnek","message":"i ended up manually applying the patch with copy paste","date":"2018-03-15T15:26:24.665Z","type":"message"}
{"nick":"devsnek","message":"anyone object to deprecating vm.runIn*Context and vm.createScript","date":"2018-03-15T15:47:20.490Z","type":"message"}
{"nick":"targos","message":"what's wrong with `runIn*Context`?","date":"2018-03-15T15:52:43.834Z","type":"message"}
{"nick":"devsnek","message":"new Script(code).runIn*Context","date":"2018-03-15T15:53:47.667Z","type":"message"}
{"nick":"devsnek","message":"plus we have vm.Module now","date":"2018-03-15T15:53:58.452Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/.png","date":"2018-03-15T15:54:16.328Z","type":"message"}
{"nick":"targos","message":"`vm.runIn*Context` is shorter and is probably used a lot more than the alternative. I think there would be a lot of complaints if we deprecated it, especially because there is no harm in using it","date":"2018-03-15T15:59:37.166Z","type":"message"}
