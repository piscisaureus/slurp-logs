{"nick":"marthinal","date":"2018-06-14T00:07:42.577Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 256 seconds","date":"2018-06-14T00:12:09.398Z","type":"quit"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 264 seconds","date":"2018-06-14T00:34:34.121Z","type":"quit"}
{"nick":"zeds","date":"2018-06-14T01:05:23.188Z","type":"part"}
{"nick":"gabrielschulhof","date":"2018-06-14T01:30:26.763Z","type":"join"}
{"nick":"doodadjs","reason":"Quit: Leaving","date":"2018-06-14T02:05:32.365Z","type":"quit"}
{"nick":"mmarchini","reason":"Ping timeout: 256 seconds","date":"2018-06-14T02:36:24.382Z","type":"quit"}
{"nick":"mmarchini","date":"2018-06-14T02:36:32.988Z","type":"join"}
{"nick":"apapirovski","date":"2018-06-14T03:48:33.841Z","type":"join"}
{"nick":"apapirovski","reason":"Remote host closed the connection","date":"2018-06-14T04:05:42.844Z","type":"quit"}
{"nick":"dc13ff","date":"2018-06-14T04:09:40.988Z","type":"join"}
{"nick":"marthinal","date":"2018-06-14T04:51:17.171Z","type":"join"}
{"nick":"lpin","date":"2018-06-14T05:05:32.839Z","type":"join"}
{"nick":"AtumT_","date":"2018-06-14T05:20:19.942Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 256 seconds","date":"2018-06-14T05:23:08.736Z","type":"quit"}
{"nick":"AtumT","date":"2018-06-14T05:33:49.912Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 260 seconds","date":"2018-06-14T05:35:00.780Z","type":"quit"}
{"nick":"apapirovski","date":"2018-06-14T05:46:12.864Z","type":"join"}
{"nick":"apapirovski","reason":"Remote host closed the connection","date":"2018-06-14T05:55:33.092Z","type":"quit"}
{"nick":"dc13ff","reason":"Quit: Connection closed for inactivity","date":"2018-06-14T06:18:38.776Z","type":"quit"}
{"nick":"seishun","date":"2018-06-14T06:19:56.212Z","type":"join"}
{"nick":"doodadjs","date":"2018-06-14T07:09:40.974Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2018-06-14T07:28:45.778Z","type":"quit"}
{"nick":"lpin","reason":"Ping timeout: 264 seconds","date":"2018-06-14T08:08:10.088Z","type":"quit"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 260 seconds","date":"2018-06-14T08:20:40.784Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-06-14T10:25:28.182Z","type":"quit"}
{"nick":"mylesborins","date":"2018-06-14T10:25:58.828Z","type":"join"}
{"nick":"BridgeAR1","date":"2018-06-14T11:18:55.270Z","type":"join"}
{"nick":"BridgeAR1","reason":"Ping timeout: 245 seconds","date":"2018-06-14T12:43:07.265Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-14T12:57:35.159Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-14T13:21:32.240Z","type":"join"}
{"nick":"bradleymeck","message":"mmmm --inspect-brk does not like debugging workers?","date":"2018-06-14T13:49:12.009Z","type":"message"}
{"nick":"apapirovski","date":"2018-06-14T14:01:16.213Z","type":"join"}
{"nick":"dc13ff","date":"2018-06-14T14:03:27.612Z","type":"join"}
{"nick":"apapirovski","reason":"Quit: Leaving...","date":"2018-06-14T14:07:53.319Z","type":"quit"}
{"nick":"ljharb","message":"thatâ€™s a really good question - a debugger pauses the single thread, but what does it mean to debug in a worker? Does it pause the worker but allow the main thread to continue?","date":"2018-06-14T14:17:13.360Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: in browsers thats what happens, threads don't cause all threads to pause","date":"2018-06-14T14:22:20.909Z","type":"message"}
{"nick":"bradleymeck","message":"depends on your devtools impl really","date":"2018-06-14T14:22:29.551Z","type":"message"}
{"nick":"ljharb","message":"interesting","date":"2018-06-14T14:22:39.248Z","type":"message"}
{"nick":"bradleymeck","message":"you could make everything pause when a thread gets a signal, but it won't be timely","date":"2018-06-14T14:23:00.491Z","type":"message"}
{"nick":"bradleymeck","message":"other non-breakpointed threads might still end up doing some compute","date":"2018-06-14T14:23:16.466Z","type":"message"}
{"nick":"bradleymeck","message":"i'm sure if there was some shared memory check on every operation it could pause all on a timely JS point, but unsure about native code, SIGSTOP can stop the native code, but don't think you can do that in a timely manner","date":"2018-06-14T14:24:51.048Z","type":"message"}
{"nick":"Fishrock123","date":"2018-06-14T14:58:25.076Z","type":"join"}
{"nick":"Fishrock123","message":"So, hopefully someone here knows but, it's impossible to keep handles around with async_hooks until `destroy` because there aren't true weaklists in js to hold the references weakly to iterate and so gc will never happen and `destroy` will never be called, correct?","date":"2018-06-14T14:59:45.817Z","type":"message"}
{"nick":"bradleymeck","message":"Fishrock123: I don't think that is true, but the phrasing in that question is making my head spin a bit","date":"2018-06-14T15:04:05.756Z","type":"message"}
{"nick":"bradleymeck","message":"which kind of handles, JS handles?","date":"2018-06-14T15:04:34.610Z","type":"message"}
{"nick":"Fishrock123","message":"can you keep async_hooks handles somewhere for access without drawbacks","date":"2018-06-14T15:04:46.799Z","type":"message"}
{"nick":"Fishrock123","message":"and keep them until `destroy`","date":"2018-06-14T15:05:02.802Z","type":"message"}
{"nick":"bradleymeck","message":"do you need to iterate? or do you just need to check if they are in a list?","date":"2018-06-14T15:05:13.717Z","type":"message"}
{"nick":"Fishrock123","message":"I want full handle information (anything we can possibly extract)","date":"2018-06-14T15:05:33.673Z","type":"message"}
{"nick":"bradleymeck","message":"of a single handle or all handles?","date":"2018-06-14T15:05:44.852Z","type":"message"}
{"nick":"Fishrock123","message":"all","date":"2018-06-14T15:05:47.373Z","type":"message"}
{"nick":"bradleymeck","message":"probably can't for all","date":"2018-06-14T15:05:49.791Z","type":"message"}
{"nick":"Fishrock123","message":"I'm trying to figure out if we can actually replace `_getActiveHandles()` or not","date":"2018-06-14T15:06:14.404Z","type":"message"}
{"nick":"BridgeAR1","date":"2018-06-14T15:34:26.737Z","type":"join"}
{"nick":"bradleymeck","message":"Fishrock123: not in pure JS no","date":"2018-06-14T15:35:47.051Z","type":"message"}
{"nick":"joyee","message":"If anyone is interested, here is what happened to CI lately: https://gist.github.com/joyeecheung/c40ef984af4b17f6171efa754fddae3b","date":"2018-06-14T15:39:24.831Z","type":"message"}
{"nick":"devsnek","message":"joyee: what is this aggregating","date":"2018-06-14T15:45:55.921Z","type":"message"}
{"nick":"devsnek","message":"how many times a test failed?","date":"2018-06-14T15:46:02.563Z","type":"message"}
{"nick":"joyee","message":"Reasons of CI failure ranked by failed PR count","date":"2018-06-14T15:46:07.836Z","type":"message"}
{"nick":"devsnek","message":"whats count vs prCount","date":"2018-06-14T15:46:32.112Z","type":"message"}
{"nick":"joyee","message":"https://gist.github.com/joyeecheung/2d189d9cbbfa146827f31716c5837590","date":"2018-06-14T15:48:14.371Z","type":"message"}
{"nick":"joyee","message":"Original data is here","date":"2018-06-14T15:48:18.868Z","type":"message"}
{"nick":"devsnek","message":"ok so","date":"2018-06-14T15:48:31.762Z","type":"message"}
{"nick":"joyee","message":"count is the number of occurrence of that failure","date":"2018-06-14T15:48:34.029Z","type":"message"}
{"nick":"devsnek","message":"so its aggregated by pr","date":"2018-06-14T15:48:40.981Z","type":"message"}
{"nick":"devsnek","message":"ok","date":"2018-06-14T15:48:41.292Z","type":"message"}
{"nick":"joyee","message":"prCount filters out duplicates","date":"2018-06-14T15:48:44.813Z","type":"message"}
{"nick":"devsnek","message":"where does that data come from","date":"2018-06-14T15:49:06.438Z","type":"message"}
{"nick":"joyee","message":"https://github.com/nodejs/node-core-utils/pull/254","date":"2018-06-14T15:49:20.706Z","type":"message"}
{"nick":"devsnek","message":"mmarchini: seems like something cool for your site ^","date":"2018-06-14T15:49:24.401Z","type":"message"}
{"nick":"joyee","message":"The worst right now is `ERROR: Error fetching remote repo 'jenkins_tmp'`","date":"2018-06-14T15:50:34.220Z","type":"message"}
{"nick":"joyee","message":"Something wrong with test-azure_msft-win2016-x64-4","date":"2018-06-14T15:51:19.364Z","type":"message"}
{"nick":"joyee","message":"hmm right I should add the machine into data","date":"2018-06-14T15:51:45.932Z","type":"message"}
