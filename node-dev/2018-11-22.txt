{"nick":"octetcloud","reason":"Quit: Konversation terminated!","date":"2018-11-22T01:11:20.882Z","type":"quit"}
{"nick":"octetcloud","date":"2018-11-22T01:11:35.348Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 245 seconds","date":"2018-11-22T01:15:53.314Z","type":"quit"}
{"nick":"doodadjs","reason":"Ping timeout: 252 seconds","date":"2018-11-22T01:42:45.959Z","type":"quit"}
{"nick":"octetcloud","date":"2018-11-22T01:46:54.351Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 244 seconds","date":"2018-11-22T01:56:05.350Z","type":"quit"}
{"nick":"antsmartian","date":"2018-11-22T02:04:18.047Z","type":"join"}
{"nick":"t0dd1v","date":"2018-11-22T02:06:03.054Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2018-11-22T02:47:58.085Z","type":"quit"}
{"nick":"xkapastel","reason":"Quit: Connection closed for inactivity","date":"2018-11-22T03:16:41.834Z","type":"quit"}
{"nick":"t0dd1v","reason":"Quit: Connection closed for inactivity","date":"2018-11-22T04:15:15.887Z","type":"quit"}
{"nick":"MylesBorins","message":"devsnek I guess it's a good thing we tried to upstream ðŸ˜…","date":"2018-11-22T06:11:34.295Z","type":"message"}
{"nick":"lpin","date":"2018-11-22T06:11:58.940Z","type":"join"}
{"nick":"seishun","date":"2018-11-22T06:16:10.944Z","type":"join"}
{"nick":"xkapastel","date":"2018-11-22T07:08:57.328Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 268 seconds","date":"2018-11-22T07:21:05.815Z","type":"quit"}
{"nick":"seishun","date":"2018-11-22T07:47:51.453Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 268 seconds","date":"2018-11-22T07:53:09.815Z","type":"quit"}
{"nick":"seishun","date":"2018-11-22T07:59:21.430Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 268 seconds","date":"2018-11-22T08:04:15.737Z","type":"quit"}
{"nick":"zsoc","reason":"Ping timeout: 240 seconds","date":"2018-11-22T08:19:27.434Z","type":"quit"}
{"nick":"zsoc","date":"2018-11-22T08:19:52.724Z","type":"join"}
{"nick":"m00dy","date":"2018-11-22T08:21:53.149Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T08:22:54.797Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T08:23:08.110Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T08:23:08.952Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T08:23:54.484Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T08:24:25.920Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T08:24:59.674Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T08:29:32.618Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T08:29:48.386Z","type":"join"}
{"nick":"howdoi","date":"2018-11-22T09:55:40.825Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T10:01:13.605Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T10:22:56.998Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T11:05:04.313Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T11:20:09.766Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T13:12:21.407Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T13:12:54.943Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T13:14:19.731Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T13:14:34.523Z","type":"join"}
{"nick":"antsmartian","date":"2018-11-22T14:34:06.230Z","type":"join"}
{"nick":"antsmartian","reason":"Client Quit","date":"2018-11-22T14:35:58.108Z","type":"quit"}
{"nick":"antsmartian","date":"2018-11-22T14:36:27.173Z","type":"join"}
{"nick":"antsmartian","message":"Here, when we call `Runtime.callFunctionOn` on inspector, can't we access any variable inside our `functionDeclaration` except `global`? Or is there any other way to access normal variables?","date":"2018-11-22T14:36:32.100Z","type":"message"}
{"nick":"doodadjs","date":"2018-11-22T14:51:21.987Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T15:34:43.445Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T15:38:56.124Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-22T15:38:57.796Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-22T15:39:10.190Z","type":"join"}
{"nick":"devsnek","message":"MylesBorins: meh I'm not happy with thr current relationship between the cjs and esm loaders","date":"2018-11-22T15:42:03.021Z","type":"message"}
{"nick":"devsnek","message":"it's super messy","date":"2018-11-22T15:42:06.086Z","type":"message"}
{"nick":"devsnek","message":"antsmartian: your function is stringified and then re-created","date":"2018-11-22T15:43:22.589Z","type":"message"}
{"nick":"devsnek","message":"so it loses its lexical context","date":"2018-11-22T15:43:30.880Z","type":"message"}
{"nick":"antsmartian","message":"devsnek: Oh,","date":"2018-11-22T15:48:33.202Z","type":"message"}
{"nick":"antsmartian","message":"now it makes sense, why it loses the context.","date":"2018-11-22T15:48:42.598Z","type":"message"}
{"nick":"devsnek","message":"antsmartian: in the prototype repl we use `global.REPL` to exchange state","date":"2018-11-22T15:49:50.896Z","type":"message"}
{"nick":"devsnek","message":"https://github.com/nodejs/repl/blob/master/src/index.js#L110-L115","date":"2018-11-22T15:50:16.486Z","type":"message"}
