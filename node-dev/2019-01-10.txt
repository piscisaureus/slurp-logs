{"nick":"bradleymeck","message":"mcollina: you wanted a cli to deal with policies, i've started work in https://github.com/bmeck/node-policy","date":"2019-01-10T00:03:04.341Z","type":"message"}
{"nick":"bradleymeck","message":"it is assuming https://github.com/nodejs/node/pull/23834 gets pulled in","date":"2019-01-10T00:03:27.978Z","type":"message"}
{"nick":"bradleymeck","message":"a more prose-ish writeup is being worked on in https://docs.google.com/document/d/1I4jUy0yVrEzDoAQziQpKE3w0KeNL5-giQiVodinWfbA/edit# that will probably be a basis for publishing something somewhere","date":"2019-01-10T00:04:22.141Z","type":"message"}
{"nick":"rtn","date":"2019-01-10T00:10:17.743Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-10T00:41:10.413Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-01-10T00:45:28.287Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T01:13:10.390Z","type":"join"}
{"nick":"BridgeAR","message":"joyee: are you still around?","date":"2019-01-10T01:15:54.526Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-01-10T01:17:33.339Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T01:22:20.848Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 272 seconds","date":"2019-01-10T01:27:10.756Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T01:35:27.455Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-01-10T01:40:06.490Z","type":"quit"}
{"nick":"antsmartian","date":"2019-01-10T01:50:04.960Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-10T01:53:56.192Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-01-10T01:58:30.028Z","type":"quit"}
{"nick":"gamelaster","reason":"Ping timeout: 250 seconds","date":"2019-01-10T02:15:38.452Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T02:21:58.291Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-01-10T02:26:16.267Z","type":"quit"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-01-10T02:39:08.463Z","type":"quit"}
{"nick":"gamelaster","date":"2019-01-10T02:40:14.351Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-10T02:43:16.920Z","type":"join"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2019-01-10T02:45:06.686Z","type":"quit"}
{"nick":"gamelaster","reason":"Ping timeout: 240 seconds","date":"2019-01-10T02:45:07.389Z","type":"quit"}
{"nick":"antsmartian","date":"2019-01-10T02:47:34.330Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-01-10T02:47:42.870Z","type":"quit"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-01-10T02:51:25.816Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T03:21:16.732Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-10T03:26:22.761Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T04:15:37.262Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-01-10T05:18:56.497Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T05:28:07.792Z","type":"join"}
{"nick":"seishun","date":"2019-01-10T06:33:26.168Z","type":"join"}
{"nick":"lpin","date":"2019-01-10T06:33:33.740Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 244 seconds","date":"2019-01-10T07:08:48.350Z","type":"quit"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-01-10T07:21:28.352Z","type":"quit"}
{"nick":"wawasho","reason":"Remote host closed the connection","date":"2019-01-10T07:25:23.858Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T07:29:25.059Z","type":"join"}
{"nick":"dreampillow","date":"2019-01-10T07:39:30.812Z","type":"join"}
{"nick":"dreampillow","new_nick":"wawasho","date":"2019-01-10T07:41:17.481Z","type":"nick"}
{"nick":"seishun","date":"2019-01-10T07:47:06.457Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2019-01-10T07:53:12.606Z","type":"quit"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-01-10T08:52:53.644Z","type":"quit"}
{"nick":"scott_gonzalez_","reason":"Remote host closed the connection","date":"2019-01-10T09:00:29.958Z","type":"quit"}
{"nick":"scott_gonzalez","date":"2019-01-10T09:16:32.084Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-10T09:41:31.679Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 244 seconds","date":"2019-01-10T09:45:52.353Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T10:01:34.431Z","type":"join"}
{"nick":"joyee","message":"BridgeAR: now I am","date":"2019-01-10T10:02:41.910Z","type":"message"}
{"nick":"lundibundi","date":"2019-01-10T10:05:50.461Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-01-10T10:05:56.153Z","type":"quit"}
{"nick":"lpin","reason":"Ping timeout: 246 seconds","date":"2019-01-10T10:06:03.028Z","type":"quit"}
{"nick":"joyee","message":"addaleax: are you around?","date":"2019-01-10T10:10:13.605Z","type":"message"}
{"nick":"gamelaster","date":"2019-01-10T10:35:46.055Z","type":"join"}
{"nick":"mgol","date":"2019-01-10T10:50:42.397Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-10T11:31:37.512Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-01-10T11:35:56.460Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T11:51:37.887Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-01-10T11:56:18.827Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T12:05:34.562Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-01-10T12:10:10.609Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T12:21:35.362Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-01-10T12:26:18.426Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T12:43:37.808Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 272 seconds","date":"2019-01-10T12:48:38.760Z","type":"quit"}
{"nick":"lundibundi","reason":"Remote host closed the connection","date":"2019-01-10T12:51:54.455Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-10T12:52:46.182Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-10T13:01:40.154Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-01-10T13:06:06.099Z","type":"quit"}
{"nick":"howdoi","date":"2019-01-10T13:30:11.196Z","type":"join"}
{"nick":"al-damiri","date":"2019-01-10T13:33:02.212Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-10T14:01:44.902Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-01-10T14:06:18.858Z","type":"quit"}
{"nick":"rtn","reason":"Quit: leaving","date":"2019-01-10T14:17:26.229Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T15:02:44.530Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-10T15:07:07.714Z","type":"quit"}
{"nick":"bradleymeck","message":"joyee: heh, it looks like the inspector gets a hold of CJS loader, so i have to keep it ahead of that","date":"2019-01-10T15:14:37.074Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: where does the inspector do that?","date":"2019-01-10T15:15:13.996Z","type":"message"}
{"nick":"bradleymeck","message":"internal/console/inspector","date":"2019-01-10T15:15:32.034Z","type":"message"}
{"nick":"bradleymeck","message":"it doesn't mutate it, but i am ensuring nothing gets a hold of CJS prior to it being safe","date":"2019-01-10T15:16:05.172Z","type":"message"}
{"nick":"bradleymeck","message":"that limits my need to audit and future dev leaks","date":"2019-01-10T15:16:25.285Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: that is not loading any user code, though, just creating fake modules","date":"2019-01-10T15:17:08.044Z","type":"message"}
{"nick":"bradleymeck","message":"user code isn't the issue, the issue is if CJS is initialized to use policies or not","date":"2019-01-10T15:17:59.558Z","type":"message"}
{"nick":"bradleymeck","message":"CJS intentionally isn't given a partial init state for if it uses policies or not","date":"2019-01-10T15:18:17.354Z","type":"message"}
{"nick":"bradleymeck","message":"so it freaks out","date":"2019-01-10T15:18:21.427Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: can't we branch in the loader to see if the manifest is initialized or not?","date":"2019-01-10T15:18:41.984Z","type":"message"}
{"nick":"bradleymeck","message":"it sees that it should be using policies but that none have been loaded","date":"2019-01-10T15:18:42.288Z","type":"message"}
{"nick":"bradleymeck","message":"i would not want to do so since it would be a rats nest","date":"2019-01-10T15:18:57.859Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: why? Otherwise we will have to do unnecessary integrity checks even for fake internal modules","date":"2019-01-10T15:19:54.198Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: we could make 2 separate CJS subsystems but that also seems scary to me, less so than partial init though","date":"2019-01-10T15:19:54.740Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: fake modules should still be sending integrity, tons of core is not robust against all sorts of attacks","date":"2019-01-10T15:20:43.556Z","type":"message"}
{"nick":"bradleymeck","message":"just muck around with builtin prototypes","date":"2019-01-10T15:21:04.238Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: how? They are just \"modules\" in the sense of being Module objects","date":"2019-01-10T15:21:35.467Z","type":"message"}
{"nick":"dbevenius","date":"2019-01-10T15:21:44.745Z","type":"join"}
{"nick":"joyee","message":"In the sense of being instances of that class","date":"2019-01-10T15:21:47.392Z","type":"message"}
{"nick":"bradleymeck","message":"that instance is fine","date":"2019-01-10T15:22:08.963Z","type":"message"}
{"nick":"bradleymeck","message":"since it doesn't attempt to load src code","date":"2019-01-10T15:22:16.628Z","type":"message"}
{"nick":"bradleymeck","message":"so it doesn't do an integrity check","date":"2019-01-10T15:22:28.647Z","type":"message"}
{"nick":"joyee","message":"I think we should be fine to not instantiate a module of that class just to make fake modules, though, that can just be object literals with necessary fields","date":"2019-01-10T15:22:45.517Z","type":"message"}
{"nick":"bradleymeck","message":"but the CJS system itself shouldn't be booted up being in a both \"will use policies, but am not using policies\" state","date":"2019-01-10T15:22:55.460Z","type":"message"}
{"nick":"joyee","message":"So IIUC, this is only because the fake modules share the actual Module class?","date":"2019-01-10T15:23:43.454Z","type":"message"}
{"nick":"bradleymeck","message":"yup","date":"2019-01-10T15:25:05.312Z","type":"message"}
{"nick":"devsnek","message":"anyone ever seen these weird errors from npm ENOENT: no such file or directory, rename './node_modules/.staging/@snek/source-map-support-1c756fd8/node_modules/lodash.sortby' -> './/node_modules/.staging/lodash.sortby-f4d7d68b'","date":"2019-01-10T15:25:26.397Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: but the current order is still quite fragile - if someone accidentally load the CJS loader prior to the setup of policy, you will still end up with a half-initialized state","date":"2019-01-10T15:25:56.384Z","type":"message"}
{"nick":"bradleymeck","message":"nope, it throws errors","date":"2019-01-10T15:26:14.170Z","type":"message"}
{"nick":"bradleymeck","message":"thats how i found that file","date":"2019-01-10T15:26:17.895Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-10T15:26:38.796Z","type":"quit"}
{"nick":"bradleymeck","message":"it does a simple sanity check on if it should be using policies and tries to grab the policy","date":"2019-01-10T15:26:51.449Z","type":"message"}
{"nick":"bradleymeck","message":"since the policy is in a TDZ, throws up","date":"2019-01-10T15:27:01.380Z","type":"message"}
{"nick":"joyee","message":"hmm, makes sense","date":"2019-01-10T15:27:52.280Z","type":"message"}
{"nick":"bradleymeck","message":"we can probably start moving things off of trying to directly muck with CJS","date":"2019-01-10T15:28:38.400Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: do you know if the options parser can differentiate the empty string and a missing flag?","date":"2019-01-10T15:36:05.613Z","type":"message"}
{"nick":"bradleymeck","message":"right now i can't seem to differentiate so we should keep it as a vector and add a length check","date":"2019-01-10T15:38:15.115Z","type":"message"}
{"nick":"bradleymeck","message":"we also don't seem to have an example of exiting on bad args except deprecations?","date":"2019-01-10T15:41:21.944Z","type":"message"}
{"nick":"jcovingt_","date":"2019-01-10T15:44:53.234Z","type":"join"}
{"nick":"jcovingt_","reason":"Client Quit","date":"2019-01-10T15:45:42.215Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-10T15:47:45.315Z","type":"join"}
{"nick":"joyee","message":"bradleymeck: you can use the same trick as `has_eval_string`","date":"2019-01-10T15:48:55.420Z","type":"message"}
{"nick":"bradleymeck","message":"that has a remove comment / seems similar levels of hacky","date":"2019-01-10T15:50:11.308Z","type":"message"}
{"nick":"bradleymeck","message":"why do that approach?","date":"2019-01-10T15:50:20.676Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: and checkout `CheckOptions` implementations to see how to verify the args","date":"2019-01-10T15:50:29.940Z","type":"message"}
{"nick":"joyee","message":"If we need to be hacky, better be consistently hacky so that they can be migrated the same way later","date":"2019-01-10T15:51:08.049Z","type":"message"}
{"nick":"bradleymeck","message":"idk, that has_eval_string is a lot more code than a length check","date":"2019-01-10T15:51:38.850Z","type":"message"}
{"nick":"bradleymeck","message":"and it adds a second field instead of just migrating 1","date":"2019-01-10T15:51:47.850Z","type":"message"}
{"nick":"bradleymeck","message":"and it has the remove comment still","date":"2019-01-10T15:51:55.406Z","type":"message"}
{"nick":"joyee","message":"um, why? You just need a boolean flag and a Implies(\"--experimental-policy\", \"[has_policy_string]\");","date":"2019-01-10T15:52:25.275Z","type":"message"}
{"nick":"bradleymeck","message":"maybe my brain can't read that code well","date":"2019-01-10T15:53:10.148Z","type":"message"}
{"nick":"bradleymeck","message":"but it didn't look like that on a glance","date":"2019-01-10T15:53:19.767Z","type":"message"}
{"nick":"bradleymeck","message":"whats the stuff with \"_eval\" in node.cc about","date":"2019-01-10T15:54:47.990Z","type":"message"}
{"nick":"bradleymeck","message":"i'm pretty against this kind of put code all over the place","date":"2019-01-10T15:55:16.428Z","type":"message"}
{"nick":"bradleymeck","message":"it seems to imply a boolean, and then in a different area of the codebase it determines if that should do something","date":"2019-01-10T15:55:44.066Z","type":"message"}
{"nick":"bradleymeck","message":"rather than just a length check","date":"2019-01-10T15:55:49.624Z","type":"message"}
{"nick":"bradleymeck","message":"i can do the length check in the C++ to error down there even","date":"2019-01-10T15:56:19.861Z","type":"message"}
{"nick":"jcovingt","date":"2019-01-10T15:56:52.184Z","type":"join"}
