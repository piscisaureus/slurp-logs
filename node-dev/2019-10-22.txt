{"nick":"AtumT_","reason":"Quit: AtumT_","date":"2019-10-22T01:23:32.863Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-10-22T02:09:37.428Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 268 seconds","date":"2019-10-22T04:35:44.603Z","type":"quit"}
{"nick":"matthiaskrgr","reason":"Quit: PanicBNC - https://PanicBNC.net - currently sucks","date":"2019-10-22T05:35:47.799Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-22T07:02:30.699Z","type":"join"}
{"nick":"mgol","date":"2019-10-22T08:06:50.900Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-10-22T08:19:03.825Z","type":"quit"}
{"nick":"mgol","date":"2019-10-22T08:43:26.700Z","type":"join"}
{"nick":"wa7son","message":"Noob C++ questions: If something from v8 returns a `v8::MaybeLocal<v8::Object>`, how do I then call functions on this object? I just get this error: `no member named 'SetPrototype' in 'v8::MaybeLocal<v8::Object>'`","date":"2019-10-22T09:01:19.186Z","type":"message"}
{"nick":"wa7son","message":"Would be great if there were a \"v8 developer cheatsheet\" üòÖ","date":"2019-10-22T09:10:38.033Z","type":"message"}
{"nick":"sgimeno","date":"2019-10-22T09:20:21.286Z","type":"join"}
{"nick":"wa7son","message":"Hmm I guess I need to covert it to a `Local` first... at least it compiles now","date":"2019-10-22T09:34:06.771Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-10-22T11:01:33.422Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-22T11:29:55.147Z","type":"join"}
{"nick":"lundibundi","reason":"Remote host closed the connection","date":"2019-10-22T11:33:50.977Z","type":"quit"}
{"nick":"joyee","message":"wa7son: what do you mean by calling functions on it? as the receiver or arguments?","date":"2019-10-22T12:01:24.342Z","type":"message"}
{"nick":"joyee","message":"Yes you need to convert it into Local first","date":"2019-10-22T12:01:43.709Z","type":"message"}
{"nick":"wa7son","message":"joyee: good question... My C is pretty rusty, but all I wanted was to call `SetPrototype` on `v8::Object`. But I think I figured it out","date":"2019-10-22T12:03:30.711Z","type":"message"}
{"nick":"joyee","message":"Sounds good","date":"2019-10-22T12:03:51.967Z","type":"message"}
{"nick":"wa7son","message":"joyee: I was playing around with setting the prototype of `process.env` to `null` so that it didn't inherit from `Object.prototype`. I got it working now, but now have a failing test. It turned out that we actually have a test that checks that `process.env` inherits from `Object.prototype` ü§∑‚Äç‚ôÇÔ∏è I guess that means it would be a breaking change if we ever decide to change that","date":"2019-10-22T12:05:22.864Z","type":"message"}
{"nick":"wa7son","message":"I even found the commit where it was added: https://github.com/nodejs/node/commit/fee02db705152a42c8db442d3ab76b2296e59bbd","date":"2019-10-22T12:06:11.318Z","type":"message"}
{"nick":"wa7son","message":"Pretty old stuff üòÖ","date":"2019-10-22T12:06:22.581Z","type":"message"}
{"nick":"joyee","message":"wa7son: note that by setting its prototype to null the object directly goes into dictionary mode and hence the property access of it  is much slower","date":"2019-10-22T12:11:11.807Z","type":"message"}
{"nick":"joyee","message":"However","date":"2019-10-22T12:11:47.068Z","type":"message"}
{"nick":"joyee","message":"https://www.irccloud.com/pastebin/OD9ZKwOs/","date":"2019-10-22T12:11:50.187Z","type":"message"}
{"nick":"wa7son","message":"joyee: oh didn't know it would fall back to dictionary mode... what's does the `%HasFastProperties` mean?","date":"2019-10-22T12:20:21.848Z","type":"message"}
{"nick":"joyee","message":"wa7son: whether it has in-object fast properties","date":"2019-10-22T12:21:06.991Z","type":"message"}
{"nick":"joyee","message":"The opposite would be properties in dictionary backing store which is sloweer","date":"2019-10-22T12:21:28.069Z","type":"message"}
{"nick":"wa7son","message":"what flag do you use to get access to `%` variables?","date":"2019-10-22T12:22:18.539Z","type":"message"}
{"nick":"joyee","message":"` --allow-natives-syntax`","date":"2019-10-22T12:22:26.105Z","type":"message"}
{"nick":"wa7son","message":"I need to put all these nice tips you give me into a cheatsheet!","date":"2019-10-22T12:23:03.529Z","type":"message"}
{"nick":"joyee","message":"I think you can find most of those in danbev's notes","date":"2019-10-22T12:23:21.643Z","type":"message"}
{"nick":"joyee","message":"https://github.com/danbev/learning-v8","date":"2019-10-22T12:23:34.597Z","type":"message"}
{"nick":"wa7son","message":"Ah yes: https://usercontent.irccloud-cdn.com/file/bY7mNuIg/image.png","date":"2019-10-22T12:23:37.733Z","type":"message"}
{"nick":"wa7son","message":"nice! thanks for the link - didn't know about that resource","date":"2019-10-22T12:23:59.811Z","type":"message"}
{"nick":"wa7son","message":"ü§î","date":"2019-10-22T12:25:49.328Z","type":"message"}
{"nick":"wa7son","message":"however: https://usercontent.irccloud-cdn.com/file/YIX9sdlW/image.png","date":"2019-10-22T12:25:53.034Z","type":"message"}
{"nick":"wa7son","message":"joyee: ^ this is my patched version where `process.env` doesn't inherit from `Object.prototype` and it does seem to have fast properties - or am I reading this wrong?","date":"2019-10-22T12:26:40.673Z","type":"message"}
{"nick":"joyee","message":"hmm, is that null or undefined?","date":"2019-10-22T12:27:38.396Z","type":"message"}
{"nick":"joyee","message":"I only noticed that null makes a difference - that is if you create it via `Object.create(null)`. This showed up in https://github.com/nodejs/node/issues/29766","date":"2019-10-22T12:28:21.640Z","type":"message"}
{"nick":"wa7son","message":"It should be null... It just shows up as `undefined` in the repl for some reason... If you do `Object.create(null).__proto__` it outputs `undefined` as well","date":"2019-10-22T12:30:11.338Z","type":"message"}
{"nick":"wa7son","message":"However `Object.getPrototypeOf(Object.create(null))` returns the expected `null`","date":"2019-10-22T12:30:54.819Z","type":"message"}
{"nick":"wa7son","message":"Same with `Object.getPrototypeof(process.env)` in my case","date":"2019-10-22T12:31:28.844Z","type":"message"}
{"nick":"joyee","message":"hmm, maybe it would be a good idea to check out the benchmark. It could be that `process.env` is not created from JS anyway","date":"2019-10-22T12:32:39.543Z","type":"message"}
{"nick":"wa7son","message":"No, it's created in C (hence all my noob C questions üôÑ)","date":"2019-10-22T12:33:13.872Z","type":"message"}
{"nick":"joyee","message":"Technically C++ ;)","date":"2019-10-22T12:33:28.489Z","type":"message"}
{"nick":"wa7son","message":"well... true","date":"2019-10-22T12:33:37.465Z","type":"message"}
{"nick":"FruitieX","reason":"Ping timeout: 276 seconds","date":"2019-10-22T12:42:32.725Z","type":"quit"}
{"nick":"FruitieX","date":"2019-10-22T12:47:00.520Z","type":"join"}
{"nick":"FruitieX","reason":"Ping timeout: 265 seconds","date":"2019-10-22T12:52:05.452Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-22T12:54:59.517Z","type":"join"}
{"nick":"FruitieX","date":"2019-10-22T12:57:43.256Z","type":"join"}
{"nick":"mgol","reason":"Ping timeout: 240 seconds","date":"2019-10-22T13:10:03.020Z","type":"quit"}
{"nick":"mgol","date":"2019-10-22T13:13:05.273Z","type":"join"}
{"nick":"octetcloud","date":"2019-10-22T14:07:02.601Z","type":"join"}
{"nick":"AtumT","date":"2019-10-22T14:35:18.422Z","type":"join"}
{"nick":"wa7son","message":"addaleax: thanks for the review on https://github.com/nodejs/node/pull/30063 - I would love to better understand what I'm doing back and forth with `Local` and `MaybeLocal` etc. and to best do error handling locally. Do you have an example elsewhere in the code-base where we do something similar?","date":"2019-10-22T14:35:32.663Z","type":"message"}
{"nick":"addaleax","message":"wa7son: I'm on mobile but I can try to look something up... you may want to look for a pattern like `if (!(...).ToLocal(&...)) return MaybeLocal<Object>();` and `if (!(...).To (&...)) return MaybeLocal<Object>();`","date":"2019-10-22T14:43:26.834Z","type":"message"}
{"nick":"addaleax","message":"wa7son: maybe in node_messaging.cc, there's quite a bit of more recent code in there","date":"2019-10-22T14:47:53.363Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-10-22T14:48:13.451Z","type":"quit"}
{"nick":"wa7son","message":"addaleax: thanks! Found something in `node_process_object.cc` as well based on the pattern you wrote","date":"2019-10-22T14:48:26.402Z","type":"message"}
{"nick":"addaleax","message":"wa7son: and to be clear, a lot of our older code doesn't really care to do proper error handling, partly because it works just \"good enough\"... ironically builtin prototype pollution is exactly the pattern one would use for making a lot of those .ToLocalChecked () etc. calls crash ;)","date":"2019-10-22T14:49:26.756Z","type":"message"}
{"nick":"wa7son","message":"haha ups - good point üòÖ","date":"2019-10-22T14:50:20.573Z","type":"message"}
{"nick":"addaleax","message":"wa7son also, if you want to run the benchmark CI, you should be able to do that at https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/ as a collaborator","date":"2019-10-22T14:59:09.083Z","type":"message"}
{"nick":"wa7son","message":"Ah thanks. I was looking for that before","date":"2019-10-22T15:03:09.718Z","type":"message"}
{"nick":"lundibundi","date":"2019-10-22T15:30:49.143Z","type":"join"}
{"nick":"targos","message":"Isn't the `process.env` object a proxy?","date":"2019-10-22T15:41:27.520Z","type":"message"}
{"nick":"targos","message":"Asking because if that's the case, the performance impact of changing its prototype should be negligible","date":"2019-10-22T15:41:59.068Z","type":"message"}
