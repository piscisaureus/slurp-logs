{"nick":"AtumT_","reason":"Quit: AtumT_","date":"2019-10-22T01:23:32.863Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-10-22T02:09:37.428Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 268 seconds","date":"2019-10-22T04:35:44.603Z","type":"quit"}
{"nick":"matthiaskrgr","reason":"Quit: PanicBNC - https://PanicBNC.net - currently sucks","date":"2019-10-22T05:35:47.799Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-22T07:02:30.699Z","type":"join"}
{"nick":"mgol","date":"2019-10-22T08:06:50.900Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-10-22T08:19:03.825Z","type":"quit"}
{"nick":"mgol","date":"2019-10-22T08:43:26.700Z","type":"join"}
{"nick":"wa7son","message":"Noob C++ questions: If something from v8 returns a `v8::MaybeLocal<v8::Object>`, how do I then call functions on this object? I just get this error: `no member named 'SetPrototype' in 'v8::MaybeLocal<v8::Object>'`","date":"2019-10-22T09:01:19.186Z","type":"message"}
{"nick":"wa7son","message":"Would be great if there were a \"v8 developer cheatsheet\" üòÖ","date":"2019-10-22T09:10:38.033Z","type":"message"}
{"nick":"sgimeno","date":"2019-10-22T09:20:21.286Z","type":"join"}
{"nick":"wa7son","message":"Hmm I guess I need to covert it to a `Local` first... at least it compiles now","date":"2019-10-22T09:34:06.771Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-10-22T11:01:33.422Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-22T11:29:55.147Z","type":"join"}
{"nick":"lundibundi","reason":"Remote host closed the connection","date":"2019-10-22T11:33:50.977Z","type":"quit"}
{"nick":"joyee","message":"wa7son: what do you mean by calling functions on it? as the receiver or arguments?","date":"2019-10-22T12:01:24.342Z","type":"message"}
{"nick":"joyee","message":"Yes you need to convert it into Local first","date":"2019-10-22T12:01:43.709Z","type":"message"}
{"nick":"wa7son","message":"joyee: good question... My C is pretty rusty, but all I wanted was to call `SetPrototype` on `v8::Object`. But I think I figured it out","date":"2019-10-22T12:03:30.711Z","type":"message"}
{"nick":"joyee","message":"Sounds good","date":"2019-10-22T12:03:51.967Z","type":"message"}
{"nick":"wa7son","message":"joyee: I was playing around with setting the prototype of `process.env` to `null` so that it didn't inherit from `Object.prototype`. I got it working now, but now have a failing test. It turned out that we actually have a test that checks that `process.env` inherits from `Object.prototype` ü§∑‚Äç‚ôÇÔ∏è I guess that means it would be a breaking change if we ever decide to change that","date":"2019-10-22T12:05:22.864Z","type":"message"}
{"nick":"wa7son","message":"I even found the commit where it was added: https://github.com/nodejs/node/commit/fee02db705152a42c8db442d3ab76b2296e59bbd","date":"2019-10-22T12:06:11.318Z","type":"message"}
{"nick":"wa7son","message":"Pretty old stuff üòÖ","date":"2019-10-22T12:06:22.581Z","type":"message"}
{"nick":"joyee","message":"wa7son: note that by setting its prototype to null the object directly goes into dictionary mode and hence the property access of it  is much slower","date":"2019-10-22T12:11:11.807Z","type":"message"}
{"nick":"joyee","message":"However","date":"2019-10-22T12:11:47.068Z","type":"message"}
{"nick":"joyee","message":"https://www.irccloud.com/pastebin/OD9ZKwOs/","date":"2019-10-22T12:11:50.187Z","type":"message"}
{"nick":"wa7son","message":"joyee: oh didn't know it would fall back to dictionary mode... what's does the `%HasFastProperties` mean?","date":"2019-10-22T12:20:21.848Z","type":"message"}
{"nick":"joyee","message":"wa7son: whether it has in-object fast properties","date":"2019-10-22T12:21:06.991Z","type":"message"}
{"nick":"joyee","message":"The opposite would be properties in dictionary backing store which is sloweer","date":"2019-10-22T12:21:28.069Z","type":"message"}
{"nick":"wa7son","message":"what flag do you use to get access to `%` variables?","date":"2019-10-22T12:22:18.539Z","type":"message"}
{"nick":"joyee","message":"` --allow-natives-syntax`","date":"2019-10-22T12:22:26.105Z","type":"message"}
{"nick":"wa7son","message":"I need to put all these nice tips you give me into a cheatsheet!","date":"2019-10-22T12:23:03.529Z","type":"message"}
{"nick":"joyee","message":"I think you can find most of those in danbev's notes","date":"2019-10-22T12:23:21.643Z","type":"message"}
{"nick":"joyee","message":"https://github.com/danbev/learning-v8","date":"2019-10-22T12:23:34.597Z","type":"message"}
{"nick":"wa7son","message":"Ah yes: https://usercontent.irccloud-cdn.com/file/bY7mNuIg/image.png","date":"2019-10-22T12:23:37.733Z","type":"message"}
{"nick":"wa7son","message":"nice! thanks for the link - didn't know about that resource","date":"2019-10-22T12:23:59.811Z","type":"message"}
{"nick":"wa7son","message":"ü§î","date":"2019-10-22T12:25:49.328Z","type":"message"}
{"nick":"wa7son","message":"however: https://usercontent.irccloud-cdn.com/file/YIX9sdlW/image.png","date":"2019-10-22T12:25:53.034Z","type":"message"}
{"nick":"wa7son","message":"joyee: ^ this is my patched version where `process.env` doesn't inherit from `Object.prototype` and it does seem to have fast properties - or am I reading this wrong?","date":"2019-10-22T12:26:40.673Z","type":"message"}
{"nick":"joyee","message":"hmm, is that null or undefined?","date":"2019-10-22T12:27:38.396Z","type":"message"}
{"nick":"joyee","message":"I only noticed that null makes a difference - that is if you create it via `Object.create(null)`. This showed up in https://github.com/nodejs/node/issues/29766","date":"2019-10-22T12:28:21.640Z","type":"message"}
{"nick":"wa7son","message":"It should be null... It just shows up as `undefined` in the repl for some reason... If you do `Object.create(null).__proto__` it outputs `undefined` as well","date":"2019-10-22T12:30:11.338Z","type":"message"}
{"nick":"wa7son","message":"However `Object.getPrototypeOf(Object.create(null))` returns the expected `null`","date":"2019-10-22T12:30:54.819Z","type":"message"}
{"nick":"wa7son","message":"Same with `Object.getPrototypeof(process.env)` in my case","date":"2019-10-22T12:31:28.844Z","type":"message"}
{"nick":"joyee","message":"hmm, maybe it would be a good idea to check out the benchmark. It could be that `process.env` is not created from JS anyway","date":"2019-10-22T12:32:39.543Z","type":"message"}
{"nick":"wa7son","message":"No, it's created in C (hence all my noob C questions üôÑ)","date":"2019-10-22T12:33:13.872Z","type":"message"}
{"nick":"joyee","message":"Technically C++ ;)","date":"2019-10-22T12:33:28.489Z","type":"message"}
{"nick":"wa7son","message":"well... true","date":"2019-10-22T12:33:37.465Z","type":"message"}
{"nick":"FruitieX","reason":"Ping timeout: 276 seconds","date":"2019-10-22T12:42:32.725Z","type":"quit"}
{"nick":"FruitieX","date":"2019-10-22T12:47:00.520Z","type":"join"}
{"nick":"FruitieX","reason":"Ping timeout: 265 seconds","date":"2019-10-22T12:52:05.452Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-22T12:54:59.517Z","type":"join"}
{"nick":"FruitieX","date":"2019-10-22T12:57:43.256Z","type":"join"}
{"nick":"mgol","reason":"Ping timeout: 240 seconds","date":"2019-10-22T13:10:03.020Z","type":"quit"}
{"nick":"mgol","date":"2019-10-22T13:13:05.273Z","type":"join"}
{"nick":"octetcloud","date":"2019-10-22T14:07:02.601Z","type":"join"}
{"nick":"AtumT","date":"2019-10-22T14:35:18.422Z","type":"join"}
{"nick":"wa7son","message":"addaleax: thanks for the review on https://github.com/nodejs/node/pull/30063 - I would love to better understand what I'm doing back and forth with `Local` and `MaybeLocal` etc. and to best do error handling locally. Do you have an example elsewhere in the code-base where we do something similar?","date":"2019-10-22T14:35:32.663Z","type":"message"}
{"nick":"addaleax","message":"wa7son: I'm on mobile but I can try to look something up... you may want to look for a pattern like `if (!(...).ToLocal(&...)) return MaybeLocal<Object>();` and `if (!(...).To (&...)) return MaybeLocal<Object>();`","date":"2019-10-22T14:43:26.834Z","type":"message"}
{"nick":"addaleax","message":"wa7son: maybe in node_messaging.cc, there's quite a bit of more recent code in there","date":"2019-10-22T14:47:53.363Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-10-22T14:48:13.451Z","type":"quit"}
{"nick":"wa7son","message":"addaleax: thanks! Found something in `node_process_object.cc` as well based on the pattern you wrote","date":"2019-10-22T14:48:26.402Z","type":"message"}
{"nick":"addaleax","message":"wa7son: and to be clear, a lot of our older code doesn't really care to do proper error handling, partly because it works just \"good enough\"... ironically builtin prototype pollution is exactly the pattern one would use for making a lot of those .ToLocalChecked () etc. calls crash ;)","date":"2019-10-22T14:49:26.756Z","type":"message"}
{"nick":"wa7son","message":"haha ups - good point üòÖ","date":"2019-10-22T14:50:20.573Z","type":"message"}
{"nick":"addaleax","message":"wa7son also, if you want to run the benchmark CI, you should be able to do that at https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/ as a collaborator","date":"2019-10-22T14:59:09.083Z","type":"message"}
{"nick":"wa7son","message":"Ah thanks. I was looking for that before","date":"2019-10-22T15:03:09.718Z","type":"message"}
{"nick":"lundibundi","date":"2019-10-22T15:30:49.143Z","type":"join"}
{"nick":"targos","message":"Isn't the `process.env` object a proxy?","date":"2019-10-22T15:41:27.520Z","type":"message"}
{"nick":"targos","message":"Asking because if that's the case, the performance impact of changing its prototype should be negligible","date":"2019-10-22T15:41:59.068Z","type":"message"}
{"nick":"lpin","date":"2019-10-22T16:13:57.907Z","type":"join"}
{"nick":"joyee","message":"targos: yeah and I refactored those myself many months ago.. I was probably being silly","date":"2019-10-22T16:34:52.464Z","type":"message"}
{"nick":"ljharb","topic":"Get registered on freenode ( https://git.io/vaTS2 ) | Node.js Current: v13.0.0 | LTS: Erbium v12.13.0, Dubnium v10.16.3, Carbon v8.16.2; EOL: Boron v6.17.1, Argon v4.9.1, v11, v9, v7, <= v5 | -- https://nodejs.org/ -- IRC Logs: http://logs.libuv.org/node-dev/latest -- Newcomers welcome: http://nodeschool.io/ -- dev channel for all things node core","date":"2019-10-22T16:36:28.468Z","type":"topic"}
{"nick":"ljharb","message":"heads up that node 13's npm prints out \"npm WARN npm npm does not support Node.js v13.0.0\"","date":"2019-10-22T16:39:35.244Z","type":"message"}
{"nick":"devsnek","message":"imagine the day that npm uses semver math instead of a whitelist","date":"2019-10-22T16:40:59.089Z","type":"message"}
{"nick":"joyee","message":"But I guess it makes sense to use a whitelist...when they are properly maintained.","date":"2019-10-22T16:46:49.456Z","type":"message"}
{"nick":"ljharb","message":"filed https://github.com/npm/cli/pull/269 to fix it npm; i'll update npm in node after that's released.","date":"2019-10-22T16:47:59.326Z","type":"message"}
{"nick":"ljharb","message":"we should really have a test in node that blocks release unless npm \"supports\" it","date":"2019-10-22T16:48:13.718Z","type":"message"}
{"nick":"devsnek","message":"hard to test though","date":"2019-10-22T16:48:31.714Z","type":"message"}
{"nick":"devsnek","message":"i guess you could grep stdout","date":"2019-10-22T16:48:39.082Z","type":"message"}
{"nick":"ljharb","message":"yeah true","date":"2019-10-22T16:49:17.937Z","type":"message"}
{"nick":"joyee","message":"I guess the question is whether we even want to give the npm cli that kind of privilege...when people keep mentioning the idea of an alternative cli in core","date":"2019-10-22T16:50:33.091Z","type":"message"}
{"nick":"joyee","message":"(and so far it has not happened yet but who knows)","date":"2019-10-22T16:51:00.191Z","type":"message"}
{"nick":"ljharb","message":"i'm not sure how anything could top the privilege of shipping with it","date":"2019-10-22T16:53:21.776Z","type":"message"}
{"nick":"ljharb","message":"and even if node shipped two package management CLIs, i'd expect a node release to be blocked by *either* of them","date":"2019-10-22T16:53:49.109Z","type":"message"}
{"nick":"devsnek","message":"i think it should block releases as long as we ship npm with node","date":"2019-10-22T16:55:24.270Z","type":"message"}
{"nick":"devsnek","message":"though i'm also in favor of not shipping npm with node","date":"2019-10-22T16:55:36.091Z","type":"message"}
{"nick":"ljharb","message":"i agree with your first statement :-)","date":"2019-10-22T16:55:50.828Z","type":"message"}
{"nick":"ljharb","message":"is there a reason not to check \"Automatically delete head branches\" on the node repo?","date":"2019-10-22T16:57:23.759Z","type":"message"}
{"nick":"ljharb","message":"PRs from node repo branches are rare, but when they happen it seems nice to let github auto-clean it up","date":"2019-10-22T16:57:40.879Z","type":"message"}
{"nick":"devsnek","message":"we should just not have prs from branches on the node repo","date":"2019-10-22T16:58:07.848Z","type":"message"}
{"nick":"devsnek","message":"except for releases","date":"2019-10-22T16:58:20.009Z","type":"message"}
{"nick":"devsnek","message":"in which case i think we keep the branch","date":"2019-10-22T16:58:24.812Z","type":"message"}
{"nick":"joyee","message":"That'll probably just make the maintenance issue of npm even more visible, but unfortunately does not solve the maintenance issue of npm, which I can't really tell is good or bad for the project.","date":"2019-10-22T16:58:45.546Z","type":"message"}
{"nick":"ljharb","message":"this one was a release, so oops, ok","date":"2019-10-22T16:59:02.371Z","type":"message"}
{"nick":"devsnek","message":"joyee: if we just make our own package manager... /s","date":"2019-10-22T16:59:14.136Z","type":"message"}
{"nick":"joyee","message":"We all know that npm does not v13 because every time the linter or something is updated it's very visible for a core contributor. The issue is none of these contributors work with npm.","date":"2019-10-22T17:00:06.010Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 264 seconds","date":"2019-10-22T17:03:04.059Z","type":"quit"}
{"nick":"AbedB","date":"2019-10-22T17:03:19.230Z","type":"join"}
{"nick":"shree","date":"2019-10-22T17:03:29.608Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-10-22T17:25:32.302Z","type":"quit"}
{"nick":"AbedB","reason":"Ping timeout: 264 seconds","date":"2019-10-22T17:43:16.101Z","type":"quit"}
{"nick":"shree","date":"2019-10-22T17:50:30.474Z","type":"join"}
{"nick":"AbedB","date":"2019-10-22T17:50:49.213Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-10-22T17:51:47.024Z","type":"quit"}
{"nick":"shree","date":"2019-10-22T18:07:39.380Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-10-22T18:10:54.457Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-22T18:20:38.136Z","type":"join"}
{"nick":"lundibundi","reason":"Remote host closed the connection","date":"2019-10-22T18:24:41.232Z","type":"quit"}
{"nick":"bradleymeck","message":"instead of shipping fewer pkg managers, we could always just ship more","date":"2019-10-22T18:40:09.858Z","type":"message"}
{"nick":"bradleymeck","message":"not joking","date":"2019-10-22T18:40:21.582Z","type":"message"}
{"nick":"bradleymeck","message":"giving options and having a default seems more helpful than removing the commonly used solution","date":"2019-10-22T18:40:50.221Z","type":"message"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-10-22T19:20:21.815Z","type":"quit"}
{"nick":"mgol","date":"2019-10-22T19:59:51.528Z","type":"join"}
{"nick":"howdoi","date":"2019-10-22T20:00:37.570Z","type":"join"}
{"nick":"ljharb","topic":"Get registered on freenode ( https://git.io/vaTS2 ) | Node.js Current: v13.0.0 | LTS: Erbium v12.13.0, Dubnium v10.17.0, Carbon v8.16.2; EOL: Boron v6.17.1, Argon v4.9.1, v11, v9, v7, <= v5 | -- https://nodejs.org/ -- IRC Logs: http://logs.libuv.org/node-dev/latest -- Newcomers welcome: http://nodeschool.io/ -- dev channel for all things node core","date":"2019-10-22T20:01:17.896Z","type":"topic"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-10-22T20:07:11.985Z","type":"quit"}
{"nick":"shree","date":"2019-10-22T20:30:28.605Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-10-22T20:37:24.217Z","type":"quit"}
{"nick":"devsnek","message":"is there no way to check if a snapshot capture is active","date":"2019-10-22T20:46:25.126Z","type":"message"}
{"nick":"devsnek","message":"joyee: addaleax: ^","date":"2019-10-22T20:46:35.849Z","type":"message"}
{"nick":"devsnek","message":"I didn't see anything in v8.h","date":"2019-10-22T20:46:45.210Z","type":"message"}
{"nick":"joyee","message":"devsnek: you mean the Node.js custom snapshot?","date":"2019-10-22T20:47:22.381Z","type":"message"}
{"nick":"joyee","message":"I usually just check process.config","date":"2019-10-22T20:47:32.832Z","type":"message"}
{"nick":"devsnek","message":"I want to add a CHECK to InitializeContextRuntime","date":"2019-10-22T20:47:51.359Z","type":"message"}
{"nick":"devsnek","message":"so it fails if called while we're making snapshot","date":"2019-10-22T20:48:07.215Z","type":"message"}
{"nick":"addaleax","message":"devsnek: I don‚Äôt think so, no","date":"2019-10-22T20:50:23.608Z","type":"message"}
{"nick":"joyee","message":"For now, no, there is no way to tell, because you need some sort of global instance that you pass around to track all these","date":"2019-10-22T20:50:27.863Z","type":"message"}
{"nick":"joyee","message":"I guess it's ok to add an embdder data slot, not necessarily worth it but it's not a huge deal","date":"2019-10-22T20:50:58.880Z","type":"message"}
{"nick":"devsnek","message":"maybe I could add a bool to env","date":"2019-10-22T20:51:12.199Z","type":"message"}
{"nick":"joyee","message":"to env or context?","date":"2019-10-22T20:51:21.759Z","type":"message"}
{"nick":"joyee","message":"because if it's InitializeContextRuntime it could be multiple contexts that run through the same env","date":"2019-10-22T20:51:46.447Z","type":"message"}
{"nick":"devsnek","message":"do we create oodles of contexts during snapshot creation?","date":"2019-10-22T20:52:26.307Z","type":"message"}
{"nick":"joyee","message":"no I mean vm contexts","date":"2019-10-22T20:52:39.209Z","type":"message"}
{"nick":"devsnek","message":"yeah, but we don't create those do we?","date":"2019-10-22T20:53:16.245Z","type":"message"}
{"nick":"joyee","message":"which are all created from scratch currently even when the env context is deserialized","date":"2019-10-22T20:53:19.443Z","type":"message"}
{"nick":"joyee","message":"and I am tweaking around to abstract stuff away to make it assume less","date":"2019-10-22T20:53:51.855Z","type":"message"}
{"nick":"devsnek","message":"maybe we can ask v8 to rework snapshots with optional globals in them","date":"2019-10-22T20:54:17.189Z","type":"message"}
{"nick":"joyee","message":"I don't think I am following?","date":"2019-10-22T20:54:34.669Z","type":"message"}
{"nick":"devsnek","message":"if we could delete Atomics.wake during snapshot time we wouldn't need the second initialize function","date":"2019-10-22T20:55:09.190Z","type":"message"}
{"nick":"joyee","message":"I thought we did that and it was not effective?","date":"2019-10-22T20:55:37.698Z","type":"message"}
{"nick":"devsnek","message":"huh","date":"2019-10-22T20:55:46.197Z","type":"message"}
{"nick":"AbedB_","date":"2019-10-22T22:22:24.593Z","type":"join"}
{"nick":"AbedB","reason":"Ping timeout: 246 seconds","date":"2019-10-22T22:25:45.104Z","type":"quit"}
{"nick":"shree","date":"2019-10-22T22:32:51.603Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-10-22T23:14:27.851Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-10-22T23:18:16.747Z","type":"quit"}
{"nick":"shree","date":"2019-10-22T23:20:48.605Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-10-22T23:21:38.199Z","type":"quit"}
