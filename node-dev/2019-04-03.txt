{"nick":"dbevenius","date":"2019-04-03T00:36:23.336Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-04-03T00:40:52.186Z","type":"quit"}
{"nick":"d10n-work","reason":"Quit: Connection closed for inactivity","date":"2019-04-03T00:58:31.533Z","type":"quit"}
{"nick":"zsocw","date":"2019-04-03T01:10:25.349Z","type":"join"}
{"nick":"zsoc","reason":"Disconnected by services","date":"2019-04-03T01:10:25.490Z","type":"quit"}
{"nick":"dbevenius","date":"2019-04-03T01:15:22.475Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-04-03T01:19:52.261Z","type":"quit"}
{"nick":"zeds","date":"2019-04-03T01:35:01.864Z","type":"join"}
{"nick":"dbevenius","date":"2019-04-03T01:35:11.949Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-04-03T01:39:54.861Z","type":"quit"}
{"nick":"zeds","date":"2019-04-03T01:40:40.558Z","type":"part"}
{"nick":"yaelhe","message":"devsnek: hey, regarding the locks-api feature, when you find that Async class you were referring to, I’d be happy to know (i’m going offline but i'll check the logs)","date":"2019-04-03T01:43:27.646Z","type":"message"}
{"nick":"yaelhe","date":"2019-04-03T01:44:17.772Z","type":"quit"}
{"nick":"devsnek","message":"addaleax: don't we have some class that wraps uv_async","date":"2019-04-03T01:46:14.087Z","type":"message"}
{"nick":"antsmartian","date":"2019-04-03T01:53:52.366Z","type":"join"}
{"nick":"dbevenius","date":"2019-04-03T01:55:32.323Z","type":"join"}
{"nick":"antsmartian","reason":"Ping timeout: 245 seconds","date":"2019-04-03T01:58:22.258Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-04-03T01:59:52.771Z","type":"quit"}
{"nick":"antsmartian","date":"2019-04-03T02:05:39.949Z","type":"join"}
{"nick":"shree","date":"2019-04-03T02:10:22.992Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-04-03T02:43:17.925Z","type":"quit"}
{"nick":"antsmartian","date":"2019-04-03T02:46:12.185Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-03T02:48:02.555Z","type":"quit"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-04-03T02:52:18.623Z","type":"quit"}
{"nick":"dbevenius","date":"2019-04-03T02:56:26.955Z","type":"join"}
{"nick":"shree","date":"2019-04-03T02:59:28.834Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-04-03T03:00:54.930Z","type":"quit"}
{"nick":"dbevenius","date":"2019-04-03T03:15:26.235Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-04-03T03:20:04.788Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-03T03:28:56.218Z","type":"quit"}
{"nick":"dbevenius","date":"2019-04-03T03:30:30.581Z","type":"join"}
{"nick":"octetcloud","date":"2019-04-03T03:45:21.975Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-04-03T03:49:48.940Z","type":"quit"}
{"nick":"dbevenius","date":"2019-04-03T03:50:01.993Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 246 seconds","date":"2019-04-03T04:37:51.028Z","type":"quit"}
{"nick":"lpin","date":"2019-04-03T05:11:54.105Z","type":"join"}
{"nick":"dbeveniu_","date":"2019-04-03T05:44:30.574Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-04-03T05:47:51.880Z","type":"quit"}
{"nick":"lpin","reason":"Read error: Connection reset by peer","date":"2019-04-03T07:06:16.574Z","type":"quit"}
{"nick":"lpin","date":"2019-04-03T07:06:33.678Z","type":"join"}
{"nick":"mgol","date":"2019-04-03T07:17:48.374Z","type":"join"}
{"nick":"lundibundi","date":"2019-04-03T07:21:08.000Z","type":"join"}
{"nick":"neo4","date":"2019-04-03T07:29:16.348Z","type":"join"}
{"nick":"gamelaster","date":"2019-04-03T08:30:48.136Z","type":"join"}
{"nick":"cart","date":"2019-04-03T09:14:42.226Z","type":"join"}
{"nick":"richardlau","reason":"Ping timeout: 250 seconds","date":"2019-04-03T09:21:08.107Z","type":"quit"}
{"nick":"cart","reason":"Quit: Page closed","date":"2019-04-03T09:24:23.292Z","type":"quit"}
{"nick":"al-damiri","date":"2019-04-03T11:15:13.213Z","type":"join"}
{"nick":"zeds","date":"2019-04-03T11:32:23.349Z","type":"join"}
{"nick":"neo4","reason":"Ping timeout: 246 seconds","date":"2019-04-03T11:33:25.300Z","type":"quit"}
{"nick":"zeds","date":"2019-04-03T11:34:46.159Z","type":"part"}
{"nick":"lundibundi","reason":"Ping timeout: 250 seconds","date":"2019-04-03T11:44:52.831Z","type":"quit"}
{"nick":"lundibundi","date":"2019-04-03T12:30:44.385Z","type":"join"}
{"nick":"richardlau","date":"2019-04-03T13:06:24.733Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 246 seconds","date":"2019-04-03T13:21:55.337Z","type":"quit"}
{"nick":"gamelaster","reason":"Ping timeout: 250 seconds","date":"2019-04-03T13:42:52.121Z","type":"quit"}
{"nick":"neo4","date":"2019-04-03T13:44:14.854Z","type":"join"}
{"nick":"addaleax","message":"devsnek: are you looking for AsyncRequest?","date":"2019-04-03T14:19:21.634Z","type":"message"}
{"nick":"addaleax","message":"(reminds me of some changes I wanted to make to that)","date":"2019-04-03T14:20:33.178Z","type":"message"}
{"nick":"lundibundi","date":"2019-04-03T14:23:21.294Z","type":"join"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2019-04-03T14:24:07.746Z","type":"quit"}
{"nick":"devsnek","message":"addaleax: yaelhe needs to run something on the background thread","date":"2019-04-03T14:25:36.408Z","type":"message"}
{"nick":"addaleax","message":"oh right","date":"2019-04-03T14:25:59.239Z","type":"message"}
{"nick":"addaleax","message":"yeah I think that could be used for that","date":"2019-04-03T14:26:03.206Z","type":"message"}
{"nick":"dbeveniu_","reason":"Remote host closed the connection","date":"2019-04-03T14:26:09.299Z","type":"quit"}
{"nick":"octetcloud","date":"2019-04-03T15:04:48.091Z","type":"join"}
{"nick":"shree","date":"2019-04-03T15:35:48.523Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-04-03T15:36:24.473Z","type":"quit"}
{"nick":"shree","date":"2019-04-03T15:39:56.379Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-04-03T15:43:45.190Z","type":"quit"}
{"nick":"shree","date":"2019-04-03T15:46:50.061Z","type":"join"}
{"nick":"shree","reason":"Read error: Connection reset by peer","date":"2019-04-03T15:47:12.220Z","type":"quit"}
{"nick":"shree","date":"2019-04-03T15:47:38.386Z","type":"join"}
{"nick":"yaelhe","date":"2019-04-03T15:52:19.376Z","type":"join"}
{"nick":"shree","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-04-03T15:54:34.661Z","type":"quit"}
{"nick":"shree","date":"2019-04-03T15:58:43.295Z","type":"join"}
{"nick":"shree","reason":"Read error: Connection reset by peer","date":"2019-04-03T15:59:27.087Z","type":"quit"}
{"nick":"shree_","date":"2019-04-03T15:59:32.889Z","type":"join"}
{"nick":"dbevenius","date":"2019-04-03T16:05:57.351Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 244 seconds","date":"2019-04-03T16:14:23.351Z","type":"quit"}
{"nick":"dbevenius","date":"2019-04-03T16:17:40.184Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-03T17:25:41.484Z","type":"quit"}
{"nick":"yaelhe","reason":"Ping timeout: 245 seconds","date":"2019-04-03T17:31:18.352Z","type":"quit"}
{"nick":"AtumT","date":"2019-04-03T17:36:07.038Z","type":"join"}
{"nick":"mgol","date":"2019-04-03T17:59:10.085Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-04-03T18:03:52.959Z","type":"quit"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-04-03T18:16:38.313Z","type":"quit"}
{"nick":"dbevenius","date":"2019-04-03T18:26:08.978Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-04-03T18:30:36.835Z","type":"quit"}
{"nick":"devsnek","message":"joyee: is that fs readfile test flake fixed?","date":"2019-04-03T18:39:50.401Z","type":"message"}
{"nick":"dbevenius","date":"2019-04-03T18:49:08.927Z","type":"join"}
{"nick":"lundibundi","reason":"Remote host closed the connection","date":"2019-04-03T18:53:19.943Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-04-03T18:53:33.909Z","type":"quit"}
{"nick":"richardlau","message":"devsnek: it was shifted to pummel which doesn't get run as part of the regular CI: https://github.com/nodejs/node/pull/27053","date":"2019-04-03T19:05:15.780Z","type":"message"}
{"nick":"dbevenius","date":"2019-04-03T19:06:05.637Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-04-03T19:10:27.242Z","type":"quit"}
{"nick":"devsnek","message":"richardlau: thanks","date":"2019-04-03T19:12:20.152Z","type":"message"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2019-04-03T19:44:30.349Z","type":"quit"}
{"nick":"dbevenius","date":"2019-04-03T20:36:09.449Z","type":"join"}
{"nick":"ljharb","topic":"Get registered on freenode ( https://git.io/vaTS2 ) | Node.js Current: v11.13.0 | LTS: Dubnium v10.15.3, Carbon v8.15.1, Boron v6.17.1; EOL: Argon v4.9.1, v9, v7, <= v5 | -- https://nodejs.org/ -- IRC Logs: http://logs.libuv.org/node-dev/latest -- Newcomers welcome: http://nodeschool.io/ -- dev channel for all things node core","date":"2019-04-03T20:37:35.183Z","type":"topic"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-04-03T20:40:28.298Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-03T21:23:25.928Z","type":"quit"}
{"nick":"neo4","reason":"Ping timeout: 255 seconds","date":"2019-04-03T21:25:39.831Z","type":"quit"}
{"nick":"dbevenius","date":"2019-04-03T21:25:49.429Z","type":"join"}
{"nick":"Fishrock123","date":"2019-04-03T21:30:26.195Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-04-03T21:30:31.276Z","type":"quit"}
{"nick":"shree_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-03T21:40:46.541Z","type":"quit"}
{"nick":"shree","date":"2019-04-03T21:46:51.341Z","type":"join"}
{"nick":"dbevenius","date":"2019-04-03T21:47:12.148Z","type":"join"}
{"nick":"yaelhe_","date":"2019-04-03T21:47:55.747Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-04-03T21:50:53.854Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-04-03T21:51:24.434Z","type":"quit"}
{"nick":"shree","date":"2019-04-03T21:52:39.719Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-03T21:59:10.877Z","type":"quit"}
{"nick":"shree","date":"2019-04-03T22:00:52.953Z","type":"join"}
{"nick":"dbevenius","date":"2019-04-03T22:05:53.245Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-03T22:09:30.138Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-04-03T22:10:36.929Z","type":"quit"}
{"nick":"shree","date":"2019-04-03T22:12:13.399Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-03T22:32:25.530Z","type":"quit"}
{"nick":"yaelhe_","date":"2019-04-03T23:01:47.053Z","type":"quit"}
{"nick":"yaelhe","date":"2019-04-03T23:02:06.836Z","type":"join"}
{"nick":"yaelhe","message":"devsnek, addaleax: if i understand correctly, then AsyncRequest gets an environment and schedules a cb on its event loop. i think that it should have a new environment (not the main or worker ones) so it runs in the bg (parallel). does that make sense? and i am not sure we want to spawn a dedicated thread (and environment) just for that","date":"2019-04-03T23:04:52.513Z","type":"message"}
{"nick":"devsnek","message":"node has a dedicated thread for background tasks","date":"2019-04-03T23:05:15.914Z","type":"message"}
{"nick":"yaelhe","message":"how can I find it?","date":"2019-04-03T23:05:29.114Z","type":"message"}
{"nick":"addaleax","message":"devsnek: are you talking about the libuv thread pool or the NodePlatform implementation?","date":"2019-04-03T23:05:57.994Z","type":"message"}
{"nick":"devsnek","message":"nodeplatform has a background thread right?","date":"2019-04-03T23:06:11.909Z","type":"message"}
{"nick":"dbevenius","date":"2019-04-03T23:06:19.548Z","type":"join"}
{"nick":"addaleax","message":"yeah, it has a pool for that","date":"2019-04-03T23:06:20.684Z","type":"message"}
{"nick":"yaelhe","message":"how can I use it? the AsyncRequest requires an environment","date":"2019-04-03T23:07:02.681Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-04-03T23:10:28.389Z","type":"quit"}
{"nick":"addaleax","message":"you can post individual Tasks to a background thread, although in that case it’s unusual to use AsyncRequest to post back to the main thread","date":"2019-04-03T23:10:28.913Z","type":"message"}
{"nick":"addaleax","message":"yaelhe devsnek: maybe the first question should be, what do you want to use the background thread for?","date":"2019-04-03T23:10:55.161Z","type":"message"}
{"nick":"devsnek","message":"its used to do some sorting and handling of the held locks in the whatwg locks api","date":"2019-04-03T23:11:26.050Z","type":"message"}
{"nick":"yaelhe","message":"addaleax: for processing lock requests","date":"2019-04-03T23:11:27.328Z","type":"message"}
{"nick":"devsnek","message":"by spec it happens on a thread separate from the ones running js","date":"2019-04-03T23:11:57.692Z","type":"message"}
{"nick":"addaleax","message":"that seems … very odd?","date":"2019-04-03T23:12:46.177Z","type":"message"}
{"nick":"addaleax","message":"anyway, if it has to happen on a background thread in general, uv_queue_work (& the associated ThreadPoolWork) is probably a better choice than NodePlatform","date":"2019-04-03T23:13:14.757Z","type":"message"}
{"nick":"addaleax","message":"if it has to happen on a *specific* thread that handles all locks, then you’d need to spawn an extra thread, because right now all we have is thread pools","date":"2019-04-03T23:13:43.458Z","type":"message"}
{"nick":"devsnek","message":"its a parallel queue","date":"2019-04-03T23:13:57.295Z","type":"message"}
{"nick":"devsnek","message":"which is a LIFO queue","date":"2019-04-03T23:14:20.253Z","type":"message"}
{"nick":"devsnek","message":"FIFO*","date":"2019-04-03T23:14:45.816Z","type":"message"}
{"nick":"devsnek","message":"actually hell i dunno which one describes which","date":"2019-04-03T23:15:19.231Z","type":"message"}
{"nick":"devsnek","message":"items must be handled in the order they are queued","date":"2019-04-03T23:15:30.308Z","type":"message"}
{"nick":"addaleax","message":"devsnek: can you point me to where in the spec the background thread is referenced? i can’t seem to find anything there","date":"2019-04-03T23:15:55.456Z","type":"message"}
{"nick":"devsnek","message":"https://html.spec.whatwg.org/multipage/infrastructure.html#parallelism","date":"2019-04-03T23:16:07.811Z","type":"message"}
{"nick":"devsnek","message":"basically in a new thread `while (true) { queue.pop()() }`","date":"2019-04-03T23:16:53.642Z","type":"message"}
{"nick":"devsnek","message":"pop_front that is","date":"2019-04-03T23:17:02.936Z","type":"message"}
{"nick":"yaelhe","message":"yeah and here it mentions the lock task queue https://wicg.github.io/web-locks/#lock-task-queue","date":"2019-04-03T23:18:46.650Z","type":"message"}
{"nick":"devsnek","message":"lock task queue is a parallel queue","date":"2019-04-03T23:19:04.025Z","type":"message"}
{"nick":"kriskropd","reason":"Ping timeout: 250 seconds","date":"2019-04-03T23:19:38.042Z","type":"quit"}
{"nick":"yaelhe","message":"yes. just pointing to the place where it said it should be parallel","date":"2019-04-03T23:19:45.451Z","type":"message"}
{"nick":"kriskropd","date":"2019-04-03T23:21:05.091Z","type":"join"}
{"nick":"addaleax","message":"devsnek yaelhe: that’s interesting … it doesn’t seem to be spec’d that this has to happen on a separate thread, right? the description of a parallel queue seems to suggest it, but that seems wasteful and my gut feeling would be that it makes the implementation itself more complicated?","date":"2019-04-03T23:23:29.785Z","type":"message"}
{"nick":"devsnek","message":"addaleax: they can't block js execution and the queue takes items from multiple workers","date":"2019-04-03T23:24:21.804Z","type":"message"}
{"nick":"addaleax","message":"devsnek: would any of the steps in the spec block js execution?","date":"2019-04-03T23:24:39.784Z","type":"message"}
{"nick":"devsnek","message":"unless the cpu optimizes them to 0 cycles, yes","date":"2019-04-03T23:25:10.744Z","type":"message"}
{"nick":"addaleax","message":"devsnek: um … what are you referring to?","date":"2019-04-03T23:25:24.225Z","type":"message"}
{"nick":"addaleax","message":"like, nothing is 0 cycles, but that’s not what blocking means","date":"2019-04-03T23:25:35.827Z","type":"message"}
{"nick":"dbevenius","date":"2019-04-03T23:25:56.015Z","type":"join"}
{"nick":"devsnek","message":"blocking in the sense of stopping the event loop and blocking in the sense of \"js isn't running while this native stuff js called is running\"","date":"2019-04-03T23:26:23.855Z","type":"message"}
{"nick":"addaleax","message":"devsnek: I think posting messages to a different thread is going to have more overhead than not doing so, so if you’re using that definition you’re even more blocking","date":"2019-04-03T23:27:30.902Z","type":"message"}
{"nick":"devsnek","message":"🤷","date":"2019-04-03T23:27:50.988Z","type":"message"}
{"nick":"devsnek","message":"i think the larger issue is that one thread would block another one","date":"2019-04-03T23:28:33.842Z","type":"message"}
{"nick":"devsnek","message":"since it would need to acquire a mutex to modify however we store the locks","date":"2019-04-03T23:29:20.032Z","type":"message"}
{"nick":"addaleax","message":"devsnek: the operations that are done while you hold a mutex should be pretty quick, right?","date":"2019-04-03T23:29:51.828Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-04-03T23:30:46.808Z","type":"quit"}
{"nick":"addaleax","message":"devsnek yaelhe: idk, I see how the spec is written so that it would be intuitive to implement it on a different thread in theory, but it looks like something that is not explicitly part of the spec and would become unwieldy in practical implementations?","date":"2019-04-03T23:35:23.618Z","type":"message"}
{"nick":"devsnek","message":"in chrome they use IPC so","date":"2019-04-03T23:35:42.656Z","type":"message"}
{"nick":"devsnek","message":"unwieldy is relative","date":"2019-04-03T23:35:47.826Z","type":"message"}
{"nick":"devsnek","message":"RPC*","date":"2019-04-03T23:35:52.923Z","type":"message"}
{"nick":"addaleax","message":"hm yeah… I guess in chrome they also have a lot more infrastructure around that?","date":"2019-04-03T23:37:09.080Z","type":"message"}
{"nick":"devsnek","message":"they have an entire api for parallel queues","date":"2019-04-03T23:37:27.573Z","type":"message"}
{"nick":"addaleax","message":"yeah, right","date":"2019-04-03T23:37:31.521Z","type":"message"}
{"nick":"devsnek","message":"in the end you're probably more knowledgeable about this thread stuff than i am","date":"2019-04-03T23:38:42.901Z","type":"message"}
{"nick":"devsnek","message":"i just know that the intent of the spec is an api that trades performance for making sure things don't block","date":"2019-04-03T23:39:44.710Z","type":"message"}
{"nick":"addaleax","message":"right, that’s what it probably does… trade some performance and have a limit on the time that it does block in return (because some work has to happen)","date":"2019-04-03T23:41:20.918Z","type":"message"}
{"nick":"yaelhe","message":"addaleax: and on what environment should that work be done? on the caller's","date":"2019-04-03T23:42:22.375Z","type":"message"}
{"nick":"yaelhe","message":"+?","date":"2019-04-03T23:42:56.332Z","type":"message"}
{"nick":"addaleax","message":"devsnek: idk, one might even be able to have the best of both worlds by using something like `uv_mutex_trylock()` to never end up actually blocking … but it might be best to keep it simple in the first iteration","date":"2019-04-03T23:43:36.888Z","type":"message"}
{"nick":"devsnek","message":"seems reasonable","date":"2019-04-03T23:43:55.220Z","type":"message"}
{"nick":"addaleax","message":"yaelhe: so … I think each job that is enqueued into the parallel queue should have an Environment associated with it, and that should be used for callbacks","date":"2019-04-03T23:45:05.193Z","type":"message"}
{"nick":"yaelhe","message":"addaleax: and when a lock is released, should the processing be on the request cb's environment?","date":"2019-04-03T23:46:14.477Z","type":"message"}
{"nick":"yaelhe","message":"the logic that pops the next request etc","date":"2019-04-03T23:46:50.784Z","type":"message"}
{"nick":"yaelhe","message":"dequeues*","date":"2019-04-03T23:47:49.794Z","type":"message"}
{"nick":"addaleax","message":"yaelhe: yeah, exactly. I’m not sure how to best keep track of that Environment and invoke that callback, though","date":"2019-04-03T23:48:01.802Z","type":"message"}
{"nick":"not-an-aardvark","date":"2019-04-03T23:55:29.077Z","type":"join"}
