{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-10-31T00:04:46.942Z","type":"quit"}
{"nick":"shree","date":"2019-10-31T00:08:26.603Z","type":"join"}
{"nick":"Guest3739_______","reason":"*.net *.split","date":"2019-10-31T00:18:56.073Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-10-31T00:21:22.459Z","type":"quit"}
{"nick":"Guest3739_______","date":"2019-10-31T00:24:43.140Z","type":"join"}
{"nick":"shree","date":"2019-10-31T02:07:58.597Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 240 seconds","date":"2019-10-31T02:14:17.174Z","type":"quit"}
{"nick":"ricson","reason":"Remote host closed the connection","date":"2019-10-31T02:56:12.698Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-10-31T03:02:55.472Z","type":"quit"}
{"nick":"shree","date":"2019-10-31T03:26:54.660Z","type":"join"}
{"nick":"howdoi","date":"2019-10-31T03:37:03.646Z","type":"join"}
{"nick":"shree","reason":"Remote host closed the connection","date":"2019-10-31T03:44:46.994Z","type":"quit"}
{"nick":"shree","date":"2019-10-31T03:45:11.061Z","type":"join"}
{"nick":"[[OverCoder]]","reason":"Quit: OverCoder has quit","date":"2019-10-31T04:05:33.964Z","type":"quit"}
{"nick":"shree","reason":"Remote host closed the connection","date":"2019-10-31T04:07:24.565Z","type":"quit"}
{"nick":"shree","date":"2019-10-31T04:08:12.600Z","type":"join"}
{"nick":"AbedB__","date":"2019-10-31T04:08:22.336Z","type":"join"}
{"nick":"AbedB_","reason":"Ping timeout: 276 seconds","date":"2019-10-31T04:11:59.685Z","type":"quit"}
{"nick":"[OverCoder]","date":"2019-10-31T04:13:10.602Z","type":"join"}
{"nick":"shree","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-10-31T04:56:52.519Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-31T05:39:32.781Z","type":"join"}
{"nick":"orkon","date":"2019-10-31T07:31:58.371Z","type":"join"}
{"nick":"orkon","reason":"Quit: Leaving","date":"2019-10-31T07:42:33.633Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-10-31T08:34:43.817Z","type":"quit"}
{"nick":"mgol","date":"2019-10-31T08:49:55.957Z","type":"join"}
{"nick":"kriskropd","reason":"Ping timeout: 264 seconds","date":"2019-10-31T10:05:28.136Z","type":"quit"}
{"nick":"kriskropd","date":"2019-10-31T10:06:37.480Z","type":"join"}
{"nick":"orkon","date":"2019-10-31T11:32:27.205Z","type":"join"}
{"nick":"orkon","message":"Hi, I have opened my first PR to Node and I'd appreciate any feedback on it https://github.com/nodejs/node/pull/30184","date":"2019-10-31T11:34:23.717Z","type":"message"}
{"nick":"orkon","reason":"Quit: Leaving","date":"2019-10-31T11:38:01.845Z","type":"quit"}
{"nick":"orkon","date":"2019-10-31T11:38:26.667Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-10-31T12:14:15.569Z","type":"quit"}
{"nick":"mgol","date":"2019-10-31T12:15:06.049Z","type":"join"}
{"nick":"zsoc","reason":"Read error: Connection reset by peer","date":"2019-10-31T12:37:09.013Z","type":"quit"}
{"nick":"zsoc","date":"2019-10-31T12:37:41.701Z","type":"join"}
{"nick":"addaleax","message":"orkon: If there’s nobody reviewing it by next week, feel free to ping me on it … in the meantime, I’ll kick off CI and benchmarks for you","date":"2019-10-31T12:55:31.511Z","type":"message"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-10-31T13:00:22.227Z","type":"quit"}
{"nick":"mgol","date":"2019-10-31T13:01:43.163Z","type":"join"}
{"nick":"antsmartian","date":"2019-10-31T13:23:02.739Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 276 seconds","date":"2019-10-31T13:36:11.599Z","type":"quit"}
{"nick":"antsmartian","reason":"Read error: Connection reset by peer","date":"2019-10-31T13:41:57.508Z","type":"quit"}
{"nick":"antsmartian","date":"2019-10-31T13:43:07.703Z","type":"join"}
{"nick":"antsmartian","reason":"Read error: Connection reset by peer","date":"2019-10-31T13:44:19.491Z","type":"quit"}
{"nick":"antsmartian","date":"2019-10-31T13:44:54.670Z","type":"join"}
{"nick":"lundibundi","date":"2019-10-31T13:44:56.692Z","type":"join"}
{"nick":"antsmartian","reason":"Read error: Connection reset by peer","date":"2019-10-31T13:51:06.840Z","type":"quit"}
{"nick":"antsmartian","date":"2019-10-31T13:51:33.154Z","type":"join"}
{"nick":"AbedB__","reason":"Remote host closed the connection","date":"2019-10-31T13:58:59.406Z","type":"quit"}
{"nick":"AbedB__","date":"2019-10-31T13:59:28.192Z","type":"join"}
{"nick":"XhmikosR","reason":"Ping timeout: 276 seconds","date":"2019-10-31T14:05:26.658Z","type":"quit"}
{"nick":"antsmartian","reason":"Ping timeout: 240 seconds","date":"2019-10-31T14:05:39.011Z","type":"quit"}
{"nick":"XhmikosR","date":"2019-10-31T14:06:34.147Z","type":"join"}
{"nick":"antsmartian","date":"2019-10-31T14:07:29.238Z","type":"join"}
{"nick":"antsmartian","reason":"Read error: Connection reset by peer","date":"2019-10-31T14:21:39.552Z","type":"quit"}
{"nick":"antsmartian","date":"2019-10-31T14:22:10.743Z","type":"join"}
{"nick":"octetcloud","date":"2019-10-31T14:41:11.981Z","type":"join"}
{"nick":"AbedB__","reason":"Read error: Connection reset by peer","date":"2019-10-31T14:59:27.718Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 268 seconds","date":"2019-10-31T15:05:13.601Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-10-31T15:27:52.607Z","type":"quit"}
{"nick":"ricson","date":"2019-10-31T15:28:03.098Z","type":"join"}
{"nick":"mgol","date":"2019-10-31T15:29:04.908Z","type":"join"}
{"nick":"lundibundi","date":"2019-10-31T15:35:18.254Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-10-31T15:42:38.374Z","type":"quit"}
{"nick":"AbedB","date":"2019-10-31T15:55:00.414Z","type":"join"}
{"nick":"orkon","message":"addaleax: thanks, I saw that the tests failed. I will try to take a look soon. Currently, I cannot do it because the Node.js jenkins app requires the access to a private org I am a member of (which I cannot grant)","date":"2019-10-31T15:55:22.727Z","type":"message"}
{"nick":"addaleax","message":"orkon: Reading the Jenkins result should not require any special privileges, e.g. you should be able to see https://ci.nodejs.org/job/node-test-commit-linuxone/16539/nodes=rhel72-s390x/testReport/junit/(root)/test/async_hooks_test_graph_http/","date":"2019-10-31T16:00:30.694Z","type":"message"}
{"nick":"AtumT","date":"2019-10-31T16:05:55.599Z","type":"join"}
{"nick":"orkon","reason":"Ping timeout: 252 seconds","date":"2019-10-31T16:11:42.106Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-10-31T16:33:27.635Z","type":"quit"}
{"nick":"mgol","date":"2019-10-31T16:34:28.601Z","type":"join"}
{"nick":"lpin","date":"2019-10-31T16:56:28.430Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 264 seconds","date":"2019-10-31T17:22:16.129Z","type":"quit"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-10-31T17:28:28.301Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-31T17:45:05.692Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-10-31T17:45:24.570Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-10-31T17:49:53.852Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 268 seconds","date":"2019-10-31T18:30:34.603Z","type":"quit"}
{"nick":"lundibundi","date":"2019-10-31T18:42:00.177Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 264 seconds","date":"2019-10-31T18:50:28.079Z","type":"quit"}
{"nick":"mgol","date":"2019-10-31T18:51:11.503Z","type":"join"}
{"nick":"lundibundi","date":"2019-10-31T18:52:11.805Z","type":"join"}
{"nick":"mgol","reason":"Ping timeout: 276 seconds","date":"2019-10-31T18:56:38.673Z","type":"quit"}
{"nick":"mgol","date":"2019-10-31T19:02:12.917Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-10-31T19:04:47.927Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 276 seconds","date":"2019-10-31T19:47:59.645Z","type":"quit"}
{"nick":"devsnek","message":"addaleax: it looks to me like the web clears kept objects at the end of running microtasks","date":"2019-10-31T20:24:34.771Z","type":"message"}
{"nick":"addaleax","message":"devsnek: yes, but the JS calls for finalization groups are scheduled as tasks","date":"2019-10-31T20:33:24.818Z","type":"message"}
{"nick":"addaleax","message":"I can open a PR if you like","date":"2019-10-31T20:33:28.775Z","type":"message"}
{"nick":"devsnek","message":"addaleax: if they run separately from microtasks then that's what they currently do","date":"2019-10-31T20:35:22.227Z","type":"message"}
{"nick":"addaleax","message":"devsnek: …?","date":"2019-10-31T20:35:39.963Z","type":"message"}
{"nick":"addaleax","message":"not sure what you’re saying","date":"2019-10-31T20:35:44.439Z","type":"message"}
{"nick":"devsnek","message":"I don't understand what the third option here is","date":"2019-10-31T20:35:50.297Z","type":"message"}
{"nick":"devsnek","message":"either it's scheduled as a microtask or its scheduled to run separately from microtasks","date":"2019-10-31T20:36:09.197Z","type":"message"}
{"nick":"addaleax","message":"right now it’s not scheduling a task at all","date":"2019-10-31T20:36:21.180Z","type":"message"}
{"nick":"devsnek","message":"we currently have the latter","date":"2019-10-31T20:36:30.201Z","type":"message"}
{"nick":"addaleax","message":"like, it’s waiting for the next time that JS is executed","date":"2019-10-31T20:36:35.458Z","type":"message"}
{"nick":"devsnek","message":"I have a pr for the former","date":"2019-10-31T20:36:36.196Z","type":"message"}
{"nick":"devsnek","message":"no it's doing it before the next time that js runs","date":"2019-10-31T20:36:55.453Z","type":"message"}
{"nick":"devsnek","message":"it does it at the beginning of the  space between ticks","date":"2019-10-31T20:37:14.601Z","type":"message"}
{"nick":"addaleax","message":"let me check","date":"2019-10-31T20:38:38.250Z","type":"message"}
{"nick":"addaleax","message":"sorry but no","date":"2019-10-31T20:38:50.546Z","type":"message"}
{"nick":"addaleax","message":"it does not do anything before JS execution, only after","date":"2019-10-31T20:39:11.371Z","type":"message"}
{"nick":"addaleax","message":"and it does wait for JS execution","date":"2019-10-31T20:39:16.216Z","type":"message"}
{"nick":"devsnek","message":"right, it does it at the end of running queued tasks/microtasks","date":"2019-10-31T20:39:37.682Z","type":"message"}
{"nick":"lundibundi","date":"2019-10-31T20:39:44.569Z","type":"join"}
{"nick":"devsnek","message":"that's the beginning of the space between ticks","date":"2019-10-31T20:39:47.530Z","type":"message"}
{"nick":"addaleax","message":"yes, but if no JS runs, nothing happens","date":"2019-10-31T20:40:50.499Z","type":"message"}
{"nick":"addaleax","message":"I feel like we keep having the same discussion :D","date":"2019-10-31T20:41:07.716Z","type":"message"}
{"nick":"devsnek","message":"I don't understand what your distinction is","date":"2019-10-31T20:41:17.774Z","type":"message"}
{"nick":"devsnek","message":"if no js runs, nothing about the heap changes","date":"2019-10-31T20:41:27.822Z","type":"message"}
{"nick":"addaleax","message":"that’s not true … real-world GC is usually implemented as a background task","date":"2019-10-31T20:41:47.619Z","type":"message"}
{"nick":"addaleax","message":"our `global.gc()` for tests is the exception there, not the rule","date":"2019-10-31T20:42:11.900Z","type":"message"}
{"nick":"devsnek","message":"right, but we can't schedule these as background tasks","date":"2019-10-31T20:42:12.126Z","type":"message"}
{"nick":"addaleax","message":"no but we can schedule them as regular tasks on the event loop","date":"2019-10-31T20:42:22.473Z","type":"message"}
{"nick":"devsnek","message":"that's what my pr does","date":"2019-10-31T20:42:31.960Z","type":"message"}
{"nick":"addaleax","message":"no","date":"2019-10-31T20:42:43.993Z","type":"message"}
{"nick":"devsnek","message":"no?","date":"2019-10-31T20:42:47.414Z","type":"message"}
{"nick":"addaleax","message":"it schedules a microtask","date":"2019-10-31T20:42:48.523Z","type":"message"}
{"nick":"addaleax","message":"that also doesn’t run until JS executes, right?","date":"2019-10-31T20:42:58.496Z","type":"message"}
{"nick":"devsnek","message":"microtasks and uv tasks are run at the same time","date":"2019-10-31T20:43:30.337Z","type":"message"}
{"nick":"devsnek","message":"well","date":"2019-10-31T20:43:32.238Z","type":"message"}
{"nick":"devsnek","message":"iirc we run uv tasks first","date":"2019-10-31T20:43:39.209Z","type":"message"}
{"nick":"devsnek","message":"I'd have to double check","date":"2019-10-31T20:43:44.305Z","type":"message"}
{"nick":"addaleax","message":"they aren’t related besides that if a libuv task runs JS then we’ll run the microtask queue afterwards","date":"2019-10-31T20:44:18.044Z","type":"message"}
{"nick":"addaleax","message":"scheduling a microtask does not affect the event loop","date":"2019-10-31T20:44:25.667Z","type":"message"}
{"nick":"devsnek","message":"I consider microtasks part of the event loop","date":"2019-10-31T20:44:50.012Z","type":"message"}
{"nick":"devsnek","message":"is that where we disagree here lol","date":"2019-10-31T20:44:55.655Z","type":"message"}
{"nick":"addaleax","message":"maybe?","date":"2019-10-31T20:45:26.257Z","type":"message"}
{"nick":"addaleax","message":"it would explain why we’re disagreeing, yes :D","date":"2019-10-31T20:45:34.680Z","type":"message"}
{"nick":"devsnek","message":"like as far as I know they should always be run at the same time","date":"2019-10-31T20:45:43.472Z","type":"message"}
{"nick":"devsnek","message":"just two different lists","date":"2019-10-31T20:45:48.293Z","type":"message"}
{"nick":"addaleax","message":"like … what in our code would run the microtask queue for that to happen?","date":"2019-10-31T20:46:55.691Z","type":"message"}
{"nick":"devsnek","message":"Microtasks::PerformCheckpoint","date":"2019-10-31T20:47:18.441Z","type":"message"}
{"nick":"devsnek","message":"or whatever it's called","date":"2019-10-31T20:47:21.495Z","type":"message"}
{"nick":"devsnek","message":"we have to explicitly run them","date":"2019-10-31T20:47:48.805Z","type":"message"}
{"nick":"addaleax","message":"yes, but libuv tasks don’t lead to that being called","date":"2019-10-31T20:48:03.159Z","type":"message"}
{"nick":"addaleax","message":"unless we run JS inside them","date":"2019-10-31T20:48:10.895Z","type":"message"}
{"nick":"devsnek","message":"tasks themselves don't run it","date":"2019-10-31T20:48:46.503Z","type":"message"}
{"nick":"addaleax","message":"how do you mean?","date":"2019-10-31T20:48:55.212Z","type":"message"}
{"nick":"devsnek","message":"but we run microtasks after running uv tasks","date":"2019-10-31T20:48:57.752Z","type":"message"}
{"nick":"devsnek","message":"I think this is in CallbackScope::Close","date":"2019-10-31T20:49:15.269Z","type":"message"}
{"nick":"addaleax","message":"those are only for uv tasks if they do run JS, and the code in your PR doesn’t contain anything to make that happen","date":"2019-10-31T20:50:11.169Z","type":"message"}
{"nick":"devsnek","message":"we used to have a while loop somewhere","date":"2019-10-31T20:50:57.084Z","type":"message"}
{"nick":"devsnek","message":"it called uv_run and then it called isolate->RunMicrotasks","date":"2019-10-31T20:51:12.567Z","type":"message"}
{"nick":"addaleax","message":"okay… but even if that still existed, what would make uv_run break out from its loop?","date":"2019-10-31T20:51:39.410Z","type":"message"}
{"nick":"devsnek","message":"I don't remember the exact logic","date":"2019-10-31T20:52:19.664Z","type":"message"}
{"nick":"devsnek","message":"but assuming we have the same behaviour","date":"2019-10-31T20:52:24.798Z","type":"message"}
{"nick":"devsnek","message":"since that timing is important","date":"2019-10-31T20:52:30.763Z","type":"message"}
{"nick":"devsnek","message":"I don't understand why microtasks would be the wrong thing to use here","date":"2019-10-31T20:52:42.775Z","type":"message"}
{"nick":"addaleax","message":"yeah, I don’t think there were any behaviour changes in relative timing","date":"2019-10-31T20:52:49.190Z","type":"message"}
{"nick":"addaleax","message":"because scheduling one doesn’t affect the event loop","date":"2019-10-31T20:53:02.233Z","type":"message"}
{"nick":"devsnek","message":"they're run every time uv_run returns as far as I know","date":"2019-10-31T20:53:32.589Z","type":"message"}
{"nick":"addaleax","message":"I’d put together a test case but I’m not sure how reliably we can trigger a regular GC","date":"2019-10-31T20:53:35.305Z","type":"message"}
{"nick":"addaleax","message":"devsnek: libuv doesn’t know about them and doesn’t run them","date":"2019-10-31T20:53:51.821Z","type":"message"}
{"nick":"devsnek","message":"yeah but node runs rhem","date":"2019-10-31T20:54:06.676Z","type":"message"}
{"nick":"devsnek","message":"and all we can do is tell V8 to collect garbage it's already marked","date":"2019-10-31T20:54:31.173Z","type":"message"}
{"nick":"devsnek","message":"I could take a look at the gc tests a bit later and see if we can use some internal APIs or something","date":"2019-10-31T20:55:32.073Z","type":"message"}
{"nick":"addaleax","message":"devsnek: ok, let me try to understand you better … how does the call stack look for you when a microtask scheduled from a GC executes? like, there’s `PerformCheckpoint()` or `RunMicrotasks()` somewhere, but what calls them, and what in turn calls that, etc.?","date":"2019-10-31T20:55:55.069Z","type":"message"}
{"nick":"addaleax","message":"like","date":"2019-10-31T20:56:06.204Z","type":"message"}
{"nick":"devsnek","message":"the gc calls our finalization callback","date":"2019-10-31T20:56:30.607Z","type":"message"}
{"nick":"addaleax","message":"what is the thing that makes libuv call a callback","date":"2019-10-31T20:56:30.720Z","type":"message"}
{"nick":"devsnek","message":"we schedule a microtask","date":"2019-10-31T20:56:35.810Z","type":"message"}
{"nick":"devsnek","message":"something causes our io and timer and nextTick callbacks to run","date":"2019-10-31T20:57:20.103Z","type":"message"}
{"nick":"devsnek","message":"and right after that, the microtasks run","date":"2019-10-31T20:57:25.172Z","type":"message"}
{"nick":"devsnek","message":"I'm mobile rn so I don't have the code, but that's the behaviour","date":"2019-10-31T20:57:44.000Z","type":"message"}
{"nick":"addaleax","message":"okay, but what if there’s no I/O happening and no timers running?","date":"2019-10-31T20:58:01.560Z","type":"message"}
{"nick":"addaleax","message":"the current code (or the microtask version) would delay that until there is JS to run","date":"2019-10-31T20:58:21.022Z","type":"message"}
{"nick":"devsnek","message":"programs with just microtasks still run","date":"2019-10-31T20:58:21.135Z","type":"message"}
{"nick":"devsnek","message":"are you saying like","date":"2019-10-31T20:58:53.543Z","type":"message"}
{"nick":"devsnek","message":"if you have a server","date":"2019-10-31T20:58:56.084Z","type":"message"}
{"nick":"addaleax","message":"but … why would they do that? how would libuv know that there are microtasks scheduled?","date":"2019-10-31T20:58:56.424Z","type":"message"}
{"nick":"devsnek","message":"and it gets a request every 10 minutes","date":"2019-10-31T20:59:01.604Z","type":"message"}
{"nick":"devsnek","message":"that microtasks only happen every 10 minutes?","date":"2019-10-31T20:59:10.309Z","type":"message"}
{"nick":"addaleax","message":"yes","date":"2019-10-31T21:00:05.210Z","type":"message"}
{"nick":"addaleax","message":"that is what I’m saying","date":"2019-10-31T21:00:08.484Z","type":"message"}
{"nick":"devsnek","message":"i just don't understand why the other tasks wouldn't happen every ten minutes as well","date":"2019-10-31T21:00:08.624Z","type":"message"}
{"nick":"addaleax","message":"what other tasks do you mean?","date":"2019-10-31T21:00:37.480Z","type":"message"}
{"nick":"devsnek","message":"like manually scheduling a uv task","date":"2019-10-31T21:00:50.246Z","type":"message"}
{"nick":"devsnek","message":"what you're suggesting","date":"2019-10-31T21:00:54.466Z","type":"message"}
{"nick":"addaleax","message":"because calling uv_async_send() will wake up a sleeping event loop in order for the uv_async’s callback to be called","date":"2019-10-31T21:01:28.481Z","type":"message"}
{"nick":"devsnek","message":"hmmm","date":"2019-10-31T21:02:41.035Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 265 seconds","date":"2019-10-31T21:03:15.453Z","type":"quit"}
{"nick":"devsnek","message":"so it's basically that uv wouldn't know that there's pending microtask work to do","date":"2019-10-31T21:03:46.031Z","type":"message"}
{"nick":"addaleax","message":"exactly, yes","date":"2019-10-31T21:04:05.458Z","type":"message"}
{"nick":"devsnek","message":"what a strange system we have","date":"2019-10-31T21:05:31.116Z","type":"message"}
{"nick":"addaleax","message":"I’ll try to put together an actual test for this","date":"2019-10-31T21:06:22.857Z","type":"message"}
{"nick":"devsnek","message":"thanks for being patient lol","date":"2019-10-31T21:06:43.019Z","type":"message"}
{"nick":"addaleax","message":"yeah no it’s good to talk this through","date":"2019-10-31T21:07:09.549Z","type":"message"}
{"nick":"addaleax","message":"you definitely got me doubting myself enough to really really want to put together an actual test case :D","date":"2019-10-31T21:07:23.334Z","type":"message"}
{"nick":"addaleax","message":"but I really wouldn’t know how libuv could know about microtasks","date":"2019-10-31T21:07:34.846Z","type":"message"}
{"nick":"addaleax","message":"fwiw I haven’t compiled or tested it but this is about what I’d have in mind: https://gist.github.com/addaleax/4ae3e3f67d9e660f0fb6400585f20f4f","date":"2019-10-31T21:08:57.341Z","type":"message"}
{"nick":"devsnek","message":"interesting","date":"2019-10-31T21:09:39.682Z","type":"message"}
{"nick":"addaleax","message":"I am confused","date":"2019-10-31T21:19:19.891Z","type":"message"}
{"nick":"devsnek","message":"about that diff?","date":"2019-10-31T21:20:12.560Z","type":"message"}
{"nick":"addaleax","message":"Yeah no already solved it for me","date":"2019-10-31T21:20:22.152Z","type":"message"}
{"nick":"addaleax","message":"i think","date":"2019-10-31T21:20:31.404Z","type":"message"}
{"nick":"addaleax","message":"devsnek: in your base test case, test-finalization-group.js … it seems like `g.cleanupSome()` is not necessary, but keeping a reference to `g` *is*, and that’s why that line is currently necessary … is that right?","date":"2019-10-31T21:21:29.151Z","type":"message"}
{"nick":"addaleax","message":"like, if I removed the line, the test fails and `HostCleanupFinalizationGroupCallback()` isn’t called, but if I change it to just `g;`, the test passes","date":"2019-10-31T21:22:01.927Z","type":"message"}
{"nick":"devsnek","message":"it's supposed to be called twice","date":"2019-10-31T21:22:26.760Z","type":"message"}
{"nick":"devsnek","message":"once from cleanupSome and once from our callback","date":"2019-10-31T21:22:38.516Z","type":"message"}
{"nick":"devsnek","message":"that's why it's 2 in the mustCall","date":"2019-10-31T21:22:44.370Z","type":"message"}
{"nick":"addaleax","message":"devsnek: the test says `common.mustCallAtLeast(1)`…?","date":"2019-10-31T21:23:33.099Z","type":"message"}
{"nick":"devsnek","message":"oh","date":"2019-10-31T21:23:38.093Z","type":"message"}
{"nick":"devsnek","message":"oops","date":"2019-10-31T21:23:40.163Z","type":"message"}
{"nick":"addaleax","message":"but okay, yes, that makes sense","date":"2019-10-31T21:24:04.604Z","type":"message"}
{"nick":"addaleax","message":"I think it should be `mustCall(2)`","date":"2019-10-31T21:24:14.828Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2019-10-31T21:24:31.974Z","type":"message"}
{"nick":"devsnek","message":"I'm glad this is still flagged","date":"2019-10-31T21:24:55.808Z","type":"message"}
{"nick":"addaleax","message":"yes","date":"2019-10-31T21:25:18.618Z","type":"message"}
{"nick":"addaleax","message":"oh wait","date":"2019-10-31T21:25:34.303Z","type":"message"}
{"nick":"addaleax","message":"I think I just noticed something","date":"2019-10-31T21:25:43.351Z","type":"message"}
{"nick":"addaleax","message":"maybe what I’m suggesting *is* unnecessary and the code is actually just fine as it is","date":"2019-10-31T21:26:12.083Z","type":"message"}
{"nick":"devsnek","message":"yeah I have no idea at this point","date":"2019-10-31T21:26:39.723Z","type":"message"}
{"nick":"addaleax","message":"but I’m not sure yet, I’ll have to build a debug build of Node.js to be sure, I think","date":"2019-10-31T21:26:49.382Z","type":"message"}
{"nick":"devsnek","message":"oh","date":"2019-10-31T21:27:01.753Z","type":"message"}
{"nick":"addaleax","message":"in any case there’s a bug though","date":"2019-10-31T21:27:03.962Z","type":"message"}
{"nick":"devsnek","message":"cya in a few days I guess :P","date":"2019-10-31T21:27:10.415Z","type":"message"}
{"nick":"addaleax","message":"and I think we’d still need to take care of a) checking `env->can_call_into_js()` and b) handling errors properly","date":"2019-10-31T21:27:35.113Z","type":"message"}
{"nick":"devsnek","message":"also the missing handlescope","date":"2019-10-31T21:28:01.664Z","type":"message"}
{"nick":"addaleax","message":"yeah, exactly, I’m running into that","date":"2019-10-31T21:28:13.151Z","type":"message"}
{"nick":"devsnek","message":"I think it is currently taking advantage of a scope leak from v8","date":"2019-10-31T21:28:15.365Z","type":"message"}
{"nick":"devsnek","message":"cuz it works sometimes","date":"2019-10-31T21:28:34.873Z","type":"message"}
{"nick":"addaleax","message":"yeah … it’s odd","date":"2019-10-31T21:30:01.287Z","type":"message"}
{"nick":"addaleax","message":"I might have a sufficiently good reproduction of that flakiness","date":"2019-10-31T21:30:30.362Z","type":"message"}
{"nick":"devsnek","message":"that's good to hear","date":"2019-10-31T21:30:43.410Z","type":"message"}
{"nick":"zsoc","reason":"Ping timeout: 250 seconds","date":"2019-10-31T21:36:45.802Z","type":"quit"}
{"nick":"addaleax","message":"devsnek: I think I got it depends on whether GC runs as a platform task or it runs as an interrupt","date":"2019-10-31T21:55:50.767Z","type":"message"}
{"nick":"shree","date":"2019-10-31T21:55:54.600Z","type":"join"}
{"nick":"devsnek","message":"addaleax: wow","date":"2019-10-31T21:56:06.316Z","type":"message"}
{"nick":"addaleax","message":"and this is the HandleScope in question: https://github.com/nodejs/node/blob/db1aab9df6bfad1d1601d474a1f978bedd9382d5/deps/v8/src/heap/heap.cc#L1192","date":"2019-10-31T21:56:28.063Z","type":"message"}
{"nick":"addaleax","message":"or not","date":"2019-10-31T21:57:16.271Z","type":"message"}
{"nick":"addaleax","message":"I think it if comes from an interrupt then `RunWeakRefCleanup()` is called with some HandleScope that we have, sorry","date":"2019-10-31T21:58:53.471Z","type":"message"}
{"nick":"addaleax","message":"I think it’s just whatever `HandleScope` is there around the relevant `MakeCallback` call","date":"2019-10-31T22:00:49.830Z","type":"message"}
{"nick":"zsoc","date":"2019-10-31T22:18:39.551Z","type":"join"}
{"nick":"zsoc","reason":"Changing host","date":"2019-10-31T22:18:39.643Z","type":"quit"}
{"nick":"zsoc","date":"2019-10-31T22:18:39.643Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-10-31T22:19:13.586Z","type":"quit"}
{"nick":"addaleax","message":"devsnek: okay, updated https://gist.github.com/addaleax/4ae3e3f67d9e660f0fb6400585f20f4f to actually work + have a test that reproduces that crash for me","date":"2019-10-31T22:25:04.580Z","type":"message"}
{"nick":"addaleax","message":"although we might want to fix a heap size somehow because that may vary from machine to machine","date":"2019-10-31T22:25:25.867Z","type":"message"}
{"nick":"addaleax","message":"also that million in there is somewhat magic, with half or double the value it doesn’t work","date":"2019-10-31T22:25:55.875Z","type":"message"}
{"nick":"devsnek","message":"if it works it works lol","date":"2019-10-31T22:26:39.101Z","type":"message"}
{"nick":"addaleax","message":"devsnek: also, feel free to leave your PR as-is or use this or whatever you like, the test shouldn’t depend on it as long as the HandleScope is added … the only things that are important to me are the error handling (re-scheduling tasks when one fails) and the `can_call_into_js()` bit","date":"2019-10-31T22:36:14.760Z","type":"message"}
{"nick":"addaleax","message":"I think it’s going to work anyway because both platform foreground tasks and interrupts are almost certainly happening inside a CallbackScope","date":"2019-10-31T22:36:47.695Z","type":"message"}
{"nick":"addaleax","message":"so, like, there isn’t really a *need* to involve libuv, not because it knows about the microtasks but because we run them ourselves from platform tasks if we can","date":"2019-10-31T22:37:50.551Z","type":"message"}
{"nick":"devsnek","message":"yea","date":"2019-10-31T22:38:07.859Z","type":"message"}
{"nick":"devsnek","message":"this reminds me that i need to figure out why microtasks don't call the message handler","date":"2019-10-31T22:38:13.054Z","type":"message"}
