{"nick":"dc13ff","date":"2018-06-18T01:55:12.963Z","type":"join"}
{"nick":"marthinal","date":"2018-06-18T02:10:16.536Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 265 seconds","date":"2018-06-18T02:14:54.365Z","type":"quit"}
{"nick":"JamJam_kid","date":"2018-06-18T03:46:21.940Z","type":"join"}
{"nick":"dc13ff","reason":"Quit: Connection closed for inactivity","date":"2018-06-18T04:04:10.806Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-18T04:39:54.653Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 256 seconds","date":"2018-06-18T04:44:19.388Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-18T04:52:31.913Z","type":"join"}
{"nick":"howdoi","date":"2018-06-18T04:55:21.531Z","type":"join"}
{"nick":"lpin","date":"2018-06-18T05:39:08.296Z","type":"join"}
{"nick":"doodadjs","reason":"Ping timeout: 265 seconds","date":"2018-06-18T06:25:16.377Z","type":"quit"}
{"nick":"JamJam_kid","reason":"Ping timeout: 248 seconds","date":"2018-06-18T06:28:49.420Z","type":"quit"}
{"nick":"tkore\\w","date":"2018-06-18T06:50:50.801Z","type":"join"}
{"nick":"m00dy","date":"2018-06-18T07:33:59.942Z","type":"join"}
{"nick":"BridgeAR1","date":"2018-06-18T07:38:42.367Z","type":"join"}
{"nick":"seishun","date":"2018-06-18T08:17:56.237Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T08:23:04.367Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T08:23:49.832Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T08:24:16.499Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T08:24:28.899Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T08:33:27.957Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T08:34:02.247Z","type":"join"}
{"nick":"m00dy","reason":"Ping timeout: 268 seconds","date":"2018-06-18T08:39:16.719Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T08:42:08.117Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T09:11:40.488Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T09:13:07.916Z","type":"join"}
{"nick":"doodadjs","date":"2018-06-18T09:26:07.013Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T09:26:27.186Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T09:29:35.255Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T09:29:36.957Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T09:29:48.813Z","type":"join"}
{"nick":"doodadjs_","date":"2018-06-18T09:35:32.798Z","type":"join"}
{"nick":"doodadjs","reason":"Ping timeout: 276 seconds","date":"2018-06-18T09:38:44.770Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 276 seconds","date":"2018-06-18T09:48:29.756Z","type":"quit"}
{"nick":"BridgeAR1","reason":"Ping timeout: 245 seconds","date":"2018-06-18T09:52:45.402Z","type":"quit"}
{"nick":"BridgeAR1","date":"2018-06-18T09:55:04.081Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T09:59:45.919Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T10:00:21.101Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T10:01:18.850Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T10:01:31.192Z","type":"join"}
{"nick":"BridgeAR1","reason":"Ping timeout: 276 seconds","date":"2018-06-18T10:15:53.084Z","type":"quit"}
{"nick":"BridgeAR1","date":"2018-06-18T10:16:22.867Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T10:16:47.811Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-06-18T10:25:06.771Z","type":"quit"}
{"nick":"mylesborins","date":"2018-06-18T10:25:37.335Z","type":"join"}
{"nick":"seishun","date":"2018-06-18T10:42:46.100Z","type":"join"}
{"nick":"BridgeAR1","reason":"Ping timeout: 255 seconds","date":"2018-06-18T10:45:53.848Z","type":"quit"}
{"nick":"BridgeAR1","date":"2018-06-18T10:46:41.359Z","type":"join"}
{"nick":"m00dy","date":"2018-06-18T10:54:04.009Z","type":"join"}
{"nick":"tkore\\w","reason":"Read error: Connection reset by peer","date":"2018-06-18T11:15:37.160Z","type":"quit"}
{"nick":"BridgeAR1","reason":"Ping timeout: 245 seconds","date":"2018-06-18T11:49:00.361Z","type":"quit"}
{"nick":"BridgeAR1","date":"2018-06-18T11:51:01.883Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T12:04:37.700Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T12:07:53.811Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-18T12:40:39.963Z","type":"quit"}
{"nick":"Ultrasauce","reason":"Ping timeout: 256 seconds","date":"2018-06-18T12:44:17.492Z","type":"quit"}
{"nick":"Ultrasauce","date":"2018-06-18T12:44:29.754Z","type":"join"}
{"nick":"BridgeAR1","reason":"Ping timeout: 255 seconds","date":"2018-06-18T13:04:29.848Z","type":"quit"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T13:17:37.553Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T13:18:11.345Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 245 seconds","date":"2018-06-18T13:19:00.429Z","type":"quit"}
{"nick":"m00dy","reason":"Ping timeout: 255 seconds","date":"2018-06-18T13:22:29.875Z","type":"quit"}
{"nick":"dc13ff","date":"2018-06-18T13:29:29.648Z","type":"join"}
{"nick":"m00dy","date":"2018-06-18T13:33:37.740Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T13:35:55.099Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T13:36:29.342Z","type":"join"}
{"nick":"m00dy","reason":"Ping timeout: 268 seconds","date":"2018-06-18T13:41:26.727Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-18T13:46:02.537Z","type":"join"}
{"nick":"m00dy","date":"2018-06-18T13:56:09.639Z","type":"join"}
{"nick":"seishun","date":"2018-06-18T14:01:50.528Z","type":"join"}
{"nick":"doodadjs_","reason":"Ping timeout: 256 seconds","date":"2018-06-18T14:11:26.739Z","type":"quit"}
{"nick":"JamJam_kid","date":"2018-06-18T15:01:24.227Z","type":"join"}
{"nick":"lholmquist","reason":"Ping timeout: 276 seconds","date":"2018-06-18T15:10:14.921Z","type":"quit"}
{"nick":"lholmquist","date":"2018-06-18T15:12:42.775Z","type":"join"}
{"nick":"doodadjs_","date":"2018-06-18T15:20:07.769Z","type":"join"}
{"nick":"BridgeAR1","date":"2018-06-18T15:34:29.272Z","type":"join"}
{"nick":"BridgeAR1","reason":"Remote host closed the connection","date":"2018-06-18T15:36:06.399Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-18T15:39:21.234Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-18T15:40:29.670Z","type":"join"}
{"nick":"srl295","date":"2018-06-18T15:41:21.018Z","type":"join"}
{"nick":"joyee","message":"mylesborins targos: is there a place where I can look up when the v10.x release will be?","date":"2018-06-18T16:39:29.530Z","type":"message"}
{"nick":"joyee","message":"mylesborins targos: I am on a call about temporal and just noticed something that I should fixup before the bigint support of fs.Stats gets out","date":"2018-06-18T16:42:11.221Z","type":"message"}
{"nick":"dc13ff","reason":"Quit: Connection closed for inactivity","date":"2018-06-18T16:48:27.328Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-18T16:49:21.911Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-18T16:50:25.626Z","type":"join"}
{"nick":"BridgeAR1","date":"2018-06-18T16:56:10.127Z","type":"join"}
{"nick":"BridgeAR1","reason":"Ping timeout: 264 seconds","date":"2018-06-18T17:08:46.209Z","type":"quit"}
{"nick":"BridgeAR1","date":"2018-06-18T17:09:14.129Z","type":"join"}
{"nick":"BridgeAR1","reason":"Remote host closed the connection","date":"2018-06-18T17:11:33.508Z","type":"quit"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-06-18T17:14:10.960Z","type":"quit"}
{"nick":"AtumT","date":"2018-06-18T17:23:15.430Z","type":"join"}
{"nick":"bradleymeck","message":"@devsnek hah, not sure how that would help code loading, but it certainly is interesting","date":"2018-06-18T17:24:28.595Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: you mean the ml5 thing?","date":"2018-06-18T17:27:53.724Z","type":"message"}
{"nick":"BridgeAR1","date":"2018-06-18T17:28:50.771Z","type":"join"}
{"nick":"devsnek","message":"I'm not positive but I think I was trying to make a joke about people using ml in their loader hooks","date":"2018-06-18T17:28:55.721Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: I'm sure someone will use ML","date":"2018-06-18T17:33:23.524Z","type":"message"}
{"nick":"JamJam_kid","reason":"Remote host closed the connection","date":"2018-06-18T17:41:26.605Z","type":"quit"}
{"nick":"JamJam_kid","date":"2018-06-18T17:41:45.955Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-06-18T17:47:41.030Z","type":"quit"}
{"nick":"al-damiri","date":"2018-06-18T17:59:58.301Z","type":"join"}
{"nick":"m00dy","date":"2018-06-18T18:14:57.269Z","type":"join"}
{"nick":"m00dy","reason":"Ping timeout: 260 seconds","date":"2018-06-18T18:20:10.968Z","type":"quit"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-18T19:03:58.457Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2018-06-18T19:09:06.076Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-06-18T19:09:29.932Z","type":"join"}
{"nick":"BridgeAR1","reason":"Ping timeout: 276 seconds","date":"2018-06-18T19:10:44.773Z","type":"quit"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-06-18T19:12:55.928Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T19:16:27.254Z","type":"join"}
{"nick":"seishun","date":"2018-06-18T19:20:21.685Z","type":"join"}
{"nick":"m00dy","reason":"Ping timeout: 260 seconds","date":"2018-06-18T19:21:25.979Z","type":"quit"}
{"nick":"d10n-work","date":"2018-06-18T19:45:10.281Z","type":"join"}
{"nick":"bradleymeck","message":" /thread threads are hard to debug","date":"2018-06-18T20:01:17.944Z","type":"message"}
{"nick":"devsnek","message":"just have perfect code and you won't need debugging :P","date":"2018-06-18T20:05:52.966Z","type":"message"}
{"nick":"bradleymeck","message":"hah","date":"2018-06-18T20:08:11.168Z","type":"message"}
{"nick":"bradleymeck","message":"I push things in very edge case places, I don't think 0 bugs ever happens","date":"2018-06-18T20:08:35.945Z","type":"message"}
{"nick":"devsnek","message":"addaleax: is this reasonable? https://www.irccloud.com/pastebin/e629Kasa/napi_engine_handle.diff","date":"2018-06-18T20:16:58.634Z","type":"message"}
{"nick":"m00dy","date":"2018-06-18T20:17:36.996Z","type":"join"}
{"nick":"m00dy","reason":"Ping timeout: 240 seconds","date":"2018-06-18T20:22:27.762Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2018-06-18T20:35:11.421Z","type":"quit"}
{"nick":"bradleymeck","message":"mmmm should we add a proof of concept spin lock for threaded loaders? mmmm","date":"2018-06-18T20:47:09.780Z","type":"message"}
{"nick":"bradleymeck","message":"the only reason to allow that would be hooking `require()`","date":"2018-06-18T20:47:24.363Z","type":"message"}
{"nick":"bradleymeck","message":"but we haven't seen too much interest in that","date":"2018-06-18T20:47:31.029Z","type":"message"}
{"nick":"BridgeAR1","date":"2018-06-18T20:58:22.256Z","type":"join"}
{"nick":"marthinal","date":"2018-06-18T21:04:26.547Z","type":"join"}
{"nick":"devsnek","message":"not worth it imo","date":"2018-06-18T21:08:34.973Z","type":"message"}
{"nick":"marthinal","reason":"Ping timeout: 260 seconds","date":"2018-06-18T21:09:20.947Z","type":"quit"}
{"nick":"bradleymeck","message":"Proof of concept doesn't mean we land it though :-/","date":"2018-06-18T21:12:38.212Z","type":"message"}
{"nick":"bradleymeck","message":"the spin lock is pretty simple to setup but I wouldn't show actual integration with `require()` probable","date":"2018-06-18T21:13:01.405Z","type":"message"}
{"nick":"bradleymeck","message":"probably*","date":"2018-06-18T21:13:04.187Z","type":"message"}
{"nick":"bradleymeck","message":"that integration would be hard to design","date":"2018-06-18T21:13:11.173Z","type":"message"}
{"nick":"JamJam_kid","reason":"Ping timeout: 260 seconds","date":"2018-06-18T21:16:21.207Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T21:19:01.136Z","type":"join"}
{"nick":"m00dy","reason":"Ping timeout: 256 seconds","date":"2018-06-18T21:24:56.780Z","type":"quit"}
{"nick":"zeds","date":"2018-06-18T21:26:49.738Z","type":"join"}
{"nick":"zeds","date":"2018-06-18T21:27:09.145Z","type":"part"}
{"nick":"bradleymeck","message":"addaleax: another maybe odd question... is there a way to use .postMessage and tell it that the serialized form can be reused from a previous postMessage?","date":"2018-06-18T21:44:54.728Z","type":"message"}
{"nick":"dc13ff","date":"2018-06-18T21:45:21.626Z","type":"join"}
{"nick":"addaleax","message":"devsnek: i think n-api has a util for that already? but yes, i guess","date":"2018-06-18T21:45:59.613Z","type":"message"}
{"nick":"addaleax","message":"maybe also add a static_assert(sizeof(napi_value) == sizeof(v8::Local<v8::Value>))","date":"2018-06-18T21:46:13.110Z","type":"message"}
{"nick":"devsnek","message":"addaleax: it has an internal one","date":"2018-06-18T21:46:15.942Z","type":"message"}
{"nick":"devsnek","message":"v8impl::v8LocalValueFromJsValue","date":"2018-06-18T21:46:29.487Z","type":"message"}
{"nick":"devsnek","message":"but nothing exposed to users","date":"2018-06-18T21:46:32.896Z","type":"message"}
{"nick":"addaleax","message":"bradleymeck: not really ... what's the use case for that? it sounds like you could get that through v8.(de)serialize too?","date":"2018-06-18T21:47:08.063Z","type":"message"}
{"nick":"bradleymeck","message":"addaleax: i don't think deserialize is as important, i'm testing ESM userland loaders in threads","date":"2018-06-18T21:47:37.360Z","type":"message"}
{"nick":"bradleymeck","message":"if you send a *big* AST down the postMessage it has to wait a ms or 2 to deserialize (or I'm doing things very wrong)","date":"2018-06-18T21:48:02.953Z","type":"message"}
{"nick":"devsnek","message":"you could cache on object equality but there's nothing spec-ish about that","date":"2018-06-18T21:48:48.889Z","type":"message"}
{"nick":"bradleymeck","message":"generally the AST should just be passed along, if it mutates the loader probably needs to completely reserialize/deserialize a new object","date":"2018-06-18T21:49:10.589Z","type":"message"}
{"nick":"bradleymeck","message":"preferably we could get a lazy deserialize step maybe? my struct ~= {key, body, data} where `data` is potentially a very big Object representing an AST","date":"2018-06-18T21:50:02.218Z","type":"message"}
{"nick":"addaleax","message":"bradleymeck: i don’t see why you can’t implement that using v8.(de)serialize","date":"2018-06-18T22:12:40.299Z","type":"message"}
{"nick":"bradleymeck","message":"mmmm this is true","date":"2018-06-18T22:14:17.147Z","type":"message"}
{"nick":"addaleax","message":"port1.on('message', {key, data} => { if (!hasData(key)) storeData(key, v8.deserialize(data); })","date":"2018-06-18T22:14:30.814Z","type":"message"}
{"nick":"addaleax","message":"port2.postMessage({key: …, data: v8.serialize(ast)})","date":"2018-06-18T22:14:30.972Z","type":"message"}
{"nick":"bradleymeck","message":"i think the v8 serialization API is a bit inflexible XD","date":"2018-06-18T22:14:32.880Z","type":"message"}
{"nick":"addaleax","message":"it’s designed to meet the needs of structured clone","date":"2018-06-18T22:15:01.542Z","type":"message"}
{"nick":"bradleymeck","message":"i can try that","date":"2018-06-18T22:15:02.586Z","type":"message"}
{"nick":"bradleymeck","message":"addaleax: but we don't expose a clear way to do host object cloning that I can tell?","date":"2018-06-18T22:15:48.213Z","type":"message"}
{"nick":"devsnek","message":"deserialize(serialize(v))","date":"2018-06-18T22:16:23.786Z","type":"message"}
{"nick":"addaleax","message":"bradleymeck: https://nodejs.org/api/v8.html#v8_serializer_writehostobject_object / https://nodejs.org/api/v8.html#v8_deserializer_readhostobject  ?","date":"2018-06-18T22:16:46.286Z","type":"message"}
{"nick":"bradleymeck","message":"addaleax: how do those... work? I can't make a `class Blob` that uses them?","date":"2018-06-18T22:20:12.451Z","type":"message"}
{"nick":"devsnek","message":"you have to control the encoder and decoder","date":"2018-06-18T22:20:34.267Z","type":"message"}
{"nick":"devsnek","message":"serializer and deserializer*","date":"2018-06-18T22:20:48.872Z","type":"message"}
{"nick":"m00dy","date":"2018-06-18T22:20:53.173Z","type":"join"}
{"nick":"devsnek","message":"i think you need to modify Message::Serialize and Message::Deserialize","date":"2018-06-18T22:21:02.440Z","type":"message"}
{"nick":"bradleymeck","message":"mmmm :(","date":"2018-06-18T22:21:24.752Z","type":"message"}
{"nick":"addaleax","message":"bradleymeck: you can make custom subclasses of v8.Serializer / v8.Deserializer, and implement these methods yourself – they will be called when a host object is encountered in the written value","date":"2018-06-18T22:23:10.945Z","type":"message"}
{"nick":"addaleax","message":"it does give you full control over serializing host objects, if you find a meaningful way to do that","date":"2018-06-18T22:23:25.756Z","type":"message"}
{"nick":"bradleymeck","message":"oh, I'm supposed to overwrite those properties??","date":"2018-06-18T22:24:14.155Z","type":"message"}
{"nick":"bradleymeck","message":"that works","date":"2018-06-18T22:24:22.098Z","type":"message"}
{"nick":"m00dy","reason":"Ping timeout: 260 seconds","date":"2018-06-18T22:25:45.967Z","type":"quit"}
{"nick":"addaleax","message":"yeah, the _ prefix was used to parallel the only similar thing we have (streams)","date":"2018-06-18T22:25:59.994Z","type":"message"}
{"nick":"addaleax","message":"i mean, as a marker for methods supposed to be overridden by the implementation itself","date":"2018-06-18T22:26:21.663Z","type":"message"}
{"nick":"bradleymeck","message":"i get it, still think using _ as a marker to replace things is at odds with convention to use _ for private and seems odd instead of a getter/setter pair","date":"2018-06-18T22:27:47.237Z","type":"message"}
{"nick":"bradleymeck","message":"or a constructor parameter...","date":"2018-06-18T22:27:57.280Z","type":"message"}
{"nick":"addaleax","message":"it’s not like a lot of people would use the custom variants anyway","date":"2018-06-18T22:31:03.452Z","type":"message"}
{"nick":"bradleymeck","message":"XD","date":"2018-06-18T22:31:20.340Z","type":"message"}
{"nick":"BridgeAR1","reason":"Ping timeout: 256 seconds","date":"2018-06-18T23:01:08.262Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-18T23:22:03.964Z","type":"join"}
{"nick":"m00dy","reason":"Ping timeout: 240 seconds","date":"2018-06-18T23:26:57.743Z","type":"quit"}
{"nick":"doodadjs_","reason":"Ping timeout: 256 seconds","date":"2018-06-18T23:38:06.775Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-06-18T23:40:36.117Z","type":"quit"}
