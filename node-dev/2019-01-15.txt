{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-15T00:01:45.249Z","type":"quit"}
{"nick":"joyee","message":"And if safe_globals is executed before loaders.js then I am pretty certain that the point right after the execution of safe_globals is somewhere a snapshot can be taken - if safe_globals stays environment-independent","date":"2019-01-15T00:02:13.634Z","type":"message"}
{"nick":"joyee","message":"loaders.js on the other hand still depends on CLI flags and environment variables in its evaluation.","date":"2019-01-15T00:03:16.595Z","type":"message"}
{"nick":"joyee","message":"So with it's current shape we cannot snapshot after loaders.js - that'd be a bogus snapshot that can crash if not loaded in the same environment as the one where it's built","date":"2019-01-15T00:04:31.647Z","type":"message"}
{"nick":"joyee","message":"(But maybe I am still too optimistic because the construction of process object itself, that happens before all that, is already environment dependent)","date":"2019-01-15T00:08:34.903Z","type":"message"}
{"nick":"zeds","date":"2019-01-15T00:15:10.202Z","type":"join"}
{"nick":"zeds","date":"2019-01-15T00:15:17.178Z","type":"part"}
{"nick":"dbevenius","date":"2019-01-15T00:25:56.779Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-01-15T00:30:36.840Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 268 seconds","date":"2019-01-15T00:31:58.261Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T01:28:55.837Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-15T01:33:43.857Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T01:46:01.041Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-01-15T01:50:18.082Z","type":"quit"}
{"nick":"bradleymeck","message":"joyee: SnapshotCreator can contain codegen","date":"2019-01-15T01:59:13.741Z","type":"message"}
{"nick":"bradleymeck","message":"i don't think that is safe to use cross arch, but it should be safe per build","date":"2019-01-15T01:59:43.608Z","type":"message"}
{"nick":"bradleymeck","message":"https://github.com/v8/v8/blob/master/include/v8.h#L8590 v8::SnapshotCreator::FunctionCodeHandling::kKeep","date":"2019-01-15T02:01:13.024Z","type":"message"}
{"nick":"bradleymeck","message":"one of the big things with that is that you can prewarm your JIT","date":"2019-01-15T02:01:33.321Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: that's separate, there simply  isn't a point snapshotting bootstrapping code other than the modules that will also be executed later.","date":"2019-01-15T02:03:27.468Z","type":"message"}
{"nick":"bradleymeck","message":"last i did a benchmark it was significant if you prewarmed things for apps at least","date":"2019-01-15T02:04:29.823Z","type":"message"}
{"nick":"bradleymeck","message":"i couldn't ever get node.js to be snapshot properly","date":"2019-01-15T02:04:42.751Z","type":"message"}
{"nick":"joyee","message":"Why? the bootstrap code should be GC'd after bootstrap","date":"2019-01-15T02:04:57.086Z","type":"message"}
{"nick":"bradleymeck","message":"but the point is that code can be contained, I was confused why you said it couldnt","date":"2019-01-15T02:05:07.984Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: because persistent refs to functions stay warmed with their inline caches","date":"2019-01-15T02:05:23.830Z","type":"message"}
{"nick":"bradleymeck","message":"otherwise it drops back and completely does a 1st pass codegen","date":"2019-01-15T02:06:00.221Z","type":"message"}
{"nick":"bradleymeck","message":"and then has to rewarm","date":"2019-01-15T02:06:07.008Z","type":"message"}
{"nick":"devsnek","message":"y'all have the craziest convos these days","date":"2019-01-15T02:06:58.613Z","type":"message"}
{"nick":"dbevenius","date":"2019-01-15T02:07:01.552Z","type":"join"}
{"nick":"joyee","message":"That's not the bootstrap functions, but the closures that are the results of execution of the functions, though I don't think it hurts - you'd need to pay the cost of warming it up without snapshots anyway","date":"2019-01-15T02:08:22.709Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: for ones that are never called, sure","date":"2019-01-15T02:09:46.550Z","type":"message"}
{"nick":"bradleymeck","message":"the point is to call as much as you can then get to a point where snapshotting is ok","date":"2019-01-15T02:10:07.191Z","type":"message"}
{"nick":"bradleymeck","message":"node isn't in a great position for this currently","date":"2019-01-15T02:10:14.778Z","type":"message"}
{"nick":"bradleymeck","message":"but moving more towards treating snapshots as only for data instead of codegen seems to be very limited","date":"2019-01-15T02:10:36.812Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-15T02:11:07.345Z","type":"quit"}
{"nick":"joyee","message":"In my brain data contains code","date":"2019-01-15T02:11:09.057Z","type":"message"}
{"nick":"joyee","message":"Or to say, code is a subset","date":"2019-01-15T02:11:20.063Z","type":"message"}
{"nick":"joyee","message":"They are part of the heap","date":"2019-01-15T02:11:26.549Z","type":"message"}
{"nick":"bradleymeck","message":"not if you use kClear","date":"2019-01-15T02:11:33.649Z","type":"message"}
{"nick":"bradleymeck","message":"anyways, we can certainly keep our globals thing to a new thing only compiled from C++ before the snapshot","date":"2019-01-15T02:12:38.969Z","type":"message"}
{"nick":"joyee","message":"Optional subset is still a subset ;)","date":"2019-01-15T02:13:41.711Z","type":"message"}
{"nick":"joyee","message":"That's what I attempted once to do in per_context.js but I couldn't because","date":"2019-01-15T02:14:45.333Z","type":"message"}
{"nick":"joyee","message":"per_context.js is part of the embdder API","date":"2019-01-15T02:14:54.023Z","type":"message"}
{"nick":"joyee","message":"So you can't really return anything, or to store anything","date":"2019-01-15T02:15:30.471Z","type":"message"}
{"nick":"bradleymeck","message":"if the subset is never intersecting the set, it isn't really a subset","date":"2019-01-15T02:16:07.526Z","type":"message"}
{"nick":"joyee","message":"(Maybe you can by adding another embedder field in the context but I don't think it's worth it)","date":"2019-01-15T02:16:08.473Z","type":"message"}
{"nick":"joyee","message":"If you look at the set dynamically, it's always a subset","date":"2019-01-15T02:17:42.135Z","type":"message"}
{"nick":"bradleymeck","message":"i don't agree in realistic terms~","date":"2019-01-15T02:18:08.074Z","type":"message"}
{"nick":"devsnek","message":"per_context is node internals","date":"2019-01-15T02:18:32.703Z","type":"message"}
{"nick":"bradleymeck","message":"but disagreeing doesn't really affect this stuff","date":"2019-01-15T02:18:41.961Z","type":"message"}
{"nick":"joyee","message":"devsnek: but it's part of the embedder contract","date":"2019-01-15T02:19:23.433Z","type":"message"}
{"nick":"devsnek","message":"you've lost me","date":"2019-01-15T02:19:34.822Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: out of curiosity what do you use \"~\" to mean","date":"2019-01-15T02:20:25.228Z","type":"message"}
{"nick":"joyee","message":"If you return something from per_context.js, you can't really store it and get it back out later other than store a field in the context","date":"2019-01-15T02:20:36.279Z","type":"message"}
{"nick":"joyee","message":"Which is visible to the embedder so it's not really an internal","date":"2019-01-15T02:20:50.917Z","type":"message"}
{"nick":"devsnek","message":"oh for getting a reference to the iife?","date":"2019-01-15T02:21:09.160Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: that the discussion could go either way, in actual voice my words would go up and down in pitch most likely around that","date":"2019-01-15T02:21:18.955Z","type":"message"}
{"nick":"joyee","message":"`NewContext` is embedder API","date":"2019-01-15T02:21:23.004Z","type":"message"}
{"nick":"joyee","message":"devsnek: for getting a reference directly to something created in per_context.js","date":"2019-01-15T02:21:41.525Z","type":"message"}
{"nick":"joyee","message":"(Instead of through...global, then you'd be poluting it for embedders)","date":"2019-01-15T02:22:22.900Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: you could always hide some number of things if you could control the actual calling of v8 couldn't you","date":"2019-01-15T02:24:21.993Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: what do you mean by actual calling of v8?","date":"2019-01-15T02:24:50.962Z","type":"message"}
{"nick":"joyee","message":"Also v8 is not controlled by us in the embedder API","date":"2019-01-15T02:25:18.814Z","type":"message"}
{"nick":"bradleymeck","message":"well if we don't control v8 it doesn't matter, but you can make funky views of globals","date":"2019-01-15T02:26:56.986Z","type":"message"}
{"nick":"dbevenius","date":"2019-01-15T02:27:01.590Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-01-15T02:31:07.344Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T02:55:59.337Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-15T03:00:40.784Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T03:17:46.178Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-15T03:22:47.284Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T03:37:05.096Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-01-15T03:41:36.145Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T04:11:54.393Z","type":"join"}
{"nick":"dbeveniu_","date":"2019-01-15T04:43:10.180Z","type":"join"}
{"nick":"dbevenius","reason":"Read error: Connection reset by peer","date":"2019-01-15T04:43:10.290Z","type":"quit"}
{"nick":"dbeveniu_","reason":"Remote host closed the connection","date":"2019-01-15T06:17:34.761Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T06:19:56.220Z","type":"join"}
{"nick":"lpin","date":"2019-01-15T06:24:55.281Z","type":"join"}
{"nick":"lundibundi","date":"2019-01-15T06:30:55.977Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 272 seconds","date":"2019-01-15T06:49:54.813Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2019-01-15T08:17:46.691Z","type":"quit"}
{"nick":"seishun","date":"2019-01-15T09:04:09.903Z","type":"join"}
{"nick":"gamelaster","date":"2019-01-15T09:38:19.172Z","type":"join"}
{"nick":"joaocgreis","reason":"Ping timeout: 264 seconds","date":"2019-01-15T09:40:16.176Z","type":"quit"}
{"nick":"parshap____","reason":"Ping timeout: 264 seconds","date":"2019-01-15T09:40:16.177Z","type":"quit"}
{"nick":"joaocgreis","date":"2019-01-15T09:40:28.904Z","type":"join"}
{"nick":"parshap____","date":"2019-01-15T09:41:53.990Z","type":"join"}
{"nick":"lundibundi","date":"2019-01-15T10:03:21.304Z","type":"join"}
{"nick":"mgol","date":"2019-01-15T10:11:57.350Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 268 seconds","date":"2019-01-15T10:27:40.211Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 258 seconds","date":"2019-01-15T10:44:25.252Z","type":"quit"}
{"nick":"svennidal","date":"2019-01-15T11:02:40.412Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-01-15T11:06:36.188Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-15T11:13:56.321Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-15T11:16:08.410Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-01-15T11:20:55.944Z","type":"quit"}
{"nick":"seishun","date":"2019-01-15T11:32:00.983Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-15T11:32:21.405Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 258 seconds","date":"2019-01-15T11:51:30.112Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-15T12:30:08.256Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 268 seconds","date":"2019-01-15T12:51:58.204Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-01-15T13:03:41.440Z","type":"quit"}
{"nick":"al-damiri","date":"2019-01-15T13:17:40.906Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2019-01-15T13:25:07.330Z","type":"quit"}
{"nick":"seishun","date":"2019-01-15T13:27:57.283Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 246 seconds","date":"2019-01-15T14:08:55.376Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-15T14:12:48.290Z","type":"join"}
{"nick":"seishun","date":"2019-01-15T14:21:25.805Z","type":"join"}
{"nick":"bradleymeck","message":"is it possible to run a CI job just to test 1 test w/ debug output via NODE_DEBUG?","date":"2019-01-15T14:24:39.533Z","type":"message"}
{"nick":"bradleymeck","message":"I really just want to run https://ci.nodejs.org/job/node-test-binary-windows/22998/","date":"2019-01-15T14:26:09.745Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: https://ci.nodejs.org/job/node-test-commit-custom-suites-freestyle/build?delay=0sec","date":"2019-01-15T14:27:34.797Z","type":"message"}
{"nick":"joyee","message":"Although it does not provide a way to set the environment variable - you can write a test to fork itself with NODE_DEBUG","date":"2019-01-15T14:28:13.979Z","type":"message"}
{"nick":"joyee","message":"(or add support of customized environment variables in tools/test.py)","date":"2019-01-15T14:29:08.534Z","type":"message"}
{"nick":"bradleymeck","message":"i'm kind of surprised test.py doesn't have NODE_DEBUG flags","date":"2019-01-15T14:32:23.471Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: why? What kind of values would that be?","date":"2019-01-15T14:32:44.864Z","type":"message"}
{"nick":"joyee","message":"It would significantly slow everything if say you add `stream` to that value","date":"2019-01-15T14:33:07.527Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: it wouldn't be on by default, the whole point of that ENV is to debug something that isn't readily visible","date":"2019-01-15T14:33:35.520Z","type":"message"}
{"nick":"bradleymeck","message":"like with policies, I can't tell what is going wrong with windows and don't have a windows machine available right now","date":"2019-01-15T14:33:57.459Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: but the test runner cannot set any NODE_DEBUG flags by default - there is no guarantee about the overhead of that variable at the moment","date":"2019-01-15T14:34:49.884Z","type":"message"}
{"nick":"bradleymeck","message":"I could make a change to my commits just for CI purposes that always logs stuff, but that seems odd","date":"2019-01-15T14:35:03.965Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: if you have to set it in the CI parameters manually it would never be on by default","date":"2019-01-15T14:35:25.055Z","type":"message"}
{"nick":"bradleymeck","message":"so no overhead, just turn on as needed","date":"2019-01-15T14:35:38.105Z","type":"message"}
{"nick":"joyee","message":"I guess it's because most people do not use customized args of tools/test.py, because the custom test suite is new","date":"2019-01-15T14:36:16.851Z","type":"message"}
{"nick":"bradleymeck","message":"i would assume it is only run when something doesn't make sense","date":"2019-01-15T14:37:06.135Z","type":"message"}
{"nick":"joyee","message":"As with many things, the python test runner never gets the love it deserves","date":"2019-01-15T14:37:08.549Z","type":"message"}
{"nick":"bradleymeck","message":"thats true of too many things, eventually you just have to prioritize","date":"2019-01-15T14:39:07.749Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: if you are confused about the status mismatch, maybe just inherit the stdio instead of piping it?","date":"2019-01-15T14:42:16.931Z","type":"message"}
{"nick":"joyee","message":"the test runner would print the stdout and the stderr outputs on failure","date":"2019-01-15T14:42:36.147Z","type":"message"}
{"nick":"bradleymeck","message":"yea, that was the suggestion but I didn't feel like I would want to rerun the whole test suite just for that","date":"2019-01-15T14:42:52.466Z","type":"message"}
{"nick":"bradleymeck","message":"this should work","date":"2019-01-15T14:42:55.664Z","type":"message"}
{"nick":"joyee","message":"if there is a bug in the test or in the implementation on Windows and you have to fix it by pushing new code, then you have to rerun the test suite either ways","date":"2019-01-15T14:43:59.531Z","type":"message"}
{"nick":"joyee","message":"To make sure the fix does not accidentally introduce a bug on other platforms","date":"2019-01-15T14:45:59.131Z","type":"message"}
{"nick":"bradleymeck","message":"yea, but while debugging i don't want to run 1hr worth of test suite for feedback","date":"2019-01-15T14:46:18.657Z","type":"message"}
{"nick":"joyee","message":"But you can use the custom job for that? (although if you use that you have to wait for 1hr for Windows because that's how slow our machines are and they do not build incrementally)","date":"2019-01-15T14:47:21.246Z","type":"message"}
{"nick":"joyee","message":"I vaguely remember someone suggested adding SSH support for our Windows machines but right now there is none...they are controlled with RDP","date":"2019-01-15T14:48:49.631Z","type":"message"}
{"nick":"bradleymeck","message":"fun fun","date":"2019-01-15T14:49:03.602Z","type":"message"}
{"nick":"bradleymeck","message":"but i didn't even know of custom jobs before you mentioned that","date":"2019-01-15T14:49:25.392Z","type":"message"}
{"nick":"bradleymeck","message":"hence I think it \"should work\" (tm)","date":"2019-01-15T14:49:41.812Z","type":"message"}
{"nick":"joyee","message":"I don't actually know if the custom job work on windows machines, the configurations are bash scripts, not batch","date":"2019-01-15T14:52:07.312Z","type":"message"}
{"nick":"bradleymeck","message":"but it looks like custom only runs on ubuntu x64 reading previous things and params","date":"2019-01-15T14:52:12.230Z","type":"message"}
{"nick":"joyee","message":"Right...I guess that's really test-commit-custom-suites-where-bash-can-be-used","date":"2019-01-15T14:53:14.439Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 268 seconds","date":"2019-01-15T15:54:30.244Z","type":"quit"}
{"nick":"bradleymeck","message":"brain hurty but it looks like `new URL('C:/foo', 'file:///C:/win')` is dropping the `file:`","date":"2019-01-15T16:01:15.596Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: yeah that's how the spec works","date":"2019-01-15T16:02:15.157Z","type":"message"}
{"nick":"bradleymeck","message":"yea","date":"2019-01-15T16:02:22.390Z","type":"message"}
{"nick":"bradleymeck","message":"trying to figure out right way to convert a path to a valid relative URL string","date":"2019-01-15T16:02:50.325Z","type":"message"}
{"nick":"bradleymeck","message":"adding `/` to beginning messes up `../` and `./`","date":"2019-01-15T16:03:02.947Z","type":"message"}
{"nick":"devsnek","message":"well / isn't relative in the same way paths are relative","date":"2019-01-15T16:03:30.636Z","type":"message"}
{"nick":"bradleymeck","message":"yea","date":"2019-01-15T16:03:41.199Z","type":"message"}
{"nick":"bradleymeck","message":"i just want to have the input types like `./policy`, `../policy`, `C:/policy`, and `/policy` work as expected from CLI","date":"2019-01-15T16:04:16.870Z","type":"message"}
{"nick":"bradleymeck","message":"could test for absolute path using path.isAbsolute :thinki","date":"2019-01-15T16:04:39.798Z","type":"message"}
{"nick":"bradleymeck","message":":thinking:","date":"2019-01-15T16:04:43.263Z","type":"message"}
{"nick":"devsnek","message":"`/policy` isn't relative","date":"2019-01-15T16:04:44.657Z","type":"message"}
{"nick":"bradleymeck","message":"it is on windows since it refers to current drive","date":"2019-01-15T16:05:09.280Z","type":"message"}
{"nick":"devsnek","message":"the root of the current drive though","date":"2019-01-15T16:05:20.989Z","type":"message"}
{"nick":"bradleymeck","message":"https://url.spec.whatwg.org/#relative-url-string","date":"2019-01-15T16:05:30.896Z","type":"message"}
{"nick":"bradleymeck","message":"kind of true on *nix with chroot as well","date":"2019-01-15T16:05:46.135Z","type":"message"}
{"nick":"julianduque","date":"2019-01-15T17:03:23.481Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-01-15T17:30:09.231Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T17:37:24.453Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-01-15T17:41:43.355Z","type":"quit"}
{"nick":"svennidal","reason":"Quit: WeeChat 2.3","date":"2019-01-15T17:47:23.507Z","type":"quit"}
{"nick":"AtumT","date":"2019-01-15T17:50:42.227Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 244 seconds","date":"2019-01-15T18:13:30.351Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T18:17:31.111Z","type":"join"}
{"nick":"seishun","date":"2019-01-15T18:20:40.567Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-01-15T18:22:07.333Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-15T18:25:04.329Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-01-15T18:38:10.118Z","type":"quit"}
{"nick":"julianduque","reason":"Ping timeout: 250 seconds","date":"2019-01-15T18:44:46.921Z","type":"quit"}
{"nick":"Guest13640_","date":"2019-01-15T18:49:47.537Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-01-15T18:54:13.103Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T18:55:46.269Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 268 seconds","date":"2019-01-15T19:09:59.225Z","type":"quit"}
{"nick":"mgol","date":"2019-01-15T19:10:13.873Z","type":"join"}
{"nick":"gamelaster","reason":"Ping timeout: 258 seconds","date":"2019-01-15T19:26:54.248Z","type":"quit"}
{"nick":"bhughes","reason":"Read error: Connection reset by peer","date":"2019-01-15T19:56:35.636Z","type":"quit"}
{"nick":"bhughes","date":"2019-01-15T19:56:44.235Z","type":"join"}
{"nick":"jcovingt","date":"2019-01-15T20:06:05.204Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-01-15T20:09:53.185Z","type":"quit"}
{"nick":"lundibundi","date":"2019-01-15T20:10:55.002Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-15T20:17:40.433Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-01-15T20:22:06.175Z","type":"quit"}
{"nick":"lundibundi","reason":"Remote host closed the connection","date":"2019-01-15T20:26:03.908Z","type":"quit"}
{"nick":"julianduque","date":"2019-01-15T21:05:58.787Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2019-01-15T21:20:06.815Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T21:26:55.183Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-01-15T21:31:29.266Z","type":"quit"}
{"nick":"jcovingt","reason":"Remote host closed the connection","date":"2019-01-15T21:38:46.684Z","type":"quit"}
{"nick":"seishun","date":"2019-01-15T21:44:34.653Z","type":"join"}
{"nick":"dbevenius","date":"2019-01-15T21:57:45.096Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-01-15T22:02:32.134Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 246 seconds","date":"2019-01-15T22:16:21.050Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T22:16:46.233Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-15T22:21:46.189Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-01-15T22:28:12.712Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-01-15T22:38:03.766Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T22:46:46.186Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-01-15T22:51:59.239Z","type":"quit"}
{"nick":"dbevenius","date":"2019-01-15T23:18:50.090Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-01-15T23:23:25.139Z","type":"quit"}
