{"nick":"BridgeAR","reason":"Ping timeout: 256 seconds","date":"2018-08-15T00:12:04.712Z","type":"quit"}
{"nick":"JamJam_kid","reason":"Ping timeout: 244 seconds","date":"2018-08-15T00:36:26.679Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 260 seconds","date":"2018-08-15T00:38:59.136Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T00:44:28.081Z","type":"join"}
{"nick":"ecx86","date":"2018-08-15T00:53:43.142Z","type":"join"}
{"nick":"ecx86","reason":"Read error: Connection reset by peer","date":"2018-08-15T00:55:48.972Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 272 seconds","date":"2018-08-15T01:13:19.007Z","type":"quit"}
{"nick":"steev4","date":"2018-08-15T01:16:15.609Z","type":"join"}
{"nick":"steev4","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-15T01:17:22.342Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T01:19:53.167Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 240 seconds","date":"2018-08-15T02:15:05.465Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T02:32:24.941Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 256 seconds","date":"2018-08-15T03:00:56.868Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T03:06:18.644Z","type":"join"}
{"nick":"marthinal","date":"2018-08-15T03:19:02.957Z","type":"join"}
{"nick":"jesse11","date":"2018-08-15T03:20:01.678Z","type":"join"}
{"nick":"jesse11","reason":"Remote host closed the connection","date":"2018-08-15T03:21:54.284Z","type":"quit"}
{"nick":"marthinal","reason":"Ping timeout: 256 seconds","date":"2018-08-15T03:23:36.706Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 240 seconds","date":"2018-08-15T03:34:35.504Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T03:44:43.925Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 256 seconds","date":"2018-08-15T04:12:54.776Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T04:17:29.637Z","type":"join"}
{"nick":"marthinal","date":"2018-08-15T04:41:00.005Z","type":"join"}
{"nick":"matthiaskrgr26","date":"2018-08-15T05:02:35.701Z","type":"join"}
{"nick":"not-an-aardvark","date":"2018-08-15T05:06:08.743Z","type":"join"}
{"nick":"matthiaskrgr26","reason":"Remote host closed the connection","date":"2018-08-15T05:07:27.780Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 248 seconds","date":"2018-08-15T05:12:33.399Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T05:13:54.920Z","type":"join"}
{"nick":"lpin","date":"2018-08-15T05:16:11.913Z","type":"join"}
{"nick":"PolarizedIons16","date":"2018-08-15T05:24:52.796Z","type":"join"}
{"nick":"PolarizedIons16","reason":"Remote host closed the connection","date":"2018-08-15T05:28:35.691Z","type":"quit"}
{"nick":"madprops11","date":"2018-08-15T05:49:41.838Z","type":"join"}
{"nick":"madprops11","reason":"Remote host closed the connection","date":"2018-08-15T05:54:33.708Z","type":"quit"}
{"nick":"seishun","date":"2018-08-15T05:57:31.964Z","type":"join"}
{"nick":"JoeK25","date":"2018-08-15T06:06:47.933Z","type":"join"}
{"nick":"JoeK25","reason":"Remote host closed the connection","date":"2018-08-15T06:08:08.077Z","type":"quit"}
{"nick":"MalReynolds15","date":"2018-08-15T06:20:51.237Z","type":"join"}
{"nick":"MalReynolds15","reason":"Ping timeout: 272 seconds","date":"2018-08-15T06:29:58.850Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 268 seconds","date":"2018-08-15T06:34:48.740Z","type":"quit"}
{"nick":"JamJam_kid","date":"2018-08-15T06:39:03.688Z","type":"join"}
{"nick":"lundibundi","date":"2018-08-15T06:52:47.884Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2018-08-15T07:01:46.707Z","type":"quit"}
{"nick":"ozymandias1","date":"2018-08-15T07:10:39.407Z","type":"join"}
{"nick":"cloe","date":"2018-08-15T07:12:29.220Z","type":"join"}
{"nick":"BridgeAR","date":"2018-08-15T07:14:48.399Z","type":"join"}
{"nick":"ozymandias1","reason":"Ping timeout: 240 seconds","date":"2018-08-15T07:14:51.368Z","type":"quit"}
{"nick":"cloe","reason":"Remote host closed the connection","date":"2018-08-15T07:17:29.246Z","type":"quit"}
{"nick":"matze6","date":"2018-08-15T07:17:41.395Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 268 seconds","date":"2018-08-15T07:21:40.736Z","type":"quit"}
{"nick":"matze6","reason":"Remote host closed the connection","date":"2018-08-15T07:21:56.787Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T07:26:29.953Z","type":"join"}
{"nick":"ktr19","date":"2018-08-15T07:40:29.175Z","type":"join"}
{"nick":"ktr19","reason":"Remote host closed the connection","date":"2018-08-15T07:41:06.124Z","type":"quit"}
{"nick":"JamJam_kid","reason":"Ping timeout: 244 seconds","date":"2018-08-15T07:46:18.609Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 260 seconds","date":"2018-08-15T07:55:18.811Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T08:00:32.730Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 244 seconds","date":"2018-08-15T08:28:40.553Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T08:44:55.937Z","type":"join"}
{"nick":"joyee_","date":"2018-08-15T09:16:48.562Z","type":"join"}
{"nick":"Domenic_","date":"2018-08-15T09:17:00.548Z","type":"join"}
{"nick":"Guest13640_","date":"2018-08-15T09:17:06.809Z","type":"join"}
{"nick":"wa7son_","date":"2018-08-15T09:17:07.425Z","type":"join"}
{"nick":"Guest13640","reason":"Ping timeout: 245 seconds","date":"2018-08-15T09:18:05.487Z","type":"quit"}
{"nick":"richlitt","reason":"Ping timeout: 245 seconds","date":"2018-08-15T09:18:05.652Z","type":"quit"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2018-08-15T09:18:06.269Z","type":"quit"}
{"nick":"wa7son","reason":"Read error: Connection reset by peer","date":"2018-08-15T09:18:06.599Z","type":"quit"}
{"nick":"Domenic","reason":"Read error: Connection reset by peer","date":"2018-08-15T09:18:06.599Z","type":"quit"}
{"nick":"Guest11409_","reason":"Ping timeout: 245 seconds","date":"2018-08-15T09:18:06.764Z","type":"quit"}
{"nick":"joyee_","new_nick":"joyee","date":"2018-08-15T09:18:07.394Z","type":"nick"}
{"nick":"Domenic_","new_nick":"Domenic","date":"2018-08-15T09:18:07.560Z","type":"nick"}
{"nick":"wa7son_","new_nick":"wa7son","date":"2018-08-15T09:18:07.560Z","type":"nick"}
{"nick":"Guest11409__","date":"2018-08-15T09:18:12.127Z","type":"join"}
{"nick":"richlitt_","date":"2018-08-15T09:18:19.988Z","type":"join"}
{"nick":"avelardi29","date":"2018-08-15T10:01:02.260Z","type":"join"}
{"nick":"avelardi29","reason":"Remote host closed the connection","date":"2018-08-15T10:03:34.815Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-08-15T10:05:52.170Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-08-15T10:55:29.799Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 256 seconds","date":"2018-08-15T11:04:52.729Z","type":"quit"}
{"nick":"ChALkeR","reason":"Ping timeout: 268 seconds","date":"2018-08-15T11:17:14.888Z","type":"quit"}
{"nick":"BridgeAR","reason":"Quit: WeeChat 2.2","date":"2018-08-15T11:29:25.969Z","type":"quit"}
{"nick":"lundibundi","date":"2018-08-15T12:27:02.960Z","type":"join"}
{"nick":"AtumT","date":"2018-08-15T12:56:37.301Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-08-15T12:57:10.374Z","type":"quit"}
{"nick":"webbyz","date":"2018-08-15T13:04:19.952Z","type":"join"}
{"nick":"webbyz","reason":"Remote host closed the connection","date":"2018-08-15T13:08:00.473Z","type":"quit"}
{"nick":"marthinal","date":"2018-08-15T13:26:18.941Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 268 seconds","date":"2018-08-15T13:31:03.803Z","type":"quit"}
{"nick":"marthinal","date":"2018-08-15T13:36:27.913Z","type":"join"}
{"nick":"jackmcbarn5","date":"2018-08-15T13:40:03.361Z","type":"join"}
{"nick":"jackmcbarn5","reason":"Remote host closed the connection","date":"2018-08-15T13:43:09.387Z","type":"quit"}
{"nick":"Wes-","reason":"Ping timeout: 256 seconds","date":"2018-08-15T14:05:04.757Z","type":"quit"}
{"nick":"richardlau","reason":"Read error: Connection reset by peer","date":"2018-08-15T14:05:59.248Z","type":"quit"}
{"nick":"Wes-","date":"2018-08-15T14:36:33.884Z","type":"join"}
{"nick":"devsnek","message":"the heck how does our version of v8 not have v8::WasmStreaming","date":"2018-08-15T14:38:55.434Z","type":"message"}
{"nick":"ChALkeR","date":"2018-08-15T14:59:52.406Z","type":"join"}
{"nick":"ipv619","date":"2018-08-15T15:10:20.158Z","type":"join"}
{"nick":"ipv619","reason":"Remote host closed the connection","date":"2018-08-15T15:10:59.083Z","type":"quit"}
{"nick":"ChALkeR","reason":"Ping timeout: 240 seconds","date":"2018-08-15T15:20:21.337Z","type":"quit"}
{"nick":"seishun","date":"2018-08-15T15:26:32.998Z","type":"join"}
{"nick":"ChALkeR","date":"2018-08-15T15:32:39.768Z","type":"join"}
{"nick":"matthiaskrgr10","date":"2018-08-15T15:33:19.136Z","type":"join"}
{"nick":"cxreg","date":"2018-08-15T15:34:48.172Z","type":"join"}
{"nick":"matthiaskrgr10","reason":"Killed (Unit193 (Spam is not permitted on freenode.))","date":"2018-08-15T15:35:14.294Z","type":"quit"}
{"nick":"ChALkeR","reason":"Ping timeout: 268 seconds","date":"2018-08-15T15:51:02.710Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 268 seconds","date":"2018-08-15T15:59:40.857Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-08-15T16:02:50.490Z","type":"join"}
{"nick":"percY-8","date":"2018-08-15T16:09:56.197Z","type":"join"}
{"nick":"ChALkeR","reason":"Quit: Konversation terminated!","date":"2018-08-15T16:10:09.958Z","type":"quit"}
{"nick":"percY-8","reason":"Killed (Unit193 (Spam is not permitted on freenode.))","date":"2018-08-15T16:10:37.512Z","type":"quit"}
{"nick":"zeds","date":"2018-08-15T16:11:11.754Z","type":"join"}
{"nick":"zeds","date":"2018-08-15T16:11:20.038Z","type":"part"}
{"nick":"seishun","date":"2018-08-15T16:32:17.032Z","type":"join"}
{"nick":"zsoc","reason":"Quit: Leaving","date":"2018-08-15T16:48:27.663Z","type":"quit"}
{"nick":"devsnek","message":"how would we specify a function taking an ArrayBuffer View","date":"2018-08-15T17:15:52.014Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2018-08-15T17:21:57.784Z","type":"quit"}
{"nick":"seishun","date":"2018-08-15T17:25:52.413Z","type":"join"}
{"nick":"Hu0p","reason":"Quit: See You Space Cowboy. . .","date":"2018-08-15T17:33:17.408Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 260 seconds","date":"2018-08-15T17:46:48.822Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2018-08-15T17:48:54.712Z","type":"quit"}
{"nick":"devsnek","message":"addaleax: do we have any good ways to consume readable streams from c++","date":"2018-08-15T17:58:14.257Z","type":"message"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-08-15T18:03:21.637Z","type":"quit"}
{"nick":"marthinal","date":"2018-08-15T18:03:55.539Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-08-15T18:06:13.434Z","type":"quit"}
{"nick":"addaleax","message":"Devsnek JSStream/StreamWrap is the current thing we have for that","date":"2018-08-15T18:09:16.513Z","type":"message"}
{"nick":"addaleax","message":"So, yes","date":"2018-08-15T18:09:22.462Z","type":"message"}
{"nick":"devsnek","message":"addaleax: i thought that was only for uv streams","date":"2018-08-15T18:09:31.064Z","type":"message"}
{"nick":"seishun","date":"2018-08-15T18:11:03.752Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-08-15T18:12:20.634Z","type":"quit"}
{"nick":"addaleax","message":"devsnek: it's a pretty generic API.. the Libuv StreamWrap subclass is more specific ;)","date":"2018-08-15T18:15:46.653Z","type":"message"}
{"nick":"devsnek","message":"addaleax: like it will take anything that emits data and end events?","date":"2018-08-15T18:16:04.722Z","type":"message"}
{"nick":"devsnek","message":"i think we might be talking about different things","date":"2018-08-15T18:16:15.673Z","type":"message"}
{"nick":"marthinal","date":"2018-08-15T18:20:00.181Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-08-15T18:25:43.350Z","type":"quit"}
{"nick":"JamJam_kid","date":"2018-08-15T18:54:11.626Z","type":"join"}
{"nick":"addaleax","message":"Devsnek it will take something sufficiently close to a generic duplex, although we can certainly make it more flexible... I think the JS file is called internal/js_stream_wrap.js or so?","date":"2018-08-15T18:54:39.115Z","type":"message"}
{"nick":"devsnek","message":"aha","date":"2018-08-15T18:55:16.365Z","type":"message"}
{"nick":"zsoc","date":"2018-08-15T18:59:31.992Z","type":"join"}
{"nick":"zsoc","reason":"Changing host","date":"2018-08-15T18:59:38.434Z","type":"quit"}
{"nick":"zsoc","date":"2018-08-15T18:59:38.599Z","type":"join"}
{"nick":"lundibundi","date":"2018-08-15T19:24:42.057Z","type":"join"}
{"nick":"addaleax","message":"devsnek: okay, it’s lib/internal/wrap_js_stream.js. It exports a `net.Socket` subclass that is backed by a JS stream rather than a libuv stream – the original idea being that it can be used for protocols like TLS or HTTP(2) when the backing store is not a real network socket","date":"2018-08-15T19:40:10.331Z","type":"message"}
{"nick":"devsnek","message":"yeah i found it","date":"2018-08-15T19:40:26.709Z","type":"message"}
{"nick":"devsnek","message":"maybe just some more context: https://github.com/devsnek/node/commit/ab9c03afab7482aec9ae30ba065de414f66f1d19","date":"2018-08-15T19:40:48.029Z","type":"message"}
{"nick":"devsnek","message":"its a small diff","date":"2018-08-15T19:40:51.503Z","type":"message"}
{"nick":"devsnek","message":"i'm trying to figure out if it would be worth moving consuming readable streams here to c++","date":"2018-08-15T19:41:15.952Z","type":"message"}
{"nick":"addaleax","message":"devsnek: yes, I think that is the kind of thing we could use a StreamWrap backend for","date":"2018-08-15T19:44:18.587Z","type":"message"}
{"nick":"addaleax","message":"one nice property of that would be that we could avoid the trips to/from JS when the backing stream is already a native StreamWrap","date":"2018-08-15T19:45:08.129Z","type":"message"}
{"nick":"devsnek","message":"so i can just do StreamWrap::initialize(source) and then consume it","date":"2018-08-15T19:45:39.644Z","type":"message"}
{"nick":"Hu0p","date":"2018-08-15T19:50:25.717Z","type":"join"}
{"nick":"addaleax","message":"devsnek: not sure I understand … what you’d need to do is to create the fake socket in js as `sock = new JSStreamWrap(stream)` (we currently expose JSStreamWrap \"publicly\" as `require('_stream_wrap')`). the socket._handle._externalStream gives you an v8::External that points to the C++ `StreamBase*` instance; and on that you can call `->PushStreamListener()` with your own specific handler","date":"2018-08-15T20:07:50.135Z","type":"message"}
{"nick":"addaleax","message":"(sorry, wifi is super flaky rn)","date":"2018-08-15T20:07:55.317Z","type":"message"}
{"nick":"devsnek","message":"if i have to write some js code for this to work","date":"2018-08-15T20:08:29.165Z","type":"message"}
{"nick":"devsnek","message":"i don't see the point in using it at all","date":"2018-08-15T20:08:43.049Z","type":"message"}
{"nick":"devsnek","message":"i'd still have to call into js and back","date":"2018-08-15T20:08:52.612Z","type":"message"}
{"nick":"addaleax","message":"devsnek: i don’t immediately see why you would have to do that, apart from calling into C++ at the beginning and back once the stream (and compilation) finished","date":"2018-08-15T20:12:06.425Z","type":"message"}
{"nick":"devsnek","message":"you can't really create a JSStreamWrap from c++ can you?","date":"2018-08-15T20:12:27.306Z","type":"message"}
{"nick":"addaleax","message":"devsnek: i mean … i guess we could make that possible. but why is that necessary, or why is it otherwise not worth it?","date":"2018-08-15T20:14:53.874Z","type":"message"}
{"nick":"devsnek","message":"the wasm streaming callback happens in c++","date":"2018-08-15T20:15:08.586Z","type":"message"}
{"nick":"devsnek","message":"i would have to call into js to access/create the JSStreamWrap","date":"2018-08-15T20:15:29.243Z","type":"message"}
{"nick":"devsnek","message":"i suppose we could register the class constructor","date":"2018-08-15T20:15:48.542Z","type":"message"}
{"nick":"addaleax","message":"devsnek: i am not sure i understand the V8 API for this … the entry point is `isolate->SetWasmStreamingCallback()`, right? args[0] is the JS argument, passed through verbatim?","date":"2018-08-15T20:22:06.299Z","type":"message"}
{"nick":"devsnek","message":"yes","date":"2018-08-15T20:22:18.961Z","type":"message"}
{"nick":"addaleax","message":"okay … well, yeah, i don’t think you can get away without calling into JS then","date":"2018-08-15T20:22:43.295Z","type":"message"}
{"nick":"addaleax","message":"even registering `.on('data')` would do that","date":"2018-08-15T20:22:45.243Z","type":"message"}
{"nick":"devsnek","message":"so far i've refactored it to check for IsArrayBufferView in c++","date":"2018-08-15T20:23:12.054Z","type":"message"}
{"nick":"devsnek","message":"but i still have the readable stream stuff in js","date":"2018-08-15T20:23:19.960Z","type":"message"}
{"nick":"marthinal","date":"2018-08-15T20:24:55.838Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-08-15T20:25:21.320Z","type":"quit"}
{"nick":"marthinal","date":"2018-08-15T20:25:48.206Z","type":"join"}
{"nick":"boneskull","message":"what do you do while you wait for node to compile?  I usually just use interpeted languages.  :D","date":"2018-08-15T20:26:13.149Z","type":"message"}
{"nick":"addaleax","message":"devsnek: tbh, i realize that the StreamWrap route may seem a bit unnecessarily complicated, and while i think it’s worth it, i’d be totally fine implementing it myself ;)","date":"2018-08-15T20:26:57.502Z","type":"message"}
{"nick":"devsnek","message":"boneskull: cry quietly","date":"2018-08-15T20:27:03.050Z","type":"message"}
{"nick":"boneskull","message":"a nice opportunity to get up and stretch, I suppose, but I'm finding it interrupts my flow","date":"2018-08-15T20:27:05.324Z","type":"message"}
{"nick":"zsoc","message":"i bought a processor with 16 threads specifically to make it less painful","date":"2018-08-15T20:27:18.881Z","type":"message"}
{"nick":"zsoc","message":"it's not that much less painful","date":"2018-08-15T20:27:24.239Z","type":"message"}
{"nick":"addaleax","message":"boneskull: yeah, it’s annoying. if you don’t have ccache, go get it, but otherwise there’s pretty much nothing you can do","date":"2018-08-15T20:27:46.795Z","type":"message"}
{"nick":"devsnek","message":"addaleax: is OnStreamAfterShutdown the equiv of .on('end'?","date":"2018-08-15T20:28:05.500Z","type":"message"}
{"nick":"addaleax","message":"boneskull: or, you know, fight with swords https://xkcd.com/303/","date":"2018-08-15T20:28:20.384Z","type":"message"}
{"nick":"devsnek","message":"ugh this is confusing","date":"2018-08-15T20:29:03.970Z","type":"message"}
{"nick":"boneskull","message":"ccache is a thing I have not heard of","date":"2018-08-15T20:29:08.589Z","type":"message"}
{"nick":"devsnek","message":"ccache is cool","date":"2018-08-15T20:29:13.697Z","type":"message"}
{"nick":"addaleax","message":"devsnek: readable listeners only care about OnStreamAlloc, OnStreamRead, OnStreamDestroy – OnStreamRead() with a negative `nread` (-> UV_EOF or an errno code) would indicate end of the file","date":"2018-08-15T20:29:22.700Z","type":"message"}
{"nick":"marthinal","reason":"Ping timeout: 272 seconds","date":"2018-08-15T20:30:24.908Z","type":"quit"}
{"nick":"devsnek","message":"i didn't see OnStreamRead in the virtual class hmm","date":"2018-08-15T20:31:01.765Z","type":"message"}
{"nick":"devsnek","message":"oh nvm","date":"2018-08-15T20:31:06.339Z","type":"message"}
{"nick":"devsnek","message":"ok so if nread is UV_EOF the stream is done","date":"2018-08-15T20:31:20.775Z","type":"message"}
{"nick":"addaleax","message":"devsnek: yeah, that’s what JSStreamWrap does … other streams (like libuv-backed streams) may use some real errno code, like `UV_ECONNREFUSED` or so – just checking for a negative value should be enough","date":"2018-08-15T20:33:46.170Z","type":"message"}
{"nick":"devsnek","message":"if its not UV_EOF","date":"2018-08-15T20:34:19.456Z","type":"message"}
{"nick":"devsnek","message":"shouldn't i abort with some error message","date":"2018-08-15T20:34:28.951Z","type":"message"}
{"nick":"addaleax","message":"hm right","date":"2018-08-15T20:34:56.890Z","type":"message"}
{"nick":"addaleax","message":"you probably should","date":"2018-08-15T20:34:59.896Z","type":"message"}
{"nick":"devsnek","message":"would probably be better if the error event went through the JSStreamWrap","date":"2018-08-15T20:37:05.123Z","type":"message"}
{"nick":"devsnek","message":"the heck node::StreamResource::PushStreamListener symbol is missing","date":"2018-08-15T20:38:29.008Z","type":"message"}
{"nick":"change20","date":"2018-08-15T20:39:50.979Z","type":"join"}
{"nick":"addaleax","message":"devsnek: huh… ? :D we definitely use that method in our code :D","date":"2018-08-15T20:41:26.797Z","type":"message"}
{"nick":"devsnek","message":"if it makes any difference i'm calling it in node.cc","date":"2018-08-15T20:42:46.953Z","type":"message"}
{"nick":"change20","reason":"Remote host closed the connection","date":"2018-08-15T20:42:58.138Z","type":"quit"}
{"nick":"addaleax","message":"devsnek: you probably don’t include `stream_base-inl.h` yet (and should really also get a compiler warning because of that, not just the linker error)","date":"2018-08-15T20:43:51.797Z","type":"message"}
{"nick":"devsnek","message":"oh inl","date":"2018-08-15T20:43:58.383Z","type":"message"}
{"nick":"devsnek","message":"yep","date":"2018-08-15T20:43:59.462Z","type":"message"}
{"nick":"seishun","reason":"Read error: Connection reset by peer","date":"2018-08-15T20:56:50.031Z","type":"quit"}
{"nick":"devsnek","message":"ok now i'm getting bad access on `listener->previous_listener_ = listener_;` in PushStreamListener ugh","date":"2018-08-15T20:57:03.611Z","type":"message"}
{"nick":"devsnek","message":"lldb is saying the issue is on `listener_;` though","date":"2018-08-15T20:57:16.537Z","type":"message"}
{"nick":"Trott","message":"Anybody on TSC know how we start the Zoom meeting on weeks when mhdawson isn't around?","date":"2018-08-15T21:00:49.652Z","type":"message"}
{"nick":"addaleax","message":"devsnek: that’s odd … what’s `this`? did you get the stream `External` from the wrap?","date":"2018-08-15T21:01:00.588Z","type":"message"}
{"nick":"devsnek","message":"addaleax: i just figured it out lol","date":"2018-08-15T21:01:08.208Z","type":"message"}
{"nick":"devsnek","message":"was returning wrap instead of wrap.handle","date":"2018-08-15T21:01:16.244Z","type":"message"}
{"nick":"devsnek","message":"or _handle?","date":"2018-08-15T21:01:39.111Z","type":"message"}
{"nick":"devsnek","message":"where does socket mount the handle option","date":"2018-08-15T21:01:51.256Z","type":"message"}
{"nick":"addaleax","message":"the thing you want to unwrap in C++ is wrap._handle._externalStream","date":"2018-08-15T21:02:04.502Z","type":"message"}
{"nick":"devsnek","message":"cool","date":"2018-08-15T21:02:20.555Z","type":"message"}
{"nick":"addaleax","message":"which is an v8::External pointing to a StreamBase","date":"2018-08-15T21:02:29.592Z","type":"message"}
{"nick":"devsnek","message":"yeah thats what i want","date":"2018-08-15T21:02:33.948Z","type":"message"}
{"nick":"devsnek","message":"i wonder how much stuff is needlessly created with this `return new lazyJSStreamWrap(source)._handle._externalStream;`","date":"2018-08-15T21:02:55.398Z","type":"message"}
{"nick":"strugee","date":"2018-08-15T21:08:18.133Z","type":"join"}
{"nick":"strugee","reason":"Remote host closed the connection","date":"2018-08-15T21:09:39.218Z","type":"quit"}
{"nick":"lundibundi","reason":"Remote host closed the connection","date":"2018-08-15T21:15:57.027Z","type":"quit"}
{"nick":"Planet_EN","date":"2018-08-15T21:39:43.047Z","type":"join"}
{"nick":"Planet_EN","reason":"Client Quit","date":"2018-08-15T21:39:43.212Z","type":"quit"}
{"nick":"Planet_EN","date":"2018-08-15T21:40:03.775Z","type":"join"}
{"nick":"We","date":"2018-08-15T21:48:20.675Z","type":"join"}
{"nick":"We","reason":"Remote host closed the connection","date":"2018-08-15T21:49:06.087Z","type":"quit"}
{"nick":"addaleax","message":"devsnek: 1 C++ object, 2 JS objects + event listeners ... although we could probably optimize the latter a bit more in JS land","date":"2018-08-15T21:50:00.177Z","type":"message"}
{"nick":"devsnek","message":"addaleax: the benefit here is that *if* the stream i pass is backed by a libuv stream, it will be unwrapped right?","date":"2018-08-15T22:00:02.395Z","type":"message"}
{"nick":"addaleax","message":"devsnek: yes, exactly… that and all other streams that are StreamBase instances","date":"2018-08-15T22:01:32.741Z","type":"message"}
{"nick":"addaleax","message":"e.g. we don’t use it for fs streams yet (except when piping to HTTP/2), but FileHandles are also readable StreamBase instances","date":"2018-08-15T22:02:06.733Z","type":"message"}
{"nick":"devsnek","message":"would it be practical to maybe separate JSStreamWrap from socket a little bit in this case","date":"2018-08-15T22:02:31.528Z","type":"message"}
{"nick":"addaleax","message":"devsnek: i think that would have made sense when they were first introduced, yes","date":"2018-08-15T22:13:09.764Z","type":"message"}
{"nick":"addaleax","message":"not sure there’s much point in doing so now","date":"2018-08-15T22:13:23.325Z","type":"message"}
{"nick":"devsnek","message":"from the comment it seems like extending socket is just an optimisation because they're only used with tls and http","date":"2018-08-15T22:13:33.917Z","type":"message"}
{"nick":"addaleax","message":"it gives some consistency, yes … there’s no real reason for it, though","date":"2018-08-15T22:18:33.610Z","type":"message"}
{"nick":"addaleax","message":"and we’ve been refactoring some of the code that is specific to StreamBase instances in general out","date":"2018-08-15T22:18:54.855Z","type":"message"}
{"nick":"zeds1","date":"2018-08-15T22:28:58.801Z","type":"join"}
{"nick":"zeds1","date":"2018-08-15T22:30:10.748Z","type":"part"}
{"nick":"JamJam_kid","reason":"Ping timeout: 244 seconds","date":"2018-08-15T22:41:10.663Z","type":"quit"}
