{"nick":"ljharb","topic":"Get registered on freenode ( https://git.io/vaTS2 ) | Node.js Current: v10.4.1 | LTS: Carbon v8.11.3, Boron v6.14.3; EOL: Argon v4.9.1, v9, v7, <= v5 | -- https://nodejs.org/ -- IRC Logs: http://logs.libuv.org/node-dev/latest -- Channel Info: http://nodeirc.info/#node-dev -- Newcomers welcome: http://nodeschool.io/ -- dev channel for all things node core","date":"2018-06-13T00:05:30.469Z","type":"topic"}
{"nick":"devsnek","message":"bradleymeck: link?","date":"2018-06-13T00:12:49.679Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: none so far, https://github.com/bmeck/node/tree/service-loader might get an update tomorrow","date":"2018-06-13T00:13:45.217Z","type":"message"}
{"nick":"bradleymeck","message":"for now it is me not doing it in core but manually writing a PoC outside of core","date":"2018-06-13T00:14:03.274Z","type":"message"}
{"nick":"devsnek","message":"aight","date":"2018-06-13T00:14:03.473Z","type":"message"}
{"nick":"bradleymeck","message":"actually integrating with core will be... rough","date":"2018-06-13T00:14:18.492Z","type":"message"}
{"nick":"bradleymeck","message":"api roughly looks like https://twitter.com/bradleymeck/status/1006690852360671233 in my PoC","date":"2018-06-13T00:14:35.678Z","type":"message"}
{"nick":"devsnek","message":"what happened with doc/guides/contributing/pull-requests.md","date":"2018-06-13T00:14:38.264Z","type":"message"}
{"nick":"devsnek","message":"and .github/PULL_REQUEST_TEMPLATE.md","date":"2018-06-13T00:14:42.770Z","type":"message"}
{"nick":"bradleymeck","message":"bad merges","date":"2018-06-13T00:14:49.016Z","type":"message"}
{"nick":"devsnek","message":"they will be remembered","date":"2018-06-13T00:15:10.019Z","type":"message"}
{"nick":"bradleymeck","message":"they will definitely have to return","date":"2018-06-13T00:15:25.568Z","type":"message"}
{"nick":"bradleymeck","message":"splitting the key and the body certainly made things easier","date":"2018-06-13T00:16:01.743Z","type":"message"}
{"nick":"devsnek","message":"no more Response object?","date":"2018-06-13T00:16:13.815Z","type":"message"}
{"nick":"bradleymeck","message":"kind of :(","date":"2018-06-13T00:16:15.154Z","type":"message"}
{"nick":"bradleymeck","message":"for now just using `Blob`, easier","date":"2018-06-13T00:16:30.026Z","type":"message"}
{"nick":"bradleymeck","message":"still has a MIME inside it","date":"2018-06-13T00:16:36.562Z","type":"message"}
{"nick":"bradleymeck","message":"https://developer.mozilla.org/en-US/docs/Web/API/Blob/type , did put a Response global out there so people could read the contents of the blob","date":"2018-06-13T00:17:24.342Z","type":"message"}
{"nick":"bradleymeck","message":"new Response(blob).arrayBuffer","date":"2018-06-13T00:17:34.340Z","type":"message"}
{"nick":"devsnek","message":"so you packed in response and blob?","date":"2018-06-13T00:17:50.542Z","type":"message"}
{"nick":"bradleymeck","message":"yea","date":"2018-06-13T00:17:56.755Z","type":"message"}
{"nick":"bradleymeck","message":"response to read blobs (sans .body)","date":"2018-06-13T00:18:03.366Z","type":"message"}
{"nick":"devsnek","message":"custom for node or npm polyfills","date":"2018-06-13T00:18:10.360Z","type":"message"}
{"nick":"bradleymeck","message":"and blob because I wanted a read only container type with MIME on it","date":"2018-06-13T00:18:19.325Z","type":"message"}
{"nick":"bradleymeck","message":"for Node","date":"2018-06-13T00:18:24.786Z","type":"message"}
{"nick":"devsnek","message":"noice","date":"2018-06-13T00:18:34.715Z","type":"message"}
{"nick":"bradleymeck","message":"need to integrate with transferables so that we can reduce costs","date":"2018-06-13T00:18:38.681Z","type":"message"}
{"nick":"bradleymeck","message":"we already have a few extra copies going on in my PoC and I need to avoid reading the body as long as possible since loaders may call parents then decide to discard results","date":"2018-06-13T00:19:16.969Z","type":"message"}
{"nick":"devsnek","message":"sounds dizzying","date":"2018-06-13T00:19:41.778Z","type":"message"}
{"nick":"bradleymeck","message":"streaming might help, but unclear since most loaders will want to do a parse of the full body","date":"2018-06-13T00:19:46.290Z","type":"message"}
{"nick":"bradleymeck","message":"so Blob seems fine for now","date":"2018-06-13T00:19:54.953Z","type":"message"}
{"nick":"bradleymeck","message":"i need to also test using long lived processes for loaders now that we have this","date":"2018-06-13T00:20:17.372Z","type":"message"}
{"nick":"bradleymeck","message":"so one process that keeps loader data alive for potentially multiple node processes","date":"2018-06-13T00:20:38.242Z","type":"message"}
{"nick":"bradleymeck","message":"that is very problematic for resolving to vm.Module, but seems doable if we expose clientId like data","date":"2018-06-13T00:21:09.182Z","type":"message"}
{"nick":"bradleymeck","message":"the way to properly load a vm.Module would be very complex though :(","date":"2018-06-13T00:22:14.624Z","type":"message"}
{"nick":"BridgeAR1","reason":"Ping timeout: 265 seconds","date":"2018-06-13T00:27:23.371Z","type":"quit"}
{"nick":"devsnek","message":"thats why i like declaring the hooks as named exports","date":"2018-06-13T00:33:04.339Z","type":"message"}
{"nick":"devsnek","message":"we can pick things off and run specific hooks in specific threads","date":"2018-06-13T00:33:15.583Z","type":"message"}
{"nick":"bradleymeck","message":"?","date":"2018-06-13T00:35:41.865Z","type":"message"}
{"nick":"bradleymeck","message":"how is that different from using globals? like self.onresolve","date":"2018-06-13T00:36:10.820Z","type":"message"}
{"nick":"bradleymeck","message":"well self was a patch from me to have it closer resemble web","date":"2018-06-13T00:36:28.529Z","type":"message"}
{"nick":"bradleymeck","message":"each loader can get its own thread as needed / multiple threads potentially per loader","date":"2018-06-13T00:36:46.730Z","type":"message"}
{"nick":"bradleymeck","message":"kill em if they are unused, spin em back up if they are","date":"2018-06-13T00:37:02.724Z","type":"message"}
{"nick":"devsnek","message":"if we do attaching to self we have to evaluate it before we know where things should go","date":"2018-06-13T00:37:28.041Z","type":"message"}
{"nick":"bradleymeck","message":"?","date":"2018-06-13T00:37:33.444Z","type":"message"}
{"nick":"bradleymeck","message":"what do you mean","date":"2018-06-13T00:37:36.902Z","type":"message"}
{"nick":"devsnek","message":"which hooks a file provides","date":"2018-06-13T00:37:56.205Z","type":"message"}
{"nick":"devsnek","message":"we would have to spin up a loader to know with the attaching to self design","date":"2018-06-13T00:38:14.049Z","type":"message"}
{"nick":"bradleymeck","message":"not sure we need that info","date":"2018-06-13T00:38:21.673Z","type":"message"}
{"nick":"bradleymeck","message":"you always call the hooks","date":"2018-06-13T00:38:33.070Z","type":"message"}
{"nick":"bradleymeck","message":"loaders have to manually call parent loaders","date":"2018-06-13T00:38:41.469Z","type":"message"}
{"nick":"bradleymeck","message":"if a loader doesn't provide a hook, it throws errors","date":"2018-06-13T00:39:01.756Z","type":"message"}
{"nick":"devsnek","message":"i suppose","date":"2018-06-13T00:39:09.701Z","type":"message"}
{"nick":"bradleymeck","message":"right now we have 2 hooks and being able to return a body reduces the complexity enough that I think we can remove dynamic instantiate","date":"2018-06-13T00:39:40.747Z","type":"message"}
{"nick":"bradleymeck","message":"not super happy that i ended up letting you return a body, but it is ok for now","date":"2018-06-13T00:40:06.552Z","type":"message"}
{"nick":"devsnek","message":"preliminary designs hehe","date":"2018-06-13T00:40:50.426Z","type":"message"}
{"nick":"devsnek","message":"it took me a month to get a proper working implementation for whatwg encoding","date":"2018-06-13T00:41:13.542Z","type":"message"}
{"nick":"bradleymeck","message":"if someone wants to get unique URLs per result we still have the `key` field enforcing that","date":"2018-06-13T00:41:15.330Z","type":"message"}
{"nick":"devsnek","message":"i've learned to be a lot more patient","date":"2018-06-13T00:41:18.663Z","type":"message"}
{"nick":"bradleymeck","message":"it isn't a \"url\"","date":"2018-06-13T00:41:29.369Z","type":"message"}
{"nick":"bradleymeck","message":"but it will be ok","date":"2018-06-13T00:41:33.045Z","type":"message"}
{"nick":"devsnek","message":"it works for our purposes","date":"2018-06-13T00:41:44.808Z","type":"message"}
{"nick":"devsnek","message":"i do think we can be a bit lax since the web probably won't be doing loaders","date":"2018-06-13T00:42:00.912Z","type":"message"}
{"nick":"bradleymeck","message":"well i still have my http server and service worker instrumentation for the web working","date":"2018-06-13T00:43:18.412Z","type":"message"}
{"nick":"bradleymeck","message":"it works... poorly if you look at perf but fully","date":"2018-06-13T00:43:31.815Z","type":"message"}
{"nick":"bradleymeck","message":"you have to do a ton of work around redirects and handing export *","date":"2018-06-13T00:43:51.775Z","type":"message"}
{"nick":"bradleymeck","message":"so a single module load can take like 4 SW fetches","date":"2018-06-13T00:44:16.383Z","type":"message"}
{"nick":"bradleymeck","message":"but probably going to keep recommending bundling as I don't see web and node agreeing on a few edge cases anymore and I'm not as interested in matching them as I used to be","date":"2018-06-13T00:45:02.195Z","type":"message"}
{"nick":"bradleymeck","message":"cache mismatch and import.meta.url mismatch makes it pretty :shrug","date":"2018-06-13T00:45:17.042Z","type":"message"}
{"nick":"devsnek","message":"well if modules team decides to rewrite everything who knows lel","date":"2018-06-13T00:45:41.132Z","type":"message"}
{"nick":"evanlucas","reason":"Remote host closed the connection","date":"2018-06-13T00:54:12.096Z","type":"quit"}
{"nick":"mylesborins","message":"please no one land anything on master until https://github.com/nodejs/node/pull/21297 lands","date":"2018-06-13T00:57:35.143Z","type":"message"}
{"nick":"devsnek","message":"who needs master anyway","date":"2018-06-13T00:59:47.810Z","type":"message"}
{"nick":"zeds","date":"2018-06-13T01:12:47.457Z","type":"join"}
{"nick":"zeds","reason":"Max SendQ exceeded","date":"2018-06-13T01:12:50.460Z","type":"quit"}
{"nick":"zeds","date":"2018-06-13T01:13:27.467Z","type":"join"}
{"nick":"zeds","reason":"Max SendQ exceeded","date":"2018-06-13T01:13:28.465Z","type":"quit"}
{"nick":"zeds","date":"2018-06-13T01:13:52.456Z","type":"join"}
{"nick":"zeds","reason":"Max SendQ exceeded","date":"2018-06-13T01:14:00.460Z","type":"quit"}
{"nick":"zeds","date":"2018-06-13T01:20:18.783Z","type":"join"}
{"nick":"bhughes","reason":"Read error: Connection reset by peer","date":"2018-06-13T01:58:57.818Z","type":"quit"}
{"nick":"bhughes","date":"2018-06-13T01:59:07.434Z","type":"join"}
{"nick":"devsnek","message":"since when does test.py have colorful output","date":"2018-06-13T02:00:19.135Z","type":"message"}
{"nick":"mylesborins","message":"feel free to land away :D","date":"2018-06-13T02:00:40.463Z","type":"message"}
{"nick":"devsnek","message":"hype","date":"2018-06-13T02:02:27.527Z","type":"message"}
{"nick":"devsnek","message":"i see we still haven't fixed realpath-native test","date":"2018-06-13T02:02:39.725Z","type":"message"}
{"nick":"zeds","date":"2018-06-13T02:17:35.718Z","type":"part"}
{"nick":"Trott","message":"Is it OK for me to cherry-pick and push patch-level commits from master to v9.x-staging? mylesborins","date":"2018-06-13T02:44:06.832Z","type":"message"}
{"nick":"mylesborins","message":"Trott you can","date":"2018-06-13T02:44:20.531Z","type":"message"}
{"nick":"mylesborins","message":"I don't know if anyone is planning another release though","date":"2018-06-13T02:44:27.146Z","type":"message"}
{"nick":"Trott","message":"But don't do it on v8.x-staging or v6.x-staging because they're LTS, right?","date":"2018-06-13T02:44:36.339Z","type":"message"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 268 seconds","date":"2018-06-13T02:46:20.808Z","type":"quit"}
{"nick":"zeds","date":"2018-06-13T02:50:28.364Z","type":"join"}
{"nick":"zeds","reason":"Read error: Connection reset by peer","date":"2018-06-13T03:22:14.844Z","type":"quit"}
{"nick":"joyee","message":"mylesborins targos I started backporting https://github.com/nodejs/node/pull/19177 to v8.x and here is where I am at https://gist.github.com/joyeecheung/52b7dc34b79ce5bd9213ac07f0596b85","date":"2018-06-13T04:43:51.271Z","type":"message"}
{"nick":"devsnek","message":"thats too much 😢","date":"2018-06-13T04:51:51.272Z","type":"message"}
{"nick":"marthinal","date":"2018-06-13T04:53:26.897Z","type":"join"}
{"nick":"joyee","message":"I think I am pretty deep in the rabbit hole here...https://github.com/nodejs/node/pull/19006","date":"2018-06-13T04:59:42.571Z","type":"message"}
{"nick":"marthinal","date":"2018-06-13T05:06:36.212Z","type":"quit"}
{"nick":"devsnek","message":"we need an ai that just resolves backports","date":"2018-06-13T05:07:13.407Z","type":"message"}
{"nick":"marthinal","date":"2018-06-13T05:07:45.616Z","type":"join"}
{"nick":"lpin","date":"2018-06-13T05:11:15.082Z","type":"join"}
{"nick":"marthinal","date":"2018-06-13T05:18:24.516Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-13T05:19:33.914Z","type":"join"}
{"nick":"marthinal","date":"2018-06-13T05:24:40.472Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-13T05:27:14.010Z","type":"join"}
{"nick":"marthinal","reason":"Client Quit","date":"2018-06-13T05:28:03.930Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-13T05:29:58.049Z","type":"join"}
{"nick":"Hu0p","date":"2018-06-13T05:51:02.932Z","type":"join"}
{"nick":"tkore","date":"2018-06-13T05:56:08.669Z","type":"join"}
{"nick":"cxreg","message":"joyee: why backport a huge restructure like that to a LTS?","date":"2018-06-13T06:24:08.955Z","type":"message"}
{"nick":"joyee","message":"cxreg: otherwise any fix that touches those files cannot be landed cleanly","date":"2018-06-13T06:25:07.898Z","type":"message"}
{"nick":"cxreg","message":"I think we backport too many things anyway :/","date":"2018-06-13T06:25:44.281Z","type":"message"}
{"nick":"joyee","message":"This can be stopped when it’s in mantainance","date":"2018-06-13T06:25:56.648Z","type":"message"}
{"nick":"zeds","date":"2018-06-13T06:28:23.239Z","type":"join"}
{"nick":"joyee","message":"Idk, maybe we need to revisit the backport policy","date":"2018-06-13T06:28:30.076Z","type":"message"}
{"nick":"joyee","message":"And make sure people set the correct labels before landing anything on master","date":"2018-06-13T06:29:17.887Z","type":"message"}
{"nick":"zeds","reason":"Read error: Connection reset by peer","date":"2018-06-13T06:29:39.390Z","type":"quit"}
{"nick":"TimothyGu","message":"devsnek: nice trick with memcpy() in https://github.com/devsnek/syncify/blob/master/syncify.cc#L19","date":"2018-06-13T06:29:51.837Z","type":"message"}
{"nick":"TimothyGu","message":"I guess you can force cast a Private to Symbol this way too","date":"2018-06-13T06:30:21.369Z","type":"message"}
{"nick":"lpin","reason":"Read error: Connection reset by peer","date":"2018-06-13T06:49:27.968Z","type":"quit"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2018-06-13T07:25:29.883Z","type":"quit"}
{"nick":"seishun","date":"2018-06-13T08:19:34.106Z","type":"join"}
{"nick":"tniessen","message":"mmarchini: regarding \"out of hepa memory\", its a message from the visual C compiler (microsoft), not node","date":"2018-06-13T08:39:03.786Z","type":"message"}
{"nick":"marthinal","date":"2018-06-13T09:46:13.740Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-13T09:47:35.246Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-06-13T10:25:09.831Z","type":"quit"}
{"nick":"mylesborins","date":"2018-06-13T10:25:40.502Z","type":"join"}
{"nick":"BridgeAR1","date":"2018-06-13T10:36:01.749Z","type":"join"}
{"nick":"seishun","reason":"Read error: Connection reset by peer","date":"2018-06-13T10:40:53.936Z","type":"quit"}
{"nick":"seishun","date":"2018-06-13T10:41:27.511Z","type":"join"}
{"nick":"gabrielschulhof","date":"2018-06-13T11:35:27.978Z","type":"join"}
{"nick":"seishun","message":"is there a simpler way to rebase a branch on master than `git checkout master; git pull; git checkout branch; git rebase master`?","date":"2018-06-13T12:42:43.523Z","type":"message"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-13T13:00:02.687Z","type":"quit"}
{"nick":"bradleymeck","message":"seishun: git fetch upstream; git rebase upstream/master ?","date":"2018-06-13T13:24:09.964Z","type":"message"}
{"nick":"seishun","message":"thanks","date":"2018-06-13T13:25:02.399Z","type":"message"}
{"nick":"mylesborins","message":"you can also do `git remote update -p` instead of `git fetch upstream` if you want to update all the branches on all the remotes (good practice to make sure that you are not out of sync imho)","date":"2018-06-13T13:31:57.106Z","type":"message"}
{"nick":"mylesborins","message":"the -p prunes branches deleted upstream (the remote branch not local)","date":"2018-06-13T13:32:12.058Z","type":"message"}
{"nick":"marthinal","date":"2018-06-13T13:39:23.715Z","type":"join"}
{"nick":"dc13ff","date":"2018-06-13T13:50:20.680Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-13T13:55:15.963Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-13T13:55:22.558Z","type":"join"}
{"nick":"bradleymeck","message":"i have like 1000 branches on my local machine, i rarely delete XD","date":"2018-06-13T14:34:04.810Z","type":"message"}
{"nick":"devsnek","message":"rip autocomplete","date":"2018-06-13T14:42:50.323Z","type":"message"}
{"nick":"cxreg","message":"I think backports should only happen when they are actually necessary and if that sometimes means more work due to internals changes then it means that.  This is how other software projects manage LTS.  We're looking for extra hours to offer from NS on doing backport work","date":"2018-06-13T15:09:02.681Z","type":"message"}
{"nick":"cxreg","message":"but \"move around internals\" isn't the kind of thing that should get backported ever, imo","date":"2018-06-13T15:09:22.782Z","type":"message"}
{"nick":"BridgeAR1","reason":"Ping timeout: 276 seconds","date":"2018-06-13T15:16:41.752Z","type":"quit"}
{"nick":"tkore","reason":"Read error: Connection reset by peer","date":"2018-06-13T15:19:28.075Z","type":"quit"}
{"nick":"Hu0p","reason":"Quit: See You Space Cowboy. . .","date":"2018-06-13T16:05:33.859Z","type":"quit"}
{"nick":"BridgeAR1","date":"2018-06-13T16:06:54.003Z","type":"join"}
{"nick":"dc13ff","reason":"Quit: Connection closed for inactivity","date":"2018-06-13T16:08:06.506Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-06-13T16:37:55.938Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-06-13T16:46:30.841Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-06-13T16:49:01.741Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-06-13T17:09:15.363Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 264 seconds","date":"2018-06-13T17:33:58.081Z","type":"quit"}
{"nick":"seishun","date":"2018-06-13T17:41:15.012Z","type":"join"}
{"nick":"Fishrock123","date":"2018-06-13T17:45:08.464Z","type":"join"}
{"nick":"joyee","message":"cxreg: the problem is we do not have a clear standard on what to backport. So if no one is labeling PRs dont-land by default, then we assume they will have to be backported, then we will have a bunch of PRs piled up waiting for manual backport because of the internal changes","date":"2018-06-13T17:51:04.392Z","type":"message"}
{"nick":"dc13ff","date":"2018-06-13T17:51:12.449Z","type":"join"}
{"nick":"joyee","message":"If active LTS = only security fixes and necessary bugfix, no new features, then practically it's not different from maintainance mode","date":"2018-06-13T17:53:28.514Z","type":"message"}
{"nick":"sgimeno","reason":"Ping timeout: 240 seconds","date":"2018-06-13T17:54:21.334Z","type":"quit"}
{"nick":"joyee","message":"(idk, I think that's what LTS is supposed to be but at the moment we are not sticking to that)","date":"2018-06-13T17:54:33.222Z","type":"message"}
{"nick":"sgimeno","date":"2018-06-13T17:54:40.517Z","type":"join"}
{"nick":"joyee","message":"Maybe we should change the branch-diff so that only PRs labeled with `watch-lts-vx` gets backported","date":"2018-06-13T17:56:16.756Z","type":"message"}
{"nick":"joyee","message":"(or, change the way we call it like adding the watch label to `--require-label` cc mylesborins","date":"2018-06-13T17:57:41.904Z","type":"message"}
{"nick":"Trott","message":"In theory, the more frequent backporting to the active LTS line is supposed to reduce the work of backporting, making cherry-picking work most of the time. But I don't think we have any hard data on whether one approach or the other is simpler/easier over the long run. I have no opinion myself.","date":"2018-06-13T17:58:42.175Z","type":"message"}
{"nick":"Trott","message":"Although if backporting now isn't working out for the Release folks, trying  something different certainly seems worth considering. :-D","date":"2018-06-13T17:59:08.237Z","type":"message"}
{"nick":"marthinal","date":"2018-06-13T18:02:12.873Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-06-13T18:02:32.401Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-13T18:03:21.676Z","type":"join"}
{"nick":"mylesborins","message":"cxreg we have a distinction between active and maintenance backports","date":"2018-06-13T18:06:36.394Z","type":"message"}
{"nick":"mylesborins","message":"for active we have backported basically anything that doesn't have a high risk of breaking things, and have seen that be quite successful","date":"2018-06-13T18:06:54.778Z","type":"message"}
{"nick":"mylesborins","message":"keeping as close to master as possible on more churny things makes it far easier to backport when security problems or major regressions are found","date":"2018-06-13T18:07:16.873Z","type":"message"}
{"nick":"mylesborins","message":"we can definitely consider changing our process, but we have been backporting semver-minors to LTS, and upgrading V8 on LTS, and I personally would not like to see that change","date":"2018-06-13T18:07:43.783Z","type":"message"}
{"nick":"Fishrock123","date":"2018-06-13T18:13:50.941Z","type":"join"}
{"nick":"cxreg","message":"mylesborins: I get what you are saying and why but it sort of violates the spirit of a LTS","date":"2018-06-13T18:17:35.639Z","type":"message"}
{"nick":"ljharb","message":"i don'","date":"2018-06-13T18:17:51.309Z","type":"message"}
{"nick":"ljharb","message":"i don't think that's true","date":"2018-06-13T18:17:54.115Z","type":"message"}
{"nick":"ljharb","message":"LTS doesn't mean \"bare minimum of support\", it means \"support\"","date":"2018-06-13T18:18:01.533Z","type":"message"}
{"nick":"ljharb","message":"support can and should include new features and refactors","date":"2018-06-13T18:18:10.362Z","type":"message"}
{"nick":"cxreg","message":"I can say for certain that zero of Nodesource customers that want to run an LTS have any desire for new features without upgrading semver major.  This is however just my thoughts and I also agree that the current policy has been successful at not breaking things.","date":"2018-06-13T18:21:58.044Z","type":"message"}
{"nick":"cxreg","message":"thanks for the discussion","date":"2018-06-13T18:22:29.207Z","type":"message"}
{"nick":"BridgeAR1","reason":"Ping timeout: 264 seconds","date":"2018-06-13T18:24:22.133Z","type":"quit"}
{"nick":"ljharb","message":"zero desire is disinterest, and isn't the same as \"actively do not want\"","date":"2018-06-13T18:33:20.462Z","type":"message"}
{"nick":"ljharb","message":"but also that's what \"minor\" means - new stuff","date":"2018-06-13T18:33:27.187Z","type":"message"}
{"nick":"cxreg","message":"my intention was \"actively do not want\".  LTS = \"don't surprise me\"","date":"2018-06-13T18:33:51.572Z","type":"message"}
{"nick":"cxreg","message":"but again this isn't a pain that they are feeling so much as an observation","date":"2018-06-13T18:35:10.831Z","type":"message"}
{"nick":"cxreg","message":"For context, I both manage the N|Solid LTS rebases and do direct customer support, so I acutely feel this more than maybe anyone else on earth.  The continued lack of breakage speaks for itself.","date":"2018-06-13T18:38:38.776Z","type":"message"}
{"nick":"ljharb","message":"i guess i'd say that if they don't want new stuff, they should only ever update patch versions :-/","date":"2018-06-13T18:39:46.402Z","type":"message"}
{"nick":"cxreg","message":"not realistic since security releases aren't done at patch level","date":"2018-06-13T18:40:04.428Z","type":"message"}
{"nick":"joyee","message":"ljharb: well we do not offer patch-only releases...","date":"2018-06-13T18:40:07.629Z","type":"message"}
{"nick":"joyee","message":"at some point you'll either upgrade semver-minor or get stuck","date":"2018-06-13T18:41:03.075Z","type":"message"}
{"nick":"ljharb","message":"true","date":"2018-06-13T18:41:25.194Z","type":"message"}
{"nick":"ljharb","message":"altho that would be another option. i backport security patches to all minor lines on my packages, ftr.","date":"2018-06-13T18:41:43.844Z","type":"message"}
{"nick":"cxreg","message":"backporting security fixes to older semver minor in a current LTS sounds like a fractal hell","date":"2018-06-13T18:41:49.673Z","type":"message"}
{"nick":"ljharb","message":"it makes for some super fun octopus merges, let me tell you","date":"2018-06-13T18:42:01.259Z","type":"message"}
{"nick":"joyee","message":"Also some environments tend to upgrade on the LTS line without explicit approval from users","date":"2018-06-13T18:43:03.611Z","type":"message"}
{"nick":"ljharb","message":"that's up to the env tho; that's not really node's concern","date":"2018-06-13T18:43:38.871Z","type":"message"}
{"nick":"joyee","message":"In my ex-company, Alibaba(with other affiliated companies) a lot of team does this.","date":"2018-06-13T18:43:40.717Z","type":"message"}
{"nick":"joyee","message":"GAE seem to do it as well","date":"2018-06-13T18:43:55.526Z","type":"message"}
{"nick":"cxreg","message":"it's not node's concern directly but more a matter of what LTS semantically promises","date":"2018-06-13T18:44:45.082Z","type":"message"}
{"nick":"joyee","message":"I think they are doing it based on the assumption that it's OK to do so...given our description in https://github.com/nodejs/Release#release-plan","date":"2018-06-13T18:44:48.735Z","type":"message"}
{"nick":"ljharb","message":"cxreg: if there's no breakage, why do users care if new stuff gets added?","date":"2018-06-13T18:45:54.497Z","type":"message"}
{"nick":"cxreg","message":"anyway I suppose there's no evidence that change is needed unless you can offer some joyee?  the solution for my pain is not adding pain for others.","date":"2018-06-13T18:45:58.694Z","type":"message"}
{"nick":"joyee","message":"it kind of depends on who actually cares about LTS","date":"2018-06-13T18:49:14.599Z","type":"message"}
{"nick":"joyee","message":"enterprise tend to be conservative...","date":"2018-06-13T18:49:41.295Z","type":"message"}
{"nick":"cxreg","message":"this I 100% agree with and is the driver of my position","date":"2018-06-13T18:50:17.576Z","type":"message"}
{"nick":"joyee","message":"If a backport is wanted, people can request for it","date":"2018-06-13T18:51:40.783Z","type":"message"}
{"nick":"joyee","message":"Right now we are just dropping surprises, which may or may not be bad","date":"2018-06-13T18:52:19.384Z","type":"message"}
{"nick":"ljharb","message":"airbnb cares about LTS and desperately wants as much backported into it as possible","date":"2018-06-13T18:52:37.608Z","type":"message"}
{"nick":"ljharb","message":"to me LTS isn't \"don't surprise me\", it's \"don't break me for as long as possible\" - iow, it provides a time guarantee of backports.","date":"2018-06-13T18:53:00.767Z","type":"message"}
{"nick":"ljharb","message":"(because to me, \"support\" means \"give me every new feature\")","date":"2018-06-13T18:53:28.852Z","type":"message"}
{"nick":"joyee","message":"maybe we can set up some sort of mechanism for users to see the list before we actually start to backport","date":"2018-06-13T18:54:43.656Z","type":"message"}
{"nick":"cxreg","message":"hmmmm I don't know, this shouldn't be a democratic process","date":"2018-06-13T18:55:45.591Z","type":"message"}
{"nick":"mylesborins","message":"sounds like user outreach group to discuss what people want from LTS makes sense","date":"2018-06-13T18:58:49.096Z","type":"message"}
{"nick":"mylesborins","message":"one of the things that can easily be overlooked with Semver Minor changes on LTS (which kind of invalidate other arguments for changes... if we allow new things its a free market for anything that doesn't break) is that our ecosystem is distributed and coalescing features actually allows for more stability IMHO","date":"2018-06-13T18:59:35.656Z","type":"message"}
{"nick":"mylesborins","message":"we don't backport all minors, but some that IMHO are good examples recently are new flags for openssl, n-api, the ability for certain apis to return \"this\" and make them chainable","date":"2018-06-13T19:00:10.054Z","type":"message"}
{"nick":"mylesborins","message":"these are the kinds of things that either break in suprising ways or hurt adoption","date":"2018-06-13T19:00:25.080Z","type":"message"}
{"nick":"mylesborins","message":"I'll 100% admit that something can feel super weird about new features landing on LTS can make things weird, especially when all of a sudden something that was supported on a new release line breaks older release lines in unexpected ways.","date":"2018-06-13T19:01:09.857Z","type":"message"}
{"nick":"mylesborins","message":"backporting an eventual name space is a great example of where this expectation can break things in a way that introduces some security vulnerabilities.","date":"2018-06-13T19:01:30.117Z","type":"message"}
{"nick":"ljharb","message":"if it does, I’d consider that breakage tho.","date":"2018-06-13T19:02:04.696Z","type":"message"}
{"nick":"mylesborins","message":"that being said... I do geniunely believe that the spirit of LTS is stability... and stability is more than just \"not backporting things\"... in fact I think keeping the branches as close as reasonable without breaking is a far better and stable experience","date":"2018-06-13T19:02:06.458Z","type":"message"}
{"nick":"ljharb","message":"+1","date":"2018-06-13T19:02:13.623Z","type":"message"}
{"nick":"mylesborins","message":"it also makes upgrading far easier","date":"2018-06-13T19:02:18.688Z","type":"message"}
{"nick":"mylesborins","message":"cxreg to be explicit though, I totally value your viewpoint, and am interested in doing user research around this. Our current policy isn't really scalable and has mostly involved me just doing a ton of work (which I can't really do anymore)","date":"2018-06-13T19:02:56.138Z","type":"message"}
{"nick":"mylesborins","message":"we need to make some changes to how we do LTS and I think that there should be no decisions left un questioned.","date":"2018-06-13T19:03:13.122Z","type":"message"}
{"nick":"mylesborins","message":"One thing we have discussed is changing how long we do active LTS","date":"2018-06-13T19:03:24.341Z","type":"message"}
{"nick":"mylesborins","message":"Another is getting rid of the alternating branches and offer LTS on all branches with a support contract like 1 year current, 1 year active, 1 year maintenance (for example)","date":"2018-06-13T19:04:04.686Z","type":"message"}
{"nick":"mylesborins","message":"Integrating V8 without ABI breakages significantly complicates this though","date":"2018-06-13T19:04:20.237Z","type":"message"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-06-13T19:06:58.731Z","type":"quit"}
{"nick":"m00dy","date":"2018-06-13T19:29:45.668Z","type":"join"}
{"nick":"m00dy","reason":"Ping timeout: 265 seconds","date":"2018-06-13T19:34:20.372Z","type":"quit"}
{"nick":"qbit","reason":"Quit: WeeChat 2.1","date":"2018-06-13T19:41:39.304Z","type":"quit"}
{"nick":"zeds","date":"2018-06-13T19:45:12.383Z","type":"join"}
{"nick":"zeds","date":"2018-06-13T19:47:12.974Z","type":"part"}
{"nick":"dc13ff","reason":"Quit: Connection closed for inactivity","date":"2018-06-13T19:58:06.458Z","type":"quit"}
{"nick":"qbit","date":"2018-06-13T20:07:51.095Z","type":"join"}
{"nick":"qbit","new_nick":"Guest58720","date":"2018-06-13T20:08:14.599Z","type":"nick"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2018-06-13T20:09:10.761Z","type":"quit"}
{"nick":"Guest58720","new_nick":"qbit","date":"2018-06-13T20:09:32.743Z","type":"nick"}
{"nick":"srl295","date":"2018-06-13T20:34:10.036Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-06-13T21:07:15.713Z","type":"quit"}
{"nick":"marthinal","date":"2018-06-13T21:07:26.661Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 240 seconds","date":"2018-06-13T21:11:35.499Z","type":"quit"}
{"nick":"seishun","date":"2018-06-13T21:28:26.784Z","type":"join"}
{"nick":"Trott","message":"In transit and likely to miss TSC meeting assuming my calendar is right and it’s happening in 20 minutes.","date":"2018-06-13T21:41:01.716Z","type":"message"}
{"nick":"Trott","message":"Related: Any Los Angeles-based folks wanting to meet up in the next few days: hit me up.","date":"2018-06-13T21:41:46.684Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 268 seconds","date":"2018-06-13T21:44:42.777Z","type":"quit"}
{"nick":"zeds","date":"2018-06-13T21:51:10.759Z","type":"join"}
{"nick":"Fishrock123","date":"2018-06-13T22:01:12.361Z","type":"join"}
{"nick":"zeds","reason":"Ping timeout: 260 seconds","date":"2018-06-13T22:19:50.762Z","type":"quit"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2018-06-13T23:10:48.363Z","type":"quit"}
{"nick":"zeds","date":"2018-06-13T23:27:20.424Z","type":"join"}
