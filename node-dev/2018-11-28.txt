{"nick":"Trott","message":"cxreg: Yes, at some point, probably soon. I'm not sure what the delay is, but there's certainly a lot of moving parts to pushing out versions for four release lines at once, so a lot that can go wrong.","date":"2018-11-28T00:38:40.268Z","type":"message"}
{"nick":"octetcloud","date":"2018-11-28T00:46:40.699Z","type":"join"}
{"nick":"richardlau","message":"Available now: https://nodejs.org/en/blog/vulnerability/november-2018-security-releases/","date":"2018-11-28T00:57:43.703Z","type":"message"}
{"nick":"doodadjs","reason":"Ping timeout: 250 seconds","date":"2018-11-28T01:34:37.155Z","type":"quit"}
{"nick":"ralphtheninja","reason":"Ping timeout: 260 seconds","date":"2018-11-28T02:29:01.379Z","type":"quit"}
{"nick":"octetcloud","reason":"Quit: Konversation terminated!","date":"2018-11-28T02:45:09.911Z","type":"quit"}
{"nick":"octetcloud","date":"2018-11-28T02:45:21.984Z","type":"join"}
{"nick":"svennidal","reason":"Quit: WeeChat 2.3","date":"2018-11-28T03:12:44.039Z","type":"quit"}
{"nick":"svennidal","date":"2018-11-28T03:13:51.784Z","type":"join"}
{"nick":"svennidal","reason":"Quit: WeeChat 2.3","date":"2018-11-28T03:22:30.344Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2018-11-28T03:27:00.625Z","type":"quit"}
{"nick":"zsoc","date":"2018-11-28T03:31:56.448Z","type":"join"}
{"nick":"zsoc","reason":"Changing host","date":"2018-11-28T03:31:56.449Z","type":"quit"}
{"nick":"zsoc","date":"2018-11-28T03:31:56.449Z","type":"join"}
{"nick":"svennidal","date":"2018-11-28T03:32:39.551Z","type":"join"}
{"nick":"zeds1","date":"2018-11-28T03:48:14.922Z","type":"join"}
{"nick":"zeds1","date":"2018-11-28T03:48:36.297Z","type":"part"}
{"nick":"MylesBorins","message":"anyone around wanna talk about namespaces?","date":"2018-11-28T03:54:08.816Z","type":"message"}
{"nick":"MylesBorins","message":"ljharb :D","date":"2018-11-28T03:54:11.420Z","type":"message"}
{"nick":"devsnek","message":"MylesBorins: what kinda namespaces","date":"2018-11-28T03:54:25.729Z","type":"message"}
{"nick":"MylesBorins","message":"namespaces for node","date":"2018-11-28T03:54:32.074Z","type":"message"}
{"nick":"MylesBorins","message":"https://github.com/nodejs/node/pull/21551","date":"2018-11-28T03:54:37.078Z","type":"message"}
{"nick":"MylesBorins","message":"I had a long chat with Domenic on this today","date":"2018-11-28T03:54:45.770Z","type":"message"}
{"nick":"MylesBorins","message":"and I think we should be doing \"node:module","date":"2018-11-28T03:54:57.570Z","type":"message"}
{"nick":"MylesBorins","message":"rather than \"@nodejs/module\"","date":"2018-11-28T03:55:02.820Z","type":"message"}
{"nick":"MylesBorins","message":"for builtins","date":"2018-11-28T03:55:05.011Z","type":"message"}
{"nick":"devsnek","message":"technically we already do","date":"2018-11-28T03:55:11.586Z","type":"message"}
{"nick":"devsnek","message":"at least for esm","date":"2018-11-28T03:55:15.506Z","type":"message"}
{"nick":"MylesBorins","message":"and I wanna implement it ðŸ¤£","date":"2018-11-28T03:55:16.999Z","type":"message"}
{"nick":"MylesBorins","message":"This is likely for the cjs implementation only right now, and module WG could pick up implementation in the kernel for this","date":"2018-11-28T03:55:42.677Z","type":"message"}
{"nick":"devsnek","message":"what about when some p2p thing called `node` starts using `node:` urls :^)","date":"2018-11-28T03:55:50.917Z","type":"message"}
{"nick":"MylesBorins","message":"ðŸ˜…","date":"2018-11-28T03:56:12.024Z","type":"message"}
{"nick":"devsnek","message":"esm uses `node:` urls internally for pointing to builtins","date":"2018-11-28T03:56:16.027Z","type":"message"}
{"nick":"devsnek","message":"just remove an if statement in Loader#resolve and its exposed","date":"2018-11-28T03:56:28.178Z","type":"message"}
{"nick":"devsnek","message":"man i don't even have ecmascript-modules checked out anymore","date":"2018-11-28T03:57:31.855Z","type":"message"}
{"nick":"devsnek","message":"MylesBorins: are you saying you would do `node:` in require too?","date":"2018-11-28T04:01:13.954Z","type":"message"}
{"nick":"MylesBorins","message":"yup","date":"2018-11-28T04:01:17.720Z","type":"message"}
{"nick":"devsnek","message":"cuz require doesn't really have a concept of urls","date":"2018-11-28T04:01:20.117Z","type":"message"}
{"nick":"MylesBorins","message":"we need to get namespaces into core","date":"2018-11-28T04:01:29.239Z","type":"message"}
{"nick":"MylesBorins","message":"the idea I'm thinking is essentially working with the internal module whitelist that we have","date":"2018-11-28T04:01:56.636Z","type":"message"}
{"nick":"devsnek","message":"why externally node: over @nodejs prefix","date":"2018-11-28T04:02:00.401Z","type":"message"}
{"nick":"MylesBorins","message":"for legacy modules they don't need the `node:`","date":"2018-11-28T04:02:08.067Z","type":"message"}
{"nick":"MylesBorins","message":"secondary list does require it","date":"2018-11-28T04:02:12.338Z","type":"message"}
{"nick":"MylesBorins","message":"thoughts re: @nodejs","date":"2018-11-28T04:02:18.128Z","type":"message"}
{"nick":"MylesBorins","message":"I think it is important to have a clear mental model about the difference between a built-in and something being loaded externally","date":"2018-11-28T04:02:36.060Z","type":"message"}
{"nick":"MylesBorins","message":"(that point is up for debate)","date":"2018-11-28T04:02:40.749Z","type":"message"}
{"nick":"devsnek","message":"i think some people wanted to blend our npm namespace and the things published there with builtins","date":"2018-11-28T04:03:09.009Z","type":"message"}
{"nick":"devsnek","message":"(not saying i do or don't)","date":"2018-11-28T04:03:20.583Z","type":"message"}
{"nick":"MylesBorins","message":"but if we want namespaces to represent specific runtimes (std:, web:, node:, etc:) we are starting at a disadvantage using @ as all future runtimes will have to compete with global npm registry","date":"2018-11-28T04:03:32.986Z","type":"message"}
{"nick":"MylesBorins","message":"I think core should still publish our things to @nodejs","date":"2018-11-28T04:03:47.457Z","type":"message"}
{"nick":"MylesBorins","message":"but there would be that explicit difference between something provided by the runtime and something external","date":"2018-11-28T04:04:01.953Z","type":"message"}
{"nick":"MylesBorins","message":"Whether or not we get consensus about this... i think the same basica resolution algorithm works here... you just s/node\\:/\\@node\\","date":"2018-11-28T04:04:40.234Z","type":"message"}
{"nick":"devsnek","message":"as a sidenote, i'm hoping we don't have js standard library modules resolving with strings in the same place as implementers of js use","date":"2018-11-28T04:07:39.010Z","type":"message"}
{"nick":"MylesBorins","message":"devsnek do you know where the specifier resolution for built ins happens for CJS?","date":"2018-11-28T04:15:30.249Z","type":"message"}
{"nick":"MylesBorins","message":"digging through the code right now but it is a bit ðŸ˜…","date":"2018-11-28T04:15:40.180Z","type":"message"}
{"nick":"devsnek","message":"sec","date":"2018-11-28T04:15:45.767Z","type":"message"}
{"nick":"devsnek","message":"MylesBorins: https://github.com/nodejs/node/blob/master/lib/internal/modules/cjs/loader.js#L537","date":"2018-11-28T04:16:24.098Z","type":"message"}
{"nick":"devsnek","message":"nonInternalExists is the most annoying name ever btw","date":"2018-11-28T04:18:00.353Z","type":"message"}
{"nick":"MylesBorins","message":"lol","date":"2018-11-28T04:19:10.038Z","type":"message"}
{"nick":"MylesBorins","message":"I'm going down the rabbit hole","date":"2018-11-28T04:19:14.680Z","type":"message"}
{"nick":"MylesBorins","message":"semms like it eventually is a call to NativeModule._source.hasOwnProperty(id)","date":"2018-11-28T04:19:43.859Z","type":"message"}
{"nick":"devsnek","message":"if i were doing this","date":"2018-11-28T04:20:19.544Z","type":"message"}
{"nick":"devsnek","message":"i would resolve `node:xyz` to `xyz` here https://github.com/nodejs/node/blob/master/lib/internal/modules/cjs/loader.js#L570","date":"2018-11-28T04:20:25.966Z","type":"message"}
{"nick":"MylesBorins","message":"NativeModule._source = getInternalBinding('natives');","date":"2018-11-28T04:20:28.758Z","type":"message"}
{"nick":"MylesBorins","message":"but we would want to whitelist legacy modules","date":"2018-11-28T04:21:42.681Z","type":"message"}
{"nick":"MylesBorins","message":"I think I figured something out","date":"2018-11-28T04:26:51.094Z","type":"message"}
{"nick":"MylesBorins","message":"1 momo","date":"2018-11-28T04:26:52.069Z","type":"message"}
{"nick":"MylesBorins","message":":D","date":"2018-11-28T04:26:53.110Z","type":"message"}
{"nick":"devsnek","message":"ðŸ‘Œ","date":"2018-11-28T04:27:24.660Z","type":"message"}
{"nick":"MylesBorins","message":"What is getInternalBinding('natives'); loading?","date":"2018-11-28T04:29:26.906Z","type":"message"}
{"nick":"MylesBorins","message":"where do I find that source?","date":"2018-11-28T04:29:33.293Z","type":"message"}
{"nick":"devsnek","message":"MylesBorins: c++","date":"2018-11-28T04:32:48.676Z","type":"message"}
{"nick":"MylesBorins","message":"which C++ file","date":"2018-11-28T04:32:58.366Z","type":"message"}
{"nick":"devsnek","message":"node.cc","date":"2018-11-28T04:33:15.464Z","type":"message"}
{"nick":"devsnek","message":"GetInternalBinding","date":"2018-11-28T04:33:21.141Z","type":"message"}
{"nick":"devsnek","message":"using \"natives\" loads the mess from node_javascript.cc","date":"2018-11-28T04:33:31.210Z","type":"message"}
{"nick":"devsnek","message":"which is generated by js2c","date":"2018-11-28T04:33:36.543Z","type":"message"}
{"nick":"devsnek","message":"you can get an idea of the structure from node_javascript.h","date":"2018-11-28T04:33:43.952Z","type":"message"}
{"nick":"devsnek","message":"oh wait it was changed","date":"2018-11-28T04:35:06.992Z","type":"message"}
{"nick":"devsnek","message":"its node_native_module.cc now","date":"2018-11-28T04:36:13.244Z","type":"message"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2018-11-28T04:36:23.410Z","type":"quit"}
{"nick":"MylesBorins","message":"i did it!","date":"2018-11-28T04:39:37.295Z","type":"message"}
{"nick":"MylesBorins","message":"less than 15 lines of code","date":"2018-11-28T04:40:28.573Z","type":"message"}
{"nick":"MylesBorins","message":"LOL","date":"2018-11-28T04:40:29.529Z","type":"message"}
{"nick":"MylesBorins","message":"has legacy apis","date":"2018-11-28T04:40:30.533Z","type":"message"}
{"nick":"MylesBorins","message":"and new apis","date":"2018-11-28T04:40:31.546Z","type":"message"}
{"nick":"MylesBorins","message":"new apis cannot be required without namespace","date":"2018-11-28T04:40:33.666Z","type":"message"}
{"nick":"MylesBorins","message":"(worker_threads can already be used to test this out)","date":"2018-11-28T04:40:34.656Z","type":"message"}
{"nick":"MylesBorins","message":"heh, I broke something","date":"2018-11-28T04:41:29.632Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2018-11-28T04:41:34.526Z","type":"message"}
{"nick":"MylesBorins","message":"can't be done where we first tried it I don't think...","date":"2018-11-28T04:46:06.738Z","type":"message"}
{"nick":"MylesBorins","message":"we could simply \"strip off\" the namespace","date":"2018-11-28T04:46:14.616Z","type":"message"}
{"nick":"MylesBorins","message":"but we need a way to enforce the namespace is used for new builtins","date":"2018-11-28T04:46:23.049Z","type":"message"}
{"nick":"MylesBorins","message":"I might have something :D","date":"2018-11-28T04:49:37.604Z","type":"message"}
{"nick":"MylesBorins","message":"I inverted some logic, fingers crossed","date":"2018-11-28T04:51:09.649Z","type":"message"}
{"nick":"devsnek","message":"MylesBorins: my first thing was to strip namespace + put all new modules in a folder called `@nodejs` in `lib`","date":"2018-11-28T04:52:27.702Z","type":"message"}
{"nick":"MylesBorins","message":"so I'm going with \"node:\" rather than \"nodejs@\"","date":"2018-11-28T04:52:59.251Z","type":"message"}
{"nick":"MylesBorins","message":"but I came up with a solution that doesn't require any renaming of directories","date":"2018-11-28T04:53:10.274Z","type":"message"}
{"nick":"MylesBorins","message":"although we likely will want to improve the perf","date":"2018-11-28T04:53:15.936Z","type":"message"}
{"nick":"devsnek","message":"yeah directories won't work for `node:`","date":"2018-11-28T04:53:30.022Z","type":"message"}
{"nick":"MylesBorins","message":"this should likely be pushed down to the C layer in the natives binding","date":"2018-11-28T04:57:09.365Z","type":"message"}
{"nick":"ljharb","message":"`node:` definitely won't work, a core part of the design was \"an otherwise npm-installable package\"","date":"2018-11-28T05:46:56.962Z","type":"message"}
{"nick":"xkapastel","reason":"Quit: Connection closed for inactivity","date":"2018-11-28T05:52:31.985Z","type":"quit"}
{"nick":"lpin","date":"2018-11-28T06:05:55.559Z","type":"join"}
{"nick":"seishun","date":"2018-11-28T06:26:19.369Z","type":"join"}
{"nick":"seishun","reason":"Disconnected by services","date":"2018-11-28T06:27:15.475Z","type":"quit"}
{"nick":"seishun","date":"2018-11-28T06:27:22.270Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 246 seconds","date":"2018-11-28T06:30:33.017Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2018-11-28T06:51:48.436Z","type":"quit"}
{"nick":"ljharb","topic":"Get registered on freenode ( https://git.io/vaTS2 ) | Node.js Current: v11.3.0 | LTS: Dubnium v10.14.0, Carbon v8.14.0, Boron v6.15.0; EOL: Argon v4.9.1, v9, v7, <= v5 | -- https://nodejs.org/ -- IRC Logs: http://logs.libuv.org/node-dev/latest -- Channel Info: http://nodeirc.info/#node-dev -- Newcomers welcome: http://nodeschool.io/ -- dev channel for all things node core","date":"2018-11-28T07:14:28.539Z","type":"topic"}
{"nick":"seishun","date":"2018-11-28T07:20:39.625Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 246 seconds","date":"2018-11-28T07:36:20.982Z","type":"quit"}
{"nick":"seishun","date":"2018-11-28T07:44:38.117Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2018-11-28T07:49:00.780Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-28T08:25:19.359Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T08:26:11.458Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-28T08:26:24.192Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T08:26:25.775Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-28T08:33:46.166Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T09:00:41.919Z","type":"quit"}
{"nick":"spillere","reason":"Ping timeout: 246 seconds","date":"2018-11-28T09:12:43.348Z","type":"quit"}
{"nick":"spillere","date":"2018-11-28T09:14:49.357Z","type":"join"}
{"nick":"spillere","reason":"Changing host","date":"2018-11-28T09:14:49.608Z","type":"quit"}
{"nick":"spillere","date":"2018-11-28T09:14:49.608Z","type":"join"}
{"nick":"m00dy","date":"2018-11-28T09:17:58.676Z","type":"join"}
{"nick":"spillere","reason":"Ping timeout: 246 seconds","date":"2018-11-28T09:21:28.276Z","type":"quit"}
{"nick":"spillere","date":"2018-11-28T09:23:41.737Z","type":"join"}
{"nick":"spillere","reason":"Changing host","date":"2018-11-28T09:23:41.922Z","type":"quit"}
{"nick":"spillere","date":"2018-11-28T09:23:41.923Z","type":"join"}
{"nick":"koh110","date":"2018-11-28T10:34:29.185Z","type":"join"}
{"nick":"koh110","date":"2018-11-28T10:34:54.052Z","type":"part"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T11:08:49.485Z","type":"quit"}
{"nick":"rtn","date":"2018-11-28T11:09:03.899Z","type":"join"}
{"nick":"rtn","new_nick":"ralphtheninja","date":"2018-11-28T11:09:11.673Z","type":"nick"}
{"nick":"m00dy","date":"2018-11-28T11:29:10.153Z","type":"join"}
{"nick":"xkapastel","date":"2018-11-28T11:43:44.792Z","type":"join"}
{"nick":"bmsdave","date":"2018-11-28T12:49:55.185Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T13:02:02.581Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-28T13:13:52.530Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T13:38:23.636Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-28T13:40:15.742Z","type":"join"}
{"nick":"doodadjs","date":"2018-11-28T14:51:22.873Z","type":"join"}
{"nick":"octetcloud","date":"2018-11-28T16:04:42.039Z","type":"join"}
{"nick":"bmsdave","reason":"Ping timeout: 256 seconds","date":"2018-11-28T16:04:49.230Z","type":"quit"}
{"nick":"zsoc","reason":"Ping timeout: 246 seconds","date":"2018-11-28T16:08:24.000Z","type":"quit"}
{"nick":"zsoc","date":"2018-11-28T17:13:46.266Z","type":"join"}
{"nick":"zsoc","reason":"Changing host","date":"2018-11-28T17:13:46.266Z","type":"quit"}
{"nick":"zsoc","date":"2018-11-28T17:13:46.266Z","type":"join"}
{"nick":"seishun","date":"2018-11-28T17:22:14.999Z","type":"join"}
{"nick":"srl295","date":"2018-11-28T17:23:29.191Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T17:32:30.838Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-28T17:33:18.883Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T17:33:28.082Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-28T17:34:14.470Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T17:34:44.956Z","type":"quit"}
{"nick":"m00dy","date":"2018-11-28T17:35:49.927Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-11-28T17:36:26.856Z","type":"quit"}
{"nick":"ralphtheninja","reason":"Remote host closed the connection","date":"2018-11-28T18:00:19.900Z","type":"quit"}
{"nick":"rtn","date":"2018-11-28T18:03:40.020Z","type":"join"}
{"nick":"rtn","new_nick":"ralphtheninja","date":"2018-11-28T18:03:50.248Z","type":"nick"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-11-28T18:25:02.695Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 268 seconds","date":"2018-11-28T19:43:40.894Z","type":"quit"}
{"nick":"seishun","date":"2018-11-28T20:16:17.620Z","type":"join"}
{"nick":"joyee","message":"I am thinking about having all the internal/process/something.js return functions/descriptors that get put onto the process object in bootstrap/node.js, instead of having everybody throwing random stuff onto the global process object and you have no idea who's in control","date":"2018-11-28T20:24:58.717Z","type":"message"}
{"nick":"devsnek","message":"joyee: zalgo is in control","date":"2018-11-28T20:25:36.344Z","type":"message"}
{"nick":"devsnek","message":"rn i think everything exports a function like \"setupXYZ\"","date":"2018-11-28T20:25:49.201Z","type":"message"}
{"nick":"ZeZu","reason":"Ping timeout: 268 seconds","date":"2018-11-28T20:26:13.825Z","type":"quit"}
{"nick":"joyee","message":"devsnek: yeah I am thinking about `process.assert = perThreadSetup.assert()` instead of `perThreadSetup.setupAssert()` which touches `process`","date":"2018-11-28T20:26:50.363Z","type":"message"}
{"nick":"devsnek","message":"sounds ok","date":"2018-11-28T20:27:11.900Z","type":"message"}
{"nick":"joyee","message":"And you can have a clearer view what's on process by looking at the main bootstrapper, but there is no need to look at all those implementations","date":"2018-11-28T20:27:23.468Z","type":"message"}
{"nick":"devsnek","message":"why is process.assert a thing","date":"2018-11-28T20:27:28.724Z","type":"message"}
{"nick":"joyee","message":"IDK, legacy I gues","date":"2018-11-28T20:27:36.202Z","type":"message"}
{"nick":"devsnek","message":"ðŸ˜ž","date":"2018-11-28T20:27:43.950Z","type":"message"}
{"nick":"joyee","message":"So many process._something I want to get rid of","date":"2018-11-28T20:28:03.613Z","type":"message"}
{"nick":"devsnek","message":"you look up \"deprecated\" in a dictionary its just a link to nodejs.org","date":"2018-11-28T20:29:28.212Z","type":"message"}
{"nick":"joyee","message":"heh","date":"2018-11-28T20:29:43.406Z","type":"message"}
{"nick":"ZeZu","date":"2018-11-28T20:31:42.107Z","type":"join"}
{"nick":"bradleymeck","message":"if we could make ._linkedBinding sane to use, I'd be pretty happy making it not have the `_`","date":"2018-11-28T20:49:30.298Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: I believe we need a better embedder story than just exposing internals or promoting semi-internals..","date":"2018-11-28T20:52:07.707Z","type":"message"}
{"nick":"joyee","message":"Out of the many things in Node core this is something that really need a design..instead of a random PR I guess","date":"2018-11-28T20:53:00.400Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: linkedBinding is only populated by manually patching in 3rd party libs during compilation","date":"2018-11-28T20:54:01.462Z","type":"message"}
{"nick":"bradleymeck","message":"it is one of the oddest things","date":"2018-11-28T20:54:12.705Z","type":"message"}
{"nick":"bradleymeck","message":"i'm not 100% sure why it has a _","date":"2018-11-28T20:54:52.014Z","type":"message"}
{"nick":"joyee","message":"Because it's only used by embedders?","date":"2018-11-28T20:56:18.780Z","type":"message"}
{"nick":"joyee","message":"Our own code would just go with internalBinding, users go with C++ addon machinery, _linkedBinding only serves people who compiles Node and want to add some other bindings","date":"2018-11-28T20:57:39.486Z","type":"message"}
{"nick":"joyee","message":"i.e. embedders","date":"2018-11-28T20:57:56.488Z","type":"message"}
{"nick":"joyee","message":"Same story with _third_party_main.js","date":"2018-11-28T20:58:46.156Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2018-11-28T21:07:12.893Z","type":"quit"}
{"nick":"bradleymeck","message":"last I checked _third_party_main.js was broken","date":"2018-11-28T21:11:29.008Z","type":"message"}
{"nick":"joyee","message":"I'd say a lot of embedder facing features are, unless they submit patches back to fix those","date":"2018-11-28T21:13:26.729Z","type":"message"}
{"nick":"joyee","message":"Probably not really features, more like hidden switches preserved for people who can make their own tweaks to their own fork in the first place","date":"2018-11-28T21:14:01.199Z","type":"message"}
{"nick":"joyee","message":"Electron has been the most active embedder who actually keeps comeing back upstreaming things I believe","date":"2018-11-28T21:15:29.384Z","type":"message"}
{"nick":"m00dy","date":"2018-11-28T22:05:03.329Z","type":"join"}
