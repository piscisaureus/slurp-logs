{"nick":"ljharb","message":"k, let's throw something at the wall https://github.com/nodejs/node/pull/26210","date":"2019-02-20T00:04:38.277Z","type":"message"}
{"nick":"dbevenius","date":"2019-02-20T00:07:49.903Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-02-20T00:12:11.888Z","type":"quit"}
{"nick":"devsnek","message":"ljharb: https://travis-ci.com/nodejs/node/builds/101541395","date":"2019-02-20T00:33:53.869Z","type":"message"}
{"nick":"ljharb","message":"kk","date":"2019-02-20T00:34:47.649Z","type":"message"}
{"nick":"dbevenius","date":"2019-02-20T01:08:39.379Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-20T01:13:06.124Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T01:35:39.372Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-20T01:40:03.070Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T01:48:09.957Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-02-20T01:52:32.828Z","type":"quit"}
{"nick":"zsoc","reason":"Ping timeout: 250 seconds","date":"2019-02-20T01:57:48.645Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T01:59:49.941Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-02-20T02:04:14.768Z","type":"quit"}
{"nick":"antsmartian","date":"2019-02-20T02:05:02.484Z","type":"join"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-02-20T02:11:24.327Z","type":"quit"}
{"nick":"neo4","date":"2019-02-20T02:31:12.022Z","type":"join"}
{"nick":"neo4","reason":"Quit: neo4","date":"2019-02-20T03:55:17.667Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T04:00:39.037Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-02-20T04:15:33.922Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T04:15:49.303Z","type":"join"}
{"nick":"lpin","date":"2019-02-20T06:12:43.173Z","type":"join"}
{"nick":"lundibundi","date":"2019-02-20T07:12:31.109Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 246 seconds","date":"2019-02-20T07:19:33.022Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-20T08:47:25.822Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 255 seconds","date":"2019-02-20T09:21:11.735Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-02-20T09:32:32.666Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-20T09:38:20.915Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 268 seconds","date":"2019-02-20T10:08:06.831Z","type":"quit"}
{"nick":"gamelaster","date":"2019-02-20T10:11:19.879Z","type":"join"}
{"nick":"lpin","date":"2019-02-20T10:14:21.478Z","type":"join"}
{"nick":"lundibundi","date":"2019-02-20T10:41:41.436Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-02-20T11:00:03.348Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-20T11:45:35.421Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 244 seconds","date":"2019-02-20T12:22:57.977Z","type":"quit"}
{"nick":"lundibundi","date":"2019-02-20T13:00:52.426Z","type":"join"}
{"nick":"bradleymeck","message":"I feel like I've forgotten more about all the design ideas i've been given about modules than I now remember. Writing up stuff, and then realizing I talked about this random design issue like 2 years ago with random a comment thread on github.","date":"2019-02-20T14:29:33.187Z","type":"message"}
{"nick":"bradleymeck","message":"Like realizing what Identity of module locations can be equal but not referentially ===","date":"2019-02-20T14:29:55.158Z","type":"message"}
{"nick":"bradleymeck","message":"if you want to design stuff to eagerly return so that it can be used immediately","date":"2019-02-20T14:30:20.611Z","type":"message"}
{"nick":"joyee","message":"https://include-what-you-use.org/ maybe this could help finding code-and-learn tasks","date":"2019-02-20T15:35:55.949Z","type":"message"}
{"nick":"joyee","message":"TBH I hope that we don't have to compile everything whenever some persistent is added to env..","date":"2019-02-20T15:36:55.425Z","type":"message"}
{"nick":"joyee","message":"(But that's kind of separate from what iwyu is capable of finding)","date":"2019-02-20T15:37:28.687Z","type":"message"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-02-20T15:43:28.978Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T15:44:29.782Z","type":"join"}
{"nick":"gamelaster","reason":"Ping timeout: 268 seconds","date":"2019-02-20T16:04:32.924Z","type":"quit"}
{"nick":"zsoc","date":"2019-02-20T16:14:50.378Z","type":"join"}
{"nick":"devsnek","message":"joyee: looks cool","date":"2019-02-20T16:16:28.661Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 244 seconds","date":"2019-02-20T16:42:19.351Z","type":"quit"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-02-20T16:45:01.690Z","type":"quit"}
{"nick":"AtumT","date":"2019-02-20T16:45:02.591Z","type":"join"}
{"nick":"dbevenius","date":"2019-02-20T16:50:54.167Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-20T16:55:39.023Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T17:27:59.085Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-20T17:32:24.017Z","type":"quit"}
{"nick":"AtumT","reason":"Ping timeout: 250 seconds","date":"2019-02-20T18:00:40.505Z","type":"quit"}
{"nick":"AtumT","date":"2019-02-20T18:02:45.867Z","type":"join"}
{"nick":"dbevenius","date":"2019-02-20T18:05:54.157Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-20T18:10:33.062Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T18:26:09.822Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-02-20T18:30:38.738Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T18:46:20.199Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 268 seconds","date":"2019-02-20T18:51:02.712Z","type":"quit"}
{"nick":"hemx","date":"2019-02-20T18:56:15.226Z","type":"join"}
{"nick":"neo4","date":"2019-02-20T19:09:25.063Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-02-20T19:10:18.751Z","type":"quit"}
{"nick":"gamelaster","date":"2019-02-20T19:20:00.022Z","type":"join"}
{"nick":"dbevenius","date":"2019-02-20T19:28:12.863Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 240 seconds","date":"2019-02-20T19:32:27.419Z","type":"quit"}
{"nick":"hemx","message":"Hi, I would like to know if there is a way to run only a single test and get coverage of node.js core modules. Is there anyone here who could help?","date":"2019-02-20T19:43:20.448Z","type":"message"}
{"nick":"dbevenius","date":"2019-02-20T19:48:04.916Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-02-20T19:52:59.796Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T20:00:19.208Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 246 seconds","date":"2019-02-20T20:04:39.015Z","type":"quit"}
{"nick":"hemx","date":"2019-02-20T20:15:14.479Z","type":"part"}
{"nick":"dbevenius","date":"2019-02-20T20:17:10.490Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-02-20T20:21:18.384Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T20:37:19.848Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-02-20T20:41:35.780Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T20:57:00.540Z","type":"join"}
{"nick":"bradleymeck","message":"boom","date":"2019-02-20T21:00:26.679Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: i am very much in favour of what you were saying","date":"2019-02-20T21:00:41.373Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: but i'm arguing that we should not do searching ;p","date":"2019-02-20T21:00:59.933Z","type":"message"}
{"nick":"bradleymeck","message":"ship the one that works in both w/ and w/o searching","date":"2019-02-20T21:01:16.043Z","type":"message"}
{"nick":"devsnek","message":"weren't you saying we shouldn't coerce the ecosystem","date":"2019-02-20T21:01:16.384Z","type":"message"}
{"nick":"bradleymeck","message":"yup","date":"2019-02-20T21:01:21.596Z","type":"message"}
{"nick":"bradleymeck","message":"ship the one that works regardless of the situation","date":"2019-02-20T21:01:30.933Z","type":"message"}
{"nick":"devsnek","message":"not having searching coerces the ecosystem","date":"2019-02-20T21:01:31.729Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-02-20T21:01:43.364Z","type":"quit"}
{"nick":"bradleymeck","message":"it will continue to work even if we add searching later","date":"2019-02-20T21:01:45.135Z","type":"message"}
{"nick":"devsnek","message":"ok now i'm confused","date":"2019-02-20T21:01:48.928Z","type":"message"}
{"nick":"devsnek","message":"a resolver with searching works for both cases","date":"2019-02-20T21:02:07.510Z","type":"message"}
{"nick":"devsnek","message":"(and it also makes dual mode packages really easy, which i was hoping to bring up before we dropped)","date":"2019-02-20T21:02:28.888Z","type":"message"}
{"nick":"bradleymeck","message":"no, because you have non-error cases treated as errors in the other scenario","date":"2019-02-20T21:02:30.224Z","type":"message"}
{"nick":"devsnek","message":"oh you're saying if we added it later","date":"2019-02-20T21:02:48.623Z","type":"message"}
{"nick":"bradleymeck","message":"the extension searching dual mode is super hard to do right also","date":"2019-02-20T21:02:49.641Z","type":"message"}
{"nick":"devsnek","message":"at least jordan and i would be against shipping without it though","date":"2019-02-20T21:03:04.270Z","type":"message"}
{"nick":"devsnek","message":"and dual mode is just normal searching","date":"2019-02-20T21:03:10.670Z","type":"message"}
{"nick":"devsnek","message":"check for one file, check for the other","date":"2019-02-20T21:03:16.276Z","type":"message"}
{"nick":"bradleymeck","message":"yea, i'm trying to punt everything i can if we can agree on something that will work regardless of personal decisions","date":"2019-02-20T21:03:23.158Z","type":"message"}
{"nick":"bradleymeck","message":"also how file extension searching works with loaders is a big ?","date":"2019-02-20T21:03:35.217Z","type":"message"}
{"nick":"devsnek","message":"regardless of personal decisions is leaving resolution in","date":"2019-02-20T21:03:58.668Z","type":"message"}
{"nick":"devsnek","message":"because its what the current ecosystem is","date":"2019-02-20T21:04:04.453Z","type":"message"}
{"nick":"bradleymeck","message":"since we have some level of agreement that you can always use the non-searching form, we can iterate off that. we do not have agreement on alternative","date":"2019-02-20T21:04:22.973Z","type":"message"}
{"nick":"bradleymeck","message":"personal decision != status quo","date":"2019-02-20T21:04:31.742Z","type":"message"}
{"nick":"devsnek","message":"we don't have agreement for the non-searching","date":"2019-02-20T21:04:36.832Z","type":"message"}
{"nick":"bradleymeck","message":"status quo is what isn't at consensus","date":"2019-02-20T21:04:43.345Z","type":"message"}
{"nick":"devsnek","message":"status quo is searching","date":"2019-02-20T21:04:48.749Z","type":"message"}
{"nick":"ljharb","message":"i don't agree we can iterate.","date":"2019-02-20T21:04:56.658Z","type":"message"}
{"nick":"ljharb","message":"whatever we first ship with is what will be considered the safe subset","date":"2019-02-20T21:05:06.066Z","type":"message"}
{"nick":"bradleymeck","message":"> we don't have agreement for the non-searching","date":"2019-02-20T21:05:16.674Z","type":"message"}
{"nick":"ljharb","message":"so even if people write code without extensions, they'll then use a build process to add them","date":"2019-02-20T21:05:19.680Z","type":"message"}
{"nick":"ljharb","message":"so?","date":"2019-02-20T21:05:20.234Z","type":"message"}
{"nick":"ljharb","message":"we don't have agreement for proceeding without it either","date":"2019-02-20T21:05:26.091Z","type":"message"}
{"nick":"bradleymeck","message":"can you clarify? to my knowledge non-searching paths should always work the same regardless of these choices","date":"2019-02-20T21:05:31.125Z","type":"message"}
{"nick":"ljharb","message":"yes, it will","date":"2019-02-20T21:05:35.287Z","type":"message"}
{"nick":"devsnek","message":"but we don't have agreement on shipping with only that","date":"2019-02-20T21:05:48.497Z","type":"message"}
{"nick":"bradleymeck","message":"so, if we have something that always works the same in the future what about it is bad?","date":"2019-02-20T21:05:53.058Z","type":"message"}
{"nick":"ljharb","message":"i'm saying that if we later add searching, and i write `import from 'a/b'`, i'll have to use a build process to change it to `a/b.mjs` to remain compatible with older versions","date":"2019-02-20T21:06:03.359Z","type":"message"}
{"nick":"ljharb","message":"adding searching is forwards compatible, but it's not backwards compatible.","date":"2019-02-20T21:06:14.004Z","type":"message"}
{"nick":"ljharb","message":"i require both.","date":"2019-02-20T21:06:15.798Z","type":"message"}
{"nick":"devsnek","message":"i'm saying i just think its a terrible experience","date":"2019-02-20T21:06:23.168Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: its flagged right now, so it can be expected to not be back compat?","date":"2019-02-20T21:06:26.815Z","type":"message"}
{"nick":"ljharb","message":"oh i don't care about the flagged one","date":"2019-02-20T21:06:33.670Z","type":"message"}
{"nick":"ljharb","message":"i'm talking about unflagging","date":"2019-02-20T21:06:36.307Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: i have no opinion on the experience, just pointing out we have an agreed subset of behavior","date":"2019-02-20T21:06:49.660Z","type":"message"}
{"nick":"devsnek","message":"i'm also talking about unflagging","date":"2019-02-20T21:06:51.012Z","type":"message"}
{"nick":"ljharb","message":"buttttt i don't want the flagged impl to end up being in a state i'm not comfortable unflagging, and then have everyone be so hyped to ship that we vote and unflag","date":"2019-02-20T21:06:57.392Z","type":"message"}
{"nick":"devsnek","message":"the only agreed subset we have is the thing we agreed never to ship","date":"2019-02-20T21:07:04.781Z","type":"message"}
{"nick":"bradleymeck","message":"unflagging w/o extension searching is still fine if all the old behavior remains unchanged","date":"2019-02-20T21:07:11.909Z","type":"message"}
{"nick":"bradleymeck","message":"i'm confused","date":"2019-02-20T21:07:16.566Z","type":"message"}
{"nick":"bradleymeck","message":"we can revisit never shipping it","date":"2019-02-20T21:07:35.991Z","type":"message"}
{"nick":"devsnek","message":"why do we need to keep punting the decision","date":"2019-02-20T21:07:50.768Z","type":"message"}
{"nick":"bradleymeck","message":"but the behavior would remain the same for the non-searching form, regardless","date":"2019-02-20T21:07:51.908Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: because people won't compromise","date":"2019-02-20T21:08:04.013Z","type":"message"}
{"nick":"bradleymeck","message":"so, if you can never reach an agreement on some superset of behavior, move forward with what subset you can agree on :)","date":"2019-02-20T21:08:30.162Z","type":"message"}
{"nick":"ljharb","message":"also re something from the merging - bare imports from node are already forcing browsers to do import maps","date":"2019-02-20T21:08:30.247Z","type":"message"}
{"nick":"bradleymeck","message":"keep going forward","date":"2019-02-20T21:08:33.297Z","type":"message"}
{"nick":"ljharb","message":"*meeting","date":"2019-02-20T21:08:35.041Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: yup","date":"2019-02-20T21:08:42.407Z","type":"message"}
{"nick":"devsnek","message":"but i don't agree with the subset","date":"2019-02-20T21:08:51.864Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: i will never agree to unflagging without extension searching, ftr. I’d have to be outvoted.","date":"2019-02-20T21:08:52.551Z","type":"message"}
{"nick":"bradleymeck","message":"but that isn't related to the extension searching","date":"2019-02-20T21:08:52.977Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: you want to change how non-searching works?","date":"2019-02-20T21:09:02.602Z","type":"message"}
{"nick":"devsnek","message":"i don't think your mindset works","date":"2019-02-20T21:09:15.794Z","type":"message"}
{"nick":"devsnek","message":"for this situation","date":"2019-02-20T21:09:21.050Z","type":"message"}
{"nick":"devsnek","message":"i disagree that the current behaviour is usable","date":"2019-02-20T21:09:32.773Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: what about it would change / why do you not agree on the behavior of the subset?","date":"2019-02-20T21:09:35.328Z","type":"message"}
{"nick":"devsnek","message":"it doesn't have searching","date":"2019-02-20T21:09:51.446Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: what about it is unusable","date":"2019-02-20T21:09:52.698Z","type":"message"}
{"nick":"devsnek","message":"i would add searching lol","date":"2019-02-20T21:09:55.065Z","type":"message"}
{"nick":"bradleymeck","message":"verbose?","date":"2019-02-20T21:09:57.274Z","type":"message"}
{"nick":"devsnek","message":"i would add extension and index resolution","date":"2019-02-20T21:10:06.313Z","type":"message"}
{"nick":"ljharb","message":"being required to add extensions is verbose, and prevents transparent refactoring","date":"2019-02-20T21:10:11.731Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: but w/o those, it is still usable","date":"2019-02-20T21:10:16.901Z","type":"message"}
{"nick":"ljharb","message":"also index lookup :-)","date":"2019-02-20T21:10:18.343Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: those do not make it unusable","date":"2019-02-20T21:10:31.820Z","type":"message"}
{"nick":"ljharb","message":"to be it does","date":"2019-02-20T21:10:38.508Z","type":"message"}
{"nick":"ljharb","message":"*to me","date":"2019-02-20T21:10:41.545Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: it doesn't meet everyone's definition of a working product","date":"2019-02-20T21:10:43.164Z","type":"message"}
{"nick":"devsnek","message":"so i think we should ship what does","date":"2019-02-20T21:10:48.866Z","type":"message"}
{"nick":"ljharb","message":"making it usable “until you need to refactor” is not usable to me.","date":"2019-02-20T21:10:52.264Z","type":"message"}
{"nick":"bradleymeck","message":"that sounds like great feature adds, but not something that makes non-searching paths fail to work","date":"2019-02-20T21:10:53.415Z","type":"message"}
{"nick":"devsnek","message":"if we ship searching, the argument becomes opinion on how we should coerce the ecosystem","date":"2019-02-20T21:10:59.772Z","type":"message"}
{"nick":"ljharb","message":"whether it functions isn’t the issue","date":"2019-02-20T21:11:08.561Z","type":"message"}
{"nick":"ljharb","message":"it’s whether it provides for all current and future use cases. Searching does, no searching doesn’t.","date":"2019-02-20T21:11:20.273Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: i don't understand that statement","date":"2019-02-20T21:11:32.410Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: I don't understand that last statement","date":"2019-02-20T21:11:45.882Z","type":"message"}
{"nick":"bradleymeck","message":"searching doesn't cover all usages either","date":"2019-02-20T21:11:53.175Z","type":"message"}
{"nick":"devsnek","message":"shipping searching gives everyone the technical features they want","date":"2019-02-20T21:11:56.946Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: “usable” isn’t defined by “it works”","date":"2019-02-20T21:11:57.910Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: i'd agree?","date":"2019-02-20T21:12:03.851Z","type":"message"}
{"nick":"devsnek","message":"the argument after everyone has technical features they want becomes what should be allowed","date":"2019-02-20T21:12:13.552Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: i'd disagree","date":"2019-02-20T21:12:13.979Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: something that works now but won’t work in the future (say, when i want to refactor transparently) isn’t actually usable.","date":"2019-02-20T21:12:22.981Z","type":"message"}
{"nick":"devsnek","message":"how does searching existing break a technical feature","date":"2019-02-20T21:12:29.460Z","type":"message"}
{"nick":"ljharb","message":"at least, not if that use case is agreed to be important.","date":"2019-02-20T21:12:36.881Z","type":"message"}
{"nick":"bradleymeck","message":"we reach progress by agreeing on features that are non-problematic to eachother and moving forward. not by adding all features even if they are problematic","date":"2019-02-20T21:12:44.058Z","type":"message"}
{"nick":"devsnek","message":"i think the current resolver is problematic","date":"2019-02-20T21:13:09.080Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: it breaks expectations about working like other envs, it doesn't have its loader story figured out, etc. It just isn't well fleshed out","date":"2019-02-20T21:13:17.100Z","type":"message"}
{"nick":"ljharb","message":"node shouldn’t work like browsers.","date":"2019-02-20T21:13:24.809Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: how is is problematic?","date":"2019-02-20T21:13:25.976Z","type":"message"}
{"nick":"devsnek","message":"it doesn't break working with other envs","date":"2019-02-20T21:13:28.474Z","type":"message"}
{"nick":"ljharb","message":"i find those expectations problematic.","date":"2019-02-20T21:13:30.141Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: not browsers, other envs exist","date":"2019-02-20T21:13:34.247Z","type":"message"}
{"nick":"devsnek","message":"you will literally always have to use node resolution","date":"2019-02-20T21:13:38.418Z","type":"message"}
{"nick":"ljharb","message":"node should work like node.","date":"2019-02-20T21:13:47.354Z","type":"message"}
{"nick":"devsnek","message":"because of loaders and package.json things and etc","date":"2019-02-20T21:13:50.121Z","type":"message"}
{"nick":"ljharb","message":"with a build process, it can work in any env","date":"2019-02-20T21:13:54.489Z","type":"message"}
{"nick":"ljharb","message":"i have zero interest in ensuring “no build process”","date":"2019-02-20T21:14:05.725Z","type":"message"}
{"nick":"devsnek","message":"the lack of extension resolution doesn't mean node_modules can be verbatim zipped up and put in a server","date":"2019-02-20T21:14:18.793Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: problematic features remain unable to progress in the modules wg, forcing your opinion repeatedly does not make them have fewer concerns","date":"2019-02-20T21:14:20.489Z","type":"message"}
{"nick":"ljharb","message":"(no objection tho, as long as it doesn’t interfere with usability)","date":"2019-02-20T21:14:27.313Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: yes, that’s true, the reverse is also true","date":"2019-02-20T21:14:37.633Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: i have no opinion on build process","date":"2019-02-20T21:14:40.786Z","type":"message"}
{"nick":"devsnek","message":"i have yet to see a technical argument against searching","date":"2019-02-20T21:14:52.841Z","type":"message"}
{"nick":"ljharb","message":"we may never come to consensus in some things, that’s fine.","date":"2019-02-20T21:14:56.035Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: correct, but i have not seen how non-searching behavior prevents future features?","date":"2019-02-20T21:14:59.038Z","type":"message"}
{"nick":"bradleymeck","message":"the behaviors would move from throw behavior to non-throw","date":"2019-02-20T21:15:16.207Z","type":"message"}
{"nick":"ljharb","message":"modules aren’t like apis or local syntax","date":"2019-02-20T21:15:32.502Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: error behavior then","date":"2019-02-20T21:15:43.476Z","type":"message"}
{"nick":"ljharb","message":"for those things, you can always add them","date":"2019-02-20T21:15:46.590Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: what about adding behavior breaks the non-searched specifiers?","date":"2019-02-20T21:16:04.405Z","type":"message"}
{"nick":"ljharb","message":"maybe you’re thinking like an app dev? For apps i definitely agree it’s always fine to add","date":"2019-02-20T21:16:05.990Z","type":"message"}
{"nick":"ljharb","message":"but i care about library authors","date":"2019-02-20T21:16:12.043Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: i don't have opinions, but i very rarely write apps :)","date":"2019-02-20T21:16:28.185Z","type":"message"}
{"nick":"ljharb","message":"lol k","date":"2019-02-20T21:16:34.805Z","type":"message"}
{"nick":"devsnek","message":"brad i'm still confused","date":"2019-02-20T21:16:39.941Z","type":"message"}
{"nick":"ljharb","message":"libraries won’t be able to safely use extensionless paths without breaking users of “node without searching”","date":"2019-02-20T21:16:46.586Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: i don't understand that statement, this is about how \"import\" works","date":"2019-02-20T21:17:09.134Z","type":"message"}
{"nick":"devsnek","message":"there is no case where you can use node_modules without applying node-specific rules to it","date":"2019-02-20T21:17:12.572Z","type":"message"}
{"nick":"ljharb","message":"i want every library to be able to use extensionless paths and also work in every esm-supporting version of node.","date":"2019-02-20T21:17:15.146Z","type":"message"}
{"nick":"bradleymeck","message":"they currently cannot use import in node","date":"2019-02-20T21:17:15.574Z","type":"message"}
{"nick":"devsnek","message":"so how does adding extensions break browser stuff","date":"2019-02-20T21:17:21.060Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: but if we ship without searching, they can","date":"2019-02-20T21:17:26.406Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: sure, we can also ship JSX and call it JavaScript","date":"2019-02-20T21:17:52.614Z","type":"message"}
{"nick":"ljharb","message":"i want no versions of node to exist that allow unflagged ESM and also lack searching, iow.","date":"2019-02-20T21:17:55.265Z","type":"message"}
{"nick":"bradleymeck","message":"we *can* do anything pretty much","date":"2019-02-20T21:17:59.307Z","type":"message"}
{"nick":"bradleymeck","message":"but we can agree on some subset of unchanging progress :)","date":"2019-02-20T21:18:09.726Z","type":"message"}
{"nick":"devsnek","message":"i don't agree on the current subset of resolution","date":"2019-02-20T21:18:26.554Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: sure, but what needs to change? what about it do you not agree working the way it does?","date":"2019-02-20T21:18:49.199Z","type":"message"}
{"nick":"devsnek","message":"it needs to resolve extensions and folders","date":"2019-02-20T21:19:09.733Z","type":"message"}
{"nick":"bradleymeck","message":"lacking a feature doesn't seem to be a problem if the feature can be added?","date":"2019-02-20T21:19:09.904Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: but then the subset isn't a problem?","date":"2019-02-20T21:19:21.311Z","type":"message"}
{"nick":"devsnek","message":"its not about addition or subtraction of a feature","date":"2019-02-20T21:19:23.002Z","type":"message"}
{"nick":"devsnek","message":"its about the overall behaviour","date":"2019-02-20T21:19:27.181Z","type":"message"}
{"nick":"bradleymeck","message":"you just want more features outside the subset","date":"2019-02-20T21:19:28.655Z","type":"message"}
{"nick":"devsnek","message":"i don't agree with that categorization of the problem","date":"2019-02-20T21:19:47.506Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: that kind of categorization is pretty much how we have reached progress on all things so far, what about it needs to change?","date":"2019-02-20T21:20:19.594Z","type":"message"}
{"nick":"devsnek","message":"it needs extensions and folders","date":"2019-02-20T21:20:29.440Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: that doesn't seem related to categorizing how to split up the problem?","date":"2019-02-20T21:20:50.411Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: without searching, the subset is harmful.","date":"2019-02-20T21:20:51.683Z","type":"message"}
{"nick":"ljharb","message":"iow it can not be split up","date":"2019-02-20T21:20:57.056Z","type":"message"}
{"nick":"ljharb","message":"the problem is only solvable all at once","date":"2019-02-20T21:21:02.727Z","type":"message"}
{"nick":"devsnek","message":"and there will never be a way to load node_modules without applying node specific rules","date":"2019-02-20T21:21:10.664Z","type":"message"}
{"nick":"devsnek","message":"so how does this break browser stuff","date":"2019-02-20T21:21:15.599Z","type":"message"}
{"nick":"devsnek","message":"i don't get it","date":"2019-02-20T21:21:21.285Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: how so? if so, how can we prevent the ecosystem from using the problematic subset?","date":"2019-02-20T21:21:21.969Z","type":"message"}
{"nick":"devsnek","message":"people can use whatever they want","date":"2019-02-20T21:21:37.253Z","type":"message"}
{"nick":"devsnek","message":"shipping more doesn't prevent people from using less","date":"2019-02-20T21:21:45.125Z","type":"message"}
{"nick":"devsnek","message":"it just lets more people be happy","date":"2019-02-20T21:21:49.200Z","type":"message"}
{"nick":"bradleymeck","message":"shipping less ensures we can ship more","date":"2019-02-20T21:21:57.971Z","type":"message"}
{"nick":"devsnek","message":"or we can just ship more to begin with","date":"2019-02-20T21:22:05.121Z","type":"message"}
{"nick":"bradleymeck","message":"shipping more means we cannot ship less","date":"2019-02-20T21:22:06.589Z","type":"message"}
{"nick":"devsnek","message":"why would we want to remove it","date":"2019-02-20T21:22:17.311Z","type":"message"}
{"nick":"devsnek","message":"its a good feature","date":"2019-02-20T21:22:18.951Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: it’s not using the subset that’s harmful, it’s not being able to use the superset","date":"2019-02-20T21:22:21.033Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: because we can add it back, and still move forward","date":"2019-02-20T21:22:31.563Z","type":"message"}
{"nick":"ljharb","message":"less is more stuff aside, i think it’s not good to move forward without it","date":"2019-02-20T21:22:40.142Z","type":"message"}
{"nick":"devsnek","message":"why would it not exist by default though","date":"2019-02-20T21:22:42.995Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: if the subset prevents the superset, it isn't a subset?","date":"2019-02-20T21:22:43.679Z","type":"message"}
{"nick":"ljharb","message":"forward progress is not inherently good for its own sake","date":"2019-02-20T21:22:47.575Z","type":"message"}
{"nick":"devsnek","message":"^","date":"2019-02-20T21:22:53.069Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: because people can't agree on it :). keep moving forward","date":"2019-02-20T21:23:03.310Z","type":"message"}
{"nick":"ljharb","message":"then we don’t move","date":"2019-02-20T21:23:15.171Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: i'd agree, but all forward progress supports this subset","date":"2019-02-20T21:23:17.432Z","type":"message"}
{"nick":"ljharb","message":"better to stand still then to step into a minefield","date":"2019-02-20T21:23:21.550Z","type":"message"}
{"nick":"devsnek","message":"humans can disagree with both the existence and non-existence of features","date":"2019-02-20T21:23:27.054Z","type":"message"}
{"nick":"bradleymeck","message":"we move forward with the things that all forward paths contain :)","date":"2019-02-20T21:23:30.550Z","type":"message"}
{"nick":"devsnek","message":"both are valid","date":"2019-02-20T21:23:31.661Z","type":"message"}
{"nick":"ljharb","message":"i prefer to stand still if we aren’t moving in the right direction.","date":"2019-02-20T21:23:42.607Z","type":"message"}
{"nick":"devsnek","message":"then you move to \"what technical issues does this have\"","date":"2019-02-20T21:23:50.443Z","type":"message"}
{"nick":"devsnek","message":"and it has none","date":"2019-02-20T21:23:52.951Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: all directions, right or wrong contain this path :)","date":"2019-02-20T21:23:58.024Z","type":"message"}
{"nick":"devsnek","message":"so then you move to \"add it to node\"","date":"2019-02-20T21:24:02.427Z","type":"message"}
{"nick":"ljharb","message":"i find no inherent value in progress or shipping or moving forward. Only in making good decisions, and avoiding bad ones.","date":"2019-02-20T21:24:04.815Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: yup, thats how features get added. technical issues could be social, implementation, or design space","date":"2019-02-20T21:24:28.718Z","type":"message"}
{"nick":"devsnek","message":"the only issue with this is social","date":"2019-02-20T21:24:43.519Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: there isn't a decision to be made here, all paths contain this","date":"2019-02-20T21:24:44.929Z","type":"message"}
{"nick":"devsnek","message":"about whether we should coerce users to use extensions for the sake of browser equivalence","date":"2019-02-20T21:25:01.738Z","type":"message"}
{"nick":"ljharb","message":"I’m not sure what you mean","date":"2019-02-20T21:25:01.823Z","type":"message"}
{"nick":"ljharb","message":"unless we’re adding a DOM to node i don’t think there’s any coherence in wanting browser equivalence :-p","date":"2019-02-20T21:25:38.780Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: we just enable the path at the start, we don't do it for any individual's sake necessarily. just while we keep moving forward since all paths forward have this behavior we can provide","date":"2019-02-20T21:25:48.654Z","type":"message"}
{"nick":"devsnek","message":"but that assumes you can't disagree about behaviour as a whole","date":"2019-02-20T21:26:05.130Z","type":"message"}
{"nick":"devsnek","message":"only about additive changes","date":"2019-02-20T21:26:07.866Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: this isn't about browser equivalence, this is about moving forward with things that will work regardless of other choices","date":"2019-02-20T21:26:14.864Z","type":"message"}
{"nick":"devsnek","message":"but lack of features is also bad design","date":"2019-02-20T21:26:18.806Z","type":"message"}
{"nick":"ljharb","message":"i don’t want to do that tho","date":"2019-02-20T21:26:21.318Z","type":"message"}
{"nick":"ljharb","message":"because i don’t think the subset works.","date":"2019-02-20T21:26:29.496Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: you don't want things to work the same?","date":"2019-02-20T21:26:32.538Z","type":"message"}
{"nick":"bradleymeck","message":"what subset would work?","date":"2019-02-20T21:26:39.132Z","type":"message"}
{"nick":"ljharb","message":"i don’t value things working the same over other concerns","date":"2019-02-20T21:26:49.847Z","type":"message"}
{"nick":"devsnek","message":"the subset doesn't work","date":"2019-02-20T21:26:50.446Z","type":"message"}
{"nick":"ljharb","message":"no subset works. Only with searching does it work.","date":"2019-02-20T21:26:56.010Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: what part doesn't work?","date":"2019-02-20T21:27:02.563Z","type":"message"}
{"nick":"ljharb","message":"i can’t import from a/b","date":"2019-02-20T21:27:09.343Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: does that mean we cannot support that subset? what about it fails?","date":"2019-02-20T21:27:21.186Z","type":"message"}
{"nick":"devsnek","message":"the part where my use case is thrown out for no reason","date":"2019-02-20T21:27:29.171Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: i","date":"2019-02-20T21:27:34.641Z","type":"message"}
{"nick":"bradleymeck","message":"'m not throwing out use cases","date":"2019-02-20T21:27:40.920Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: yes, it means we can not support the subset","date":"2019-02-20T21:27:55.767Z","type":"message"}
{"nick":"bradleymeck","message":"i'm just saying they can be agreed upon later, since all paths have this same subset","date":"2019-02-20T21:27:58.416Z","type":"message"}
{"nick":"ljharb","message":"if it is not possible to make that work, then we can’t support the subset.","date":"2019-02-20T21:28:04.720Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: so then apps using that subset should fail?","date":"2019-02-20T21:28:12.093Z","type":"message"}
{"nick":"ljharb","message":"no","date":"2019-02-20T21:28:26.552Z","type":"message"}
{"nick":"bradleymeck","message":"but > yes, it means we can not support the subset","date":"2019-02-20T21:28:36.356Z","type":"message"}
{"nick":"ljharb","message":"but those apps shouldn’t be permitted to exist unless apps using the superset can.","date":"2019-02-20T21:28:39.166Z","type":"message"}
{"nick":"ljharb","message":"we shouldn’t support the subset im the absence of the superset.","date":"2019-02-20T21:28:52.272Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: how do those apps change how the superset apps work?","date":"2019-02-20T21:28:57.369Z","type":"message"}
{"nick":"ljharb","message":"they don’t.","date":"2019-02-20T21:29:04.093Z","type":"message"}
{"nick":"bradleymeck","message":"then why can't we support it?","date":"2019-02-20T21:29:11.294Z","type":"message"}
{"nick":"ljharb","message":"however they change the ecosystem - the mob mentality","date":"2019-02-20T21:29:14.852Z","type":"message"}
{"nick":"ljharb","message":"this isn’t a technical problem, it’s a social one","date":"2019-02-20T21:29:21.668Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: i'm not swayed by guessing how others will think","date":"2019-02-20T21:29:29.564Z","type":"message"}
{"nick":"ljharb","message":"i think it would be actively harmful for people to internalize that they have to specify extensions","date":"2019-02-20T21:29:34.414Z","type":"message"}
{"nick":"devsnek","message":"+1","date":"2019-02-20T21:29:43.633Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: ok, but that doesn't break the subset","date":"2019-02-20T21:29:50.382Z","type":"message"}
{"nick":"devsnek","message":"yes it does","date":"2019-02-20T21:29:54.926Z","type":"message"}
{"nick":"ljharb","message":"no, it privileges the subset","date":"2019-02-20T21:29:58.004Z","type":"message"}
{"nick":"bradleymeck","message":"the subset continues to work, and it doesn't make the superset fail","date":"2019-02-20T21:30:03.137Z","type":"message"}
{"nick":"ljharb","message":"it makes the superset second class citizens","date":"2019-02-20T21:30:06.442Z","type":"message"}
{"nick":"devsnek","message":"if you only have the subset it invalidates ljharb's case","date":"2019-02-20T21:30:13.240Z","type":"message"}
{"nick":"ljharb","message":"the constraints make the superset less valid","date":"2019-02-20T21:30:20.222Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: all subsets are \"privileged\" from that viewpoint since they are the safer thing","date":"2019-02-20T21:30:23.739Z","type":"message"}
{"nick":"ljharb","message":"even for a time window","date":"2019-02-20T21:30:24.721Z","type":"message"}
{"nick":"devsnek","message":"i think the time is irrelevant","date":"2019-02-20T21:30:41.545Z","type":"message"}
{"nick":"ljharb","message":"yes","date":"2019-02-20T21:30:42.074Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: how does it invalidate ljharb's stuff ?","date":"2019-02-20T21:30:44.581Z","type":"message"}
{"nick":"ljharb","message":"that’s why we can’t ship subsets","date":"2019-02-20T21:30:50.358Z","type":"message"}
{"nick":"ljharb","message":"whatever we initially ship is the final set","date":"2019-02-20T21:30:56.915Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: because then someone can't do x","date":"2019-02-20T21:31:07.668Z","type":"message"}
{"nick":"bradleymeck","message":"time isn't relevant not brought up in this conversation except that all paths continue to have the same subset of behavior that does not affect the superset","date":"2019-02-20T21:31:09.455Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: how does y prevent x","date":"2019-02-20T21:31:18.818Z","type":"message"}
{"nick":"ljharb","message":"the possibilities affect the superset. The apps using the subset are irrelevant","date":"2019-02-20T21:31:28.093Z","type":"message"}
{"nick":"devsnek","message":"this assumes some need to stop talking about this entire thing for some reason","date":"2019-02-20T21:31:32.971Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: we always ship subsets, we keep adding more features over time :)","date":"2019-02-20T21:31:36.072Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: ?","date":"2019-02-20T21:31:54.895Z","type":"message"}
{"nick":"devsnek","message":"brad you prioritize shipping the whole thing over this specific behavioural change","date":"2019-02-20T21:32:02.340Z","type":"message"}
{"nick":"devsnek","message":"but others prioritize it the other way","date":"2019-02-20T21:32:10.354Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: but whatever we ship will be a subset of the module system at a later time?","date":"2019-02-20T21:32:13.919Z","type":"message"}
{"nick":"devsnek","message":"you just have to accept that","date":"2019-02-20T21:32:15.282Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: i don't understand that comment","date":"2019-02-20T21:32:29.830Z","type":"message"}
{"nick":"bradleymeck","message":"my priority is moving forward, not finding some \"whole thing\"","date":"2019-02-20T21:32:42.034Z","type":"message"}
{"nick":"devsnek","message":"your priority is not my priority","date":"2019-02-20T21:32:55.865Z","type":"message"}
{"nick":"bradleymeck","message":"if we find something that is the same in all paths forward, why are we not happy about it?","date":"2019-02-20T21:32:59.876Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: what is your priority?","date":"2019-02-20T21:33:15.437Z","type":"message"}
{"nick":"devsnek","message":"my priority is having these features","date":"2019-02-20T21:33:23.929Z","type":"message"}
{"nick":"bradleymeck","message":"so, no compromise?","date":"2019-02-20T21:33:33.675Z","type":"message"}
{"nick":"bradleymeck","message":"and no progress without your viewpoint being adopted?","date":"2019-02-20T21:33:45.425Z","type":"message"}
{"nick":"devsnek","message":"i will compromise for design and technical stuff","date":"2019-02-20T21:33:55.118Z","type":"message"}
{"nick":"devsnek","message":"i will not compromise for \"moving forward\"","date":"2019-02-20T21:34:00.329Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: ah, well then, what about the subset of non-searching behavior stops your features?","date":"2019-02-20T21:34:17.656Z","type":"message"}
{"nick":"devsnek","message":"they don't exist","date":"2019-02-20T21:34:26.140Z","type":"message"}
{"nick":"bradleymeck","message":"that is unrelated","date":"2019-02-20T21:34:30.758Z","type":"message"}
{"nick":"devsnek","message":"that's as stopped as they can be","date":"2019-02-20T21:34:31.569Z","type":"message"}
{"nick":"bradleymeck","message":"how does non-searching behavior prevent them from existing?","date":"2019-02-20T21:34:45.221Z","type":"message"}
{"nick":"devsnek","message":"it doesn't","date":"2019-02-20T21:34:49.334Z","type":"message"}
{"nick":"devsnek","message":"i don't care about non searching","date":"2019-02-20T21:34:53.969Z","type":"message"}
{"nick":"bradleymeck","message":"ok, then what about it needs to be prevented from shipping?","date":"2019-02-20T21:35:09.168Z","type":"message"}
{"nick":"devsnek","message":"and adding my feature doesn't break non searching","date":"2019-02-20T21:35:16.308Z","type":"message"}
{"nick":"devsnek","message":"so the existence of non searching is irrelevant to the existence of searching","date":"2019-02-20T21:35:33.136Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: sure, but people havent all agreed on your feature, everyone has agreed that non-searching won't change in behavior","date":"2019-02-20T21:35:41.537Z","type":"message"}
{"nick":"devsnek","message":"the only reason against it is coercing the ecosystem","date":"2019-02-20T21:35:57.697Z","type":"message"}
{"nick":"devsnek","message":"which we both agree is bad","date":"2019-02-20T21:36:01.277Z","type":"message"}
{"nick":"bradleymeck","message":"so, you are trying to tie searching to being blocked by non-searching?","date":"2019-02-20T21:36:07.444Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: i don't agree with your viewpoint on that","date":"2019-02-20T21:36:22.806Z","type":"message"}
{"nick":"bradleymeck","message":"I think *ANY* statement about the ecosystem is not one I feel comfortable with","date":"2019-02-20T21:36:36.464Z","type":"message"}
{"nick":"devsnek","message":"yes","date":"2019-02-20T21:36:41.783Z","type":"message"}
{"nick":"devsnek","message":"so lets move forward with what works for everyone","date":"2019-02-20T21:36:48.871Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: how are they tied?","date":"2019-02-20T21:36:51.562Z","type":"message"}
{"nick":"devsnek","message":"instead of a subset of everyone","date":"2019-02-20T21:36:53.082Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: what about the non-searching doesn't work for you?","date":"2019-02-20T21:37:06.423Z","type":"message"}
{"nick":"devsnek","message":"it doesn't let me import files how i think is the best way to import files","date":"2019-02-20T21:37:19.269Z","type":"message"}
{"nick":"bradleymeck","message":"thats not related to the non-searching behavior","date":"2019-02-20T21:37:27.852Z","type":"message"}
{"nick":"bradleymeck","message":"thats related to the module system but not the non-searched paths","date":"2019-02-20T21:37:38.970Z","type":"message"}
{"nick":"ljharb","message":"That you’re uncomfortable with it doesn’t make it true","date":"2019-02-20T21:37:46.556Z","type":"message"}
{"nick":"devsnek","message":"the existence or non existence of non searching is irrelevant","date":"2019-02-20T21:37:55.168Z","type":"message"}
{"nick":"ljharb","message":"statements about the ecosystem i mean","date":"2019-02-20T21:37:55.629Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: i'm uncomfortable because we cannot say what is or is not true","date":"2019-02-20T21:38:03.055Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: therefore, what are we stating?","date":"2019-02-20T21:38:13.587Z","type":"message"}
{"nick":"ljharb","message":"that doesn’t mean we can’t and shouldn’t use our intuitions to make decisions","date":"2019-02-20T21:38:20.461Z","type":"message"}
{"nick":"devsnek","message":"i'm trying to understand what you're saying brad","date":"2019-02-20T21:38:27.950Z","type":"message"}
{"nick":"devsnek","message":"like","date":"2019-02-20T21:38:30.427Z","type":"message"}
{"nick":"ljharb","message":"we’re not robots and we shouldn’t restrict ourselves to objective reasoning","date":"2019-02-20T21:38:32.627Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: so we are agreed that non-searching being part of the module system is non-problematic for everyone?","date":"2019-02-20T21:38:39.213Z","type":"message"}
{"nick":"ljharb","message":"no","date":"2019-02-20T21:38:51.315Z","type":"message"}
{"nick":"devsnek","message":"allowing someone to type the real path of a module breaks no one","date":"2019-02-20T21:39:00.744Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: what about it needs to change?","date":"2019-02-20T21:39:01.330Z","type":"message"}
{"nick":"devsnek","message":"brad hold on a sec","date":"2019-02-20T21:39:13.753Z","type":"message"}
{"nick":"ljharb","message":"an app not relying on searching is fine. an app being unable to rely on searching is not.","date":"2019-02-20T21:39:19.093Z","type":"message"}
{"nick":"devsnek","message":"i think we're close","date":"2019-02-20T21:39:19.263Z","type":"message"}
{"nick":"devsnek","message":"allowing someone to type the real path of a module breaks no one, but you're asking about the reverse","date":"2019-02-20T21:39:41.043Z","type":"message"}
{"nick":"devsnek","message":"nothing about allowing someone to type the real path of a module is problematic for me","date":"2019-02-20T21:40:06.612Z","type":"message"}
{"nick":"ljharb","message":"same","date":"2019-02-20T21:40:13.163Z","type":"message"}
{"nick":"devsnek","message":"but the overall behaviour where you go from X string to Y module is problematic","date":"2019-02-20T21:40:42.848Z","type":"message"}
{"nick":"devsnek","message":"because it is missing what enables my use case","date":"2019-02-20T21:40:48.389Z","type":"message"}
{"nick":"devsnek","message":"*and* adding what enables by use case doesn't stop allowing someone to type the real path of a module","date":"2019-02-20T21:41:19.470Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: \"behaviour where you go from X string to Y module is problematic\" ?","date":"2019-02-20T21:41:23.702Z","type":"message"}
{"nick":"devsnek","message":"resolution","date":"2019-02-20T21:41:31.234Z","type":"message"}
{"nick":"bradleymeck","message":"but how is that related to non-searching?","date":"2019-02-20T21:41:44.836Z","type":"message"}
{"nick":"devsnek","message":"where i type `import 'some specifier'` and it goes to a module","date":"2019-02-20T21:41:47.536Z","type":"message"}
{"nick":"devsnek","message":"it isn't","date":"2019-02-20T21:41:49.159Z","type":"message"}
{"nick":"devsnek","message":"this isn't about non searching","date":"2019-02-20T21:41:52.638Z","type":"message"}
{"nick":"ljharb","message":"modules are different because it’s dealing with more than one codebase","date":"2019-02-20T21:41:55.265Z","type":"message"}
{"nick":"devsnek","message":"that question doesn't make sense","date":"2019-02-20T21:41:57.568Z","type":"message"}
{"nick":"bradleymeck","message":"so, the subset can be agreed on","date":"2019-02-20T21:42:00.174Z","type":"message"}
{"nick":"ljharb","message":"additive features is fine for a single codebase","date":"2019-02-20T21:42:02.340Z","type":"message"}
{"nick":"devsnek","message":"i agree with the existence of non searching","date":"2019-02-20T21:42:08.263Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: i'd agree","date":"2019-02-20T21:42:13.111Z","type":"message"}
{"nick":"devsnek","message":"but non searching doesn't invalidate everything else","date":"2019-02-20T21:42:23.593Z","type":"message"}
{"nick":"devsnek","message":"we can allow someone to type the real path of a module and more","date":"2019-02-20T21:42:44.367Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: i'd also state that additive features exist across codebases (see globals / new methods on prototypes / etc.)","date":"2019-02-20T21:42:45.245Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: sure, but i'm just reaching what we can move forward with","date":"2019-02-20T21:43:09.873Z","type":"message"}
{"nick":"ljharb","message":"those can be polyfilled and/or feature tested. Module things can’t.","date":"2019-02-20T21:43:14.454Z","type":"message"}
{"nick":"devsnek","message":"if the result doesn't have X","date":"2019-02-20T21:43:17.724Z","type":"message"}
{"nick":"devsnek","message":"it doesn't meet my use case","date":"2019-02-20T21:43:28.553Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: module things could be, there are even loader examples of doing so in the old impl","date":"2019-02-20T21:43:35.914Z","type":"message"}
{"nick":"devsnek","message":"therefore we must either invalidate my use case or provide X","date":"2019-02-20T21:43:40.772Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: whats the use case","date":"2019-02-20T21:43:54.437Z","type":"message"}
{"nick":"devsnek","message":"searching","date":"2019-02-20T21:43:59.721Z","type":"message"}
{"nick":"devsnek","message":"and we can invalidate my use case","date":"2019-02-20T21:44:13.242Z","type":"message"}
{"nick":"devsnek","message":"when we vote that might happen","date":"2019-02-20T21:44:19.834Z","type":"message"}
{"nick":"bradleymeck","message":"what is searching providing, what is the feature","date":"2019-02-20T21:44:22.229Z","type":"message"}
{"nick":"devsnek","message":"but one of these two things must happen *before* we ship","date":"2019-02-20T21:44:27.095Z","type":"message"}
{"nick":"devsnek","message":"easily refactor-able code bases where i don't need to know what something is to use what it provides","date":"2019-02-20T21:44:59.991Z","type":"message"}
{"nick":"bradleymeck","action":"reverse term for \"feature\" and \"use case\", apologies","date":"2019-02-20T21:45:01.661Z","type":"action"}
{"nick":"ljharb","message":"the feature is the ability to omit the extension, to not couple your module to the format or structure of the thing you’re importing","date":"2019-02-20T21:45:06.978Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: there are multiple solutions to that problem though, not only searching","date":"2019-02-20T21:45:21.544Z","type":"message"}
{"nick":"ljharb","message":"the same reasons as interop itself","date":"2019-02-20T21:45:27.094Z","type":"message"}
{"nick":"devsnek","message":"modules can choose to invalidate \"easily refactor-able code bases where i don't need to know what something is to use what it provides\"","date":"2019-02-20T21:45:33.291Z","type":"message"}
{"nick":"srl295","date":"2019-02-20T21:45:37.461Z","type":"join"}
{"nick":"devsnek","message":"or it can choose not to","date":"2019-02-20T21:45:41.352Z","type":"message"}
{"nick":"devsnek","message":"but we need to actually make the choice","date":"2019-02-20T21:45:50.644Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: we already have examples of extensionless modules being put in and loaders can decouple those","date":"2019-02-20T21:45:52.095Z","type":"message"}
{"nick":"devsnek","message":"because shipping without it invalidates it","date":"2019-02-20T21:46:05.715Z","type":"message"}
{"nick":"devsnek","message":"so we need to be explicit about that","date":"2019-02-20T21:46:09.015Z","type":"message"}
{"nick":"ljharb","message":"yes but loaders aren’t something i can use in my library","date":"2019-02-20T21:46:10.656Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: why not?","date":"2019-02-20T21:46:16.503Z","type":"message"}
{"nick":"ljharb","message":"so that’s not a solution, unless you’re advocating for per package loaders","date":"2019-02-20T21:46:20.871Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: https://github.com/nodejs/node/issues/18233 ;p","date":"2019-02-20T21:46:42.581Z","type":"message"}
{"nick":"bradleymeck","message":"global loaders have a whole slew of problems","date":"2019-02-20T21:46:53.215Z","type":"message"}
{"nick":"devsnek","message":"if any part of resolution can be controlled on a package level, then the browser argument goes away","date":"2019-02-20T21:46:56.824Z","type":"message"}
{"nick":"ljharb","message":"so sure, that’s another solution - but it’d still have to be on by default","date":"2019-02-20T21:47:04.010Z","type":"message"}
{"nick":"devsnek","message":"so lets leave the browser argument alone","date":"2019-02-20T21:47:07.040Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: browsers won't be getting loaders, unsure what you mean","date":"2019-02-20T21:47:14.055Z","type":"message"}
{"nick":"devsnek","message":"but node_modules would have them","date":"2019-02-20T21:47:21.164Z","type":"message"}
{"nick":"ljharb","message":"right, so, if loaders are required to solve a problem then browser equivalence is dead","date":"2019-02-20T21:47:29.549Z","type":"message"}
{"nick":"bradleymeck","message":"opting into the safe subset seems odd","date":"2019-02-20T21:47:35.521Z","type":"message"}
{"nick":"devsnek","message":"so you can't ever load node_modules without using loaders","date":"2019-02-20T21:47:38.508Z","type":"message"}
{"nick":"bradleymeck","message":"you opt out of safety, not into","date":"2019-02-20T21:47:41.041Z","type":"message"}
{"nick":"ljharb","message":"it’s not safe, it’s limited","date":"2019-02-20T21:47:44.007Z","type":"message"}
{"nick":"devsnek","message":"if node_modules can contain X","date":"2019-02-20T21:47:49.903Z","type":"message"}
{"nick":"ljharb","message":"there’s nothing unsafe about searching","date":"2019-02-20T21:47:51.881Z","type":"message"}
{"nick":"devsnek","message":"i have to search for X","date":"2019-02-20T21:47:52.875Z","type":"message"}
{"nick":"devsnek","message":"if browsers don't have X, its not compatible with browsers","date":"2019-02-20T21:47:59.659Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: unsure how you are differentiating those terms \"Safe\" and \"Limited\"","date":"2019-02-20T21:48:06.778Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: ok what’s unsafe about searching","date":"2019-02-20T21:48:16.824Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: guaranteed might be a better term?","date":"2019-02-20T21:48:20.468Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: that it doesn't work everywhere","date":"2019-02-20T21:48:28.075Z","type":"message"}
{"nick":"devsnek","message":"limited being features that are safe not being allowed","date":"2019-02-20T21:48:28.160Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: that already includes bare imports (that they’re not guaranteed)","date":"2019-02-20T21:48:45.945Z","type":"message"}
{"nick":"ljharb","message":"“It works everywhere” is a non goal, and an impossible one","date":"2019-02-20T21:48:57.212Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: bare imports are about to ship in import maps impl this year in 2 browsers?","date":"2019-02-20T21:49:06.111Z","type":"message"}
{"nick":"ljharb","message":"browsers and node aren’t everywhere, as you reminded me earlier","date":"2019-02-20T21:49:17.725Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: it isn't a goal i'm pursuing","date":"2019-02-20T21:49:19.412Z","type":"message"}
{"nick":"devsnek","message":"import maps don't limit the specifier so we can assume anything is valid here","date":"2019-02-20T21:49:28.544Z","type":"message"}
{"nick":"ljharb","message":"import maps don’t matter imo unless they’re in the language","date":"2019-02-20T21:49:29.788Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: yup but bare imports work in all envs i know of","date":"2019-02-20T21:49:31.950Z","type":"message"}
{"nick":"bradleymeck","message":"even XS","date":"2019-02-20T21:49:35.408Z","type":"message"}
{"nick":"devsnek","message":"brad the argument comes down to what people consider a valid shipment of esm","date":"2019-02-20T21:49:58.783Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: import maps are just one way to solve the problem of bare imports, same as searching and your problems","date":"2019-02-20T21:50:04.561Z","type":"message"}
{"nick":"devsnek","message":"if searching is removed","date":"2019-02-20T21:50:27.526Z","type":"message"}
{"nick":"devsnek","message":"people will just generate enormous import maps","date":"2019-02-20T21:50:34.812Z","type":"message"}
{"nick":"devsnek","message":"so there are ways around it","date":"2019-02-20T21:50:38.071Z","type":"message"}
{"nick":"devsnek","message":"but i think that's a stupid way","date":"2019-02-20T21:50:42.199Z","type":"message"}
{"nick":"devsnek","message":"it benefits no one","date":"2019-02-20T21:50:49.279Z","type":"message"}
{"nick":"bradleymeck","message":"import maps are not planned on being supported by node (and in fact i'd campaign against them!)","date":"2019-02-20T21:50:56.709Z","type":"message"}
{"nick":"ljharb","message":"and if browsers don’t like that then *they* can add a feature for it","date":"2019-02-20T21:51:02.648Z","type":"message"}
{"nick":"devsnek","message":"ok then i'm still in a hard spot","date":"2019-02-20T21:51:05.712Z","type":"message"}
{"nick":"ljharb","message":"lol many people in the WG do want import maps in node fwiw","date":"2019-02-20T21:51:21.250Z","type":"message"}
{"nick":"devsnek","message":"and node shipping without searching invalidates a use case","date":"2019-02-20T21:51:21.591Z","type":"message"}
{"nick":"devsnek","message":"so we need to agree that we don't find that use case valid","date":"2019-02-20T21:51:32.671Z","type":"message"}
{"nick":"devsnek","message":"which is what the entire discussion today was about","date":"2019-02-20T21:51:36.739Z","type":"message"}
{"nick":"bradleymeck","message":"> and if browsers don’t like that then *they* can add a feature for it","date":"2019-02-20T21:51:42.591Z","type":"message"}
{"nick":"bradleymeck","message":"define \"it\"?","date":"2019-02-20T21:51:45.490Z","type":"message"}
{"nick":"devsnek","message":"hopefull we can come to consensus on that soon","date":"2019-02-20T21:51:48.385Z","type":"message"}
{"nick":"devsnek","message":"or vote","date":"2019-02-20T21:51:50.422Z","type":"message"}
{"nick":"ljharb","message":"sorry, if browsers don’t like that import maps are large. Then they can add a feature to handle extension application","date":"2019-02-20T21:52:04.595Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: searching just solves the problems you listed in one way, there could be other solutions","date":"2019-02-20T21:52:11.532Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: I'm not concerned with that?","date":"2019-02-20T21:52:27.855Z","type":"message"}
{"nick":"ljharb","message":"cool","date":"2019-02-20T21:52:33.802Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: so we need to discuss and vote","date":"2019-02-20T21:52:39.319Z","type":"message"}
{"nick":"ljharb","message":"then that’s the solution for browsers when we have searching enabled","date":"2019-02-20T21:52:42.712Z","type":"message"}
{"nick":"devsnek","message":"there's no reason not to discuss and vote","date":"2019-02-20T21:52:47.245Z","type":"message"}
{"nick":"ljharb","message":"i don’t want to force votes if we can avoid it","date":"2019-02-20T21:52:56.014Z","type":"message"}
{"nick":"devsnek","message":"but you seem to be saying we shouldn't discuss and vote","date":"2019-02-20T21:52:57.417Z","type":"message"}
{"nick":"ljharb","message":"we’ve already had one and every vote is a process failure","date":"2019-02-20T21:53:03.201Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: I don't understand that, the browsers don't have to do anything","date":"2019-02-20T21:53:06.173Z","type":"message"}
{"nick":"devsnek","message":"s/vote/vote or consensus","date":"2019-02-20T21:53:12.761Z","type":"message"}
{"nick":"bradleymeck","message":"vote it up, we have multiple sides refusing to compromise","date":"2019-02-20T21:53:24.218Z","type":"message"}
{"nick":"bradleymeck","message":"thats how voting works","date":"2019-02-20T21:53:31.368Z","type":"message"}
{"nick":"devsnek","message":"moving to voting is kinda funny","date":"2019-02-20T21:53:50.588Z","type":"message"}
{"nick":"devsnek","message":"cuz it pretty much invalidates consensus","date":"2019-02-20T21:53:59.998Z","type":"message"}
{"nick":"bradleymeck","message":"voting is a form of consensus","date":"2019-02-20T21:54:08.113Z","type":"message"}
{"nick":"devsnek","message":"i mean","date":"2019-02-20T21:54:21.655Z","type":"message"}
{"nick":"devsnek","message":"where we all agree","date":"2019-02-20T21:54:24.194Z","type":"message"}
{"nick":"devsnek","message":"like what's the point asking if we all agree if not all agreeing just moves to a different voting system","date":"2019-02-20T21:54:35.412Z","type":"message"}
{"nick":"devsnek","message":"imagine if tc39 did that","date":"2019-02-20T21:54:39.803Z","type":"message"}
{"nick":"bradleymeck","message":"well you all agree to move forward with the result of the vote, so it is still everyone agreeing","date":"2019-02-20T21:54:50.427Z","type":"message"}
{"nick":"devsnek","message":"i think the system is terrible","date":"2019-02-20T21:55:06.140Z","type":"message"}
{"nick":"ljharb","message":"lol","date":"2019-02-20T21:55:07.330Z","type":"message"}
{"nick":"devsnek","message":"but i want to move through the system","date":"2019-02-20T21:55:11.696Z","type":"message"}
{"nick":"bradleymeck","message":"or you have to change your voting system/people able to vote to agree on what voting does/means","date":"2019-02-20T21:55:11.781Z","type":"message"}
{"nick":"devsnek","message":"i want us to get a decision on this","date":"2019-02-20T21:55:28.975Z","type":"message"}
{"nick":"devsnek","message":"regardless of how terrible our decision process is","date":"2019-02-20T21:55:35.334Z","type":"message"}
{"nick":"bradleymeck","message":"both sides have agreed a position that is immovable","date":"2019-02-20T21:55:47.637Z","type":"message"}
{"nick":"devsnek","message":"so we will have to vote","date":"2019-02-20T21:55:53.893Z","type":"message"}
{"nick":"bradleymeck","message":"you therefore cannot use your desired unanimous consensus methods","date":"2019-02-20T21:55:57.753Z","type":"message"}
{"nick":"bradleymeck","message":"yup, vote it up!","date":"2019-02-20T21:56:03.462Z","type":"message"}
{"nick":"devsnek","message":"on whether the use case is valid","date":"2019-02-20T21:56:05.961Z","type":"message"}
{"nick":"devsnek","message":"yes","date":"2019-02-20T21:56:07.326Z","type":"message"}
{"nick":"devsnek","message":"we couldn't achieve consensus to say the use case is invalid","date":"2019-02-20T21:56:37.139Z","type":"message"}
{"nick":"devsnek","message":"so we have to vote","date":"2019-02-20T21:56:39.726Z","type":"message"}
{"nick":"bradleymeck","message":"use case could also be valid, just not satisfied in first go round","date":"2019-02-20T21:57:05.143Z","type":"message"}
{"nick":"bradleymeck","message":"just need to agree on if it is valid for the use case to block","date":"2019-02-20T21:57:17.798Z","type":"message"}
{"nick":"devsnek","message":"invalid until valid isn't how we've been doing it","date":"2019-02-20T21:57:36.244Z","type":"message"}
{"nick":"bradleymeck","message":"i have feelings about that line of thinking","date":"2019-02-20T21:57:54.580Z","type":"message"}
{"nick":"bradleymeck","message":"but yea, all or nothing for now","date":"2019-02-20T21:58:09.134Z","type":"message"}
{"nick":"devsnek","message":"a use of node is valid until we say that use of node isn't valid","date":"2019-02-20T21:58:18.847Z","type":"message"}
{"nick":"bradleymeck","message":"?","date":"2019-02-20T21:58:25.046Z","type":"message"}
{"nick":"devsnek","message":"?","date":"2019-02-20T21:58:35.310Z","type":"message"}
{"nick":"bradleymeck","message":"how do we say it is invalid? just by not shipping a solution by default?","date":"2019-02-20T21:59:45.990Z","type":"message"}
{"nick":"ljharb","message":"yes","date":"2019-02-20T21:59:52.631Z","type":"message"}
{"nick":"devsnek","message":"exactly that","date":"2019-02-20T22:00:06.236Z","type":"message"}
{"nick":"ljharb","message":"what is most valid is what is initially shipped by default. everything else is implicitly discouraged.","date":"2019-02-20T22:00:07.603Z","type":"message"}
{"nick":"devsnek","message":"this is the reason defaults exist","date":"2019-02-20T22:00:31.017Z","type":"message"}
{"nick":"bradleymeck","message":"things are valid even if they aren't on by default, discouraged/configured doesn't mean invalid/not supported?","date":"2019-02-20T22:00:43.943Z","type":"message"}
{"nick":"devsnek","message":"if we didn't discourage one","date":"2019-02-20T22:00:55.421Z","type":"message"}
{"nick":"devsnek","message":"you would always have to pass a resolver option","date":"2019-02-20T22:01:03.027Z","type":"message"}
{"nick":"devsnek","message":"for one mode or the other","date":"2019-02-20T22:01:07.262Z","type":"message"}
{"nick":"devsnek","message":"there wouldn't be a default","date":"2019-02-20T22:01:12.989Z","type":"message"}
{"nick":"bradleymeck","message":"do you think we could agree to that? even if all those resolvers support the non-searching pattern?","date":"2019-02-20T22:01:43.836Z","type":"message"}
{"nick":"devsnek","message":"we could never agree to that","date":"2019-02-20T22:02:02.171Z","type":"message"}
{"nick":"devsnek","message":"so lets just agree to what enables everyone's use cases and move on","date":"2019-02-20T22:02:22.085Z","type":"message"}
{"nick":"bradleymeck","message":"use cases are in conflict, so agree on what is supported in all cases :)","date":"2019-02-20T22:02:45.546Z","type":"message"}
{"nick":"bradleymeck","message":"thats my thinking","date":"2019-02-20T22:02:48.890Z","type":"message"}
{"nick":"devsnek","message":"use cases are not in conflict","date":"2019-02-20T22:02:55.265Z","type":"message"}
{"nick":"devsnek","message":"searching doesn't invalidate use cases","date":"2019-02-20T22:03:02.338Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: if they cannot reach unanimous consensus, they are in conflict?","date":"2019-02-20T22:03:17.515Z","type":"message"}
{"nick":"devsnek","message":"if it did i wouldn't be as strong with my argument","date":"2019-02-20T22:03:22.554Z","type":"message"}
{"nick":"bradleymeck","message":"a use case could be not deviating from some spec","date":"2019-02-20T22:03:40.714Z","type":"message"}
{"nick":"devsnek","message":"no that's why i'm baffled that there's an argument","date":"2019-02-20T22:03:42.360Z","type":"message"}
{"nick":"devsnek","message":"the only argument is about coercing the ecosystem","date":"2019-02-20T22:03:54.558Z","type":"message"}
{"nick":"devsnek","message":"which to me is invalid","date":"2019-02-20T22:04:02.549Z","type":"message"}
{"nick":"devsnek","message":"this is like the mjs argument","date":"2019-02-20T22:04:05.866Z","type":"message"}
{"nick":"devsnek","message":"the only reason not to have searching is opinion on how people should use node","date":"2019-02-20T22:04:50.554Z","type":"message"}
{"nick":"devsnek","message":"i don't think that's a valid argument","date":"2019-02-20T22:04:57.281Z","type":"message"}
{"nick":"devsnek","message":"if someone can bring me some reason beyond that for why searching shouldn't exist i would be more willing to compromise","date":"2019-02-20T22:05:58.496Z","type":"message"}
{"nick":"gamelaster","reason":"Ping timeout: 246 seconds","date":"2019-02-20T22:09:15.067Z","type":"quit"}
{"nick":"bradleymeck","message":"seems like we can add it? i just don't see how we can't work without it?","date":"2019-02-20T22:11:32.050Z","type":"message"}
{"nick":"bradleymeck","message":"and if we can work w/o it, why is it blocking?","date":"2019-02-20T22:11:50.583Z","type":"message"}
{"nick":"neo4","reason":"Quit: neo4","date":"2019-02-20T22:11:57.467Z","type":"quit"}
{"nick":"bradleymeck","message":"i'm also in the camp of we can work w/o importing cjs, so it isn't a blocker for me","date":"2019-02-20T22:12:19.894Z","type":"message"}
{"nick":"bradleymeck","message":"since we have our lovely new ways of creating require()","date":"2019-02-20T22:12:32.912Z","type":"message"}
{"nick":"ljharb","message":"lol we don't have to go down that road tho","date":"2019-02-20T22:12:51.307Z","type":"message"}
{"nick":"bradleymeck","message":"but those roads will continue to work in all the cases :)","date":"2019-02-20T22:13:07.430Z","type":"message"}
{"nick":"bradleymeck","message":"blockers themselves might be something we need to agree on what can be treated as preventing the implementation from shipping","date":"2019-02-20T22:13:49.631Z","type":"message"}
{"nick":"bradleymeck","message":"seems like we don't agree on what a blocker is","date":"2019-02-20T22:13:59.052Z","type":"message"}
{"nick":"bradleymeck","message":"ship what ya can, keep moving forward","date":"2019-02-20T22:14:40.398Z","type":"message"}
{"nick":"bradleymeck","message":"at ~5 years in, i think the waterfall design system isn't working out","date":"2019-02-20T22:14:56.702Z","type":"message"}
{"nick":"bradleymeck","message":"learned alot on the problem space which is useful for carving out important areas, but we still have few people even going into loader problems (of which we have a few)","date":"2019-02-20T22:15:41.287Z","type":"message"}
{"nick":"bradleymeck","message":"everyone gets to statements about \"I'll block X\" and kind of focuses on X at the detriment of other things.","date":"2019-02-20T22:16:15.761Z","type":"message"}
{"nick":"bradleymeck","message":"makes sense though, the group must focus on X until it unblocks","date":"2019-02-20T22:16:41.265Z","type":"message"}
{"nick":"devsnek","message":"if we're going to add something in a year","date":"2019-02-20T22:28:41.075Z","type":"message"}
{"nick":"devsnek","message":"why not just add it now","date":"2019-02-20T22:28:44.350Z","type":"message"}
{"nick":"devsnek","message":"I've already written it up","date":"2019-02-20T22:29:39.171Z","type":"message"}
{"nick":"devsnek","message":"all I'm waiting on is people to stop thinking they have some highground to tell me how I should use node","date":"2019-02-20T22:30:14.990Z","type":"message"}
{"nick":"devsnek","message":"the alternative is waiting a year and opening a pr and forcing them to provide actual reasons why it shouldn't exist, assuming they still pay attention to node core","date":"2019-02-20T22:32:48.619Z","type":"message"}
{"nick":"dbevenius","date":"2019-02-20T23:26:14.840Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 255 seconds","date":"2019-02-20T23:31:14.732Z","type":"quit"}
{"nick":"dbevenius","date":"2019-02-20T23:47:06.898Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2019-02-20T23:51:40.452Z","type":"quit"}
