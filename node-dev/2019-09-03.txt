{"nick":"dbevenius","date":"2019-09-03T01:05:48.989Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 276 seconds","date":"2019-09-03T01:10:46.683Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T01:41:17.544Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-09-03T01:46:09.771Z","type":"quit"}
{"nick":"dbevenius","date":"2019-09-03T03:37:13.748Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-09-03T03:41:42.231Z","type":"quit"}
{"nick":"dbevenius","date":"2019-09-03T03:45:14.429Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T03:47:18.100Z","type":"quit"}
{"nick":"octetcloud","date":"2019-09-03T04:03:10.345Z","type":"join"}
{"nick":"AbedB_","date":"2019-09-03T04:25:27.424Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 245 seconds","date":"2019-09-03T04:32:32.232Z","type":"quit"}
{"nick":"AbedB__","date":"2019-09-03T05:03:09.532Z","type":"join"}
{"nick":"AbedB_","reason":"Ping timeout: 245 seconds","date":"2019-09-03T05:05:53.731Z","type":"quit"}
{"nick":"lundibundi","date":"2019-09-03T05:44:45.580Z","type":"join"}
{"nick":"AbedB_","date":"2019-09-03T05:52:59.357Z","type":"join"}
{"nick":"AbedB__","reason":"Ping timeout: 245 seconds","date":"2019-09-03T05:55:54.043Z","type":"quit"}
{"nick":"AbedB_","reason":"Ping timeout: 258 seconds","date":"2019-09-03T06:12:24.043Z","type":"quit"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-09-03T06:36:04.637Z","type":"quit"}
{"nick":"dbevenius","date":"2019-09-03T06:47:06.491Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-09-03T06:51:30.031Z","type":"quit"}
{"nick":"lundibundi","message":"hi, anyone knows a way to convert string TLS version (i.e. TLSv1.3) to OpenSSL integer id (TLS_1_3_VERSION)?","date":"2019-09-03T07:08:34.218Z","type":"message"}
{"nick":"lundibundi","message":"(in the context of TLSWrap)","date":"2019-09-03T07:09:12.167Z","type":"message"}
{"nick":"dbevenius","date":"2019-09-03T07:09:18.944Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-09-03T07:13:47.203Z","type":"quit"}
{"nick":"dev-31313","date":"2019-09-03T07:18:08.639Z","type":"join"}
{"nick":"dev-31313","reason":"Remote host closed the connection","date":"2019-09-03T07:21:21.546Z","type":"quit"}
{"nick":"dbevenius","date":"2019-09-03T08:08:55.716Z","type":"join"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-09-03T08:08:55.914Z","type":"quit"}
{"nick":"dbevenius","date":"2019-09-03T08:09:10.504Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-09-03T10:58:48.420Z","type":"quit"}
{"nick":"AtumT","date":"2019-09-03T11:12:16.691Z","type":"join"}
{"nick":"lundibundi","date":"2019-09-03T11:28:36.087Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 258 seconds","date":"2019-09-03T12:03:32.055Z","type":"quit"}
{"nick":"octetcloud","date":"2019-09-03T13:45:42.441Z","type":"join"}
{"nick":"AtumT_","date":"2019-09-03T13:59:11.584Z","type":"join"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2019-09-03T13:59:30.126Z","type":"quit"}
{"nick":"lundibundi","date":"2019-09-03T14:00:48.141Z","type":"join"}
{"nick":"chaomi","date":"2019-09-03T14:08:27.363Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-09-03T14:12:08.413Z","type":"quit"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-09-03T14:19:08.898Z","type":"quit"}
{"nick":"chaomi","reason":"Ping timeout: 246 seconds","date":"2019-09-03T14:22:13.353Z","type":"quit"}
{"nick":"chaomi","date":"2019-09-03T14:24:32.344Z","type":"join"}
{"nick":"dbevenius","date":"2019-09-03T14:28:07.840Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 244 seconds","date":"2019-09-03T14:32:42.577Z","type":"quit"}
{"nick":"chaomi","reason":"Ping timeout: 245 seconds","date":"2019-09-03T14:34:13.337Z","type":"quit"}
{"nick":"lundibundi","date":"2019-09-03T14:44:07.382Z","type":"join"}
{"nick":"dbevenius","date":"2019-09-03T14:50:20.570Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-09-03T14:54:38.329Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T15:05:03.684Z","type":"quit"}
{"nick":"mgol","date":"2019-09-03T15:05:55.934Z","type":"join"}
{"nick":"dbevenius","date":"2019-09-03T15:19:21.338Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 245 seconds","date":"2019-09-03T15:20:52.286Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-09-03T15:24:01.159Z","type":"quit"}
{"nick":"lundibundi","date":"2019-09-03T15:28:56.104Z","type":"join"}
{"nick":"shree","date":"2019-09-03T15:35:22.192Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-09-03T15:37:27.968Z","type":"quit"}
{"nick":"nikc","date":"2019-09-03T15:43:39.476Z","type":"join"}
{"nick":"shree","date":"2019-09-03T15:43:49.825Z","type":"join"}
{"nick":"dbevenius","date":"2019-09-03T15:47:10.538Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-09-03T15:51:43.414Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T15:55:57.319Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T15:59:17.357Z","type":"join"}
{"nick":"dbevenius","date":"2019-09-03T16:02:23.673Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T16:08:11.064Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T16:09:29.102Z","type":"join"}
{"nick":"shree","reason":"Remote host closed the connection","date":"2019-09-03T16:09:42.598Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T16:10:29.948Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-09-03T16:11:34.482Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T16:13:26.975Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T16:16:05.309Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T16:20:14.554Z","type":"quit"}
{"nick":"mgol","date":"2019-09-03T16:20:22.569Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 264 seconds","date":"2019-09-03T16:22:52.016Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T16:23:57.103Z","type":"join"}
{"nick":"lundibundi","date":"2019-09-03T16:25:05.426Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T16:35:27.679Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T16:37:06.254Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-09-03T16:38:42.344Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T16:42:15.712Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-09-03T16:46:59.427Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 245 seconds","date":"2019-09-03T16:47:33.412Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 246 seconds","date":"2019-09-03T16:49:13.340Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T16:52:29.403Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T16:58:40.854Z","type":"quit"}
{"nick":"dbevenius","reason":"Remote host closed the connection","date":"2019-09-03T17:03:15.680Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T17:03:59.405Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-09-03T17:08:15.803Z","type":"quit"}
{"nick":"dbevenius","date":"2019-09-03T17:10:35.428Z","type":"join"}
{"nick":"octetcloud","date":"2019-09-03T17:15:03.614Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 264 seconds","date":"2019-09-03T17:15:04.063Z","type":"quit"}
{"nick":"antsmartian","date":"2019-09-03T17:20:10.180Z","type":"join"}
{"nick":"shree","date":"2019-09-03T17:23:19.318Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T17:29:26.028Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T17:39:27.991Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T17:52:13.028Z","type":"quit"}
{"nick":"antsmartian","reason":"Remote host closed the connection","date":"2019-09-03T17:55:11.223Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T17:57:36.603Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-09-03T18:01:30.730Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T18:05:14.206Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-09-03T18:08:03.950Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T18:09:16.971Z","type":"join"}
{"nick":"dbevenius","date":"2019-09-03T18:10:13.651Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T18:14:23.073Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-09-03T18:14:37.229Z","type":"quit"}
{"nick":"lundibundi","date":"2019-09-03T18:17:35.695Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T18:37:30.086Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 244 seconds","date":"2019-09-03T18:41:44.498Z","type":"quit"}
{"nick":"lundibundi","date":"2019-09-03T18:54:25.176Z","type":"join"}
{"nick":"bradleymeck","message":"mcollina: https://github.com/nodejs/node/pull/29426 has a fix for ESM but definitely isn't ideal since it requires the global `process` object be wrapped in a Proxy. The design comes from some attempts by Modules WG to keep ESM in sync with CJS and that wrapper code for syncing was written to use a Proxy apparently","date":"2019-09-03T19:20:38.507Z","type":"message"}
{"nick":"mgol","date":"2019-09-03T19:33:49.729Z","type":"join"}
{"nick":"dbevenius","date":"2019-09-03T20:01:30.545Z","type":"join"}
{"nick":"shree","date":"2019-09-03T20:02:24.041Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-09-03T20:06:09.034Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T20:11:37.777Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T20:12:26.543Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 258 seconds","date":"2019-09-03T20:12:40.160Z","type":"quit"}
{"nick":"mgol","date":"2019-09-03T20:28:18.691Z","type":"join"}
{"nick":"dbevenius","date":"2019-09-03T20:30:38.658Z","type":"join"}
{"nick":"shree","date":"2019-09-03T20:34:12.619Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 258 seconds","date":"2019-09-03T20:35:17.078Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T20:43:52.671Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T20:47:04.428Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T20:59:13.172Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T21:04:55.389Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T21:22:14.487Z","type":"quit"}
{"nick":"dbevenius","date":"2019-09-03T21:27:32.132Z","type":"join"}
{"nick":"shree","date":"2019-09-03T21:27:42.904Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 264 seconds","date":"2019-09-03T21:32:28.062Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T21:40:17.341Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T21:44:30.351Z","type":"join"}
{"nick":"mcollina","message":"I fear that is going to regress performance in so many areas","date":"2019-09-03T21:51:58.190Z","type":"message"}
{"nick":"AtumT_","reason":"Quit: AtumT_","date":"2019-09-03T21:52:09.999Z","type":"quit"}
{"nick":"mcollina","message":"IMHO global proxy should not be a proxy.","date":"2019-09-03T21:52:21.245Z","type":"message"}
{"nick":"mcollina","message":"global process","date":"2019-09-03T21:52:30.931Z","type":"message"}
{"nick":"dbevenius","date":"2019-09-03T21:57:38.876Z","type":"join"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-09-03T22:02:07.159Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T22:07:23.010Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T22:12:55.143Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T22:15:08.069Z","type":"quit"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T22:28:35.423Z","type":"quit"}
{"nick":"mantid","date":"2019-09-03T22:36:20.391Z","type":"join"}
{"nick":"zsoc","date":"2019-09-03T22:42:46.571Z","type":"join"}
{"nick":"bradleymeck","message":"mcollina: all builtins are proxies if you use --experimental-modules","date":"2019-09-03T23:02:52.862Z","type":"message"}
{"nick":"bradleymeck","message":"this was just one reference that wasn't properly wrapped","date":"2019-09-03T23:03:01.325Z","type":"message"}
{"nick":"bradleymeck","message":"i think an argument to not support named exports from core because it requires proxies to stay in sync is a different discussion","date":"2019-09-03T23:03:46.505Z","type":"message"}
{"nick":"mcollina","message":"I’m mostly fine with named exports. I’m -1 on process.nextTick and Buffer and maybe a few others.","date":"2019-09-03T23:04:46.095Z","type":"message"}
{"nick":"bradleymeck","message":"all sorts of new branches and checks get added when you unflag ESM so perf does slow down in a variety of areas","date":"2019-09-03T23:04:48.121Z","type":"message"}
{"nick":"bradleymeck","message":"mcollina: I don't understand","date":"2019-09-03T23:04:57.795Z","type":"message"}
{"nick":"mcollina","message":"I would like to measure all of that :D.","date":"2019-09-03T23:05:13.916Z","type":"message"}
{"nick":"bradleymeck","message":"named exports are implemented by using Proxies to track the state of those objects","date":"2019-09-03T23:05:15.198Z","type":"message"}
{"nick":"bradleymeck","message":"so you can't selectively turn it off for specific fields","date":"2019-09-03T23:05:26.363Z","type":"message"}
{"nick":"mcollina","message":"process.nextTick is incredibly sensitive.","date":"2019-09-03T23:05:38.159Z","type":"message"}
{"nick":"ljharb","message":"mcollina: what you're talking about sounds like a ship that's already sailed for flagged modules, and that perhaps would be an unflagging requirement?","date":"2019-09-03T23:05:46.255Z","type":"message"}
{"nick":"bradleymeck","message":"sure, you could argue we should not have named exports if we don't want that slow down","date":"2019-09-03T23:05:54.543Z","type":"message"}
{"nick":"mcollina","message":"IMHO all of this is experimental  for a reason. I’m expecting non regression on benchmarks.","date":"2019-09-03T23:06:28.811Z","type":"message"}
{"nick":"bradleymeck","message":"mcollina: welp ESM isn't going to be close to that, even if we trim off a lot of the logic","date":"2019-09-03T23:06:49.916Z","type":"message"}
{"nick":"mcollina","message":"So essentially we have “slow esm” vs “fast cjs”?","date":"2019-09-03T23:07:22.572Z","type":"message"}
{"nick":"bradleymeck","message":"not exactly, more checks == more time, supporting 2 module systems == more checks","date":"2019-09-03T23:07:45.734Z","type":"message"}
{"nick":"bradleymeck","message":"both are slower than if they lived in pure isolation","date":"2019-09-03T23:07:56.995Z","type":"message"}
{"nick":"mcollina","message":"Most of those checks are not in very sensitive hot paths, so the actual impact are likely lower. nextTick is.","date":"2019-09-03T23:08:36.822Z","type":"message"}
{"nick":"bradleymeck","message":"and anytime you let things cross into eachother you start having to sync things, so more time there too","date":"2019-09-03T23:08:40.946Z","type":"message"}
{"nick":"bradleymeck","message":"mcollina: the nextTick is slowed just because of the syncing needed for named exports","date":"2019-09-03T23:09:02.836Z","type":"message"}
{"nick":"bradleymeck","message":"if you remove named exports from core modules you don't need to have proxies around them","date":"2019-09-03T23:09:35.642Z","type":"message"}
{"nick":"bradleymeck","message":"could also tell people to start caching it 🤷 either way works for me","date":"2019-09-03T23:10:04.559Z","type":"message"}
{"nick":"mcollina","message":"I don’t understand why it has to impact the global process object","date":"2019-09-03T23:10:05.633Z","type":"message"}
{"nick":"bradleymeck","message":"require('process') === global.process historically","date":"2019-09-03T23:10:19.976Z","type":"message"}
{"nick":"mantid","reason":"Ping timeout: 246 seconds","date":"2019-09-03T23:10:22.372Z","type":"quit"}
{"nick":"bradleymeck","message":"so if you modify global.process it is reflected by the module","date":"2019-09-03T23:10:31.071Z","type":"message"}
{"nick":"bradleymeck","message":"so import('process') in theory should also reflect that, and thus needs to sync with global.process","date":"2019-09-03T23:10:50.709Z","type":"message"}
{"nick":"bradleymeck","message":"there are probably a few other refs i missed, but starting with 1 that was showing up when test failed","date":"2019-09-03T23:11:13.379Z","type":"message"}
{"nick":"ljharb","message":"mcollina: wouldn't the only slowed part be the property access off of `process` to get at the `nextTick` function? operation of nextTick itself wouldn't be affected","date":"2019-09-03T23:11:15.307Z","type":"message"}
{"nick":"ljharb","message":"if it's that sensitive than any property accesses around nextTick calls would also drastically slow things down, no?","date":"2019-09-03T23:11:39.073Z","type":"message"}
{"nick":"mcollina","message":"Let’s talk async, going to bed now.","date":"2019-09-03T23:12:07.761Z","type":"message"}
{"nick":"bradleymeck","message":"k","date":"2019-09-03T23:12:11.991Z","type":"message"}
{"nick":"shree","date":"2019-09-03T23:20:33.620Z","type":"join"}
{"nick":"dbevenius","date":"2019-09-03T23:27:40.544Z","type":"join"}
{"nick":"devsnek","message":"ljharb: it's very noticeable when process.nextTick loses optimization","date":"2019-09-03T23:30:17.255Z","type":"message"}
{"nick":"devsnek","message":"and the property access is fine because the property is created from the js side","date":"2019-09-03T23:30:45.999Z","type":"message"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-09-03T23:30:47.318Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-09-03T23:32:08.311Z","type":"quit"}
{"nick":"shree","date":"2019-09-03T23:33:53.088Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2019-09-03T23:35:01.372Z","type":"quit"}
{"nick":"dbevenius","date":"2019-09-03T23:49:43.705Z","type":"join"}
{"nick":"ljharb","message":"devsnek: ok so then how would the proxy around process impact it","date":"2019-09-03T23:49:58.636Z","type":"message"}
{"nick":"ljharb","message":"since the proxy is gone once `nextTick` is invoked","date":"2019-09-03T23:50:08.323Z","type":"message"}
{"nick":"devsnek","message":"what","date":"2019-09-03T23:50:15.363Z","type":"message"}
{"nick":"devsnek","message":"oh you're talking about after the property access","date":"2019-09-03T23:50:34.089Z","type":"message"}
{"nick":"devsnek","message":"the issue is like","date":"2019-09-03T23:50:36.293Z","type":"message"}
{"nick":"devsnek","message":"`process.nextTick()` in a tight loop","date":"2019-09-03T23:50:42.917Z","type":"message"}
{"nick":"devsnek","message":"handling http connections for example","date":"2019-09-03T23:50:49.639Z","type":"message"}
{"nick":"devsnek","message":"if `process.nextTick` has to run proxy code every time, it slows things down","date":"2019-09-03T23:51:06.448Z","type":"message"}
{"nick":"ljharb","message":"ok but that's a property access each time","date":"2019-09-03T23:52:12.181Z","type":"message"}
{"nick":"ljharb","message":"so if it's a tight loop then you should have already `const { nextTick } = process` anyways","date":"2019-09-03T23:52:23.151Z","type":"message"}
{"nick":"ljharb","message":"or else how can you claim you care about perf","date":"2019-09-03T23:52:26.607Z","type":"message"}
{"nick":"devsnek","message":"because normally v8 can optimize `process.nextTick` access","date":"2019-09-03T23:53:42.520Z","type":"message"}
{"nick":"devsnek","message":"into a constant offset load from memory","date":"2019-09-03T23:53:49.496Z","type":"message"}
{"nick":"ljharb","message":"it's a global","date":"2019-09-03T23:54:05.940Z","type":"message"}
{"nick":"dbevenius","reason":"Ping timeout: 245 seconds","date":"2019-09-03T23:54:12.179Z","type":"quit"}
{"nick":"devsnek","message":"yes","date":"2019-09-03T23:54:16.001Z","type":"message"}
{"nick":"ljharb","message":"if v8 can do that, then v8 can still do it here, even if it's a proxy, as long as the return value of the get handler is consistent","date":"2019-09-03T23:54:21.465Z","type":"message"}
{"nick":"ljharb","message":"no?","date":"2019-09-03T23:54:23.528Z","type":"message"}
{"nick":"devsnek","message":"no","date":"2019-09-03T23:54:27.469Z","type":"message"}
{"nick":"ljharb","message":"why not?","date":"2019-09-03T23:54:29.361Z","type":"message"}
{"nick":"devsnek","message":"its like","date":"2019-09-03T23:54:41.576Z","type":"message"}
{"nick":"devsnek","message":"v8 knows the exact location in memory of the property \"nextTick\" on process","date":"2019-09-03T23:54:55.425Z","type":"message"}
{"nick":"devsnek","message":"so as long as nextTick never changes, `process.nextTick` accesses are just a lookup to that location in memory","date":"2019-09-03T23:55:19.126Z","type":"message"}
{"nick":"devsnek","message":"but with the proxy, there's a bunch of logic in the way","date":"2019-09-03T23:55:45.507Z","type":"message"}
{"nick":"devsnek","message":"in theory v8 can inline the proxy call, and maybe inline a lot of the internals of the proxy call","date":"2019-09-03T23:56:05.830Z","type":"message"}
{"nick":"ljharb","message":"gotcha","date":"2019-09-03T23:56:08.458Z","type":"message"}
{"nick":"devsnek","message":"but it can't get rid of it","date":"2019-09-03T23:56:08.950Z","type":"message"}
{"nick":"ljharb","message":"seems like a simple fix for affected code tho","date":"2019-09-03T23:56:18.326Z","type":"message"}
{"nick":"devsnek","message":"well i think people also like to replace process.nextTick for debugging","date":"2019-09-03T23:56:57.510Z","type":"message"}
{"nick":"devsnek","message":"so doing `const { nextTick } = process` would break that","date":"2019-09-03T23:57:05.945Z","type":"message"}
{"nick":"ljharb","message":"oh like in a repl or something","date":"2019-09-03T23:57:48.619Z","type":"message"}
{"nick":"ljharb","message":"meh, i don't think that really matters much, it's debugging","date":"2019-09-03T23:57:55.984Z","type":"message"}
