{"nick":"marthinal","date":"2018-05-04T00:02:07.002Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 240 seconds","date":"2018-05-04T00:06:27.758Z","type":"quit"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-05-04T00:29:03.865Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2018-05-04T01:28:58.405Z","type":"join"}
{"nick":"devsnek","message":"addaleax: so i was reading through your base object changes and i have a question","date":"2018-05-04T02:13:05.398Z","type":"message"}
{"nick":"devsnek","message":"does static_cast incur a runtime penalty of any sort","date":"2018-05-04T02:13:21.087Z","type":"message"}
{"nick":"devsnek","message":"your two BaseObject::FromJSObject functions seem inverted if that makes sense","date":"2018-05-04T02:18:37.045Z","type":"message"}
{"nick":"devsnek","message":"like the one that explicitly returns a BaseObject should call the template one right?","date":"2018-05-04T02:19:07.967Z","type":"message"}
{"nick":"devsnek","message":"i'm also a bit curious about why none of the methods are inline anymore","date":"2018-05-04T03:21:57.487Z","type":"message"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 256 seconds","date":"2018-05-04T03:51:35.410Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-05-04T03:58:41.500Z","type":"join"}
{"nick":"marthinal","date":"2018-05-04T04:02:34.016Z","type":"join"}
{"nick":"apapirovski","date":"2018-05-04T04:06:52.437Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 240 seconds","date":"2018-05-04T04:06:57.761Z","type":"quit"}
{"nick":"juggernaut451","reason":"Ping timeout: 264 seconds","date":"2018-05-04T04:32:10.078Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-05-04T04:41:39.882Z","type":"join"}
{"nick":"marthinal","date":"2018-05-04T04:56:24.012Z","type":"join"}
{"nick":"apapirovski","reason":"Remote host closed the connection","date":"2018-05-04T05:09:49.611Z","type":"quit"}
{"nick":"robinak","reason":"*.net *.split","date":"2018-05-04T05:15:43.030Z","type":"quit"}
{"nick":"robink","date":"2018-05-04T05:15:52.386Z","type":"join"}
{"nick":"apapirovski","date":"2018-05-04T05:27:26.438Z","type":"join"}
{"nick":"lpin","date":"2018-05-04T05:38:37.978Z","type":"join"}
{"nick":"lpin","reason":"Read error: Connection reset by peer","date":"2018-05-04T05:40:28.962Z","type":"quit"}
{"nick":"lpin","date":"2018-05-04T05:57:01.858Z","type":"join"}
{"nick":"juggernaut451","reason":"Remote host closed the connection","date":"2018-05-04T06:07:30.923Z","type":"quit"}
{"nick":"apapirovski","reason":"Remote host closed the connection","date":"2018-05-04T06:09:08.107Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-05-04T06:29:00.028Z","type":"join"}
{"nick":"apapirovski","date":"2018-05-04T06:39:14.754Z","type":"join"}
{"nick":"addaleax","message":"devsnek: `static_cast` is completely free; and they aren’t really inverted … part of the whole point of the patch was to change semantics so we store the `BaseObject*` pointer in the internal field now, so that the `BaseObject` ctor/dtor can manage the field by themselves","date":"2018-05-04T07:20:17.875Z","type":"message"}
{"nick":"addaleax","message":"also, they are still all marked as inline in `base_object.h`, where it actually matters – that way the compiler warns us if we try to use these functions but haven’t included `base_object-inl.h` where they are defined (which would be problematic in case of e.g. building a shared library only, where functions can be left undefined until runtime)","date":"2018-05-04T07:21:15.029Z","type":"message"}
{"nick":"BridgeAR","date":"2018-05-04T07:24:27.099Z","type":"join"}
{"nick":"juggernaut451","reason":"Ping timeout: 248 seconds","date":"2018-05-04T07:34:25.528Z","type":"quit"}
{"nick":"juggernaut451","date":"2018-05-04T07:36:12.771Z","type":"join"}
{"nick":"juggerna_","date":"2018-05-04T07:45:22.858Z","type":"join"}
{"nick":"juggernaut451","reason":"Ping timeout: 256 seconds","date":"2018-05-04T07:48:54.679Z","type":"quit"}
{"nick":"seishun","date":"2018-05-04T07:59:07.639Z","type":"join"}
