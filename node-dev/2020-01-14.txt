{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T00:32:42.790Z","type":"quit"}
{"nick":"mgol","date":"2020-01-14T00:45:50.526Z","type":"join"}
{"nick":"mgol","reason":"Client Quit","date":"2020-01-14T00:46:11.013Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2020-01-14T03:15:22.541Z","type":"quit"}
{"nick":"zsocw","date":"2020-01-14T05:53:43.291Z","type":"join"}
{"nick":"zsoc","reason":"Disconnected by services","date":"2020-01-14T05:53:43.358Z","type":"quit"}
{"nick":"mgol","date":"2020-01-14T08:00:36.952Z","type":"join"}
{"nick":"AbedB","date":"2020-01-14T08:42:01.769Z","type":"join"}
{"nick":"AbedB_","date":"2020-01-14T09:18:20.458Z","type":"join"}
{"nick":"AbedB","reason":"Ping timeout: 258 seconds","date":"2020-01-14T09:21:49.642Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T09:22:52.577Z","type":"quit"}
{"nick":"AbedB__","date":"2020-01-14T09:27:37.245Z","type":"join"}
{"nick":"AbedB_","reason":"Ping timeout: 260 seconds","date":"2020-01-14T09:31:48.656Z","type":"quit"}
{"nick":"AbedB_","date":"2020-01-14T09:32:00.495Z","type":"join"}
{"nick":"AbedB__","reason":"Ping timeout: 265 seconds","date":"2020-01-14T09:33:53.238Z","type":"quit"}
{"nick":"AbedB__","date":"2020-01-14T09:34:51.583Z","type":"join"}
{"nick":"AbedB_","reason":"Ping timeout: 260 seconds","date":"2020-01-14T09:37:03.716Z","type":"quit"}
{"nick":"mgol","date":"2020-01-14T09:44:16.242Z","type":"join"}
{"nick":"mgol","reason":"Client Quit","date":"2020-01-14T09:45:35.973Z","type":"quit"}
{"nick":"mgol","date":"2020-01-14T09:55:02.349Z","type":"join"}
{"nick":"AbedB_","date":"2020-01-14T10:02:54.535Z","type":"join"}
{"nick":"AbedB__","reason":"Ping timeout: 268 seconds","date":"2020-01-14T10:07:06.603Z","type":"quit"}
{"nick":"AbedB__","date":"2020-01-14T10:26:38.571Z","type":"join"}
{"nick":"AbedB_","reason":"Ping timeout: 260 seconds","date":"2020-01-14T10:30:43.696Z","type":"quit"}
{"nick":"AbedB_","date":"2020-01-14T10:31:00.219Z","type":"join"}
{"nick":"AbedB__","reason":"Ping timeout: 268 seconds","date":"2020-01-14T10:34:14.620Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T10:48:43.879Z","type":"quit"}
{"nick":"mgol","date":"2020-01-14T10:49:12.945Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T11:10:14.903Z","type":"quit"}
{"nick":"mgol","date":"2020-01-14T11:11:02.565Z","type":"join"}
{"nick":"AbedB__","date":"2020-01-14T12:26:32.785Z","type":"join"}
{"nick":"AbedB_","reason":"Ping timeout: 265 seconds","date":"2020-01-14T12:27:36.364Z","type":"quit"}
{"nick":"AbedB__","reason":"Read error: Connection reset by peer","date":"2020-01-14T12:39:09.127Z","type":"quit"}
{"nick":"vesper","reason":"Ping timeout: 258 seconds","date":"2020-01-14T14:53:01.825Z","type":"quit"}
{"nick":"vesper11","date":"2020-01-14T14:53:14.711Z","type":"join"}
{"nick":"ljharb","reason":"Remote host closed the connection","date":"2020-01-14T15:13:31.669Z","type":"quit"}
{"nick":"Domenic","reason":"Remote host closed the connection","date":"2020-01-14T15:13:31.858Z","type":"quit"}
{"nick":"MLM__","reason":"Remote host closed the connection","date":"2020-01-14T15:13:31.925Z","type":"quit"}
{"nick":"d10n-work","reason":"Remote host closed the connection","date":"2020-01-14T15:13:31.925Z","type":"quit"}
{"nick":"Domenic","date":"2020-01-14T15:17:20.262Z","type":"join"}
{"nick":"d10n-work","date":"2020-01-14T15:18:30.403Z","type":"join"}
{"nick":"ljharb","date":"2020-01-14T15:18:34.640Z","type":"join"}
{"nick":"MLM__","date":"2020-01-14T15:18:51.314Z","type":"join"}
{"nick":"MLM__","reason":"Remote host closed the connection","date":"2020-01-14T15:48:27.954Z","type":"quit"}
{"nick":"Domenic","reason":"Remote host closed the connection","date":"2020-01-14T15:48:27.954Z","type":"quit"}
{"nick":"ljharb","reason":"Remote host closed the connection","date":"2020-01-14T15:48:27.955Z","type":"quit"}
{"nick":"d10n-work","reason":"Remote host closed the connection","date":"2020-01-14T15:48:27.955Z","type":"quit"}
{"nick":"Domenic","date":"2020-01-14T15:51:30.274Z","type":"join"}
{"nick":"d10n-work","date":"2020-01-14T15:52:41.117Z","type":"join"}
{"nick":"ljharb","date":"2020-01-14T15:52:43.859Z","type":"join"}
{"nick":"MLM__","date":"2020-01-14T15:53:05.652Z","type":"join"}
{"nick":"shree","date":"2020-01-14T16:28:35.148Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T17:01:25.432Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T17:03:04.292Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T17:08:20.890Z","type":"quit"}
{"nick":"lpin","date":"2020-01-14T17:13:11.103Z","type":"join"}
{"nick":"shree","date":"2020-01-14T17:28:02.797Z","type":"join"}
{"nick":"shree","reason":"Read error: Connection reset by peer","date":"2020-01-14T17:29:27.980Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T17:39:52.497Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2020-01-14T17:43:28.743Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T17:51:27.207Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T18:02:06.661Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T18:21:01.718Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T18:32:11.589Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T18:42:38.496Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T18:46:48.524Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2020-01-14T18:49:49.706Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T18:50:32.920Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T18:56:37.433Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T19:07:13.691Z","type":"join"}
{"nick":"howdoi","date":"2020-01-14T19:12:28.536Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2020-01-14T19:17:38.339Z","type":"quit"}
{"nick":"mgol","date":"2020-01-14T20:17:09.061Z","type":"join"}
{"nick":"devsnek","message":"joyee: exceptions thrown during bootstrap are not logged","date":"2020-01-14T20:28:08.079Z","type":"message"}
{"nick":"devsnek","message":"perhaps wrapping it in a fatal trycatch scope would be okay?","date":"2020-01-14T20:28:22.470Z","type":"message"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T20:33:53.480Z","type":"quit"}
{"nick":"joyee","message":"devsnek: exeptions thrown before the error message listener is attached are, of course, not logged","date":"2020-01-14T20:34:57.633Z","type":"message"}
{"nick":"shree","date":"2020-01-14T20:34:59.293Z","type":"join"}
{"nick":"devsnek","message":"yeah","date":"2020-01-14T20:35:18.179Z","type":"message"}
{"nick":"devsnek","message":"also, adding new files doesn't work","date":"2020-01-14T20:35:42.778Z","type":"message"}
{"nick":"devsnek","message":"but modifying them works","date":"2020-01-14T20:35:58.792Z","type":"message"}
{"nick":"shree","reason":"Client Quit","date":"2020-01-14T20:36:07.843Z","type":"quit"}
{"nick":"joyee","message":"I think it's OK to crash if exceptions are thrown during bootstrap, but otherwise not","date":"2020-01-14T20:36:27.175Z","type":"message"}
{"nick":"devsnek","message":"node exits 1","date":"2020-01-14T20:36:34.394Z","type":"message"}
{"nick":"devsnek","message":"but it doesn't log the exception","date":"2020-01-14T20:36:39.212Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/46739210.png","date":"2020-01-14T20:36:50.326Z","type":"message"}
{"nick":"devsnek","message":"(in this case, running node-dev outside a directory with ./lib/...)","date":"2020-01-14T20:37:07.782Z","type":"message"}
{"nick":"joyee","message":"Yeah you have to crash yourself","date":"2020-01-14T20:37:08.260Z","type":"message"}
{"nick":"devsnek","message":"we pass MaybeLocal all the way up but never actually deal with the exceptions","date":"2020-01-14T20:37:39.487Z","type":"message"}
{"nick":"devsnek","message":"so i was thinking of just putting a TryCatch(kFatal) around CreateMainEnvironment","date":"2020-01-14T20:38:03.769Z","type":"message"}
{"nick":"joyee","message":"We could just deal with it on the spot","date":"2020-01-14T20:38:13.265Z","type":"message"}
{"nick":"shree","date":"2020-01-14T20:38:25.342Z","type":"join"}
{"nick":"joyee","message":"I don't think CreateMainEnvironment should be wrapped with a fatal try catch. At one point the listener is going to be attached and it's better to exit with 1 with that","date":"2020-01-14T20:39:28.096Z","type":"message"}
{"nick":"joyee","message":"It's OK to crash before that, but crash after that doesn't seem to be particularly useful","date":"2020-01-14T20:40:00.267Z","type":"message"}
{"nick":"devsnek","message":"maybe around env::RunBootstrapping?","date":"2020-01-14T20:40:18.779Z","type":"message"}
{"nick":"joyee","message":"Specifically, after process._fatalException is ready","date":"2020-01-14T20:41:31.062Z","type":"message"}
{"nick":"devsnek","message":"process._fatalException is never ready","date":"2020-01-14T20:41:43.548Z","type":"message"}
{"nick":"devsnek","message":"this failure is around not being able to load files from ./lib","date":"2020-01-14T20:41:53.654Z","type":"message"}
{"nick":"joyee","message":"Well, after it's supposed to be ready","date":"2020-01-14T20:42:16.941Z","type":"message"}
{"nick":"devsnek","message":"like if LoadBuiltinModuleSource returns an empty handle","date":"2020-01-14T20:42:45.816Z","type":"message"}
{"nick":"devsnek","message":"i'm not sure what to do","date":"2020-01-14T20:42:47.724Z","type":"message"}
{"nick":"devsnek","message":"i guess i could leave it as no-output for now","date":"2020-01-14T20:43:05.277Z","type":"message"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T20:43:42.499Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T20:45:25.032Z","type":"join"}
{"nick":"joyee","message":"I think right now the best place to create a fatal try catch would be `RunBootstrapping `","date":"2020-01-14T20:46:21.654Z","type":"message"}
{"nick":"devsnek","message":"ok","date":"2020-01-14T20:46:30.425Z","type":"message"}
{"nick":"joyee","message":"Since that's where the listener is being set up","date":"2020-01-14T20:46:32.328Z","type":"message"}
{"nick":"shree","reason":"Client Quit","date":"2020-01-14T20:48:08.685Z","type":"quit"}
{"nick":"joyee","message":"And you can just throw if the files can not be loaded. Though I guess you could also just crash there..","date":"2020-01-14T20:48:31.505Z","type":"message"}
{"nick":"devsnek","message":"well it already throws","date":"2020-01-14T20:48:54.540Z","type":"message"}
{"nick":"devsnek","message":"the trick is printing the exception","date":"2020-01-14T20:49:00.606Z","type":"message"}
{"nick":"joyee","message":"Since technically it's not supposed to throw","date":"2020-01-14T20:49:01.276Z","type":"message"}
{"nick":"devsnek","message":"if its not supposed to throw we might want to consider changing these all from MaybeLocal to Local","date":"2020-01-14T20:49:18.233Z","type":"message"}
{"nick":"joyee","message":"if you throw inside the fatal try catch, I think it'll be printed. If you throw some time later, it gets caught by the global message lisnter","date":"2020-01-14T20:49:38.376Z","type":"message"}
{"nick":"devsnek","message":"fatal does env->Exit(7)","date":"2020-01-14T20:50:04.400Z","type":"message"}
{"nick":"devsnek","message":"after calling the message reporter","date":"2020-01-14T20:50:13.005Z","type":"message"}
{"nick":"shree","date":"2020-01-14T20:50:32.271Z","type":"join"}
{"nick":"joyee","message":"Then I guess we could just add another mode","date":"2020-01-14T20:51:00.052Z","type":"message"}
{"nick":"joyee","message":"That does not depend on Env","date":"2020-01-14T20:51:06.320Z","type":"message"}
{"nick":"devsnek","message":"well the env exists at this point","date":"2020-01-14T20:51:20.077Z","type":"message"}
{"nick":"devsnek","message":"but its kind of a hack","date":"2020-01-14T20:51:21.705Z","type":"message"}
{"nick":"joyee","message":"What's the issue with using a fatal try catch around `RunBootstrapping`?","date":"2020-01-14T20:52:13.138Z","type":"message"}
{"nick":"devsnek","message":"nothing i assume","date":"2020-01-14T20:52:21.187Z","type":"message"}
{"nick":"devsnek","message":"i'm testing it atm","date":"2020-01-14T20:52:27.346Z","type":"message"}
{"nick":"devsnek","message":"hmm it didn't catch it","date":"2020-01-14T20:52:57.463Z","type":"message"}
{"nick":"joyee","message":"hmm, it might be swallowed by another TryCatch whose caller returns a Maybe","date":"2020-01-14T20:53:32.300Z","type":"message"}
{"nick":"devsnek","message":"i can't find any other trycatches","date":"2020-01-14T20:56:34.842Z","type":"message"}
{"nick":"devsnek","message":"sigh","date":"2020-01-14T20:56:36.316Z","type":"message"}
{"nick":"devsnek","message":"i think i'll just clean all this up in a separate pr","date":"2020-01-14T20:57:53.253Z","type":"message"}
{"nick":"joyee","message":"hmm, wait, what kind of error are you seeing","date":"2020-01-14T20:59:35.232Z","type":"message"}
{"nick":"joyee","message":"because if you modify e.g. primoridal.js to throw a syntax error, it should be printed - the global error exception listener can adjust to the state of the environment","date":"2020-01-14T21:00:14.470Z","type":"message"}
{"nick":"joyee","message":"And print things on a best-effort basis","date":"2020-01-14T21:00:27.917Z","type":"message"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T21:00:46.012Z","type":"quit"}
{"nick":"devsnek","message":"joyee: any failure through the bootstrapping pipeline","date":"2020-01-14T21:07:30.507Z","type":"message"}
{"nick":"devsnek","message":"i think","date":"2020-01-14T21:07:42.136Z","type":"message"}
{"nick":"devsnek","message":"at least any failure from CompileAsModule during bootstrap","date":"2020-01-14T21:08:05.540Z","type":"message"}
{"nick":"joyee","message":"devsnek: right now they are printed with a crash though","date":"2020-01-14T21:08:07.555Z","type":"message"}
{"nick":"joyee","message":"e.g. all the sytnax failures happen before process._fatalException is attached","date":"2020-01-14T21:08:32.844Z","type":"message"}
{"nick":"devsnek","message":"hmmm","date":"2020-01-14T21:08:39.056Z","type":"message"}
{"nick":"devsnek","message":"the two ThrowException calls i add","date":"2020-01-14T21:09:11.825Z","type":"message"}
{"nick":"joyee","message":"You just need to return to the JS land properly, and the error will be caught by the global handler, which adapts to different situations","date":"2020-01-14T21:09:18.746Z","type":"message"}
{"nick":"devsnek","message":"if those code paths are taken, i never see them printed","date":"2020-01-14T21:09:28.678Z","type":"message"}
{"nick":"devsnek","message":"hmm it might not be able to run the full test suite unless i change this to \"path to node source\"","date":"2020-01-14T21:11:09.543Z","type":"message"}
{"nick":"devsnek","message":"wow and UVException requires env","date":"2020-01-14T21:13:23.496Z","type":"message"}
{"nick":"joyee","message":"It probably should have an overload that does not need env, the env is just there for access to the persistent strings","date":"2020-01-14T21:33:26.217Z","type":"message"}
{"nick":"joyee","message":"I think your issue is caused by the fact that ThrowException does not trigger the error message listener. It only schedules a pending exception","date":"2020-01-14T21:34:17.065Z","type":"message"}
{"nick":"devsnek","message":"joyee: for now i'm going to just put CHECK_EQ(uv op, 0)","date":"2020-01-14T21:35:56.263Z","type":"message"}
{"nick":"joyee","message":"I think one possible trick is to print the js stack in `RunBootstrapping` if it ends up failing. It should be done with a scope, ideally, because you can have many different places where you have to return early (e.g. when NewContext fails)","date":"2020-01-14T21:45:10.644Z","type":"message"}
{"nick":"joyee","message":"That comes back to some sort of TryCatch only that it does not involve an exception","date":"2020-01-14T21:45:52.860Z","type":"message"}
{"nick":"joyee","message":"(..or it does if you want to use an exception to carry out extra info)","date":"2020-01-14T21:46:17.392Z","type":"message"}
{"nick":"devsnek","message":"how is dep remapping done","date":"2020-01-14T21:46:22.927Z","type":"message"}
{"nick":"devsnek","message":"like deps/acorn","date":"2020-01-14T21:46:39.295Z","type":"message"}
{"nick":"devsnek","message":"it looks like to the loader, `internal/deps` is a thing","date":"2020-01-14T21:47:01.596Z","type":"message"}
{"nick":"joyee","message":"grep requireWithFallbackInDeps","date":"2020-01-14T21:47:05.506Z","type":"message"}
{"nick":"devsnek","message":"but like","date":"2020-01-14T21:47:25.908Z","type":"message"}
{"nick":"devsnek","message":"how are these actually keyed","date":"2020-01-14T21:47:30.339Z","type":"message"}
{"nick":"devsnek","message":"do i have to make unmap from `lib/internal/deps/` to `deps/`","date":"2020-01-14T21:47:54.857Z","type":"message"}
{"nick":"joyee","message":"They are not, the loader just does `this.id.startsWith('internal/deps/') ? requireWithFallbackInDeps : nativeModuleRequire`","date":"2020-01-14T21:48:35.281Z","type":"message"}
{"nick":"devsnek","message":"yeah but like","date":"2020-01-14T21:48:43.461Z","type":"message"}
{"nick":"devsnek","message":"LoadBuiltinModuleSource","date":"2020-01-14T21:48:48.771Z","type":"message"}
{"nick":"devsnek","message":"the id is \"internal/deps/acorn/dist/acorn.js\" or whatever","date":"2020-01-14T21:49:06.636Z","type":"message"}
{"nick":"devsnek","message":"but on the file system","date":"2020-01-14T21:49:11.023Z","type":"message"}
{"nick":"devsnek","message":"there is no internal/deps","date":"2020-01-14T21:49:14.653Z","type":"message"}
{"nick":"boneskull","message":"so bryan english had an idea for ESM module reloading--which works by abusing internals--but it leaks memory.  is this a bug in node?  I thought I heard something about the spec saying modules must remain in memory?  anyway, gist: https://gist.github.com/bengl/3a58d386573a2d7aaeb8e256951c8684","date":"2020-01-14T21:50:00.807Z","type":"message"}
{"nick":"devsnek","message":"boneskull: module lifetimes are tied to a lot of things","date":"2020-01-14T21:51:01.105Z","type":"message"}
{"nick":"devsnek","message":"tl;dr you can't expect them to just disappear","date":"2020-01-14T21:51:12.728Z","type":"message"}
{"nick":"boneskull","message":"okay","date":"2020-01-14T21:51:33.585Z","type":"message"}
{"nick":"devsnek","message":"its not part of the spec but its not really a bug either","date":"2020-01-14T21:51:38.782Z","type":"message"}
{"nick":"joyee","message":"devsnek: that's done by js2c","date":"2020-01-14T21:51:45.093Z","type":"message"}
{"nick":"joyee","message":"See `NormalizeFileName`","date":"2020-01-14T21:51:51.098Z","type":"message"}
{"nick":"devsnek","message":"so i should do something similar but in reverse","date":"2020-01-14T21:52:24.319Z","type":"message"}
{"nick":"devsnek","message":"if we're reading from the file system","date":"2020-01-14T21:52:32.026Z","type":"message"}
{"nick":"joyee","message":"Yeah, just map `internal/deps/foo` to a read to `./deps/foo`","date":"2020-01-14T21:54:22.361Z","type":"message"}
{"nick":"joyee","message":"Also, to support adding modules, you'll need to sync the JS land map","date":"2020-01-14T21:54:59.562Z","type":"message"}
{"nick":"devsnek","message":"yeah i'm gonna probably do that later","date":"2020-01-14T21:55:12.492Z","type":"message"}
{"nick":"devsnek","message":"for now updating node.gyp isn't that bad","date":"2020-01-14T21:55:22.950Z","type":"message"}
{"nick":"joyee","message":"This would be tricky if you want to make this eventually a runtime option though","date":"2020-01-14T21:56:19.155Z","type":"message"}
{"nick":"joyee","message":"(unless you give up loading bootstrap files dynamically)","date":"2020-01-14T21:58:12.127Z","type":"message"}
{"nick":"devsnek","message":"boneskull: with vm, getting rid of the entire context might work","date":"2020-01-14T21:59:33.995Z","type":"message"}
{"nick":"devsnek","message":"and unreffing *all* the modules in the graph","date":"2020-01-14T22:00:02.455Z","type":"message"}
{"nick":"devsnek","message":"i think that would work","date":"2020-01-14T22:00:12.068Z","type":"message"}
{"nick":"devsnek","message":"basically you have to start over from scratch","date":"2020-01-14T22:00:24.603Z","type":"message"}
{"nick":"devsnek","message":"if we want hot reloading it will probably need to be a debugger feature from v8","date":"2020-01-14T22:00:41.547Z","type":"message"}
{"nick":"devsnek","message":"in fact that might already be an api","date":"2020-01-14T22:01:23.745Z","type":"message"}
{"nick":"devsnek","message":"cuz of devtools","date":"2020-01-14T22:01:26.019Z","type":"message"}
{"nick":"shree","date":"2020-01-14T22:04:06.172Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T22:09:33.675Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T22:10:24.207Z","type":"join"}
{"nick":"AbedB","date":"2020-01-14T22:19:27.896Z","type":"join"}
{"nick":"bengl","message":"devsnek: \"module lifetimes are tied to a lot of things tl;dr you can't expect them to just disappear\" <--- yeah that's what i was afraid of. :/","date":"2020-01-14T22:26:48.515Z","type":"message"}
{"nick":"devsnek","message":"bengl: https://chromedevtools.github.io/devtools-protocol/v8/Debugger/#method-setScriptSource","date":"2020-01-14T22:27:24.597Z","type":"message"}
{"nick":"devsnek","message":"does this help?","date":"2020-01-14T22:27:27.381Z","type":"message"}
{"nick":"bengl","message":"sneaky, it might","date":"2020-01-14T22:27:43.644Z","type":"message"}
{"nick":"devsnek","message":"that's how the chrome devtools does \"live edit\"","date":"2020-01-14T22:27:53.129Z","type":"message"}
{"nick":"devsnek","message":"in node you can just require('inspector').enable() i think","date":"2020-01-14T22:28:15.741Z","type":"message"}
{"nick":"devsnek","message":"i think you'd have to do it before any modules you'd want to live edit would be loaded","date":"2020-01-14T22:28:30.764Z","type":"message"}
{"nick":"bengl","message":"that would be fine for mocha's use case think. boneskull?","date":"2020-01-14T22:29:13.226Z","type":"message"}
{"nick":"devsnek","message":"i don't think the names of the exports can change though","date":"2020-01-14T22:30:04.875Z","type":"message"}
{"nick":"devsnek","message":"can't add, remove, rename, exports","date":"2020-01-14T22:30:09.841Z","type":"message"}
{"nick":"bengl","message":"another interesting question would be whether or not setting it to the exact same string would cause it to re-evaluate","date":"2020-01-14T22:30:33.405Z","type":"message"}
{"nick":"devsnek","message":"it would","date":"2020-01-14T22:30:46.112Z","type":"message"}
{"nick":"devsnek","message":"actually that might be a lie","date":"2020-01-14T22:31:53.006Z","type":"message"}
{"nick":"devsnek","message":"devtools code is so confusing lol","date":"2020-01-14T22:32:05.959Z","type":"message"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T22:33:40.629Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2020-01-14T22:35:22.756Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T22:36:52.978Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T22:42:29.165Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T22:44:19.267Z","type":"join"}
{"nick":"boneskull","message":"bengl not sure","date":"2020-01-14T22:44:53.518Z","type":"message"}
{"nick":"boneskull","message":"it might! that's tricksy","date":"2020-01-14T22:46:08.830Z","type":"message"}
{"nick":"shree","reason":"Client Quit","date":"2020-01-14T22:47:03.158Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T22:57:09.533Z","type":"join"}
{"nick":"shree","reason":"Client Quit","date":"2020-01-14T22:59:47.049Z","type":"quit"}
{"nick":"shree","date":"2020-01-14T23:00:58.755Z","type":"join"}
{"nick":"howdoi","date":"2020-01-14T23:31:07.305Z","type":"join"}
{"nick":"shree","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-14T23:36:39.060Z","type":"quit"}
