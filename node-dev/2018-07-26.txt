{"nick":"antsanto","date":"2018-07-26T01:41:43.903Z","type":"join"}
{"nick":"marthinal","date":"2018-07-26T01:49:22.938Z","type":"join"}
{"nick":"BridgeAR1","reason":"Ping timeout: 264 seconds","date":"2018-07-26T01:52:33.927Z","type":"quit"}
{"nick":"marthinal","reason":"Ping timeout: 268 seconds","date":"2018-07-26T01:54:02.765Z","type":"quit"}
{"nick":"scott_gonzalez","reason":"Ping timeout: 245 seconds","date":"2018-07-26T02:09:22.496Z","type":"quit"}
{"nick":"mgol","reason":"Remote host closed the connection","date":"2018-07-26T02:14:10.459Z","type":"quit"}
{"nick":"mgol","date":"2018-07-26T02:23:17.381Z","type":"join"}
{"nick":"scott_gonzalez","date":"2018-07-26T02:25:17.413Z","type":"join"}
{"nick":"antsanto","reason":"Remote host closed the connection","date":"2018-07-26T02:51:33.841Z","type":"quit"}
{"nick":"lpin","date":"2018-07-26T04:47:16.086Z","type":"join"}
{"nick":"marthinal","date":"2018-07-26T04:55:39.889Z","type":"join"}
{"nick":"marthinal","reason":"Read error: Connection reset by peer","date":"2018-07-26T04:55:40.345Z","type":"quit"}
{"nick":"marthinal","date":"2018-07-26T04:55:46.857Z","type":"join"}
{"nick":"ryzokuken","message":"TimothyGu: idk how willing Evan would be to run them on production ðŸ˜…","date":"2018-07-26T05:00:54.165Z","type":"message"}
{"nick":"m00dy","date":"2018-07-26T06:02:34.883Z","type":"join"}
{"nick":"zeds","date":"2018-07-26T06:13:03.075Z","type":"join"}
{"nick":"zeds","date":"2018-07-26T06:13:06.618Z","type":"part"}
{"nick":"antsanto","date":"2018-07-26T06:30:19.579Z","type":"join"}
{"nick":"antsanto","reason":"Ping timeout: 265 seconds","date":"2018-07-26T06:35:02.364Z","type":"quit"}
{"nick":"seishun","date":"2018-07-26T06:41:15.805Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T06:47:42.306Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T06:48:08.299Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T07:14:46.968Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T07:19:25.426Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 248 seconds","date":"2018-07-26T07:37:37.395Z","type":"quit"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T08:13:20.039Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T08:13:55.039Z","type":"join"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2018-07-26T08:15:41.323Z","type":"quit"}
{"nick":"ChALkeR","reason":"Quit: Konversation terminated!","date":"2018-07-26T08:16:35.356Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-07-26T08:16:47.782Z","type":"join"}
{"nick":"m00dy","reason":"Ping timeout: 240 seconds","date":"2018-07-26T08:19:35.462Z","type":"quit"}
{"nick":"ChALkeR","reason":"Client Quit","date":"2018-07-26T08:20:48.836Z","type":"quit"}
{"nick":"antsanto","date":"2018-07-26T08:36:34.424Z","type":"join"}
{"nick":"antsanto","reason":"Remote host closed the connection","date":"2018-07-26T09:04:50.842Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T09:20:44.115Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T09:20:47.146Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T09:21:03.884Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T09:21:03.884Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T09:24:49.020Z","type":"join"}
{"nick":"iarna","reason":"Quit: Connection closed for inactivity","date":"2018-07-26T09:41:18.385Z","type":"quit"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T10:06:42.232Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-07-26T10:25:11.145Z","type":"quit"}
{"nick":"mylesborins","date":"2018-07-26T10:25:19.870Z","type":"join"}
{"nick":"m00dy","date":"2018-07-26T10:47:18.211Z","type":"join"}
{"nick":"lundibundi","date":"2018-07-26T10:58:43.655Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T11:05:26.261Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T11:05:51.931Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T11:12:58.101Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T11:13:41.910Z","type":"join"}
{"nick":"BridgeAR1","date":"2018-07-26T11:23:57.741Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T11:51:13.311Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T11:59:30.300Z","type":"join"}
{"nick":"AtumT","date":"2018-07-26T12:09:35.742Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 240 seconds","date":"2018-07-26T12:20:35.550Z","type":"quit"}
{"nick":"lundibundi","date":"2018-07-26T12:22:14.579Z","type":"join"}
{"nick":"BridgeAR1","reason":"Ping timeout: 256 seconds","date":"2018-07-26T12:26:46.707Z","type":"quit"}
{"nick":"BridgeAR1","date":"2018-07-26T12:27:12.457Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 248 seconds","date":"2018-07-26T12:36:17.385Z","type":"quit"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T12:36:53.252Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T12:37:22.893Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T13:18:19.120Z","type":"quit"}
{"nick":"m00dy","date":"2018-07-26T13:25:46.451Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-07-26T13:26:44.684Z","type":"quit"}
{"nick":"marthinal","date":"2018-07-26T13:30:49.731Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-07-26T13:41:10.599Z","type":"quit"}
{"nick":"marthinal","date":"2018-07-26T13:41:38.226Z","type":"join"}
{"nick":"d10n-work","date":"2018-07-26T13:45:14.727Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 264 seconds","date":"2018-07-26T13:45:57.929Z","type":"quit"}
{"nick":"marthinal","date":"2018-07-26T13:51:43.230Z","type":"join"}
{"nick":"m00dy","reason":"Remote host closed the connection","date":"2018-07-26T15:17:47.655Z","type":"quit"}
{"nick":"ryzokuken","message":"Y'all getting as much spam as I am?","date":"2018-07-26T16:00:45.639Z","type":"message"}
{"nick":"devsnek","message":"ryzokuken: do /mode ryzokuken +R","date":"2018-07-26T16:02:38.922Z","type":"message"}
{"nick":"devsnek","message":"it will make it so only registered users can pm you","date":"2018-07-26T16:03:03.938Z","type":"message"}
{"nick":"ryzokuken","message":"devsnek: Yeah, just did it.","date":"2018-07-26T16:03:11.377Z","type":"message"}
{"nick":"BridgeAR1","reason":"Ping timeout: 240 seconds","date":"2018-07-26T16:05:35.453Z","type":"quit"}
{"nick":"lundibundi","date":"2018-07-26T16:18:48.612Z","type":"join"}
{"nick":"seishun","date":"2018-07-26T16:43:29.085Z","type":"join"}
{"nick":"lpin","reason":"Ping timeout: 240 seconds","date":"2018-07-26T16:45:57.908Z","type":"quit"}
{"nick":"BridgeAR1","date":"2018-07-26T17:02:58.258Z","type":"join"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2018-07-26T17:50:49.642Z","type":"quit"}
{"nick":"AtumT","date":"2018-07-26T17:52:19.652Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2018-07-26T17:59:54.315Z","type":"quit"}
{"nick":"seishun","date":"2018-07-26T18:38:38.381Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-07-26T19:09:07.646Z","type":"quit"}
{"nick":"lundibundi","reason":"Ping timeout: 240 seconds","date":"2018-07-26T19:20:05.534Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 264 seconds","date":"2018-07-26T19:38:10.147Z","type":"quit"}
{"nick":"zsoc","message":"Is there a reason why the ERR_UNHANDLED_ERROR has the assumption that errors are strings? https://github.com/nodejs/node/blob/3950a3e0b1319c6cae49f674b7f82a491ea09093/lib/internal/errors.js#L839","date":"2018-07-26T20:01:47.504Z","type":"message"}
{"nick":"zsoc","message":"The byproduct is obtuse messages, like with an handled error event emit, where you get something spit out like \"Error [ERR_UNHANDLED_ERROR]: Unhandled error. ([object Object])\" and a meaningless stacktrace of internals","date":"2018-07-26T20:04:10.250Z","type":"message"}
{"nick":"d10n-work","reason":"Quit: Connection closed for inactivity","date":"2018-07-26T20:04:32.836Z","type":"quit"}
{"nick":"zsoc","message":"I guess the assumption is actually happening here: https://github.com/nodejs/node/blob/master/lib/events.js#L171 - if there's an error event where the arg isn't instanceof Error, it assumes the arg is a string and creates the new ERR_UNHANDLED_ERROR","date":"2018-07-26T20:06:16.857Z","type":"message"}
{"nick":"zsoc","message":"I'm not sure exactly what the alternative is but surely there's a solution better than spitting out [object Object]","date":"2018-07-26T20:06:33.665Z","type":"message"}
{"nick":"ljharb","message":"what else would you be throwing that's not a string or an error, when hoping for debuggable output?","date":"2018-07-26T20:14:47.716Z","type":"message"}
{"nick":"zsoc","message":"an error that's crafted in some way that fails `instanceof Error` check","date":"2018-07-26T20:15:23.878Z","type":"message"}
{"nick":"zsoc","message":"and if you google that exact string above you'll see it's not an uncommon thing","date":"2018-07-26T20:15:40.021Z","type":"message"}
{"nick":"ljharb","message":"ok, but any thrown thing should toString usefully","date":"2018-07-26T20:16:06.653Z","type":"message"}
{"nick":"al-damiri","date":"2018-07-26T20:17:18.436Z","type":"join"}
{"nick":"zsoc","message":"absolutely, but if it doesn't, now the user of *node* is left with a bad taste in their mouth because some dependency which is unidentified decided not to play by the rules","date":"2018-07-26T20:17:21.735Z","type":"message"}
{"nick":"ljharb","message":"ok - so what should node do there","date":"2018-07-26T20:17:36.680Z","type":"message"}
{"nick":"ljharb","message":"throw a BadLibraryError?","date":"2018-07-26T20:17:42.470Z","type":"message"}
{"nick":"zsoc","message":"Creating a warning before throwing the error is definitely one possibility. An unhandled error event was encountered without a valid Error, or something. But i guess that doesn't really get you closer to the culprit.","date":"2018-07-26T20:20:35.210Z","type":"message"}
{"nick":"zsoc","message":"So in theory this is a determinate case you can test for.. in these cases you could print the serializable parts of the object to the console. Or at least a truncated part of it above the error","date":"2018-07-26T20:21:24.339Z","type":"message"}
{"nick":"zsoc","message":"Like, I don't know, JSON.stringify(er, Object.getOwnPropertyNames(er)) - or something. Anything is better than an error and a stack trace with no error or stack trace. The only thing it tells you is that there was an unhandled error event.","date":"2018-07-26T20:23:36.148Z","type":"message"}
{"nick":"ljharb","message":"i could see it being reasonable, when it's not a string and when the string form is `[object Object]`, to instead use util.inspect() of it","date":"2018-07-26T20:31:57.340Z","type":"message"}
{"nick":"ljharb","message":"but that might be large","date":"2018-07-26T20:32:00.122Z","type":"message"}
{"nick":"zsoc","message":"right, the only concern is maybe it was sent by accident and is just random data and not even intended to be an error... but truncating util.inspect is always a possibility","date":"2018-07-26T20:39:31.648Z","type":"message"}
{"nick":"lundibundi","date":"2018-07-26T20:39:43.614Z","type":"join"}
{"nick":"seishun","date":"2018-07-26T21:11:55.091Z","type":"join"}
{"nick":"marthinal","date":"2018-07-26T21:20:39.865Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-07-26T21:21:12.909Z","type":"quit"}
{"nick":"marthinal","date":"2018-07-26T21:21:38.922Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 240 seconds","date":"2018-07-26T21:25:57.741Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-07-26T21:26:54.593Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2018-07-26T21:34:34.286Z","type":"quit"}
{"nick":"devsnek","message":"who has access to the nodejs twitter","date":"2018-07-26T22:03:57.721Z","type":"message"}
{"nick":"devsnek","message":"i want to tweet out the poll \"if node shipped something that doesn't always work in its intended use case would you consider it a bug\"","date":"2018-07-26T22:04:13.535Z","type":"message"}
{"nick":"lundibundi","reason":"Ping timeout: 240 seconds","date":"2018-07-26T22:28:05.456Z","type":"quit"}
{"nick":"TimothyGu","message":"devsnek: uh yes?","date":"2018-07-26T22:33:58.560Z","type":"message"}
{"nick":"TimothyGu","message":"I think you might've meant to make the question more specific?","date":"2018-07-26T22:34:20.938Z","type":"message"}
{"nick":"devsnek","message":"TimothyGu: no, i didn't","date":"2018-07-26T22:34:31.258Z","type":"message"}
{"nick":"TimothyGu","message":"What would be a valid \"no\" rationale then?","date":"2018-07-26T22:34:48.407Z","type":"message"}
{"nick":"devsnek","message":"nothing","date":"2018-07-26T22:34:54.591Z","type":"message"}
{"nick":"devsnek","message":"that's my point","date":"2018-07-26T22:34:58.108Z","type":"message"}
{"nick":"devsnek","message":"the argument i'm in right now is that feature that node ships don't need to be correct in all cases they pertain to","date":"2018-07-26T22:35:23.862Z","type":"message"}
{"nick":"devsnek","message":"which like blows my mind","date":"2018-07-26T22:35:26.818Z","type":"message"}
{"nick":"zsoc","reason":"Quit: Leaving","date":"2018-07-26T22:38:19.297Z","type":"quit"}
{"nick":"TimothyGu","message":"devsnek: Â¿dÃ³nde?","date":"2018-07-26T22:38:24.454Z","type":"message"}
{"nick":"devsnek","message":"TimothyGu: promiseEvent pr","date":"2018-07-26T22:38:36.291Z","type":"message"}
{"nick":"TimothyGu","message":"aha","date":"2018-07-26T22:38:40.469Z","type":"message"}
{"nick":"devsnek","message":"benjamingr verbatim said he doesn't think it has to work in all cases","date":"2018-07-26T22:38:48.441Z","type":"message"}
{"nick":"devsnek","message":"which like","date":"2018-07-26T22:38:54.441Z","type":"message"}
{"nick":"devsnek","message":"hurts my brain","date":"2018-07-26T22:38:56.755Z","type":"message"}
{"nick":"devsnek","message":"(it being us tracking promises in general)","date":"2018-07-26T22:39:14.330Z","type":"message"}
{"nick":"devsnek","message":"if the thing doesn't work don't ship it","date":"2018-07-26T22:39:39.413Z","type":"message"}
{"nick":"lundibundi","date":"2018-07-26T22:45:46.494Z","type":"join"}
{"nick":"lundibundi","reason":"Ping timeout: 260 seconds","date":"2018-07-26T22:50:24.336Z","type":"quit"}
{"nick":"TimothyGu","message":"devsnek: I personally think a best-effort API is okay, if we explicitly say it's best effort","date":"2018-07-26T22:57:19.703Z","type":"message"}
{"nick":"TimothyGu","message":"like `process.on('bestEffortUnhandledRejection')`","date":"2018-07-26T22:57:55.801Z","type":"message"}
