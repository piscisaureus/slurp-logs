{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-14T01:00:12.054Z","type":"quit"}
{"nick":"keith_miller","date":"2018-06-14T01:10:00.433Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-14T02:07:58.616Z","type":"quit"}
{"nick":"gsathya","reason":"Ping timeout: 256 seconds","date":"2018-06-14T02:36:58.581Z","type":"quit"}
{"nick":"gsathya","date":"2018-06-14T02:38:11.354Z","type":"join"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2018-06-14T03:47:54.899Z","type":"quit"}
{"nick":"ningu","date":"2018-06-14T04:44:07.644Z","type":"join"}
{"nick":"ningu","message":"hi, srl295 said I should mention that I just wrote (read: hacked together) this interface to ICU's rule based transliterators and number formats: https://github.com/longnow/node-icu-transliterator","date":"2018-06-14T04:48:08.908Z","type":"message"}
{"nick":"srl295","message":"^ don’t think there’s an issue for this yet in 402","date":"2018-06-14T04:49:09.685Z","type":"message"}
{"nick":"ningu","message":"I wrote it because no one else had, not because I thought I was the best person to write it in the best way. happy to take suggestions or take pull requests or whatever","date":"2018-06-14T04:49:58.111Z","type":"message"}
{"nick":"zsoc","date":"2018-06-14T04:58:35.929Z","type":"join"}
{"nick":"jmdyck1","reason":"Remote host closed the connection","date":"2018-06-14T04:58:40.478Z","type":"quit"}
{"nick":"Havvy","date":"2018-06-14T05:03:59.482Z","type":"join"}
{"nick":"AtumT_","date":"2018-06-14T05:20:19.794Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 256 seconds","date":"2018-06-14T05:23:08.731Z","type":"quit"}
{"nick":"AtumT","date":"2018-06-14T05:33:49.763Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 260 seconds","date":"2018-06-14T05:35:00.775Z","type":"quit"}
{"nick":"devsnek","message":"ningu: thats pretty cool","date":"2018-06-14T05:44:34.665Z","type":"message"}
{"nick":"ningu","reason":"Quit: Lost terminal","date":"2018-06-14T06:05:07.701Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-06-14T10:25:28.182Z","type":"quit"}
{"nick":"mylesborins","date":"2018-06-14T10:25:58.644Z","type":"join"}
{"nick":"jmdyck","date":"2018-06-14T12:42:22.405Z","type":"join"}
{"nick":"regaddi","date":"2018-06-14T14:20:57.816Z","type":"join"}
{"nick":"Fishrock123","date":"2018-06-14T14:58:25.090Z","type":"join"}
{"nick":"keith_miller","date":"2018-06-14T15:08:13.333Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-14T15:30:29.924Z","type":"quit"}
{"nick":"keith_miller","date":"2018-06-14T15:33:58.508Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-14T15:47:24.598Z","type":"quit"}
{"nick":"cloudshu","date":"2018-06-14T16:12:37.887Z","type":"join"}
{"nick":"keith_miller","date":"2018-06-14T16:15:46.378Z","type":"join"}
{"nick":"jwalden","date":"2018-06-14T17:23:59.911Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-06-14T17:54:27.413Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-06-14T17:59:30.946Z","type":"join"}
{"nick":"nin-jin","date":"2018-06-14T18:22:06.950Z","type":"join"}
{"nick":"nin-jin","message":"Hello, what do you think about this feature? https://gist.github.com/nin-jin/5408ef8f16f43f1b4fe9cbcea577aac6","date":"2018-06-14T18:25:50.105Z","type":"message"}
{"nick":"devsnek","message":"its been suggested before","date":"2018-06-14T18:26:40.573Z","type":"message"}
{"nick":"nin-jin","message":"Where can I see results?","date":"2018-06-14T18:27:48.944Z","type":"message"}
{"nick":"devsnek","message":"wdym results","date":"2018-06-14T18:28:34.653Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: you should search es-discuss for a discussion on nonblocking json parsing","date":"2018-06-14T18:29:34.450Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: and there's current proposals for blöcks, and also atomics, that you'd want to build off of","date":"2018-06-14T18:29:59.766Z","type":"message"}
{"nick":"nin-jin","message":"ljharb, json example demonstrates using fibers with non asynchronous api which takes callbacks. It can be Array.reduce and others.","date":"2018-06-14T18:31:35.374Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: you should read the discussion. i think it talks about why json parsing can't be done except synchronously","date":"2018-06-14T18:32:15.777Z","type":"message"}
{"nick":"nin-jin","message":"devsnek, some conclusion of discussion.","date":"2018-06-14T18:32:17.656Z","type":"message"}
{"nick":"devsnek","message":"i dunno if coro/fibers/threading/etc has ever been like officially proposed","date":"2018-06-14T18:32:56.292Z","type":"message"}
{"nick":"devsnek","message":"but it gets discussed by lots of people","date":"2018-06-14T18:33:08.453Z","type":"message"}
{"nick":"ljharb","message":"i also don't think there's consensus that we want it.","date":"2018-06-14T18:33:15.883Z","type":"message"}
{"nick":"devsnek","message":"webkit had this nice blog post a while ago about it","date":"2018-06-14T18:33:16.171Z","type":"message"}
{"nick":"devsnek","message":"did they every bring that strawman to a tc39 meeting","date":"2018-06-14T18:33:44.569Z","type":"message"}
{"nick":"ljharb","message":"nope","date":"2018-06-14T18:33:50.565Z","type":"message"}
{"nick":"devsnek","message":"weird","date":"2018-06-14T18:33:53.860Z","type":"message"}
{"nick":"ljharb","message":"it wouldn't go well, i suspect","date":"2018-06-14T18:33:55.885Z","type":"message"}
{"nick":"nin-jin","message":"devsnek, could you provide a hyperlink to this post?","date":"2018-06-14T18:35:09.647Z","type":"message"}
{"nick":"devsnek","message":"https://webkit.org/blog/7846/concurrent-javascript-it-can-work/","date":"2018-06-14T18:35:17.028Z","type":"message"}
{"nick":"devsnek","message":"they propose a thread api not a fiber api but","date":"2018-06-14T18:35:41.756Z","type":"message"}
{"nick":"devsnek","message":"i think the sentiment is the same","date":"2018-06-14T18:35:45.906Z","type":"message"}
{"nick":"bradleymeck","action":"perks up and then hides again","date":"2018-06-14T18:36:08.122Z","type":"action"}
{"nick":"devsnek","message":"lol","date":"2018-06-14T18:36:14.423Z","type":"message"}
{"nick":"bradleymeck","message":"the locking needed to do their proposal is... comprehensive from my rudimentary investigation","date":"2018-06-14T18:36:39.512Z","type":"message"}
{"nick":"devsnek","message":"if you passed objects between the thread explicitly and they became shared","date":"2018-06-14T18:38:10.942Z","type":"message"}
{"nick":"devsnek","message":"then again prototypes","date":"2018-06-14T18:38:24.989Z","type":"message"}
{"nick":"nin-jin","message":"So, how add my proposal to stage-0?","date":"2018-06-14T18:58:06.411Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-06-14T19:23:10.510Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-06-14T19:33:31.787Z","type":"join"}
{"nick":"ljharb","message":"nin-jin: you'd have to have a committee member champion it.","date":"2018-06-14T20:07:16.578Z","type":"message"}
{"nick":"nin-jin","message":"How?","date":"2018-06-14T20:15:09.277Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: convince someone it's developed enough, worth solving, and who has the time to champion it","date":"2018-06-14T20:31:37.419Z","type":"message"}
{"nick":"akirose","message":"nin-jin: you'l' notice that anyone in this channel with a +v is a TC39 delegate. those are your targets to convince ^_^","date":"2018-06-14T20:32:42.131Z","type":"message"}
{"nick":"nin-jin","message":"My english is very bad. I don't understand \"you'l'\" and \"+v\". What is it?","date":"2018-06-14T20:40:25.159Z","type":"message"}
{"nick":"nin-jin","message":"Could someone review my proposal and give me feedback? https://gist.github.com/nin-jin/5408ef8f16f43f1b4fe9cbcea577aac6","date":"2018-06-14T20:41:04.287Z","type":"message"}
{"nick":"nin-jin","message":"I don't understand why fibers isn't implemented yet as in other mature languages.","date":"2018-06-14T20:41:54.572Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: \"you'll\" is a contraction for \"you will\", and `+v` is the \"voiced\" mode in IRC - there's 23 of us voiced in this channel right now, compared to 69 unvoiced","date":"2018-06-14T20:43:45.439Z","type":"message"}
{"nick":"bradleymeck","message":"nin-jin: i think a decent amount of why is that generators can serve this purpose while being explicit about when yielding may occur","date":"2018-06-14T20:44:06.093Z","type":"message"}
{"nick":"bradleymeck","message":"lua is my main experience here, though some with python and d","date":"2018-06-14T20:44:20.374Z","type":"message"}
{"nick":"bradleymeck","message":"the single threaded message passing nature of JS doesn't lend itself to people who have written code that is safe to yield within","date":"2018-06-14T20:44:51.049Z","type":"message"}
{"nick":"bradleymeck","message":"I wasn't at the decision making process, but explicit locations for yielding seemed a good compromise so that people can clearly expose where the stack can be paused","date":"2018-06-14T20:45:37.698Z","type":"message"}
{"nick":"nin-jin","message":"Thank you for explanation.","date":"2018-06-14T20:52:00.152Z","type":"message"}
{"nick":"nin-jin","message":"Use case: yielding every 16ms for 60fps. With generators (async functions) we need to convert **all** functions and methods to generators. So this explicitness is drammatically useless. People, who don't understand how to use fibers - can don't use fibers. But most of developers who want simple and responsive code - need this feature. This is developers of React, Carberry, $mol, Glimmer, Meteor etc etc.","date":"2018-06-14T21:02:56.449Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: what's the actual use case tho","date":"2018-06-14T21:03:19.123Z","type":"message"}
{"nick":"ljharb","message":"\"yielding\" doesn't tell me why you want to do it","date":"2018-06-14T21:03:26.172Z","type":"message"}
{"nick":"ljharb","message":"doesn't requestAnimationFrame, setTimeout, etc, allow you to do that?","date":"2018-06-14T21:03:39.411Z","type":"message"}
{"nick":"nin-jin","message":"Calculation can spend more then 16 ms, so we need to sleep to allow browser update view and handle events. This this example of fibers emulation: http://mol.js.org/fiber/","date":"2018-06-14T21:07:30.482Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: sure but you can calculate in a web worker","date":"2018-06-14T21:08:09.946Z","type":"message"}
{"nick":"ljharb","message":"and you can use Atomics to \"sleep\" the main thread","date":"2018-06-14T21:08:52.512Z","type":"message"}
{"nick":"nin-jin","message":"I can't modify DOM in web worker.","date":"2018-06-14T21:09:07.993Z","type":"message"}
{"nick":"ljharb","message":"modifying dom isn't calculations","date":"2018-06-14T21:09:36.588Z","type":"message"}
{"nick":"nin-jin","message":"All what computer do is calculations :-)","date":"2018-06-14T21:10:02.496Z","type":"message"}
{"nick":"ljharb","message":"well, it's not pure math i mean","date":"2018-06-14T21:10:07.159Z","type":"message"}
{"nick":"ljharb","message":"and modifying the DOM always has to be single-threaded afaik","date":"2018-06-14T21:10:15.049Z","type":"message"}
{"nick":"devsnek","message":"wasm is supposed to have threads iirc","date":"2018-06-14T21:11:53.348Z","type":"message"}
{"nick":"nin-jin","message":"Compare flame charts of rendering: https://nin-jin.github.io/slides/fibers/flame-chart.png","date":"2018-06-14T21:12:08.197Z","type":"message"}
{"nick":"devsnek","message":"direct shared memory between workers maybe?","date":"2018-06-14T21:12:08.491Z","type":"message"}
{"nick":"devsnek","message":"i don't remember exactly what it was","date":"2018-06-14T21:12:12.805Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: performance in some cases tho, isn't enough to justify adding a language feature if it would break existing invariants, or if it would be very easy to misuse it","date":"2018-06-14T21:15:37.289Z","type":"message"}
{"nick":"nin-jin","message":"Workers have some limitations: cost of (de)serialization, events can't be processed in worker (because async communacation), cost of worker start (we can't run every computation in separate worker), API limitation(DOM, CSSOM, Canvas, GeoLocation, History, Location, XMLHttpRequest.responseXML, Window)","date":"2018-06-14T21:17:15.055Z","type":"message"}
{"nick":"nin-jin","message":"So, without native fibers we ($mol, React) have to emulate it through Promise throwing. It has more misuse cases.","date":"2018-06-14T21:20:55.847Z","type":"message"}
{"nick":"devsnek","message":"you could use wasm","date":"2018-06-14T21:21:43.397Z","type":"message"}
{"nick":"devsnek","message":"and at a granularity of 16ms the cost of html structured clones isn't really a big deal","date":"2018-06-14T21:22:05.477Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: if you're going to use React as a motivator, you may want to get the react core team onboard - they're on TC39 as well","date":"2018-06-14T21:25:04.616Z","type":"message"}
{"nick":"nin-jin","message":"I can't render DOM from WASM. I can't force my users to write all they code in WASM.","date":"2018-06-14T21:26:17.434Z","type":"message"}
{"nick":"bradleymeck","message":"nin-jin: I think part of the problem is you need to convince people that implementing this feature won't affect people who don't use the feature, if someone writes code not expecting a yield within a function they call, it could be problematic","date":"2018-06-14T21:26:26.616Z","type":"message"}
{"nick":"bradleymeck","message":"so even if you don't use the feature, you need to account for the possibility that values you are provided do use the feature","date":"2018-06-14T21:26:50.506Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: specifically, much of my code relies on everything being single-threaded and run-to-completion, so it'd be critical not to break that","date":"2018-06-14T21:27:10.091Z","type":"message"}
{"nick":"bradleymeck","message":"idk if it is critical, but it needs lots of talk about how to handle it at minimum which will be a long talk","date":"2018-06-14T21:28:31.441Z","type":"message"}
{"nick":"ljharb","message":"it would break a large part of the web, i suspect.","date":"2018-06-14T21:30:32.941Z","type":"message"}
{"nick":"ljharb","message":"webkit's blog post implies it wouldn't, but i'm not convinced yet","date":"2018-06-14T21:30:42.284Z","type":"message"}
{"nick":"nin-jin","message":"No it can break only code that relies on stack and global variables together. In example: $mol_atom, lom_atom, MobX, CellX, KnockOut - all its uses global variables to provide stack-bound context. Its should be patched to use fibers-bound context.","date":"2018-06-14T21:33:47.161Z","type":"message"}
{"nick":"ljharb","message":"sure. that's lots of code.","date":"2018-06-14T21:35:56.863Z","type":"message"}
{"nick":"ljharb","message":"nin-jin: for example, tons of code relies on Promise or Array, which are globals","date":"2018-06-14T21:36:07.521Z","type":"message"}
{"nick":"ljharb","message":"and it's both important that unexpected mutations not be allowed, and also that expected mutations be allowed (think polyfills/shims)","date":"2018-06-14T21:36:29.841Z","type":"message"}
{"nick":"nin-jin","message":"Could you provide a realistic example that can be broken?","date":"2018-06-14T21:40:40.063Z","type":"message"}
{"nick":"nin-jin","message":"So no one force you to launch in fiber libs that is not compatible with fibers.","date":"2018-06-14T21:41:23.675Z","type":"message"}
{"nick":"nin-jin","message":"Just don't use it if not sure.","date":"2018-06-14T21:41:48.458Z","type":"message"}
{"nick":"ljharb","message":"that's not an option; browsers often run code outside your control","date":"2018-06-14T21:44:45.557Z","type":"message"}
{"nick":"ljharb","message":"as long as existing code runs first, it should be able to protect itself against any code running after it breaking it","date":"2018-06-14T21:45:14.692Z","type":"message"}
{"nick":"bradleymeck","message":"nin-jin: `setTimeout(()=>{ee.emit('start')},0);thing_that_yields();return ee;`","date":"2018-06-14T21:46:00.275Z","type":"message"}
{"nick":"bradleymeck","message":"the problem is `thing_that_yields` can be ~= anything if proper coroutines exist since it is just possible to do that from any function","date":"2018-06-14T21:46:37.757Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-06-14T21:48:03.932Z","type":"quit"}
{"nick":"Fishrock123","date":"2018-06-14T22:00:11.771Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2018-06-14T22:41:51.980Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-14T23:45:10.878Z","type":"quit"}
