{"nick":"mattijs","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T00:00:35.756Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-13T00:18:24.346Z","type":"join"}
{"nick":"mattijs","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T00:45:03.968Z","type":"quit"}
{"nick":"caridy","date":"2018-03-13T01:02:07.150Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2018-03-13T01:22:19.724Z","type":"quit"}
{"nick":"TabAtkins","message":"jschoi: Wonderful reply in the pipelines thread. Very adroit handling, and good reasoning.","date":"2018-03-13T01:24:07.122Z","type":"message"}
{"nick":"TabAtkins","message":"(I opened a similar issue against the proposal in GH, but your response is more eloquent than mine. ^_^)","date":"2018-03-13T01:24:57.178Z","type":"message"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-03-13T01:26:00.767Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-13T03:01:42.114Z","type":"join"}
{"nick":"mattijs","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T03:30:06.761Z","type":"quit"}
{"nick":"howdoi","date":"2018-03-13T04:11:31.934Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-03-13T04:35:47.824Z","type":"quit"}
{"nick":"leobalter","date":"2018-03-13T04:38:14.653Z","type":"join"}
{"nick":"jschoi","message":"TabAtkins: Thanks! My other reply was posted before I saw either of your replies, but thank you for adding on in that thread!","date":"2018-03-13T04:44:13.471Z","type":"message"}
{"nick":"jschoi","message":"I appreciated it very much.","date":"2018-03-13T04:47:15.665Z","type":"message"}
{"nick":"jschoi","message":"I see your issue now. That’s an interesting coincidence…though I suppose it’s not coincidental, since it really is an issue. Your ideas of pipeline operators for functor mapping and [monadic?] binding and chaining are very interesting.","date":"2018-03-13T04:52:41.488Z","type":"message"}
{"nick":"jschoi","message":"In https://github.com/TheNavigateur/proposal-pipeline-operator-for-function-composition/issues/9#issuecomment-372467776, that is.","date":"2018-03-13T04:53:03.643Z","type":"message"}
{"nick":"jschoi","message":"…Also, for some reason, ESDiscuss.org’s formatting engine keeps turning my “Warm regards” valediction into “Warm”. It’s pretty funny. I tried hyphenating it to “Warm re-gards”, and *that* didn’t get affected. How funny.","date":"2018-03-13T05:21:54.236Z","type":"message"}
{"nick":"Domenic","message":"It tries to remove all redundant salutations and sign-offs","date":"2018-03-13T05:25:05.185Z","type":"message"}
{"nick":"jschoi","message":"Hah, so it’s intentional. Nice.","date":"2018-03-13T05:25:49.952Z","type":"message"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-03-13T05:39:57.305Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T07:09:37.551Z","type":"quit"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2018-03-13T07:17:45.055Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-13T09:16:32.726Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-13T10:13:58.160Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-13T10:25:10.636Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-13T10:25:41.130Z","type":"join"}
{"nick":"AtumT","date":"2018-03-13T10:46:03.431Z","type":"join"}
{"nick":"jmdyck","date":"2018-03-13T12:36:06.181Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T12:45:12.630Z","type":"quit"}
{"nick":"atticoos_","date":"2018-03-13T13:27:23.178Z","type":"join"}
{"nick":"caridy","date":"2018-03-13T14:01:43.216Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2018-03-13T14:03:20.326Z","type":"quit"}
{"nick":"caridy","date":"2018-03-13T14:03:35.372Z","type":"join"}
{"nick":"TabAtkins","message":"jschoi: Yeah, ultimately mapping/chaining after just alternate ways of calling a function on a value, and pipeline just happens to be the first function-call operator we have.","date":"2018-03-13T14:06:17.540Z","type":"message"}
{"nick":"TabAtkins","message":"But also it would incidentally basically give us Haskell's do-notation, which is interesting.","date":"2018-03-13T14:06:58.452Z","type":"message"}
{"nick":"TabAtkins","message":"Would have to give some thought to whether mixing in arrow functions would give you the \"bind a value for later in the chain\" functionality; I think it will.","date":"2018-03-13T14:08:04.476Z","type":"message"}
{"nick":"gibson0421","reason":"Ping timeout: 260 seconds","date":"2018-03-13T14:21:49.351Z","type":"quit"}
{"nick":"gibson042","date":"2018-03-13T14:37:18.270Z","type":"join"}
{"nick":"leobalte_","date":"2018-03-13T15:00:57.389Z","type":"join"}
{"nick":"keith_miller","date":"2018-03-13T15:03:38.554Z","type":"join"}
{"nick":"atticoos_","reason":"Ping timeout: 240 seconds","date":"2018-03-13T15:21:27.794Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-13T15:22:38.105Z","type":"join"}
{"nick":"atticoos_","date":"2018-03-13T15:29:17.226Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-03-13T15:32:33.260Z","type":"quit"}
{"nick":"jschoi","message":"It’d be cool if it could be generalized to Kleisli composition with arrows. There are powerful concepts a developer can use, such as foldables, transversables, and lenses, to get things like Clojure transducer–like functionality. Those in turn could abstract the processing of plural items (mapping, filtering, taking, partitioning, reducing, deduplicating) from many kinds of plural structures…perhaps even for both","date":"2018-03-13T15:51:59.835Z","type":"message"}
{"nick":"jschoi","message":"push and pull async plural structures like WHATWG Streams and Observables. But it’s a broad problem, and it’s one that’s way out of the current scope that we’re trying to address with singular-value pipelines, which have clear use cases today…but maybe someday.","date":"2018-03-13T15:52:00.075Z","type":"message"}
{"nick":"jwalden","date":"2018-03-13T15:52:20.142Z","type":"join"}
{"nick":"jschoi","message":"Looks like some people already floated the idea for Kleisli composition such as in https://github.com/TheNavigateur/proposal-pipeline-operator-for-function-composition/issues/3#issuecomment-334079726.","date":"2018-03-13T15:53:34.892Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T16:14:07.497Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-13T16:18:37.001Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2018-03-13T16:19:05.280Z","type":"quit"}
{"nick":"caridy","date":"2018-03-13T16:19:39.251Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T16:26:55.319Z","type":"quit"}
{"nick":"leobalte_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T16:27:05.007Z","type":"quit"}
{"nick":"mattijs_","date":"2018-03-13T16:28:37.998Z","type":"join"}
{"nick":"mattijs__","date":"2018-03-13T16:29:41.123Z","type":"join"}
{"nick":"mattijs","reason":"Ping timeout: 276 seconds","date":"2018-03-13T16:29:50.117Z","type":"quit"}
{"nick":"mattijs__","reason":"Client Quit","date":"2018-03-13T16:32:27.240Z","type":"quit"}
{"nick":"mattijs_","reason":"Ping timeout: 246 seconds","date":"2018-03-13T16:32:46.010Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-13T16:36:05.067Z","type":"join"}
{"nick":"cloudshu","date":"2018-03-13T16:39:17.632Z","type":"join"}
{"nick":"mattijs","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T16:52:16.219Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-13T16:58:23.321Z","type":"join"}
{"nick":"mattijs","reason":"Client Quit","date":"2018-03-13T16:59:17.354Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-13T17:03:13.023Z","type":"join"}
{"nick":"keith_miller","date":"2018-03-13T17:10:04.660Z","type":"join"}
{"nick":"mattijs","new_nick":"mattijs[away]","date":"2018-03-13T17:15:14.696Z","type":"nick"}
{"nick":"mattijs[away]","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T17:16:15.077Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-13T17:26:19.102Z","type":"join"}
{"nick":"devsnek","message":"we should just implement `'use closure'`, its pretty clear that's where the future is anyway :D","date":"2018-03-13T18:03:15.690Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T18:14:58.734Z","type":"quit"}
{"nick":"atticoos_","reason":"Ping timeout: 256 seconds","date":"2018-03-13T18:16:59.409Z","type":"quit"}
{"nick":"TabAtkins","message":"jschoi: Strongly agree! Kleisli composition is *so useful*, and with a pipeline operator in place, it can be done very easily in userland, as that post demonstrates - with your syntax ,it's `x |> #.then(func)`. It's probably good to make this cleaner in the future with some blessed kleisli promotions, as I mentioned - I don't think we need a new pipeline form, but rather a keyword operator. Like, `x |> map func` could","date":"2018-03-13T18:39:42.832Z","type":"message"}
{"nick":"TabAtkins","message":"desugar to `x |> #[Symbol.map](func)`, or similar.","date":"2018-03-13T18:39:43.071Z","type":"message"}
{"nick":"ystartsev","message":"hello everyone","date":"2018-03-13T19:01:28.012Z","type":"message"}
{"nick":"ystartsev","message":"i made a survey for developers not involved in the tc39 to better understand how people see our resources","date":"2018-03-13T19:01:43.316Z","type":"message"}
{"nick":"ystartsev","message":"https://tinyurl.com/tc39-dev-survey","date":"2018-03-13T19:01:44.323Z","type":"message"}
{"nick":"ystartsev","message":"its really basic -- but its a starting point, please share if you see fit","date":"2018-03-13T19:02:17.303Z","type":"message"}
{"nick":"ystartsev","message":"or fill it out even!","date":"2018-03-13T19:02:21.324Z","type":"message"}
{"nick":"keith_miller","date":"2018-03-13T19:03:34.464Z","type":"join"}
{"nick":"leobalter","new_nick":"leobalter_znc","date":"2018-03-13T19:37:31.315Z","type":"nick"}
{"nick":"mattijs","new_nick":"mattijs[away]","date":"2018-03-13T19:59:24.870Z","type":"nick"}
{"nick":"mattijs[away]","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T20:03:15.500Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-13T20:08:04.119Z","type":"join"}
{"nick":"not-an-aardvark","date":"2018-03-13T20:09:19.126Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T20:18:18.470Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-13T20:20:37.220Z","type":"join"}
{"nick":"TabAtkins","message":"jschoi: Ooof, reading thru that thread is somewhat painful, as there's a lot of confusion about how piping/containers/mapping works.","date":"2018-03-13T20:21:28.073Z","type":"message"}
{"nick":"TabAtkins","message":"Best idea really is to just rely on Kleisli arrows, which use normal function-call semantics. With, as I said, maybe some keyword operators to help with the common promotions of map/then and chain/bind.","date":"2018-03-13T20:22:38.873Z","type":"message"}
{"nick":"jschoi","message":"Yeah, that’s a really promising idea.","date":"2018-03-13T20:23:38.717Z","type":"message"}
{"nick":"jschoi","message":"TabAtkins: I would be really interested in hearing the use cases you have in mind. Let me know.","date":"2018-03-13T20:25:47.814Z","type":"message"}
{"nick":"jschoi","message":"Sometime, that is.","date":"2018-03-13T20:26:01.297Z","type":"message"}
{"nick":"TabAtkins","message":"Well there's the obvious of chaining promises or iterators. Promises have the cheat of using \"await\", but iterators don't.","date":"2018-03-13T20:27:55.421Z","type":"message"}
{"nick":"TabAtkins","message":"Or Maybes, or Results, or Streams...","date":"2018-03-13T20:28:36.930Z","type":"message"}
{"nick":"devsnek","message":"surveys you opt into aren't statistically sound :D","date":"2018-03-13T20:29:24.480Z","type":"message"}
{"nick":"TabAtkins","message":"But topic-form at least means we don't *need* any syntax for now anyway; any chaining we want to do can be done manually without too much difficulty.","date":"2018-03-13T20:29:35.289Z","type":"message"}
{"nick":"TabAtkins","message":"Iterators will require us to finally define .map() on iterators, or else require the users to spread into an array, but still.","date":"2018-03-13T20:30:01.354Z","type":"message"}
{"nick":"devsnek","message":"ystartsev: i filled it out :)","date":"2018-03-13T20:32:20.647Z","type":"message"}
{"nick":"devsnek","message":"sending to people","date":"2018-03-13T20:32:34.302Z","type":"message"}
{"nick":"TabAtkins","message":"`range(5) |> [...#].map(times3)` would yield `[0, 3, 6, 9, 12]`. If iterators had map, `range(5) |> #.map(times3)` gives an iterator that does the same.","date":"2018-03-13T20:32:43.180Z","type":"message"}
{"nick":"TabAtkins","message":"`mightFail() |> #.then(moreStuff)`, same for options.","date":"2018-03-13T20:33:56.445Z","type":"message"}
{"nick":"TabAtkins","message":"Any of the various options for mapping/chaining streams work the same.","date":"2018-03-13T20:34:13.224Z","type":"message"}
{"nick":"devsnek","message":"i would post the survey on the discord reactiflux server but i'd probably get banned for advertising","date":"2018-03-13T20:34:30.720Z","type":"message"}
{"nick":"leobalter","date":"2018-03-13T20:34:49.913Z","type":"join"}
{"nick":"TabAtkins","message":"`eventStream(el, \"mousemove\") |> #.map(+> console.log)`","date":"2018-03-13T20:35:02.215Z","type":"message"}
{"nick":"jschoi","message":"TabAtkins: The problem is general: the problem of so many “plural” structures having different ways to process their items in similar ways. Arrays, Sets, Maps, promises, iterators, async iterators, observables, streams, and whatever else from https://github.com/kriskowal/gtor—and even other abstractions—all need similar functionality of mapping, filtering, partitioning, reducing, deduplicating,","date":"2018-03-13T20:35:31.709Z","type":"message"}
{"nick":"jschoi","message":"taking/leaving/slicing, and so forth.","date":"2018-03-13T20:35:31.910Z","type":"message"}
{"nick":"leobalter_znc","reason":"Disconnected by services","date":"2018-03-13T20:36:07.820Z","type":"quit"}
{"nick":"jschoi","message":"Clojure’s transducers approach it in one way: being basically the Kleisli category of the Haskell type `[]`, except they isolate themselves into stateful functions that transform reducer functions. They’re pretty elegant. I had been planning on prototyping ways to reconcile them with both push and pull async plural (and therefore reducible) structures.","date":"2018-03-13T20:36:09.466Z","type":"message"}
{"nick":"leobalter_fancy_","date":"2018-03-13T20:36:33.829Z","type":"join"}
{"nick":"jschoi","message":"Now lately I’ve been working on pipelining, but your ideas of extending pipelines to more abstract compositions make those old plans more relevant…","date":"2018-03-13T20:37:18.170Z","type":"message"}
{"nick":"TabAtkins","message":"Given the ease with which topic-form allows invoking whatever kleisli-upgrade you want, I don't think we need to worry about it right now. Wait and see what the community figures out.","date":"2018-03-13T20:38:07.258Z","type":"message"}
{"nick":"jschoi","message":"Things are both simpler and more complicated due to JavaScript’s being impure and able to close over state, of course.","date":"2018-03-13T20:38:11.285Z","type":"message"}
{"nick":"devsnek","message":"it would be if you could pipe the yielded values of an iterator","date":"2018-03-13T20:38:26.156Z","type":"message"}
{"nick":"TabAtkins","message":"*Maybe* worthwhile to standardize map/ap/chain, but probably not.","date":"2018-03-13T20:38:27.142Z","type":"message"}
{"nick":"jschoi","message":"Yeah. I want to wait more for the cowpaths to happen.","date":"2018-03-13T20:38:28.767Z","type":"message"}
{"nick":"devsnek","message":"i guess +> could be used for that?","date":"2018-03-13T20:38:34.821Z","type":"message"}
{"nick":"Bakkot","message":"we should get first-class protocols and then standardize map/ap/chain","date":"2018-03-13T20:38:59.662Z","type":"message"}
{"nick":"jschoi","message":"`+>` can be used as a callback for processing singular values, but you still need a higher-order function.","date":"2018-03-13T20:39:00.831Z","type":"message"}
{"nick":"TabAtkins","message":"devsnek: Nah, until we add a map method to iterators, you can't easily pipeline into iterators.","date":"2018-03-13T20:39:03.400Z","type":"message"}
{"nick":"TabAtkins","message":"You can write a trivial function that does so, of course, and then use +> to make it easy.","date":"2018-03-13T20:39:18.694Z","type":"message"}
{"nick":"jschoi","message":"Transducers are also nice because they prevent unnecessary allocation.","date":"2018-03-13T20:39:26.915Z","type":"message"}
{"nick":"TabAtkins","message":"`iterRange(5) |> iterMap(#, cb)`","date":"2018-03-13T20:39:32.821Z","type":"message"}
{"nick":"jschoi","message":"Because what they create are new reducer functions.","date":"2018-03-13T20:39:38.261Z","type":"message"}
{"nick":"jschoi","message":"So those reducer functions pull only as much as they need, and only at the end is a new structure created.","date":"2018-03-13T20:39:53.132Z","type":"message"}
{"nick":"TabAtkins","message":"where iterMap is just `*(it, cb) => { for(val of it) yield cb(val); }`","date":"2018-03-13T20:40:13.069Z","type":"message"}
{"nick":"jschoi","message":"That is, they solve the problem of `bigArray.map(f).filter(g)` creating large unnecessary arrays.","date":"2018-03-13T20:40:15.905Z","type":"message"}
{"nick":"jschoi","message":"I would want a general solution to be able to deal on a folding/reducing level. Lenses, arrows, transducers, whatever; they’re pretty similar, and it’s easier in many ways in an impure imperative language like JavaScript.","date":"2018-03-13T20:40:54.261Z","type":"message"}
{"nick":"devsnek","message":"iterator.foreach?","date":"2018-03-13T20:41:10.968Z","type":"message"}
{"nick":"jschoi","message":"There’s no Iterator global object or iterator prototype.","date":"2018-03-13T20:41:55.760Z","type":"message"}
{"nick":"TabAtkins","message":"foreach probably *also* useful, but we need map for this case. ^_^","date":"2018-03-13T20:41:59.242Z","type":"message"}
{"nick":"jschoi","message":"First-class protocols with well-known symbols, perhaps. Or built-in modules if those ever become a thing.","date":"2018-03-13T20:42:16.101Z","type":"message"}
{"nick":"jschoi","message":"But I would want it to be done on the right level of abstraction.","date":"2018-03-13T20:42:40.149Z","type":"message"}
{"nick":"devsnek","message":"official javascript fp iterator utils confirmed ;)","date":"2018-03-13T20:42:52.844Z","type":"message"}
{"nick":"TabAtkins","message":"Yup. So let's just keep it in mind, and not try to address it right now - topic-form is good enough. ^_^","date":"2018-03-13T20:43:00.180Z","type":"message"}
{"nick":"jschoi","message":"Wait for the cowpaths, I guess.","date":"2018-03-13T20:43:04.437Z","type":"message"}
{"nick":"jschoi","message":"In the meantime, each structure can offer its own bespoke API, and that’s okay for now.","date":"2018-03-13T20:43:48.210Z","type":"message"}
{"nick":"jschoi","message":"Smart pipelines will help them either way.","date":"2018-03-13T20:44:08.707Z","type":"message"}
{"nick":"jschoi","message":"Or whatever pipelines.","date":"2018-03-13T20:44:11.724Z","type":"message"}
{"nick":"mylesborins","reason":"Excess Flood","date":"2018-03-13T21:30:25.002Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-13T21:30:46.461Z","type":"join"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-03-13T21:39:06.504Z","type":"quit"}
{"nick":"atticoos_","date":"2018-03-13T21:52:51.190Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T21:54:48.199Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-13T21:57:23.492Z","type":"join"}
{"nick":"mattijs_","date":"2018-03-13T22:02:36.802Z","type":"join"}
{"nick":"mattijs","reason":"Ping timeout: 240 seconds","date":"2018-03-13T22:04:13.097Z","type":"quit"}
{"nick":"cloudshu","date":"2018-03-13T22:16:16.181Z","type":"join"}
{"nick":"mattijs_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T22:33:21.889Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-13T22:37:48.032Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-13T22:48:55.924Z","type":"quit"}
{"nick":"caridy_","date":"2018-03-13T23:37:27.355Z","type":"join"}
{"nick":"howdoi","date":"2018-03-13T23:39:12.130Z","type":"join"}
{"nick":"caridy","reason":"Ping timeout: 246 seconds","date":"2018-03-13T23:40:48.961Z","type":"quit"}
{"nick":"mattijs","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-13T23:56:14.369Z","type":"quit"}
