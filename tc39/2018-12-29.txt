{"nick":"aki_","date":"2018-12-29T01:04:29.808Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2018-12-29T01:04:38.285Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-12-29T01:04:46.071Z","type":"nick"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2018-12-29T01:43:43.588Z","type":"quit"}
{"nick":"wuz_","date":"2018-12-29T02:15:31.697Z","type":"join"}
{"nick":"wuz_","reason":"Ping timeout: 268 seconds","date":"2018-12-29T02:20:09.698Z","type":"quit"}
{"nick":"aki_","date":"2018-12-29T03:11:45.321Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 250 seconds","date":"2018-12-29T03:11:56.772Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-12-29T03:12:01.290Z","type":"nick"}
{"nick":"jorydotcom","date":"2018-12-29T03:14:56.703Z","type":"join"}
{"nick":"jorydotcom","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2018-12-29T03:35:29.237Z","type":"quit"}
{"nick":"aki_","date":"2018-12-29T05:18:56.257Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-12-29T05:19:07.428Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-12-29T05:19:12.327Z","type":"nick"}
{"nick":"jmdyck","reason":"Ping timeout: 268 seconds","date":"2018-12-29T05:26:23.797Z","type":"quit"}
{"nick":"jmdyck","date":"2018-12-29T05:29:43.433Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-12-29T06:03:31.841Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-12-29T07:03:09.875Z","type":"quit"}
{"nick":"aki_","date":"2018-12-29T07:24:06.318Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-12-29T07:24:58.251Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-12-29T07:24:58.662Z","type":"nick"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2018-12-29T09:30:53.325Z","type":"quit"}
{"nick":"akirose","date":"2018-12-29T09:31:50.446Z","type":"join"}
{"nick":"aki_","date":"2018-12-29T11:38:03.998Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-12-29T11:38:35.832Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-12-29T11:38:35.833Z","type":"nick"}
{"nick":"AtumT","date":"2018-12-29T12:04:28.536Z","type":"join"}
{"nick":"jmdyck","date":"2018-12-29T13:31:40.980Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-12-29T13:45:17.995Z","type":"quit"}
{"nick":"akirose","date":"2018-12-29T13:47:18.366Z","type":"join"}
{"nick":"aki_","date":"2018-12-29T15:54:28.750Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-12-29T15:54:47.470Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-12-29T15:54:47.952Z","type":"nick"}
{"nick":"efaust","reason":"Ping timeout: 268 seconds","date":"2018-12-29T17:55:38.802Z","type":"quit"}
{"nick":"aki_","date":"2018-12-29T18:01:08.411Z","type":"join"}
{"nick":"efaust","date":"2018-12-29T18:02:37.446Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2018-12-29T18:02:54.909Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-12-29T18:02:55.213Z","type":"nick"}
{"nick":"efaust","new_nick":"Guest48133","date":"2018-12-29T18:03:01.785Z","type":"nick"}
{"nick":"Guest48133","reason":"Ping timeout: 244 seconds","date":"2018-12-29T18:59:49.443Z","type":"quit"}
{"nick":"efaust","date":"2018-12-29T19:18:52.837Z","type":"join"}
{"nick":"efaust","new_nick":"Guest25760","date":"2018-12-29T19:19:15.865Z","type":"nick"}
{"nick":"devsnek","message":"is anyone else weirded out that the grouping operator can return lvals","date":"2018-12-29T19:25:37.767Z","type":"message"}
{"nick":"rkirsling","message":"devsnek: wow so `(a) = 3;` is valid by 12.2.10.3 then, huh","date":"2018-12-29T19:41:50.445Z","type":"message"}
{"nick":"rkirsling","message":"but why ðŸ¤”","date":"2018-12-29T19:41:57.362Z","type":"message"}
{"nick":"devsnek","message":"\"The principal motivation for this is so that operators such as delete and typeof may be applied to parenthesized expressions.\"","date":"2018-12-29T19:42:08.435Z","type":"message"}
{"nick":"devsnek","message":"sounds like some == type evilness","date":"2018-12-29T19:42:16.677Z","type":"message"}
{"nick":"devsnek","message":"actually if this didn't exist people wouldn't get delete and typeof confused as functions as often","date":"2018-12-29T19:42:51.557Z","type":"message"}
{"nick":"rkirsling","message":"hmm, yeah, I wonder if it could've been an appeasement if there were some early debate about typeof syntax","date":"2018-12-29T19:44:56.953Z","type":"message"}
{"nick":"devsnek","message":"but anyway just got totally thrown off when i found this lol https://github.com/tc39/test262/blob/master/test/language/expressions/assignment/fn-name-lhs-cover.js","date":"2018-12-29T19:46:40.377Z","type":"message"}
{"nick":"rkirsling","message":"haha indeed","date":"2018-12-29T19:58:01.755Z","type":"message"}
{"nick":"rkirsling","message":"TIL","date":"2018-12-29T19:58:04.517Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-12-29T20:08:07.330Z","type":"quit"}
{"nick":"akirose","date":"2018-12-29T20:08:23.453Z","type":"join"}
{"nick":"ljharb","message":"oh nice, thatâ€™s a much cleaner way to avoid inference than the comma operator or Object()","date":"2018-12-29T20:24:11.599Z","type":"message"}
{"nick":"Guest25760","reason":"Ping timeout: 250 seconds","date":"2018-12-29T20:43:38.771Z","type":"quit"}
{"nick":"devsnek","message":"ljharb: it is definitely not >:(","date":"2018-12-29T21:05:23.793Z","type":"message"}
{"nick":"devsnek","message":"I wonder how common assignment to ParenthesizedExpression happens in the wild","date":"2018-12-29T21:09:55.868Z","type":"message"}
{"nick":"ljharb","message":"lol it looks cleaner to me","date":"2018-12-29T21:11:26.877Z","type":"message"}
{"nick":"efaust","date":"2018-12-29T21:12:15.672Z","type":"join"}
{"nick":"devsnek","message":"ljharb: less code sure, but everyone who reads it will think it's a syntax error","date":"2018-12-29T21:12:17.320Z","type":"message"}
{"nick":"efaust","new_nick":"Guest10185","date":"2018-12-29T21:12:39.653Z","type":"nick"}
{"nick":"ljharb","message":"not if it passes linting and tests :-p","date":"2018-12-29T21:12:48.250Z","type":"message"}
{"nick":"devsnek","message":"I wouldn't allow this in my lint rules","date":"2018-12-29T21:17:45.967Z","type":"message"}
{"nick":"rkirsling","message":"alright alright I'll be the guy to ask what you mean by \"avoiding inference\"","date":"2018-12-29T21:25:56.466Z","type":"message"}
{"nick":"devsnek","message":"rkirsling: avoiding functions inferring their names from assignment","date":"2018-12-29T21:27:01.414Z","type":"message"}
{"nick":"Guest10185","reason":"Ping timeout: 250 seconds","date":"2018-12-29T21:27:01.672Z","type":"quit"}
{"nick":"rkirsling","message":"hm hm. what's the danger there though?","date":"2018-12-29T21:27:40.284Z","type":"message"}
{"nick":"devsnek","message":"ðŸ¤· the only time I ever had a problem with it was making a promise polyfill","date":"2018-12-29T21:29:33.368Z","type":"message"}
{"nick":"efaust_","date":"2018-12-29T21:34:33.439Z","type":"join"}
{"nick":"ljharb","message":"rkirsling: i write lots of code that depends on functions not having names","date":"2018-12-29T21:35:25.423Z","type":"message"}
{"nick":"ljharb","message":"but to be fair, i write lots of polyfills and stuff","date":"2018-12-29T21:35:37.582Z","type":"message"}
{"nick":"ljharb","message":"specifically, v8 adding name inference actually broke my tests","date":"2018-12-29T21:35:57.140Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2018-12-29T21:38:15.854Z","type":"message"}
{"nick":"rkirsling","message":"yeah polyfills certainly have a number of unique concerns :)","date":"2018-12-29T21:38:19.175Z","type":"message"}
{"nick":"devsnek","message":"tbh I'd use an identity function","date":"2018-12-29T21:38:43.330Z","type":"message"}
{"nick":"devsnek","message":"x = identity(function() {})","date":"2018-12-29T21:39:10.863Z","type":"message"}
{"nick":"devsnek","message":"although I use comma op in my promise thing","date":"2018-12-29T21:39:33.157Z","type":"message"}
{"nick":"ljharb","message":"devsnek: that's what i do now - i use `Object()`","date":"2018-12-29T21:43:20.724Z","type":"message"}
{"nick":"ljharb","message":"but parenthesizing the LHS has no runtime cost and avoids the gross comma operator","date":"2018-12-29T21:43:39.552Z","type":"message"}
{"nick":"efaust_","reason":"Ping timeout: 244 seconds","date":"2018-12-29T21:44:07.449Z","type":"quit"}
{"nick":"devsnek","message":"is using Object() on an object that expensive","date":"2018-12-29T21:45:20.580Z","type":"message"}
{"nick":"devsnek","message":"I'd assume most engines can inline that","date":"2018-12-29T21:45:28.800Z","type":"message"}
{"nick":"efaust_","date":"2018-12-29T21:51:44.670Z","type":"join"}
{"nick":"ljharb","message":"devsnek: it's been benchmarked to be slow in es5-shim/es6-shim code in the past","date":"2018-12-29T21:55:05.131Z","type":"message"}
{"nick":"devsnek","message":"ljharb: define slow","date":"2018-12-29T21:55:28.560Z","type":"message"}
{"nick":"ljharb","message":"like, we rewrote the \"is primitive\" check to be a hardcoded list of typeofs instead","date":"2018-12-29T21:55:44.470Z","type":"message"}
{"nick":"ljharb","message":"i don't recall the details","date":"2018-12-29T21:55:58.878Z","type":"message"}
{"nick":"ljharb","message":"but it was enough that it was measurable and prompted someone to run benchmarks and complain","date":"2018-12-29T21:56:09.299Z","type":"message"}
{"nick":"efaust_","reason":"Ping timeout: 250 seconds","date":"2018-12-29T21:58:13.673Z","type":"quit"}
{"nick":"efaust_","date":"2018-12-29T22:05:52.250Z","type":"join"}
{"nick":"aki_","date":"2018-12-29T22:14:06.355Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 250 seconds","date":"2018-12-29T22:15:04.423Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-12-29T22:15:04.855Z","type":"nick"}
{"nick":"efaust_","reason":"Ping timeout: 246 seconds","date":"2018-12-29T22:40:55.278Z","type":"quit"}
{"nick":"efaust","date":"2018-12-29T22:48:28.422Z","type":"join"}
{"nick":"efaust","new_nick":"Guest4844","date":"2018-12-29T22:48:52.848Z","type":"nick"}
{"nick":"Guest4844","reason":"Ping timeout: 250 seconds","date":"2018-12-29T22:57:58.555Z","type":"quit"}
{"nick":"devsnek","message":"does anyone know what the correct behaviour here is https://gc.gy/13829659.png","date":"2018-12-29T23:04:27.414Z","type":"message"}
{"nick":"efaust_","date":"2018-12-29T23:13:12.749Z","type":"join"}
{"nick":"ljharb","message":"devsnek: ({} = 5); ?","date":"2018-12-29T23:14:21.403Z","type":"message"}
{"nick":"devsnek","message":"ljharb: no the way i put it","date":"2018-12-29T23:14:30.250Z","type":"message"}
{"nick":"devsnek","message":"i can't figure out if its a syntax error or a runtime error","date":"2018-12-29T23:14:38.568Z","type":"message"}
{"nick":"devsnek","message":"engines disagree","date":"2018-12-29T23:14:42.333Z","type":"message"}
{"nick":"rkirsling","message":"note that there are early runtime errors and JSC has yet to implement such a concept","date":"2018-12-29T23:29:22.006Z","type":"message"}
{"nick":"rkirsling","message":"ahem","date":"2018-12-29T23:29:29.595Z","type":"message"}
{"nick":"rkirsling","message":"early *reference* errors","date":"2018-12-29T23:29:34.925Z","type":"message"}
{"nick":"efaust_","reason":"Ping timeout: 272 seconds","date":"2018-12-29T23:31:36.756Z","type":"quit"}
{"nick":"efaust","date":"2018-12-29T23:38:32.685Z","type":"join"}
{"nick":"efaust","new_nick":"Guest68676","date":"2018-12-29T23:38:56.843Z","type":"nick"}
{"nick":"rkirsling","message":"V8/SM are at least agreeing that it's some kind of early error, but hmm","date":"2018-12-29T23:39:36.262Z","type":"message"}
{"nick":"rkirsling","message":"er wait it definitely should be an early reference error","date":"2018-12-29T23:44:28.071Z","type":"message"}
{"nick":"Guest68676","reason":"Ping timeout: 250 seconds","date":"2018-12-29T23:45:15.696Z","type":"quit"}
{"nick":"rkirsling","message":"given that otherwise JSC would likely be giving a syntax error and also that test262's language/expressions/assignment/target-*.js tests are all early reference errors (and one non-error)","date":"2018-12-29T23:47:09.235Z","type":"message"}
{"nick":"rkirsling","message":"spec-wise, looks like it's","date":"2018-12-29T23:57:41.596Z","type":"message"}
{"nick":"rkirsling","message":"12.15.1: It is an early Reference Error if LeftHandSideExpression is neither an ObjectLiteral nor an ArrayLiteral and AssignmentTargetType of LeftHandSideExpression is invalid.","date":"2018-12-29T23:57:41.782Z","type":"message"}
{"nick":"rkirsling","message":"12.2.10.3: `ParenthesizedExpression : ( Expression )` Return AssignmentTargetType of Expression.","date":"2018-12-29T23:57:41.783Z","type":"message"}
{"nick":"rkirsling","message":"12.2.1.5: `PrimaryExpression : ... ObjectLiteral ...` Return invalid.","date":"2018-12-29T23:57:41.783Z","type":"message"}
{"nick":"efaust_","date":"2018-12-29T23:58:20.040Z","type":"join"}
{"nick":"rkirsling","message":"guess you should add a test case :P","date":"2018-12-29T23:58:48.039Z","type":"message"}
