{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-07-08T00:07:08.174Z","type":"quit"}
{"nick":"AtumT_","reason":"Quit: AtumT_","date":"2019-07-08T00:57:24.871Z","type":"quit"}
{"nick":"cybai","date":"2019-07-08T01:49:51.915Z","type":"join"}
{"nick":"keith_miller","date":"2019-07-08T03:59:44.169Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-07-08T04:28:43.821Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-07-08T04:41:39.775Z","type":"quit"}
{"nick":"ephemera_","reason":"Quit: No Ping reply in 180 seconds.","date":"2019-07-08T04:44:01.417Z","type":"quit"}
{"nick":"ephemera_","date":"2019-07-08T04:45:25.260Z","type":"join"}
{"nick":"shu","reason":"Quit: Connection closed for inactivity","date":"2019-07-08T04:53:05.005Z","type":"quit"}
{"nick":"ephemera_","reason":"Quit: No Ping reply in 180 seconds.","date":"2019-07-08T04:59:11.464Z","type":"quit"}
{"nick":"ephemera_","date":"2019-07-08T05:00:35.347Z","type":"join"}
{"nick":"howdoi","date":"2019-07-08T07:02:24.029Z","type":"join"}
{"nick":"MylesBorins","reason":"Ping timeout: 245 seconds","date":"2019-07-08T07:14:13.688Z","type":"quit"}
{"nick":"MylesBorins","date":"2019-07-08T07:19:14.578Z","type":"join"}
{"nick":"mgol","date":"2019-07-08T07:57:57.502Z","type":"join"}
{"nick":"mgol","reason":"Client Quit","date":"2019-07-08T07:59:01.344Z","type":"quit"}
{"nick":"mgol","date":"2019-07-08T08:25:06.380Z","type":"join"}
{"nick":"mgol","reason":"Client Quit","date":"2019-07-08T08:29:13.774Z","type":"quit"}
{"nick":"mgol","date":"2019-07-08T08:30:33.651Z","type":"join"}
{"nick":"kpatticha","date":"2019-07-08T09:05:23.769Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-07-08T09:33:04.821Z","type":"quit"}
{"nick":"mgol","date":"2019-07-08T09:34:13.253Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-07-08T10:18:36.034Z","type":"quit"}
{"nick":"cybai","date":"2019-07-08T10:19:05.439Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 252 seconds","date":"2019-07-08T10:23:28.371Z","type":"quit"}
{"nick":"brett-soric","date":"2019-07-08T10:40:30.032Z","type":"join"}
{"nick":"codebytere","reason":"Quit: Connection closed for inactivity","date":"2019-07-08T11:04:12.139Z","type":"quit"}
{"nick":"brett-soric","date":"2019-07-08T11:28:12.019Z","type":"part"}
{"nick":"jmdyck","date":"2019-07-08T11:36:39.776Z","type":"join"}
{"nick":"cybai","date":"2019-07-08T11:37:51.019Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-07-08T11:58:17.309Z","type":"quit"}
{"nick":"mgol","date":"2019-07-08T12:00:37.875Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-07-08T12:29:58.253Z","type":"quit"}
{"nick":"mgol","date":"2019-07-08T12:31:40.817Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-07-08T12:46:57.049Z","type":"quit"}
{"nick":"caiolima","message":"ljharb: I saw you've commentend on BigInt PR. Thx a lot! I'll be able get back to work on this tomorrow.","date":"2019-07-08T12:51:28.015Z","type":"message"}
{"nick":"mgol","date":"2019-07-08T12:52:25.310Z","type":"join"}
{"nick":"shu","date":"2019-07-08T13:02:35.563Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-07-08T13:05:51.447Z","type":"quit"}
{"nick":"mgol","date":"2019-07-08T13:21:19.331Z","type":"join"}
{"nick":"gibson042","date":"2019-07-08T13:26:20.343Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 245 seconds","date":"2019-07-08T13:30:28.359Z","type":"quit"}
{"nick":"gibson042","date":"2019-07-08T13:46:18.607Z","type":"join"}
{"nick":"ErrorIsNullError","date":"2019-07-08T13:53:10.328Z","type":"join"}
{"nick":"AtumT","date":"2019-07-08T14:21:23.790Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-07-08T15:03:55.888Z","type":"quit"}
{"nick":"mgol","date":"2019-07-08T15:09:17.544Z","type":"join"}
{"nick":"leobalter","message":"devsnek Domenic ljharb I don't have strong preferences how we can add a reverse iterator to the spec, as long as we get something for Array, Map, and Set. Not even worried about String. I'll follow the consent sentiment from the room","date":"2019-07-08T15:13:39.225Z","type":"message"}
{"nick":"leobalter","message":"the way Lee Byron's proposal describes the iter.reverse() is \"safe\" but weird, I'm not sure I love it. It should definitely be coordinated with devsnek's proposal.","date":"2019-07-08T15:14:49.999Z","type":"message"}
{"nick":"devsnek","message":"obviously we need a reverse iteration syntax /s","date":"2019-07-08T15:15:37.601Z","type":"message"}
{"nick":"leobalter","message":"What I want is something straight to the point where in a list object I can `list.reverse()`. I have a preference (not a blocker) for a string named method, that may mirror a Symbol property. And I'm fully aware Array#reverse is taken, so I'm open to bikeshed names","date":"2019-07-08T15:16:32.742Z","type":"message"}
{"nick":"devsnek","message":"fwiw i haven't explored optional capabilities at all yet, so iter.reverse might not be the the best way forward, it was just off the top of my head","date":"2019-07-08T15:16:56.907Z","type":"message"}
{"nick":"leobalter","message":"it's very odd calling `[].values().reverse()` where you get two iterators and rely on both","date":"2019-07-08T15:17:37.779Z","type":"message"}
{"nick":"devsnek","message":"in rust, when you use rev, what you actually start doing is consuming the same iterator from the back instead of the front","date":"2019-07-08T15:18:41.669Z","type":"message"}
{"nick":"leobalter","message":"[].valuesRight() is ugly but follow consistency with reduceRight","date":"2019-07-08T15:18:51.472Z","type":"message"}
{"nick":"devsnek","message":"technically you could consume it from both sides at the same time, and end up in the middle","date":"2019-07-08T15:19:01.766Z","type":"message"}
{"nick":"leobalter","message":"I'd rather not have a @@reverseIterator depending on a @@iterator","date":"2019-07-08T15:19:52.598Z","type":"message"}
{"nick":"ljharb","message":"it needn’t have to","date":"2019-07-08T15:20:15.601Z","type":"message"}
{"nick":"devsnek","message":"it's weird in my mind to be a reverse iterator but not a regular iterator","date":"2019-07-08T15:20:30.815Z","type":"message"}
{"nick":"ljharb","message":"but that’d be a naive possible implementation","date":"2019-07-08T15:20:31.395Z","type":"message"}
{"nick":"leobalter","message":"naive possible yes, thats why I'm not discarding","date":"2019-07-08T15:20:49.355Z","type":"message"}
{"nick":"ljharb","message":"you could also make it required to have an iterator method, but not invoke it","date":"2019-07-08T15:20:54.501Z","type":"message"}
{"nick":"devsnek","message":"is there an example where you would want to only be iterable with a concept of reverse","date":"2019-07-08T15:20:58.020Z","type":"message"}
{"nick":"leobalter","message":"I'm playing flexible here","date":"2019-07-08T15:21:02.886Z","type":"message"}
{"nick":"ljharb","message":"devsnek: you could have an iterable for, say, data points over time, which is infinite - but your reverse iterator could start at a timestamp","date":"2019-07-08T15:21:55.701Z","type":"message"}
{"nick":"leobalter","message":"devsnek if I have a Map/Set subclass instance that enforces LIFO operations","date":"2019-07-08T15:22:02.550Z","type":"message"}
{"nick":"devsnek","message":"ok","date":"2019-07-08T15:22:22.233Z","type":"message"}
{"nick":"devsnek","message":"if we have a concept of double-ended iterators reverse can just be a general wrapper than calls nextBack instead of next","date":"2019-07-08T15:23:35.603Z","type":"message"}
{"nick":"leobalter","message":"also, the fact these two steps are only applied in specific cases, not applied to generators or any other custom iterator","date":"2019-07-08T15:23:37.077Z","type":"message"}
{"nick":"leobalter","message":"same for: `[@@asyncIterator]()[@@reverseIterator]()`","date":"2019-07-08T15:24:24.118Z","type":"message"}
{"nick":"leobalter","message":"or `[@@asyncIterator]().reverse()` where it should not even be available","date":"2019-07-08T15:24:50.718Z","type":"message"}
{"nick":"devsnek","message":"i'm trying to think of other languages that have this","date":"2019-07-08T15:26:16.423Z","type":"message"}
{"nick":"devsnek","message":"i think rust and c++ are the only languages that generalize it to a trait/template type thing","date":"2019-07-08T15:27:01.213Z","type":"message"}
{"nick":"devsnek","message":"and they both use the concept of double-ended","date":"2019-07-08T15:27:27.897Z","type":"message"}
{"nick":"devsnek","message":"i kinda like this, but perhaps its too complex? https://gc.gy/30305686.png","date":"2019-07-08T15:45:16.104Z","type":"message"}
{"nick":"Nimelrian","date":"2019-07-08T15:49:04.017Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-07-08T15:50:06.356Z","type":"quit"}
{"nick":"mgol","date":"2019-07-08T15:51:05.495Z","type":"join"}
