{"nick":"basicdays","reason":"Quit: I'm out","date":"2018-03-24T00:27:45.836Z","type":"quit"}
{"nick":"basicdays","date":"2018-03-24T00:29:03.149Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2018-03-24T00:45:28.435Z","type":"quit"}
{"nick":"caridy","date":"2018-03-24T00:46:01.764Z","type":"join"}
{"nick":"keith_miller","date":"2018-03-24T01:00:29.472Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2018-03-24T01:03:48.162Z","type":"quit"}
{"nick":"keith_miller","reason":"Remote host closed the connection","date":"2018-03-24T01:05:27.039Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-24T01:06:04.526Z","type":"join"}
{"nick":"shachaf","reason":"Ping timeout: 256 seconds","date":"2018-03-24T01:06:49.415Z","type":"quit"}
{"nick":"shachaf","date":"2018-03-24T01:12:43.281Z","type":"join"}
{"nick":"RobinMorisset","date":"2018-03-24T02:04:19.381Z","type":"join"}
{"nick":"RobinMorisset","reason":"Ping timeout: 264 seconds","date":"2018-03-24T02:08:46.582Z","type":"quit"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-03-24T02:09:31.124Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-03-24T02:23:55.397Z","type":"join"}
{"nick":"vikash-afk","reason":"Remote host closed the connection","date":"2018-03-24T03:37:03.916Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-24T03:51:39.738Z","type":"quit"}
{"nick":"caridy","date":"2018-03-24T04:04:33.264Z","type":"join"}
{"nick":"jmdyck","message":"jschoi: Finally : `finally` Block is a chain production, so the the rule in https://tc39.github.io/ecma262/#sec-algorithm-conventions-syntax-directed-operations about chain productions applies","date":"2018-03-24T04:07:11.069Z","type":"message"}
{"nick":"caridy","reason":"Ping timeout: 265 seconds","date":"2018-03-24T04:09:21.287Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-24T04:34:50.356Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-03-24T04:41:24.755Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-24T05:43:45.827Z","type":"quit"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2018-03-24T05:43:47.055Z","type":"quit"}
{"nick":"vikash-afk","date":"2018-03-24T06:25:21.866Z","type":"join"}
{"nick":"jwalden","reason":"Ping timeout: 240 seconds","date":"2018-03-24T06:33:51.393Z","type":"quit"}
{"nick":"jwalden","date":"2018-03-24T06:35:47.134Z","type":"join"}
{"nick":"jschoi","message":"jmdyck: Ah, right, thank you.","date":"2018-03-24T06:36:30.203Z","type":"message"}
{"nick":"keith_miller","date":"2018-03-24T07:05:51.506Z","type":"join"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-03-24T07:08:47.651Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-24T08:06:21.020Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-24T10:23:23.895Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-24T10:25:11.196Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-24T10:25:41.790Z","type":"join"}
{"nick":"koddsson","reason":"Quit: Connection closed for inactivity","date":"2018-03-24T10:55:52.501Z","type":"quit"}
{"nick":"AtumT","date":"2018-03-24T11:24:21.395Z","type":"join"}
{"nick":"howdoi","date":"2018-03-24T12:50:17.571Z","type":"join"}
{"nick":"jmdyck","date":"2018-03-24T13:29:46.102Z","type":"join"}
{"nick":"jmdyck","reason":"Ping timeout: 276 seconds","date":"2018-03-24T13:51:05.121Z","type":"quit"}
{"nick":"jmdyck","date":"2018-03-24T13:51:18.790Z","type":"join"}
{"nick":"jmdyck","reason":"Ping timeout: 240 seconds","date":"2018-03-24T13:58:27.764Z","type":"quit"}
{"nick":"jmdyck","date":"2018-03-24T13:59:50.399Z","type":"join"}
{"nick":"littledan","message":"I talked to some more delegates offline. I think there are TC39 delegates who prefer each of the proposals individually, and then there is also renewed interest in going back to :: and passing through `this`","date":"2018-03-24T15:42:37.048Z","type":"message"}
{"nick":"littledan","message":"there was also support from some committee members about continuing on this path to develop things in parallel and collect feedback","date":"2018-03-24T15:43:25.387Z","type":"message"}
{"nick":"littledan","message":"at this point, i don't think we necessarily need another presentation at the next meeting, just continuing on the current path to make the current options more complete and usable implementations deployed seems like it'll move things forward (although it will all take time)","date":"2018-03-24T15:45:09.580Z","type":"message"}
{"nick":"littledan","message":"jschoi: there was definitely hesitation on the complexity of the smart pipeline proposal. I think this could partly be addressed by a simpler-looking document layout (e.g., maybe split off the explainer pieces about follow-on proposals into separate md documents?) and partly by thinking more about if anything additional should be made more minimal (e.g., considering a more restricted syntax for topic form, *or* just","date":"2018-03-24T15:47:06.910Z","type":"message"}
{"nick":"littledan","message":"differentiating between the two by whether it contains # and explaining why the hazard isn't so bad)","date":"2018-03-24T15:47:07.115Z","type":"message"}
{"nick":"jschoi","message":"littledan: Thanks for the update, and thanks again for making the presentation. Hearing of definite hesitation is discouraging but nevertheless expected, and I can do my best to address each respective concern.","date":"2018-03-24T17:31:03.075Z","type":"message"}
{"nick":"jschoi","message":"Regarding the explainer: I can try separating the additional features into their own explainer documents. This is probably long overdue, but I have been focusing on the specification for the past week. I’ll make an issue for this in the smart-pipelines repository.","date":"2018-03-24T17:31:16.311Z","type":"message"}
{"nick":"littledan","message":"jschoi: Fundamentally, it's not possible to address each concern. They are in contradiction with each other.","date":"2018-03-24T17:31:33.699Z","type":"message"}
{"nick":"jschoi","message":"The specification is currently a single document too, with an annex for each additional feature. Is this similarly too confusing or overwhelming for the reader? Should I consider separating the specification also? Perhaps I should.","date":"2018-03-24T17:31:38.717Z","type":"message"}
{"nick":"jschoi","message":"Ah, is that right? Hm.","date":"2018-03-24T17:31:52.943Z","type":"message"}
{"nick":"jschoi","message":"How so?","date":"2018-03-24T17:32:12.142Z","type":"message"}
{"nick":"littledan","message":"I think the specification being in one document vs multiple documents is less important, as many fewer people read and understand the specification compared to the explainer. The specification is usually unintelligible to most audiences, and difficult to the rest of them, no matter how you cut it.","date":"2018-03-24T17:32:47.406Z","type":"message"}
{"nick":"jschoi","message":"Noted; thank you.","date":"2018-03-24T17:33:03.563Z","type":"message"}
{"nick":"littledan","message":"well, to start, there's a concern about using too many punctuation characters. However, there is also demand for this feature. They are just plain in tension with each other, something we'll have to make a subjective tradeoff on","date":"2018-03-24T17:33:31.505Z","type":"message"}
{"nick":"jschoi","message":"Ah, another third concern. Yes, that one’s tradeoff may only be mitigated, not completely resolved.","date":"2018-03-24T17:34:13.683Z","type":"message"}
{"nick":"littledan","message":"language features end up making tons of subjective tradeoffs. The easy (though specialized; not everyone is as good at it as you) part is coming up with something unambiguous and consistent; the hard part is making these tradeoffs in a way that's deeply informed by the developer community","date":"2018-03-24T17:34:32.624Z","type":"message"}
{"nick":"jschoi","message":"https://github.com/js-choi/proposal-smart-pipelines/blob/master/readme.md#distinguishable-punctuators is a goal in which this tradeoff is discussed, so that proposal makes its stand there.","date":"2018-03-24T17:34:55.219Z","type":"message"}
{"nick":"jschoi","message":"Yes. As you say, many questions may be deferred until the Babel plugin is implemented for hands-on experience.","date":"2018-03-24T17:35:09.650Z","type":"message"}
{"nick":"littledan","message":"oh, another contradiction: explaining everything fully vs concisely emphasizing the important stuff","date":"2018-03-24T17:35:19.344Z","type":"message"}
{"nick":"jschoi","message":"The real-world examples hopefully help concretize how it would look, but…yes.","date":"2018-03-24T17:35:30.341Z","type":"message"}
{"nick":"littledan","message":"the readme is very long! this means you have spoken to many things, but a portion of the audience will just be unaware of your thought process. This is an inherent difficulty","date":"2018-03-24T17:35:53.782Z","type":"message"}
{"nick":"jschoi","message":"That’s true too. Maybe I should make an explainer explainer, pfft. Or separate the examples…? I think the examples do help make it seem more compelling.","date":"2018-03-24T17:35:57.238Z","type":"message"}
{"nick":"jschoi","message":"Yes. Hopefully the readme split will help.","date":"2018-03-24T17:36:02.523Z","type":"message"}
{"nick":"jschoi","message":"At least on a communicative level, though not so much at a fundamental-tradeoff level.","date":"2018-03-24T17:36:46.165Z","type":"message"}
{"nick":"jschoi","message":"At least I don’t have to split the specification.","date":"2018-03-24T17:37:03.148Z","type":"message"}
{"nick":"littledan","message":"my advice would be to think hard about these things, but ultimately understand that you're making opinionated decisions here, and the effort is based on this parallel effort to get developer feedback on the multiple paths","date":"2018-03-24T17:37:06.456Z","type":"message"}
{"nick":"jschoi","message":"Definitely. So perhaps I should shift effort, from finishing the additional features’ formal specifications, to the Babel plugin.","date":"2018-03-24T17:37:46.371Z","type":"message"}
{"nick":"littledan","message":"I mean, both are important. I really appreciate that you've done a good job on the specification, since this is important to validate the Babel plugin against","date":"2018-03-24T17:38:59.015Z","type":"message"}
{"nick":"jschoi","message":"I have found that doing the former has helped clarify many tweaks I had to do to the core specification, for forward compatibility with the additional features, but few people will read the formal specification anyway.","date":"2018-03-24T17:39:03.606Z","type":"message"}
{"nick":"jschoi","message":"Thanks.","date":"2018-03-24T17:39:23.818Z","type":"message"}
{"nick":"littledan","message":"there's just a ton of work to do as champion; I don't want to ask too much of you; it may make sense to bring in more collaborators if it's overwhelming","date":"2018-03-24T17:39:33.858Z","type":"message"}
{"nick":"littledan","message":"not sure if I mentioned test262 tests being another nice-to-have, to validate the Babel implementation against, in a way which will scale to other implementations as well","date":"2018-03-24T17:39:53.820Z","type":"message"}
{"nick":"jschoi","message":"Yes, there is so much work. I have a little free time before my medical residency starts on July 1, so I saw an opportunity to help out here, while carrying on with other research.","date":"2018-03-24T17:40:29.321Z","type":"message"}
{"nick":"jschoi","message":"Test262 seemed to be needed further down the TC39 process, but if they would help now, then I could look at doing those too.","date":"2018-03-24T17:40:50.232Z","type":"message"}
{"nick":"littledan","message":"it's never too soon in the TC39 process to do these things. However, test262 tests would live as a PR and not land until after Stage 3","date":"2018-03-24T17:41:21.062Z","type":"message"}
{"nick":"jschoi","message":"I just need to triage my priorities.","date":"2018-03-24T17:41:21.430Z","type":"message"}
{"nick":"littledan","message":"I think you have the priorities pretty well: explainer -> spec -> Babel -> test262 or other things","date":"2018-03-24T17:42:07.187Z","type":"message"}
{"nick":"jschoi","message":"Noted.","date":"2018-03-24T17:42:07.392Z","type":"message"}
{"nick":"littledan","message":"I mean, seems like you've already been doing that","date":"2018-03-24T17:42:22.644Z","type":"message"}
{"nick":"jschoi","message":"Well, if not many people read the specification…","date":"2018-03-24T17:42:37.129Z","type":"message"}
{"nick":"jschoi","message":"The core proposal’s specification is done; even n-ary pipelines’ specification is just about done. I am currently specifying niceties like the feature for `do`-expression-like block steps and the feature for pipeline `try`statements.","date":"2018-03-24T17:43:40.164Z","type":"message"}
{"nick":"littledan","message":"not many people read it, but it's really important to align all the implementations, tests and tools. Ordinary programmers are probably better off with higher-level docs.","date":"2018-03-24T17:44:19.644Z","type":"message"}
{"nick":"jschoi","message":"Much of the purpose of these efforts is for showing the versatility and extensibility of the concept, but perhaps those are currently low-yield. N-ary pipelines were the most important thing to make sure the core proposal was forward compatible against.","date":"2018-03-24T17:44:24.499Z","type":"message"}
{"nick":"littledan","message":"Oh, well if you want my opinion, you don't need a formal specification to prove out those extensions","date":"2018-03-24T17:44:51.780Z","type":"message"}
{"nick":"jschoi","message":"Yes. I probably should pause specification work (especially since the core proposal’s sections are done) and make the readme more readable.","date":"2018-03-24T17:44:52.447Z","type":"message"}
{"nick":"jschoi","message":"Noted.","date":"2018-03-24T17:44:59.323Z","type":"message"}
{"nick":"littledan","message":"SGTM","date":"2018-03-24T17:45:03.266Z","type":"message"}
{"nick":"jschoi","message":"As for the Babel plugin, James DiGioia and I had made progress, just about finishing Babylon’s parsing, which is good.","date":"2018-03-24T17:46:19.419Z","type":"message"}
{"nick":"jschoi","message":"But I found out that there is no current infrastructure for doing block expressions properly, which is unfortunate, since it would have made the transform implementation for smart pipelines so simple.","date":"2018-03-24T17:46:26.748Z","type":"message"}
{"nick":"jschoi","message":"Their `do`-expression plugin transforms them into IIFEs right now, which obviously would not work for `await` (https://github.com/babel/babel/issues/3780).","date":"2018-03-24T17:46:38.437Z","type":"message"}
{"nick":"jschoi","message":"I had been hoping to utilize the same infrastructure…but it seems like I basically would have to properly implement block expressions—with variable declarations hoisted up out of inner expressions—myself. Ah, well.","date":"2018-03-24T17:47:21.108Z","type":"message"}
{"nick":"jschoi","message":"Hopefully the payoff will be nice.","date":"2018-03-24T17:47:33.221Z","type":"message"}
{"nick":"littledan","message":"in ordering, I mean feel free to not follow this, but I'd focus first on producing things really well for the most minimal proposal, and then going from there to the bigger ones","date":"2018-03-24T17:47:41.813Z","type":"message"}
{"nick":"littledan","message":"I doubt the committee will have an appetite to do the follow-on ones extremely soon. There was a lot of concern raised about complexity budget, in multiple agenda items.","date":"2018-03-24T17:48:16.383Z","type":"message"}
{"nick":"jschoi","message":"Definitely. I can imagine the syntax fatigue was real, especially after the `class` discussions. I am anticipating reading the notes.","date":"2018-03-24T17:48:48.845Z","type":"message"}
{"nick":"littledan","message":"fatigue is one factor, but I'm not sure that word covers all the feelings","date":"2018-03-24T17:49:26.109Z","type":"message"}
{"nick":"littledan","message":"if you can produce async IIFEs, that strategy could be part of a solution","date":"2018-03-24T17:49:30.392Z","type":"message"}
{"nick":"jschoi","message":"Perhaps that is a better idea than flattening statements. I’ll have to look into that…","date":"2018-03-24T17:50:05.554Z","type":"message"}
{"nick":"jschoi","message":"Even for just the core proposal, Babel support for transforming block expressions would have helped a lot. The core proposal is trivially isomorphic with nested block expressions. But nobody has done the work yet, so, ah well, someone has to do it.","date":"2018-03-24T17:50:29.469Z","type":"message"}
{"nick":"jschoi","message":"As for complexity overload, I suppose I will just have to see whether the tradeoff is worth it in this case, once the Babel plugin is ready.","date":"2018-03-24T17:52:18.135Z","type":"message"}
{"nick":"jschoi","message":"Thanks again so much for the presentation and for the feedback.","date":"2018-03-24T17:52:52.403Z","type":"message"}
{"nick":"littledan","message":"I'm worried about using the completion value","date":"2018-03-24T17:54:54.945Z","type":"message"}
{"nick":"littledan","message":"(we're discussing this in an issue)","date":"2018-03-24T17:55:07.504Z","type":"message"}
{"nick":"littledan","message":"well, thank you for the presentation and the work on the proposal!","date":"2018-03-24T17:55:24.355Z","type":"message"}
{"nick":"jschoi","message":"Using the completion value where?","date":"2018-03-24T17:58:07.597Z","type":"message"}
{"nick":"jschoi","message":"Oh, also, for James DiGioia: Did anyone discuss his proposal’s issue over whether `=>` should be tighter or looser than his proposal’s `|>`? That question was on one of his slides, and he is interested in any feedback regarding it.","date":"2018-03-24T17:58:15.972Z","type":"message"}
{"nick":"jschoi","message":"I suppose we could just wait for the notes too.","date":"2018-03-24T17:58:21.765Z","type":"message"}
{"nick":"littledan","message":"in do expressions, and it seemed like bare blocks were based on that too","date":"2018-03-24T17:58:34.924Z","type":"message"}
{"nick":"littledan","message":"no one raised an objection to that, but I was a bit long-winded so we didn't get to all the discussion topics","date":"2018-03-24T17:58:55.539Z","type":"message"}
{"nick":"littledan","message":"but no one added it to the queue either","date":"2018-03-24T17:59:14.765Z","type":"message"}
{"nick":"jschoi","message":"Well, neither block pipelines nor do expressions are mentioned at all in the TC39 pipelines presentation. do expressions themselves seem to have been languishing for a long time for those reasons you mentioned, especially for non-abrupt completions.","date":"2018-03-24T18:00:16.663Z","type":"message"}
{"nick":"jschoi","message":"(Removing do expressions as an explanation of smart pipelines from the smart-pipelines readme before the TC39 meeting probably was pretty important for preventing association with an albatross, so thanks again for filing that issue.)","date":"2018-03-24T18:03:04.530Z","type":"message"}
{"nick":"littledan","message":"I wouldn't characterize it as an albatross. Dave Herman talked about moving them forward recently, but it is controversial on its own","date":"2018-03-24T18:40:13.631Z","type":"message"}
{"nick":"littledan","message":"Sometimes proposals are coupled, and sometimes they aren't. For example, nullary coalescing and optional chaining should, IMO, use some kind of vaguely analogous syntax and semantics. OTOH I don't think pipeline and do expressions are coupled","date":"2018-03-24T18:40:51.282Z","type":"message"}
{"nick":"littledan","message":"yeah, it's true that we did avoid that discussion in TC39","date":"2018-03-24T18:41:48.163Z","type":"message"}
{"nick":"jschoi","message":"They’re indeed not coupled, but pipelines can be expressed as nested do expressions fairly simply.","date":"2018-03-24T18:44:50.608Z","type":"message"}
{"nick":"jschoi","message":"Nested IIFEs also work except for `await` and `yield`, the two function-scoped expressions.","date":"2018-03-24T18:45:26.786Z","type":"message"}
{"nick":"jschoi","message":"Or, rather, the two function-scoped expression operators.","date":"2018-03-24T18:46:55.890Z","type":"message"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-03-24T19:23:29.874Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-03-24T20:51:02.026Z","type":"join"}
{"nick":"littledan","message":"Pipelines don't add expressive power to JavaScript, so I'm not sure what you mean by \"can be expressed\"","date":"2018-03-24T23:50:21.948Z","type":"message"}
