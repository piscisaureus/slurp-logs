{"nick":"cybai","date":"2019-04-25T00:18:01.986Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-25T00:19:06.254Z","type":"quit"}
{"nick":"keith_miller","date":"2019-04-25T00:21:34.885Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-25T00:39:11.795Z","type":"quit"}
{"nick":"keith_miller","date":"2019-04-25T00:42:22.967Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-04-25T00:46:51.250Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-04-25T01:01:20.633Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-04-25T01:05:12.137Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-25T01:30:37.908Z","type":"quit"}
{"nick":"cybai","date":"2019-04-25T01:41:42.672Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-04-25T03:03:06.442Z","type":"quit"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2019-04-25T03:22:57.197Z","type":"quit"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-04-25T05:13:20.828Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-04-25T05:36:33.313Z","type":"quit"}
{"nick":"keith_miller","date":"2019-04-25T06:50:11.663Z","type":"join"}
{"nick":"mquy90","date":"2019-04-25T06:56:26.450Z","type":"join"}
{"nick":"mquy90","reason":"Remote host closed the connection","date":"2019-04-25T06:56:39.251Z","type":"quit"}
{"nick":"kpatticha","date":"2019-04-25T06:56:59.232Z","type":"join"}
{"nick":"kpatticha","reason":"Ping timeout: 258 seconds","date":"2019-04-25T07:01:39.233Z","type":"quit"}
{"nick":"kpatticha","date":"2019-04-25T07:10:27.059Z","type":"join"}
{"nick":"mgol","date":"2019-04-25T07:24:34.994Z","type":"join"}
{"nick":"mgol","reason":"Client Quit","date":"2019-04-25T07:28:05.302Z","type":"quit"}
{"nick":"mgol","date":"2019-04-25T07:44:48.985Z","type":"join"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2019-04-25T08:49:03.429Z","type":"quit"}
{"nick":"Jessidhia","reason":"Disconnected by services","date":"2019-04-25T09:11:02.356Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-04-25T10:30:07.770Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-04-25T10:55:33.944Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-04-25T10:59:47.746Z","type":"quit"}
{"nick":"jmdyck","date":"2019-04-25T11:29:44.275Z","type":"join"}
{"nick":"cybai","date":"2019-04-25T11:40:08.671Z","type":"join"}
{"nick":"gibson042","date":"2019-04-25T13:13:54.962Z","type":"join"}
{"nick":"devsnek","message":"is it acceptable to spec generator methods using `GeneratorYield` instead of a prototype with a next method?","date":"2019-04-25T14:02:40.911Z","type":"message"}
{"nick":"devsnek","message":"that came out awkwardly","date":"2019-04-25T14:03:20.863Z","type":"message"}
{"nick":"devsnek","message":"is it acceptable to spec functions in the spec that return iterators as generators and use GeneratorYield or something, instead of returning the big prototype+next thing","date":"2019-04-25T14:03:49.387Z","type":"message"}
{"nick":"Domenic","message":"devsnek: the decision in the past has always been a new prototype. There was a thread about this at some point. I think it might be worth reconsidering, but I would give a 70% chance we stay the course.","date":"2019-04-25T14:20:10.008Z","type":"message"}
{"nick":"Nimelrian_","date":"2019-04-25T14:35:01.390Z","type":"join"}
{"nick":"devsnek","message":"Domenic: I feel like people might change their minds with the iterator methods proposal","date":"2019-04-25T14:46:41.652Z","type":"message"}
{"nick":"Domenic","message":"Maybe. There's already tons of iterators on the web platform, and I asked if we should consolidate, and people said we should not.","date":"2019-04-25T14:47:03.054Z","type":"message"}
{"nick":"devsnek","message":"being able to say \"a generator function that when called performs the following steps\" seems so nice","date":"2019-04-25T14:47:23.520Z","type":"message"}
{"nick":"devsnek","message":"would also get rid of having to manually define error and return handling","date":"2019-04-25T14:47:50.361Z","type":"message"}
{"nick":"Domenic","message":"I think you should just macro harder","date":"2019-04-25T14:52:46.194Z","type":"message"}
{"nick":"Domenic","message":"Create spec infra that will generate your iterator prototypes etc. for you","date":"2019-04-25T14:52:55.181Z","type":"message"}
{"nick":"devsnek","message":"like the typed arrays?","date":"2019-04-25T14:54:17.931Z","type":"message"}
{"nick":"Domenic","message":"Yeah, something like that","date":"2019-04-25T15:01:36.392Z","type":"message"}
{"nick":"Domenic","message":"Or figure out a way to write a generator function-ish body that generates a set of next()/throw()/return() function","date":"2019-04-25T15:02:13.531Z","type":"message"}
{"nick":"cloudshu","date":"2019-04-25T15:03:11.700Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-04-25T15:09:23.729Z","type":"quit"}
{"nick":"devsnek","message":"that sounds like \"a generator function that when called runs the following steps\"","date":"2019-04-25T15:17:08.646Z","type":"message"}
{"nick":"cybai","date":"2019-04-25T15:24:53.011Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-04-25T15:27:03.816Z","type":"quit"}
{"nick":"Domenic","message":"Yep but the spec text generates some new prototype","date":"2019-04-25T15:29:28.720Z","type":"message"}
{"nick":"cybai","date":"2019-04-25T16:01:21.665Z","type":"join"}
{"nick":"kpatticha","reason":"Quit: Leaving","date":"2019-04-25T16:01:30.911Z","type":"quit"}
{"nick":"cybai","reason":"Ping timeout: 276 seconds","date":"2019-04-25T16:06:43.785Z","type":"quit"}
{"nick":"srl295","date":"2019-04-25T16:20:34.697Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-25T16:58:26.838Z","type":"quit"}
{"nick":"jwalden","date":"2019-04-25T17:04:39.528Z","type":"join"}
{"nick":"cybai","date":"2019-04-25T17:19:32.087Z","type":"join"}
{"nick":"jmdyck","message":"So if there's a PR against tc39/ecma262, that doesn't have any existence in the tc39/ecma262 repo, right?","date":"2019-04-25T17:21:03.017Z","type":"message"}
{"nick":"ljharb","message":"jmdyck: github auto-creates a ref for every PR, so you can get to it programmatically if you want. but git won't fetch those refs by default","date":"2019-04-25T17:22:07.560Z","type":"message"}
{"nick":"jmdyck","message":"ah, so how do it get to it?","date":"2019-04-25T17:22:35.703Z","type":"message"}
{"nick":"ljharb","message":"jmdyck: https://gist.github.com/piscisaureus/3342247","date":"2019-04-25T17:23:35.322Z","type":"message"}
{"nick":"cybai","reason":"Ping timeout: 258 seconds","date":"2019-04-25T17:24:08.026Z","type":"quit"}
{"nick":"jmdyck","message":"wah, so many rull requests.","date":"2019-04-25T17:27:05.138Z","type":"message"}
{"nick":"jmdyck","message":"-s/rull/pull/","date":"2019-04-25T17:27:14.953Z","type":"message"}
{"nick":"ljharb","message":"lol yeah it'll be more useful on future fetches","date":"2019-04-25T17:27:21.792Z","type":"message"}
{"nick":"jmdyck","message":"(hoping to detect editorial stuff before it gets merged into master.)","date":"2019-04-25T17:28:24.611Z","type":"message"}
{"nick":"ljharb","message":"jmdyck: if you have any kind of reliable programmatic mechanism it'd be great to add it to CI on every PR :-D","date":"2019-04-25T17:31:31.210Z","type":"message"}
{"nick":"jmdyck","message":"not reliable, no.","date":"2019-04-25T17:34:08.164Z","type":"message"}
{"nick":"jmdyck","message":"not until ecmaspeak has a reliable spec.","date":"2019-04-25T17:34:28.858Z","type":"message"}
{"nick":"jmdyck","message":"Mind you, checking for well-formedness of markup would be a good start.","date":"2019-04-25T17:35:48.333Z","type":"message"}
{"nick":"jmdyck","message":"There should be reliable utilities for that.","date":"2019-04-25T17:36:17.249Z","type":"message"}
{"nick":"ljharb","action":"any correctness or consistency tools that you'd like to add would be very welcome :-)","date":"2019-04-25T17:42:13.230Z","type":"action"}
{"nick":"Domenic","message":"We run validator.nu on every pull request for WHATWG specs","date":"2019-04-25T17:44:35.782Z","type":"message"}
{"nick":"Domenic","message":"https://github.com/whatwg/whatwg.org/blob/be5d39e4bce5248039816c9fdbccd02f9f840f86/resources.whatwg.org/build/deploy.sh#L179","date":"2019-04-25T17:45:34.891Z","type":"message"}
{"nick":"jmdyck","message":"I just ran validator.nu against spec.html: 19 errors + 5 warnings","date":"2019-04-25T17:50:44.470Z","type":"message"}
{"nick":"jmdyck","message":"A bunch would disappear once my editorial PR is merged ;)","date":"2019-04-25T17:55:48.250Z","type":"message"}
{"nick":"jmdyck","message":"but there'd still be some left.","date":"2019-04-25T17:55:57.893Z","type":"message"}
{"nick":"Domenic","message":"Well, spec.html isn't the interesting thing","date":"2019-04-25T18:03:47.302Z","type":"message"}
{"nick":"Domenic","message":"https://validator.nu/?doc=https%3A%2F%2Ftc39.github.io%2Fecma262 is the important one.","date":"2019-04-25T18:03:54.071Z","type":"message"}
{"nick":"jmdyck","message":"that too, but it's easier to fix spec.html's problems.","date":"2019-04-25T18:05:25.924Z","type":"message"}
{"nick":"Domenic","message":"ElementInternals & form-associated custom elements are one big topic","date":"2019-04-25T18:07:23.188Z","type":"message"}
{"nick":"Domenic","message":"Oops wrong channel","date":"2019-04-25T18:07:27.614Z","type":"message"}
{"nick":"jmdyck","message":"(and fixing spec.html is mostly a prerequisite to getting the rendered version error-free)","date":"2019-04-25T18:08:13.881Z","type":"message"}
{"nick":"keith_miller","date":"2019-04-25T18:08:21.693Z","type":"join"}
{"nick":"ljharb","message":"we could validate both the raw and the built version on PRs.","date":"2019-04-25T18:27:43.115Z","type":"message"}
{"nick":"AtumT","date":"2019-04-25T18:28:17.863Z","type":"join"}
{"nick":"mgol","date":"2019-04-25T18:30:59.299Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-25T18:51:18.653Z","type":"quit"}
{"nick":"Domenic","message":"I just don't think validating the source document is useful.","date":"2019-04-25T19:00:28.060Z","type":"message"}
{"nick":"jmdyck","message":"It gives you a smaller set of problems to look at, that you know aren't caused by the rendering process. That seems moderately useful.","date":"2019-04-25T19:02:11.613Z","type":"message"}
{"nick":"jmdyck","message":"Moreover, once you've taken care of them, you know that all the errors in the rendered spec *are* caused by the rendering process.","date":"2019-04-25T19:03:15.127Z","type":"message"}
{"nick":"Domenic","message":"But it's not clear there's any mapping between errors in the source doc vs. the output. E.g. the tooling fixes up some errors or changes them.","date":"2019-04-25T19:03:45.453Z","type":"message"}
{"nick":"Domenic","message":"Like any well-formedness errors will get automatically fixed by the tooling.","date":"2019-04-25T19:03:57.816Z","type":"message"}
{"nick":"Domenic","message":"(Since it parses and serializes)","date":"2019-04-25T19:04:03.226Z","type":"message"}
{"nick":"jmdyck","message":"and yet the rendered spec *does* have well-formedness errors inherited from spec.html","date":"2019-04-25T19:06:40.447Z","type":"message"}
{"nick":"ljharb","message":"? validating build output is what i'd expect to be not useful (except for maintainers of the build tool); just like linting, validating the source is what provides actional feedback to PR authors","date":"2019-04-25T19:11:39.366Z","type":"message"}
{"nick":"Domenic","message":"The users see the build output","date":"2019-04-25T19:13:55.262Z","type":"message"}
{"nick":"Domenic","message":"The source isn't even HTML","date":"2019-04-25T19:13:59.680Z","type":"message"}
{"nick":"Domenic","message":"Validating it with a HTML validation tool is dubious","date":"2019-04-25T19:14:06.912Z","type":"message"}
{"nick":"ljharb","message":"oh sure, i agree with that","date":"2019-04-25T19:14:15.438Z","type":"message"}
{"nick":"ljharb","message":"what i think is useful on 262 tho is validating the source","date":"2019-04-25T19:14:21.795Z","type":"message"}
{"nick":"ljharb","message":"(which validator.nu may not be the right tool for)","date":"2019-04-25T19:14:44.672Z","type":"message"}
{"nick":"jmdyck","message":"based on the validator.nu ouput, it looks like spec.html is closer to being html than the rendered output is.","date":"2019-04-25T19:15:37.451Z","type":"message"}
{"nick":"Bakkot","message":"in my ideal world ecmarkup would just be really strict about what it accepted, such that \"ecmarkup accepts it\" would be sufficient to validate the source","date":"2019-04-25T19:16:02.845Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: that would be totally great, and we could add that to CI too","date":"2019-04-25T19:16:20.936Z","type":"message"}
{"nick":"Bakkot","message":"if we were comfortable assuming ecmarkup only produced well-formed output we would not then need to run the output through validator.nu; if we weren't we could do that as well","date":"2019-04-25T19:16:27.147Z","type":"message"}
{"nick":"Bakkot","message":"while we're kicking all this around, prettier has this neat thing were every PR automatically gets a link to a place you can use the project as it would be after the PR merge (e.g. the link at the bottom of https://github.com/prettier/prettier/pull/5996 )","date":"2019-04-25T19:17:38.382Z","type":"message"}
{"nick":"Bakkot","message":"and having a similar bot linking the rendered spec to each PR would be nice","date":"2019-04-25T19:17:52.199Z","type":"message"}
{"nick":"jmdyck","message":"what if there are merge conflicts?","date":"2019-04-25T19:18:17.492Z","type":"message"}
{"nick":"Bakkot","message":"it just doesn't work, IIRC","date":"2019-04-25T19:18:26.106Z","type":"message"}
{"nick":"Bakkot","message":"updates when the branch updates, so when the conflicts are fixed you get a working link","date":"2019-04-25T19:18:39.944Z","type":"message"}
{"nick":"Domenic","message":"Yes, we have that on all web specs","date":"2019-04-25T19:20:16.469Z","type":"message"}
{"nick":"jmdyck","message":"Bakkot: my tools are pretty strict about what they accept, but that's why I have to change them frequently.","date":"2019-04-25T19:20:23.817Z","type":"message"}
{"nick":"Domenic","message":"See e.g. https://github.com/whatwg/html/pull/4383 after the <hr>","date":"2019-04-25T19:20:31.183Z","type":"message"}
{"nick":"jmdyck","message":"E.g., the dynamic import PR uses dl/dt/dt, which spec.html hasn't had before, so my code says (in effect) \"what is this?\" But it seems reasonable for the spec to use them, so I add them to my code. Which is why it'd be problematic to use my code in CI.","date":"2019-04-25T19:27:18.934Z","type":"message"}
{"nick":"jmdyck","message":"And it's not uncommon for algorithm-related PRs to use new pseudocode syntax.","date":"2019-04-25T19:32:14.062Z","type":"message"}
{"nick":"Nimelrian_","reason":"Ping timeout: 240 seconds","date":"2019-04-25T19:46:07.350Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-25T19:48:15.758Z","type":"quit"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-04-25T22:40:31.470Z","type":"quit"}
{"nick":"keith_m__","reason":"Ping timeout: 264 seconds","date":"2019-04-25T22:51:03.978Z","type":"quit"}
{"nick":"keith_miller","date":"2019-04-25T22:52:57.632Z","type":"join"}
