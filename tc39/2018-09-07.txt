{"nick":"ljharb","message":"i think we'd want to be able to configure ways to do things, such that it'd be appropriate for \"new\" ways to fail, and be blocked","date":"2018-09-07T00:09:10.942Z","type":"message"}
{"nick":"jmdyck","message":"I'm not sure even that will be feasible, but I'll work towards getting the code up.","date":"2018-09-07T00:13:10.757Z","type":"message"}
{"nick":"aki_","date":"2018-09-07T00:16:25.284Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2018-09-07T00:17:12.899Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T00:17:13.270Z","type":"nick"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-09-07T01:20:04.896Z","type":"quit"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-09-07T01:29:31.932Z","type":"quit"}
{"nick":"rkirsling","message":"jmdyck: a fun thorn in automability here is the phrase \"`super` property accesses\", ha.","date":"2018-09-07T02:09:17.538Z","type":"message"}
{"nick":"rkirsling","message":"I'm ultimately checking all of this manually anyway, just struck me as amusing","date":"2018-09-07T02:11:25.424Z","type":"message"}
{"nick":"jmdyck","message":"Hm. Odd to call it a 'property'.","date":"2018-09-07T02:15:13.242Z","type":"message"}
{"nick":"rkirsling","message":"might've removed too much context, but that's the thing -- it's an access of `super.something`","date":"2018-09-07T02:17:21.489Z","type":"message"}
{"nick":"rkirsling","message":"this one is slightly tricky though:","date":"2018-09-07T02:20:25.343Z","type":"message"}
{"nick":"rkirsling","message":"> The value of the `Number.parseFloat` data property is the same built-in function object that is the value of the `parseFloat` property of the global object","date":"2018-09-07T02:20:25.560Z","type":"message"}
{"nick":"rkirsling","message":"\"`Number`'s `\"parseFloat\"` data property\" would be one thing, but without updating the prose I think one is forced to leave it be","date":"2018-09-07T02:21:14.028Z","type":"message"}
{"nick":"aki_","date":"2018-09-07T02:22:32.485Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2018-09-07T02:23:23.279Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T02:23:23.621Z","type":"nick"}
{"nick":"jmdyck","message":"So I guess \"`super` property\" (and |SuperProperty|) isn't supposed to denote \"a property named 'super'\" (as a phrase of that form would normally denote), but rather \"a property that is accessed via the 'super' keyword\".","date":"2018-09-07T02:41:59.504Z","type":"message"}
{"nick":"rkirsling","message":"mhm.","date":"2018-09-07T02:46:46.598Z","type":"message"}
{"nick":"Aquazi","reason":"Quit: Connection closed for inactivity","date":"2018-09-07T02:49:40.681Z","type":"quit"}
{"nick":"aki_","date":"2018-09-07T04:29:11.695Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-07T04:30:30.330Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T04:30:30.602Z","type":"nick"}
{"nick":"jwalden","reason":"Quit: back tomorrow","date":"2018-09-07T04:40:10.823Z","type":"quit"}
{"nick":"Sirisian","date":"2018-09-07T04:48:48.663Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-09-07T04:49:46.136Z","type":"quit"}
{"nick":"aki_","date":"2018-09-07T06:35:29.598Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-07T06:36:06.601Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T06:36:06.908Z","type":"nick"}
{"nick":"akoserwa","date":"2018-09-07T07:11:17.279Z","type":"join"}
{"nick":"aki_","date":"2018-09-07T08:41:06.291Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-07T08:42:03.603Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T08:42:03.919Z","type":"nick"}
{"nick":"Aquazi","date":"2018-09-07T09:14:47.825Z","type":"join"}
{"nick":"akoserwa_","date":"2018-09-07T10:31:04.461Z","type":"join"}
{"nick":"akoserwa","reason":"Ping timeout: 245 seconds","date":"2018-09-07T10:33:23.285Z","type":"quit"}
{"nick":"AtumT","date":"2018-09-07T10:46:00.447Z","type":"join"}
{"nick":"aki_","date":"2018-09-07T10:48:21.646Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-09-07T10:48:46.319Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T10:48:46.625Z","type":"nick"}
{"nick":"akoserwa__","date":"2018-09-07T11:21:58.653Z","type":"join"}
{"nick":"akoserwa_","reason":"Ping timeout: 252 seconds","date":"2018-09-07T11:24:39.413Z","type":"quit"}
{"nick":"jmdyck","date":"2018-09-07T12:19:29.284Z","type":"join"}
{"nick":"caitp","reason":"Remote host closed the connection","date":"2018-09-07T12:23:46.631Z","type":"quit"}
{"nick":"caitp","date":"2018-09-07T12:41:33.530Z","type":"join"}
{"nick":"aki_","date":"2018-09-07T12:55:34.655Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-07T12:55:36.663Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T12:55:44.148Z","type":"nick"}
{"nick":"akoserwa__","reason":"Quit: Leaving","date":"2018-09-07T13:57:47.723Z","type":"quit"}
{"nick":"cloudshu","date":"2018-09-07T14:47:58.817Z","type":"join"}
{"nick":"aki_","date":"2018-09-07T15:02:57.746Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-07T15:03:12.693Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T15:03:13.097Z","type":"nick"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-09-07T17:10:34.728Z","type":"quit"}
{"nick":"aki_","date":"2018-09-07T17:10:35.483Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T17:10:59.690Z","type":"nick"}
{"nick":"Aquazi","reason":"Quit: Connection closed for inactivity","date":"2018-09-07T18:06:47.022Z","type":"quit"}
{"nick":"superamadeus","date":"2018-09-07T18:31:55.675Z","type":"join"}
{"nick":"superamadeus","message":"Hello all. I read the contribution guide in reference to pitching features to ECMAScript. To my understanding, this is an okay place to discuss it. Is that right?","date":"2018-09-07T18:33:28.409Z","type":"message"}
{"nick":"devsnek","message":"superamadeus: yes","date":"2018-09-07T18:36:12.536Z","type":"message"}
{"nick":"devsnek","message":"there's also esdiscuss.org","date":"2018-09-07T18:36:34.101Z","type":"message"}
{"nick":"bradleymeck","message":"id highly recommend searching esdiscuss first","date":"2018-09-07T18:44:10.388Z","type":"message"}
{"nick":"bradleymeck","message":"and/or the TC39 github","date":"2018-09-07T18:44:16.634Z","type":"message"}
{"nick":"superamadeus","message":"Alrighty. I'll do that. If I do want to share the proposal here, is there any formalities I should follow? Or is a simple gist an alright way to show what I mean?","date":"2018-09-07T18:46:07.608Z","type":"message"}
{"nick":"ljharb","message":"i'd vet the idea before writing much out :-)","date":"2018-09-07T18:47:28.699Z","type":"message"}
{"nick":"superamadeus","message":"Well, it looks like it's been talked about a few times on esdiscuss anyway.","date":"2018-09-07T18:49:11.619Z","type":"message"}
{"nick":"ljharb","message":"then reading that, and replying to one of those threads, is probably a good start","date":"2018-09-07T18:49:31.461Z","type":"message"}
{"nick":"ljharb","message":"what's the idea?","date":"2018-09-07T18:49:33.360Z","type":"message"}
{"nick":"superamadeus","message":"Namespaced imports. e.g. `import { race, fromEvent } as RxJs from \"rxjs\"`.","date":"2018-09-07T18:51:12.303Z","type":"message"}
{"nick":"devsnek","message":"what does that do","date":"2018-09-07T18:52:03.091Z","type":"message"}
{"nick":"devsnek","message":"like `import { name } from 'x'` is already a thing","date":"2018-09-07T18:52:49.105Z","type":"message"}
{"nick":"devsnek","message":"do you want the whole namespace as an object?","date":"2018-09-07T18:53:13.113Z","type":"message"}
{"nick":"devsnek","message":"like `import * as rxjs from 'rxjs'`","date":"2018-09-07T18:53:19.270Z","type":"message"}
{"nick":"TabAtkins","message":"Yeah, this is \"normal import, but with only some of the keys\", so you still get the namespace object.","date":"2018-09-07T18:53:48.052Z","type":"message"}
{"nick":"superamadeus","message":"It would allow you to selectively import tree-shakeable names from a module while not importing the names directly into the scope.","date":"2018-09-07T18:53:54.381Z","type":"message"}
{"nick":"superamadeus","message":"`import { x, y } as foo from \"foo\"` would essentially be `import { x, y } from \"foo\"; const foo = { x, y };`","date":"2018-09-07T18:55:07.143Z","type":"message"}
{"nick":"devsnek","message":"they can be tree-shaken anyway","date":"2018-09-07T18:56:20.927Z","type":"message"}
{"nick":"superamadeus","message":"`import * as foo from \"foo\";` can selectively tree shake based on what properties you use?","date":"2018-09-07T18:58:30.757Z","type":"message"}
{"nick":"devsnek","message":"assuming your tooling supports it","date":"2018-09-07T18:59:15.613Z","type":"message"}
{"nick":"devsnek","message":"its logically possible","date":"2018-09-07T18:59:19.391Z","type":"message"}
{"nick":"devsnek","message":"i don't think js itself needs to solve this","date":"2018-09-07T18:59:29.130Z","type":"message"}
{"nick":"ljharb","message":"superamadeus: why wouldn't you want the names directly in the scope","date":"2018-09-07T19:02:28.123Z","type":"message"}
{"nick":"basicdays","date":"2018-09-07T19:06:59.715Z","type":"join"}
{"nick":"superamadeus","message":"+ljharb: Organization, providing context for names, and to avoid naming collisions.","date":"2018-09-07T19:13:46.237Z","type":"message"}
{"nick":"superamadeus","message":"devsnek: fair enough","date":"2018-09-07T19:14:04.136Z","type":"message"}
{"nick":"ljharb","message":"but it’s a module - it should be small enough that you don’t need organization, and you can avoid collisions by renaming on import","date":"2018-09-07T19:16:03.617Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-09-07T19:17:52.562Z","type":"quit"}
{"nick":"akirose","date":"2018-09-07T19:18:24.286Z","type":"join"}
{"nick":"superamadeus","message":"+ljharb: Just something I've personally run into being annoying to deal with.","date":"2018-09-07T19:23:42.011Z","type":"message"}
{"nick":"devsnek","message":"`import { x as tX } from 't'`","date":"2018-09-07T19:27:38.361Z","type":"message"}
{"nick":"superamadeus","message":"Yeah, but say I have `import { map, scan, tap } from \"rxks\"` and \"map\" is colliding. I end up with `import { observableMap, scan, tap } from \"rxjs\"`. Which makes it seem like the observable functions should have an \"observable\" prefix. Or, if I see the snippet `this.doSomething(map(a => a + 1))`, I can't really tell that it's related to observables and not just for regular collections.","date":"2018-09-07T19:29:58.192Z","type":"message"}
{"nick":"superamadeus","message":"It's very much just syntactic sugar just because I personally like how it looks. I also thought it solved a problem with tree shaking but if that doesn't even happen then it has less of a purpose.","date":"2018-09-07T19:30:59.754Z","type":"message"}
{"nick":"ljharb","message":"sure, that's the flaw in those libs exporting generic names in the first place","date":"2018-09-07T19:48:26.193Z","type":"message"}
{"nick":"ljharb","message":"\"map\" is going to collide conceptually with a ton of things","date":"2018-09-07T19:48:39.391Z","type":"message"}
{"nick":"Bakkot","message":"superamadeus: it probably solves a problem with tree-shaking for tools which are not sufficiently clever, or when you're using the object in a nontrivial way (trivial = only accessing specific named properties, not passing it around)","date":"2018-09-07T20:02:12.371Z","type":"message"}
{"nick":"Bakkot","message":"but in normal usage, with good tools, it shouldn't be necessary at all","date":"2018-09-07T20:02:42.029Z","type":"message"}
{"nick":"ljharb","message":"(tree shaking isn't even necessary at all if your modules export one thing, and you explicitly import only exactly what you need :-p )","date":"2018-09-07T20:05:05.834Z","type":"message"}
{"nick":"Bakkot","message":"e.g. rollup does the right thing: https://bit.ly/2CtpKkI","date":"2018-09-07T20:08:30.036Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: last i checked, rollup will still delete code even when it's not 100% certain you're not reflecting on the namespace object :-/","date":"2018-09-07T20:13:13.638Z","type":"message"}
{"nick":"Bakkot","message":"ljharb: yeah, I noticed that it still does the thing even if you have `this` in one of the functions you're using.","date":"2018-09-07T20:13:32.151Z","type":"message"}
{"nick":"Bakkot","message":"sigh.","date":"2018-09-07T20:13:32.978Z","type":"message"}
{"nick":"Bakkot","message":"whatever; it's doable in principle, and the language shouldn't change to make life easier for tools which are not correct","date":"2018-09-07T20:14:02.666Z","type":"message"}
{"nick":"ljharb","message":"i tried really hard to argue that it should either \"not treeshake\" in those scenarios, or it should throw","date":"2018-09-07T20:14:04.935Z","type":"message"}
{"nick":"ljharb","message":"but the maintainer didn't seem to care that it violated the spec","date":"2018-09-07T20:14:12.231Z","type":"message"}
{"nick":"jwalden","date":"2018-09-07T20:14:32.268Z","type":"join"}
{"nick":"Bakkot","message":":(","date":"2018-09-07T20:15:30.456Z","type":"message"}
{"nick":"Bakkot","message":"compilers which are incorrect make me very sad","date":"2018-09-07T20:15:41.063Z","type":"message"}
{"nick":"Bakkot","message":"ah well, ah well","date":"2018-09-07T20:15:43.614Z","type":"message"}
{"nick":"devsnek","message":"let's make a 100% correct one","date":"2018-09-07T20:16:17.194Z","type":"message"}
{"nick":"Bakkot","message":"https://github.com/shapesecurity/bandolier","date":"2018-09-07T20:17:45.925Z","type":"message"}
{"nick":"ljharb","message":"maven tho","date":"2018-09-07T20:21:27.630Z","type":"message"}
{"nick":"devsnek","message":"java tho","date":"2018-09-07T20:21:41.375Z","type":"message"}
{"nick":"superamadeus","reason":"Quit: Page closed","date":"2018-09-07T20:53:12.107Z","type":"quit"}
{"nick":"vikash-afk","reason":"Remote host closed the connection","date":"2018-09-07T21:21:30.655Z","type":"quit"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2018-09-07T21:26:18.279Z","type":"quit"}
{"nick":"aki_","date":"2018-09-07T21:26:25.489Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T21:26:49.607Z","type":"nick"}
{"nick":"not-an-aardvark","date":"2018-09-07T21:30:49.773Z","type":"join"}
{"nick":"aki_","date":"2018-09-07T23:32:59.479Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-09-07T23:33:47.457Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-07T23:33:47.806Z","type":"nick"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-09-07T23:41:10.623Z","type":"quit"}
