{"nick":"keith_mi_","date":"2019-06-19T00:30:19.128Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T00:39:45.336Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-06-19T01:00:59.078Z","type":"join"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T01:02:47.533Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T01:47:51.730Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T01:56:28.773Z","type":"quit"}
{"nick":"Jessidhia","reason":"Disconnected by services","date":"2019-06-19T02:04:27.484Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-06-19T02:04:42.848Z","type":"join"}
{"nick":"laughinghan","date":"2019-06-19T02:07:12.580Z","type":"join"}
{"nick":"laughinghan","reason":"Client Quit","date":"2019-06-19T02:07:48.532Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-06-19T02:08:54.561Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T02:10:41.969Z","type":"join"}
{"nick":"keith_m__","date":"2019-06-19T02:12:35.533Z","type":"join"}
{"nick":"keith_mi_","reason":"Ping timeout: 245 seconds","date":"2019-06-19T02:15:01.967Z","type":"quit"}
{"nick":"keith_m__","reason":"Ping timeout: 245 seconds","date":"2019-06-19T02:32:58.544Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T02:34:53.817Z","type":"join"}
{"nick":"keith_mi_","reason":"Ping timeout: 268 seconds","date":"2019-06-19T02:39:44.811Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T02:41:16.896Z","type":"join"}
{"nick":"laughinghan","date":"2019-06-19T02:49:34.445Z","type":"join"}
{"nick":"keith_mi_","reason":"Ping timeout: 245 seconds","date":"2019-06-19T02:51:41.968Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T02:53:58.335Z","type":"join"}
{"nick":"keith_mi_","reason":"Ping timeout: 245 seconds","date":"2019-06-19T03:00:28.299Z","type":"quit"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2019-06-19T03:02:30.382Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T03:03:02.964Z","type":"join"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T03:09:22.560Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T03:14:24.681Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-06-19T05:23:48.819Z","type":"quit"}
{"nick":"Jessidhia","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T05:27:25.532Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-06-19T05:28:15.887Z","type":"join"}
{"nick":"Jessidhia","reason":"Client Quit","date":"2019-06-19T05:30:20.720Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-06-19T06:43:06.435Z","type":"join"}
{"nick":"Jessidhia","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T06:49:20.986Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-06-19T07:55:27.617Z","type":"join"}
{"nick":"jmdyck","date":"2019-06-19T09:21:07.960Z","type":"join"}
{"nick":"itamarok","date":"2019-06-19T11:24:06.120Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T11:39:18.830Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T11:39:59.773Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T11:44:13.916Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T11:50:07.900Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T11:55:28.968Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T12:01:44.648Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T12:01:45.219Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T12:02:01.403Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T12:15:57.116Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T12:16:18.046Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T12:44:29.775Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T14:17:00.543Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T14:21:18.719Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T14:30:38.061Z","type":"join"}
{"nick":"itamarok_","date":"2019-06-19T14:30:57.329Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T14:31:09.173Z","type":"quit"}
{"nick":"itamarok_","reason":"Remote host closed the connection","date":"2019-06-19T14:43:10.686Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T14:52:56.294Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T14:53:00.400Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T14:53:14.304Z","type":"join"}
{"nick":"cloudshu","date":"2019-06-19T15:27:12.365Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T15:58:13.672Z","type":"quit"}
{"nick":"obensource","reason":"Ping timeout: 245 seconds","date":"2019-06-19T16:01:16.969Z","type":"quit"}
{"nick":"obensource","date":"2019-06-19T16:15:16.965Z","type":"join"}
{"nick":"AtumT","date":"2019-06-19T16:25:04.986Z","type":"join"}
{"nick":"Nimelrian","date":"2019-06-19T16:26:02.157Z","type":"join"}
{"nick":"cybai","date":"2019-06-19T16:32:47.964Z","type":"join"}
{"nick":"keith_mi_","date":"2019-06-19T16:49:55.368Z","type":"join"}
{"nick":"keith_mi_","reason":"Remote host closed the connection","date":"2019-06-19T16:50:23.792Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T16:51:01.564Z","type":"join"}
{"nick":"itamarok","date":"2019-06-19T16:55:20.614Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T17:01:06.955Z","type":"quit"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T17:09:45.228Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T17:12:10.006Z","type":"join"}
{"nick":"itamarok","date":"2019-06-19T17:15:26.476Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 245 seconds","date":"2019-06-19T17:19:38.394Z","type":"quit"}
{"nick":"underikar_","date":"2019-06-19T17:23:55.299Z","type":"quit"}
{"nick":"underikar","date":"2019-06-19T17:24:36.237Z","type":"join"}
{"nick":"jwalden_","date":"2019-06-19T17:32:54.883Z","type":"join"}
{"nick":"jwalden_","reason":"Client Quit","date":"2019-06-19T17:32:58.307Z","type":"quit"}
{"nick":"keith_mi_","reason":"Remote host closed the connection","date":"2019-06-19T17:42:20.434Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T17:42:44.030Z","type":"join"}
{"nick":"itamarok","date":"2019-06-19T17:46:36.799Z","type":"join"}
{"nick":"keith_mi_","message":"Does anyone know if anyone has proposed a if (let myVariable = ...) { } syntax before?","date":"2019-06-19T17:48:43.110Z","type":"message"}
{"nick":"keith_mi_","message":"I couldn't find anything.","date":"2019-06-19T17:48:45.863Z","type":"message"}
{"nick":"itamarok","reason":"Ping timeout: 258 seconds","date":"2019-06-19T17:51:05.065Z","type":"quit"}
{"nick":"rkirsling","message":"interesting...would be surprising if it were never discussed, given its existence in other langs ðŸ¤”","date":"2019-06-19T17:55:13.644Z","type":"message"}
{"nick":"devsnek","message":"keith_mi_: what's the `...`","date":"2019-06-19T18:02:05.544Z","type":"message"}
{"nick":"devsnek","message":"usually `if let` is part of pattern matching right?","date":"2019-06-19T18:02:25.822Z","type":"message"}
{"nick":"keith_mi_","message":"devsnek: Some expression that you want to bind","date":"2019-06-19T18:02:30.816Z","type":"message"}
{"nick":"keith_mi_","message":"like if (let foo = bar.baz())","date":"2019-06-19T18:02:56.318Z","type":"message"}
{"nick":"cloudshu","message":"keith_mi_: spidermonkey used to have let expressions but not quite that form i don't think","date":"2019-06-19T18:03:05.455Z","type":"message"}
{"nick":"keith_mi_","message":"basically any RHS expression","date":"2019-06-19T18:03:27.142Z","type":"message"}
{"nick":"keith_mi_","message":"ok, I make a proposal then","date":"2019-06-19T18:03:44.876Z","type":"message"}
{"nick":"devsnek","message":"is this always truthy?","date":"2019-06-19T18:04:02.378Z","type":"message"}
{"nick":"devsnek","message":"always falsy?","date":"2019-06-19T18:04:04.645Z","type":"message"}
{"nick":"cloudshu","message":"it looks real odd by today's standards `let (x = y) z`","date":"2019-06-19T18:04:09.249Z","type":"message"}
{"nick":"cloudshu","message":"what is always truthy or always falsy?","date":"2019-06-19T18:04:38.593Z","type":"message"}
{"nick":"devsnek","message":"like","date":"2019-06-19T18:04:43.149Z","type":"message"}
{"nick":"devsnek","message":"when does this if block run","date":"2019-06-19T18:04:48.845Z","type":"message"}
{"nick":"keith_mi_","message":"it's truthy if the RHS is truthy","date":"2019-06-19T18:04:51.469Z","type":"message"}
{"nick":"cloudshu","message":"yeah, like in C i imagine","date":"2019-06-19T18:04:57.785Z","type":"message"}
{"nick":"devsnek","message":"i wasn't aware this was a thing in C","date":"2019-06-19T18:05:06.255Z","type":"message"}
{"nick":"devsnek","message":"but ok","date":"2019-06-19T18:05:09.196Z","type":"message"}
{"nick":"cloudshu","message":"if (let foo = bar()) runs when bar() is truthy","date":"2019-06-19T18:05:16.292Z","type":"message"}
{"nick":"keith_mi_","message":"it's sugar for { let variable = expression; if (variable) { ... } }","date":"2019-06-19T18:05:22.466Z","type":"message"}
{"nick":"devsnek","message":"ok","date":"2019-06-19T18:05:27.764Z","type":"message"}
{"nick":"cloudshu","message":"keith_mi_: real talk do you want the binding to be available in the else branch","date":"2019-06-19T18:05:33.904Z","type":"message"}
{"nick":"keith_mi_","message":"no","date":"2019-06-19T18:05:39.424Z","type":"message"}
{"nick":"cloudshu","message":"o really","date":"2019-06-19T18:05:42.713Z","type":"message"}
{"nick":"devsnek","message":"would interact weirdly with `else if (let`","date":"2019-06-19T18:05:52.700Z","type":"message"}
{"nick":"keith_mi_","message":"I mean that's not how any other language does it","date":"2019-06-19T18:05:52.843Z","type":"message"}
{"nick":"devsnek","message":"you'd just stack up declarations","date":"2019-06-19T18:06:02.176Z","type":"message"}
{"nick":"keith_mi_","message":"I guess it's not quite sugar then...","date":"2019-06-19T18:06:16.440Z","type":"message"}
{"nick":"keith_mi_","message":"but yeah","date":"2019-06-19T18:06:18.295Z","type":"message"}
{"nick":"rkirsling","message":"I mean we're just talking about https://doc.rust-lang.org/reference/expressions/if-expr.html#if-let-expressions, yeah?","date":"2019-06-19T18:06:44.209Z","type":"message"}
{"nick":"devsnek","message":"no","date":"2019-06-19T18:06:59.478Z","type":"message"}
{"nick":"devsnek","message":"that's what i thought this was too","date":"2019-06-19T18:07:05.795Z","type":"message"}
{"nick":"rkirsling","message":"except for the parens difference and the expression difference","date":"2019-06-19T18:07:09.108Z","type":"message"}
{"nick":"keith_mi_","message":"no that's doing destructuring","date":"2019-06-19T18:07:10.497Z","type":"message"}
{"nick":"cloudshu","message":"keith_mi_: that breaks with c","date":"2019-06-19T18:07:20.470Z","type":"message"}
{"nick":"keith_mi_","message":"which you could do here possibly","date":"2019-06-19T18:07:22.586Z","type":"message"}
{"nick":"cloudshu","message":"keith_mi_: in c the binding is available in both branches","date":"2019-06-19T18:07:25.549Z","type":"message"}
{"nick":"keith_mi_","message":"wait really?","date":"2019-06-19T18:07:32.862Z","type":"message"}
{"nick":"keith_mi_","message":"oh wow...","date":"2019-06-19T18:08:19.433Z","type":"message"}
{"nick":"keith_mi_","message":"idk I'm neutral on it being on both sides","date":"2019-06-19T18:09:09.607Z","type":"message"}
{"nick":"rkirsling","message":"er sorry, I guess Rust is hard to compare with since do exprs and pattern matching are outstanding, but lemme rephrase","date":"2019-06-19T18:09:34.564Z","type":"message"}
{"nick":"devsnek","message":"c isn't exactly a gold standard of language design","date":"2019-06-19T18:09:44.376Z","type":"message"}
{"nick":"rkirsling","message":"we're talking about C++17 \"if auto\", right?","date":"2019-06-19T18:10:04.845Z","type":"message"}
{"nick":"ljharb","message":"it seems gross to me to further conflate assignment with expressions","date":"2019-06-19T18:10:26.430Z","type":"message"}
{"nick":"keith_mi_","message":"If we ever had a pattern matching proposal we could choose something else to indicate you wanted a pattern match here","date":"2019-06-19T18:10:28.656Z","type":"message"}
{"nick":"devsnek","message":"`if (type = x`","date":"2019-06-19T18:10:32.635Z","type":"message"}
{"nick":"devsnek","message":"type could be auto","date":"2019-06-19T18:10:36.677Z","type":"message"}
{"nick":"ljharb","message":"i'd rather see us make assignments become statements if it were web compat :-)","date":"2019-06-19T18:10:44.432Z","type":"message"}
{"nick":"devsnek","message":"something something `let` reserved keyword","date":"2019-06-19T18:11:05.513Z","type":"message"}
{"nick":"rkirsling","message":"hmm yeah I'm inclined to agree that if we did this it should be after Kat and Dave get their stuff through :P","date":"2019-06-19T18:11:26.140Z","type":"message"}
{"nick":"keith_mi_","reason":"Remote host closed the connection","date":"2019-06-19T18:11:44.272Z","type":"quit"}
{"nick":"rkirsling","message":"ðŸ˜±","date":"2019-06-19T18:11:51.033Z","type":"message"}
{"nick":"keith_mi_","date":"2019-06-19T18:12:01.470Z","type":"join"}
{"nick":"devsnek","message":"is the matching proposal still weird","date":"2019-06-19T18:12:25.942Z","type":"message"}
{"nick":"zkat","message":"the pattern matching proposal mentions things like `if let`, iirc","date":"2019-06-19T18:12:53.305Z","type":"message"}
{"nick":"Nimelrian","reason":"Ping timeout: 258 seconds","date":"2019-06-19T18:13:00.582Z","type":"quit"}
{"nick":"devsnek","message":"i just want matching as an expression","date":"2019-06-19T18:13:12.017Z","type":"message"}
{"nick":"zkat","message":"devsnek: what was weird about it? It's recently been updated, to support expressions.","date":"2019-06-19T18:13:12.778Z","type":"message"}
{"nick":"devsnek","message":"oh ok","date":"2019-06-19T18:13:23.739Z","type":"message"}
{"nick":"zkat","message":"then yes, there's expressions, in a limited sense, thanks to littledan","date":"2019-06-19T18:13:25.996Z","type":"message"}
{"nick":"devsnek","message":"just using the entire match as an expression was what i wanted","date":"2019-06-19T18:13:39.334Z","type":"message"}
{"nick":"zkat","message":"check out https://github.com/tc39/proposal-pattern-matching#motivating-examples","date":"2019-06-19T18:13:45.785Z","type":"message"}
{"nick":"devsnek","message":"yea just saw that","date":"2019-06-19T18:13:50.689Z","type":"message"}
{"nick":"devsnek","message":"ðŸŽ‰","date":"2019-06-19T18:13:52.158Z","type":"message"}
{"nick":"zkat","message":"does that look like enough to you?","date":"2019-06-19T18:13:57.108Z","type":"message"}
{"nick":"devsnek","message":"looks more or less like what i imagined","date":"2019-06-19T18:14:12.101Z","type":"message"}
{"nick":"devsnek","message":"i'm kinda spoiled by rust though","date":"2019-06-19T18:14:17.330Z","type":"message"}
{"nick":"zkat","message":"like, not being able to do general-purpose expressions (so if you're in \"expression mode\", you can't use keywords and statements in legs)","date":"2019-06-19T18:14:18.300Z","type":"message"}
{"nick":"devsnek","message":"is that a left hand side expression","date":"2019-06-19T18:14:42.780Z","type":"message"}
{"nick":"zkat","message":"hm?","date":"2019-06-19T18:14:59.566Z","type":"message"}
{"nick":"devsnek","message":"the grammar of the expression side","date":"2019-06-19T18:15:15.358Z","type":"message"}
{"nick":"devsnek","message":"you said its not general-purpose expressions","date":"2019-06-19T18:15:25.810Z","type":"message"}
{"nick":"rkirsling","message":"seems like this bit is potentially directly relevant: https://github.com/tc39/proposal-pattern-matching/blob/latest/TO_INFINITY_AND_BEYOND.md#--if-case-convenience-sugar","date":"2019-06-19T18:15:36.722Z","type":"message"}
{"nick":"devsnek","message":"like has it been settled which expression production it is","date":"2019-06-19T18:15:47.566Z","type":"message"}
{"nick":"keith_mi_","reason":"Ping timeout: 245 seconds","date":"2019-06-19T18:16:18.691Z","type":"quit"}
{"nick":"zkat","message":"I haven't messed with the grammar bits yet, no","date":"2019-06-19T18:21:39.927Z","type":"message"}
{"nick":"keith_mi_","date":"2019-06-19T18:23:15.394Z","type":"join"}
{"nick":"keith_mi_","message":"sorry had to get off the bus","date":"2019-06-19T18:23:36.847Z","type":"message"}
{"nick":"devsnek","message":"zkat: is `~x` a placeholder for `->`","date":"2019-06-19T18:27:00.934Z","type":"message"}
{"nick":"devsnek","message":"wait no that doesn't make sense","date":"2019-06-19T18:27:23.034Z","type":"message"}
{"nick":"zkat","message":"no, that was a reference to a now-dropped subproposal for extensible patterns","date":"2019-06-19T18:27:38.914Z","type":"message"}
{"nick":"devsnek","message":"oh ok","date":"2019-06-19T18:27:53.293Z","type":"message"}
{"nick":"zkat","message":"which might be replaces with `NewExpression`/`CallExpression` inversion, as in https://github.com/tc39/proposal-pattern-matching/issues/117","date":"2019-06-19T18:28:38.037Z","type":"message"}
{"nick":"keith_m__","date":"2019-06-19T18:30:05.958Z","type":"join"}
{"nick":"keith_mi_","reason":"Ping timeout: 252 seconds","date":"2019-06-19T18:32:40.356Z","type":"quit"}
{"nick":"keith_m__","message":"ljharb: While it's usually a bad idea to do assignment as an expression (I agree with you), I'm not convinced that would be a problem here.","date":"2019-06-19T18:39:27.933Z","type":"message"}
{"nick":"keith_m__","message":"my argument is there can only be one lexical assignment per if condition","date":"2019-06-19T18:39:45.556Z","type":"message"}
{"nick":"ljharb","message":"keith_m__: and what if you want two tho? like `const { foo } = obj; let { bar } = obj`","date":"2019-06-19T18:40:03.910Z","type":"message"}
{"nick":"keith_m__","message":"that would be a syntax error","date":"2019-06-19T18:40:16.726Z","type":"message"}
{"nick":"ljharb","message":"or even `const { foo, bar } = obj`","date":"2019-06-19T18:40:18.404Z","type":"message"}
{"nick":"keith_m__","message":"well that's destructuring so I'd be ok with that","date":"2019-06-19T18:40:30.816Z","type":"message"}
{"nick":"ljharb","message":"ok so, the limitation of destructuring not allowing mixing let/const is \"fine\" because you can do 2 statements - but if there's a place where you can only do one, that will likely present a problem","date":"2019-06-19T18:41:03.566Z","type":"message"}
{"nick":"devsnek","message":"why not `for (let a = b(); a;;) {}`","date":"2019-06-19T18:41:03.994Z","type":"message"}
{"nick":"devsnek","message":":P","date":"2019-06-19T18:41:07.471Z","type":"message"}
{"nick":"keith_m__","message":"isn't that an infinite loop?","date":"2019-06-19T18:41:37.272Z","type":"message"}
{"nick":"devsnek","message":"oh yeah","date":"2019-06-19T18:41:44.039Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2019-06-19T18:41:45.224Z","type":"message"}
{"nick":"devsnek","message":"my thought process stopped at \"yeah this would run and not run\"","date":"2019-06-19T18:42:07.915Z","type":"message"}
{"nick":"keith_m__","message":"you also can't have an else","date":"2019-06-19T18:42:12.545Z","type":"message"}
{"nick":"keith_m__","message":"ljharb: Destructuring is also a bit weird because it's somewhat unclear what the conditional is?","date":"2019-06-19T18:43:21.414Z","type":"message"}
{"nick":"keith_m__","message":"is it the fact that the destructuring \"succeeded\"? Or that the RHS is actually an object?","date":"2019-06-19T18:43:52.500Z","type":"message"}
{"nick":"laughinghan","date":"2019-06-19T18:44:01.439Z","type":"join"}
{"nick":"keith_m__","message":"so maybe destructuring is a bad choice","date":"2019-06-19T18:44:08.760Z","type":"message"}
{"nick":"devsnek","message":"if destructuring doesn't succeed it throws","date":"2019-06-19T18:44:15.854Z","type":"message"}
{"nick":"keith_m__","message":"I mean maybe you don't want that behavior here?","date":"2019-06-19T18:44:28.830Z","type":"message"}
{"nick":"devsnek","message":"but yeah that is getting into matching territory","date":"2019-06-19T18:44:34.939Z","type":"message"}
{"nick":"keith_m__","message":"fair","date":"2019-06-19T18:44:39.822Z","type":"message"}
{"nick":"keith_m__","message":"Also, you could do two statements for destructuring here","date":"2019-06-19T18:45:12.309Z","type":"message"}
{"nick":"devsnek","message":"`#pragma match` or `#pragma destructure` ftfy","date":"2019-06-19T18:45:17.259Z","type":"message"}
{"nick":"ljharb","message":"keith_m__: right, so then you block destructuring in an `if`, and now you have a weird sub-form of assignment","date":"2019-06-19T18:45:55.126Z","type":"message"}
{"nick":"keith_m__","message":"since you could do if (let { foo } = obj) { const { bar } = obj; }","date":"2019-06-19T18:45:57.306Z","type":"message"}
{"nick":"keith_m__","message":"but I think it's worth exploring what the different semantics could be","date":"2019-06-19T18:46:37.059Z","type":"message"}
{"nick":"keith_m__","message":"anywho I will make a proposal unless people think it's beating a dead horse","date":"2019-06-19T18:48:20.886Z","type":"message"}
{"nick":"ljharb","message":"keith_m__: i'd search esdiscuss first for previous discussions on it","date":"2019-06-19T18:50:18.827Z","type":"message"}
{"nick":"keith_m__","message":"I did some googling and couldn't find anything","date":"2019-06-19T18:50:32.023Z","type":"message"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T18:53:54.823Z","type":"quit"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-06-19T19:00:03.676Z","type":"quit"}
{"nick":"cybai","date":"2019-06-19T19:03:25.334Z","type":"join"}
{"nick":"keith_m__","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T19:04:05.717Z","type":"quit"}
{"nick":"rkirsling","message":"definitely seems like a worth problem space to bring up in session","date":"2019-06-19T19:06:34.744Z","type":"message"}
{"nick":"cybai","reason":"Ping timeout: 248 seconds","date":"2019-06-19T19:07:44.835Z","type":"quit"}
{"nick":"Nimelrian","date":"2019-06-19T19:09:03.023Z","type":"join"}
{"nick":"cloudshu","message":"late reply: i think \"c's not a great language to emulate\" is more an argument for not having `if (let foo = bar)` the available-in-both-branches thing","date":"2019-06-19T19:15:27.308Z","type":"message"}
{"nick":"cloudshu","message":"if we're to have the form, it'd be weird to diverge imo","date":"2019-06-19T19:16:00.529Z","type":"message"}
{"nick":"Bakkot","message":"I don't think this syntax is worth it, in honesty","date":"2019-06-19T19:16:54.661Z","type":"message"}
{"nick":"cloudshu","message":"i'm like a weak agree on it not being worth it","date":"2019-06-19T19:18:12.300Z","type":"message"}
{"nick":"cloudshu","message":"i do use the form in c++ fairly frequently","date":"2019-06-19T19:18:21.681Z","type":"message"}
{"nick":"cybai","date":"2019-06-19T19:19:07.303Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 246 seconds","date":"2019-06-19T19:23:28.328Z","type":"quit"}
{"nick":"cybai","date":"2019-06-19T19:40:47.450Z","type":"join"}
{"nick":"devsnek","message":"i never even knew it existed","date":"2019-06-19T19:42:48.625Z","type":"message"}
{"nick":"devsnek","message":"but same agreement as cloudshu","date":"2019-06-19T19:43:00.894Z","type":"message"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-06-19T19:49:49.672Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-06-19T20:05:01.829Z","type":"join"}
{"nick":"laughinghan","date":"2019-06-19T20:09:48.505Z","type":"join"}
{"nick":"Nimelrian","reason":"Ping timeout: 252 seconds","date":"2019-06-19T20:12:48.065Z","type":"quit"}
{"nick":"Bakkot","message":"also, previous discussions: https://esdiscuss.org/topic/proposal-if-variable-initialization https://esdiscuss.org/topic/proposal-let-in-if-parentheses","date":"2019-06-19T20:34:19.733Z","type":"message"}
{"nick":"itamarok","date":"2019-06-19T21:02:16.290Z","type":"join"}
{"nick":"oliverdunk","message":"I think I'm understanding the fetch spec right, but just to check - is it intended then when fetching a resource with {redirect: \"manual\"}, the response type is always \"cors\" (even with Access-Control-Allow-Origin set to *), unless there's a redirect, in which case the response type is \"opaqueredirect\"?","date":"2019-06-19T21:03:31.891Z","type":"message"}
{"nick":"rkirsling","message":"oliverdunk: I think you'd have to talk to WHATWG about fetch; it's not part of the language spec","date":"2019-06-19T21:08:04.363Z","type":"message"}
{"nick":"oliverdunk","message":"Gotcha, that makes sense rkirsling.","date":"2019-06-19T21:08:27.992Z","type":"message"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T21:08:34.210Z","type":"quit"}
{"nick":"itamarok","date":"2019-06-19T21:11:19.330Z","type":"join"}
{"nick":"cybai","date":"2019-06-19T21:28:15.071Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-06-19T21:29:33.344Z","type":"quit"}
{"nick":"cybai","date":"2019-06-19T21:30:58.662Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-06-19T21:32:23.346Z","type":"quit"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-06-19T21:34:25.854Z","type":"quit"}
{"nick":"Bakkot","message":"gh-1158 is merged! :hooray:","date":"2019-06-19T21:42:49.970Z","type":"message"}
{"nick":"Bakkot","message":"getting archive.is/TeTng fixed has been on my todo list for _three years_","date":"2019-06-19T21:44:38.798Z","type":"message"}
{"nick":"rkirsling","message":"wow, that's the first time I've actually viewed that site","date":"2019-06-19T21:45:58.159Z","type":"message"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T22:30:08.025Z","type":"quit"}
{"nick":"devsnek","message":"just watched cj's talk at jsconf","date":"2019-06-19T22:39:51.876Z","type":"message"}
{"nick":"devsnek","message":"reminds me of the arguments in the std proposal","date":"2019-06-19T22:40:11.340Z","type":"message"}
{"nick":"keith_mi_","date":"2019-06-19T22:40:18.962Z","type":"join"}
{"nick":"rkirsling","message":"the energy of being in the front row for that and not knowing what was coming, man. it was really something","date":"2019-06-19T22:40:43.220Z","type":"message"}
{"nick":"rkirsling","message":"but yeah there's a common theme in the ether, I think","date":"2019-06-19T22:41:54.579Z","type":"message"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T22:59:56.199Z","type":"quit"}
{"nick":"cybai","date":"2019-06-19T23:15:36.683Z","type":"join"}
{"nick":"cybai_","date":"2019-06-19T23:17:19.450Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 272 seconds","date":"2019-06-19T23:20:36.599Z","type":"quit"}
{"nick":"cybai_","reason":"Ping timeout: 246 seconds","date":"2019-06-19T23:21:49.268Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-06-19T23:31:35.815Z","type":"quit"}
