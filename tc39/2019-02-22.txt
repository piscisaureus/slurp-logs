{"nick":"gcommer","reason":"Read error: Connection reset by peer","date":"2019-02-22T01:16:21.475Z","type":"quit"}
{"nick":"gcommer","date":"2019-02-22T01:17:13.304Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T01:18:00.739Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-02-22T01:28:21.989Z","type":"join"}
{"nick":"cybai","date":"2019-02-22T01:29:26.707Z","type":"join"}
{"nick":"sendilkumarn","reason":"Remote host closed the connection","date":"2019-02-22T01:34:41.658Z","type":"quit"}
{"nick":"bradleymeck","message":"the cookie 1 year challenge is always fun. Buy a box, wait a year buy a 2nd box and then try to guess which of the cookies are new vs old","date":"2019-02-22T02:02:13.741Z","type":"message"}
{"nick":"aki_","date":"2019-02-22T02:03:04.671Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 255 seconds","date":"2019-02-22T02:04:14.657Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T02:04:14.942Z","type":"nick"}
{"nick":"leobalter","reason":"Ping timeout: 264 seconds","date":"2019-02-22T02:04:42.758Z","type":"quit"}
{"nick":"leobalter_","date":"2019-02-22T02:05:02.659Z","type":"join"}
{"nick":"rkirsling","message":"lol fascinating","date":"2019-02-22T02:12:12.788Z","type":"message"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T02:46:36.163Z","type":"quit"}
{"nick":"sendilkumarn","date":"2019-02-22T02:50:05.830Z","type":"join"}
{"nick":"sendilkumarn","reason":"Ping timeout: 250 seconds","date":"2019-02-22T02:54:33.678Z","type":"quit"}
{"nick":"gibson042","date":"2019-02-22T03:36:09.005Z","type":"join"}
{"nick":"ljharb","message":"bradleymeck: not even frozen?","date":"2019-02-22T03:50:57.595Z","type":"message"}
{"nick":"ljharb","message":"interesting","date":"2019-02-22T03:51:00.297Z","type":"message"}
{"nick":"ljharb","message":"i know that tagalong chocolate gets relatively stale after 4-6 months, so that one'd be easy","date":"2019-02-22T03:51:24.118Z","type":"message"}
{"nick":"ljharb","message":"(when unfrozen)","date":"2019-02-22T03:51:34.667Z","type":"message"}
{"nick":"aki_","date":"2019-02-22T04:09:19.031Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 255 seconds","date":"2019-02-22T04:10:41.657Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T04:10:41.969Z","type":"nick"}
{"nick":"not-an-aardvark","date":"2019-02-22T04:18:02.688Z","type":"join"}
{"nick":"sendilkumarn","date":"2019-02-22T04:38:17.235Z","type":"join"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2019-02-22T04:40:35.832Z","type":"quit"}
{"nick":"sendilkumarn","reason":"Ping timeout: 258 seconds","date":"2019-02-22T04:42:38.108Z","type":"quit"}
{"nick":"howdoi","date":"2019-02-22T04:44:15.214Z","type":"join"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2019-02-22T05:06:41.611Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-02-22T05:53:41.453Z","type":"quit"}
{"nick":"ghmcadams","date":"2019-02-22T06:08:12.323Z","type":"join"}
{"nick":"aki_","date":"2019-02-22T06:16:10.649Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2019-02-22T06:17:02.989Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T06:17:03.283Z","type":"nick"}
{"nick":"sendilkumarn","date":"2019-02-22T06:26:22.584Z","type":"join"}
{"nick":"sendilkumarn","reason":"Ping timeout: 250 seconds","date":"2019-02-22T06:30:47.676Z","type":"quit"}
{"nick":"Jessidhia","reason":"Disconnected by services","date":"2019-02-22T06:59:03.678Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-02-22T06:59:08.617Z","type":"join"}
{"nick":"ghmcadams","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-02-22T07:16:26.901Z","type":"quit"}
{"nick":"sendilkumarn","date":"2019-02-22T07:50:45.199Z","type":"join"}
{"nick":"Jessidhia","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T07:54:28.878Z","type":"quit"}
{"nick":"sendilkumarn","reason":"Ping timeout: 258 seconds","date":"2019-02-22T07:55:27.095Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-02-22T07:56:37.581Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2019-02-22T08:17:25.650Z","type":"quit"}
{"nick":"aki_","date":"2019-02-22T08:22:24.195Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 255 seconds","date":"2019-02-22T08:23:35.665Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T08:23:35.982Z","type":"nick"}
{"nick":"sendilkumarn","date":"2019-02-22T08:24:50.763Z","type":"join"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-02-22T08:41:17.524Z","type":"quit"}
{"nick":"sendilkumarn","reason":"Remote host closed the connection","date":"2019-02-22T09:14:11.050Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-02-22T09:14:23.671Z","type":"quit"}
{"nick":"i_","date":"2019-02-22T09:35:57.167Z","type":"join"}
{"nick":"sendilkumarn","date":"2019-02-22T09:46:15.438Z","type":"join"}
{"nick":"i_","reason":"Ping timeout: 256 seconds","date":"2019-02-22T10:03:11.185Z","type":"quit"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-02-22T10:13:24.892Z","type":"quit"}
{"nick":"aki_","date":"2019-02-22T10:29:25.291Z","type":"join"}
{"nick":"sendilkumarn","reason":"Remote host closed the connection","date":"2019-02-22T10:29:30.700Z","type":"quit"}
{"nick":"sendilkumarn","date":"2019-02-22T10:29:43.230Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2019-02-22T10:30:27.005Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T10:30:27.467Z","type":"nick"}
{"nick":"sendilkumarn","reason":"Remote host closed the connection","date":"2019-02-22T10:31:36.098Z","type":"quit"}
{"nick":"sendilkumarn","date":"2019-02-22T10:37:56.341Z","type":"join"}
{"nick":"cybai","date":"2019-02-22T10:54:30.255Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 246 seconds","date":"2019-02-22T10:58:55.256Z","type":"quit"}
{"nick":"sendilkumarn","reason":"Remote host closed the connection","date":"2019-02-22T11:01:31.377Z","type":"quit"}
{"nick":"sendilkumarn","date":"2019-02-22T11:37:15.532Z","type":"join"}
{"nick":"sendilkumarn","reason":"Ping timeout: 246 seconds","date":"2019-02-22T11:41:30.025Z","type":"quit"}
{"nick":"sendilkumarn","date":"2019-02-22T11:55:49.664Z","type":"join"}
{"nick":"aki_","date":"2019-02-22T12:34:38.734Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2019-02-22T12:35:28.294Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T12:35:29.125Z","type":"nick"}
{"nick":"jmdyck","date":"2019-02-22T12:45:23.785Z","type":"join"}
{"nick":"AtumT","date":"2019-02-22T12:50:09.878Z","type":"join"}
{"nick":"sendilkumarn","reason":"Remote host closed the connection","date":"2019-02-22T13:04:11.251Z","type":"quit"}
{"nick":"sendilkumarn","date":"2019-02-22T13:18:02.305Z","type":"join"}
{"nick":"jorydotcom","date":"2019-02-22T13:28:51.344Z","type":"join"}
{"nick":"bradleymeck","message":"ljharb: in the refrigerator is my game","date":"2019-02-22T14:22:17.043Z","type":"message"}
{"nick":"aki_","date":"2019-02-22T14:39:55.321Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 268 seconds","date":"2019-02-22T14:41:07.740Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T14:41:08.181Z","type":"nick"}
{"nick":"sendilkumarn","reason":"Remote host closed the connection","date":"2019-02-22T14:57:16.352Z","type":"quit"}
{"nick":"jorydotcom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T15:07:31.720Z","type":"quit"}
{"nick":"Nimelrian__","date":"2019-02-22T15:09:10.095Z","type":"join"}
{"nick":"cloudshu","date":"2019-02-22T15:28:47.708Z","type":"join"}
{"nick":"jorydotcom","date":"2019-02-22T15:36:00.835Z","type":"join"}
{"nick":"obensource","reason":"Ping timeout: 244 seconds","date":"2019-02-22T16:13:48.438Z","type":"quit"}
{"nick":"obensource","date":"2019-02-22T16:28:34.002Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2019-02-22T16:38:14.105Z","type":"quit"}
{"nick":"akirose","date":"2019-02-22T16:38:30.704Z","type":"join"}
{"nick":"jorydotcom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T16:40:47.880Z","type":"quit"}
{"nick":"devsnek","message":"what are people's opinions on a js runtime that crashes when a promise rejects without a rejection handler","date":"2019-02-22T16:55:50.283Z","type":"message"}
{"nick":"Domenic","message":"littledan: I don't understand why an explicit RunJobs is needed","date":"2019-02-22T17:04:28.934Z","type":"message"}
{"nick":"Domenic","message":"After each job, the job queue will be emptied automatically, at least in HTML.","date":"2019-02-22T17:04:51.004Z","type":"message"}
{"nick":"Domenic","message":"Are you running script without using a job?","date":"2019-02-22T17:04:58.487Z","type":"message"}
{"nick":"littledan","message":"hey, thanks for the quick review, Domenic","date":"2019-02-22T17:05:05.775Z","type":"message"}
{"nick":"littledan","message":"I guess I'm missing the part where HTML gets involved here, in InnerModuleEvaluation","date":"2019-02-22T17:05:22.934Z","type":"message"}
{"nick":"littledan","message":"I thought that spun around in JS a bunch without HTML coming into play, once the module graph was all pulled down and executing","date":"2019-02-22T17:05:42.442Z","type":"message"}
{"nick":"Domenic","message":"Step 13.g.i does PerformPromiseThen()","date":"2019-02-22T17:06:03.638Z","type":"message"}
{"nick":"Domenic","message":"Which will enqueue a job","date":"2019-02-22T17:06:07.179Z","type":"message"}
{"nick":"Domenic","message":"Which, when that job finishes, will perform a microtask checkpoint","date":"2019-02-22T17:06:18.100Z","type":"message"}
{"nick":"Domenic","message":"It currently does do that. But with the changes in top-level await, evaluating a module now does promise things, so HTML gets back into the loop","date":"2019-02-22T17:06:39.244Z","type":"message"}
{"nick":"Domenic","message":"s/13.g.i/13.g.iv/","date":"2019-02-22T17:06:53.785Z","type":"message"}
{"nick":"littledan","message":"sorry, 13.g.iv of which algorithm?","date":"2019-02-22T17:08:05.227Z","type":"message"}
{"nick":"Domenic","message":"https://tc39.github.io/proposal-top-level-await/#sec-innermoduleevaluation","date":"2019-02-22T17:08:15.069Z","type":"message"}
{"nick":"devsnek","message":"how can queuing a job run the job queue","date":"2019-02-22T17:08:50.885Z","type":"message"}
{"nick":"littledan","message":"so, yeah, when all the microtask queue items are done, there's a checkpoint. But I don't see why we'd get to a checkpoint if we have a big glob of modules running","date":"2019-02-22T17:09:00.122Z","type":"message"}
{"nick":"littledan","message":"I mean, a bunch of things will get queued, due to stuff happening in launching the evaluation of different modules","date":"2019-02-22T17:09:18.704Z","type":"message"}
{"nick":"littledan","message":"the insertion of a microtask queue checkpoint (via the willful violation by HTML noted in FlushJobs) would sort these out","date":"2019-02-22T17:09:41.961Z","type":"message"}
{"nick":"Domenic","message":"Hmm","date":"2019-02-22T17:10:04.817Z","type":"message"}
{"nick":"littledan","message":"there's a standing disagreement between HTML and JS on layering; I'm not trying to say things are resolved in one way or the other, just explain it with both mechanisms at once","date":"2019-02-22T17:10:09.223Z","type":"message"}
{"nick":"Domenic","message":"So the problem is that you are queuing A, B, C, D, E but you want to run things in... what order?","date":"2019-02-22T17:10:28.858Z","type":"message"}
{"nick":"Domenic","message":"Let me do better letters","date":"2019-02-22T17:10:45.617Z","type":"message"}
{"nick":"Domenic","message":"Given https://github.com/tc39/proposal-top-level-await/issues/47#issuecomment-464488593","date":"2019-02-22T17:11:20.909Z","type":"message"}
{"nick":"Domenic","message":"Are you not queuing jobs in order a1-1, a-2, a, b, main?","date":"2019-02-22T17:11:23.602Z","type":"message"}
{"nick":"Domenic","message":"What order are you queuing the jobs in?","date":"2019-02-22T17:11:28.462Z","type":"message"}
{"nick":"littledan","message":"the microtask queue congestion issue comes up because of the Promise.all at the beginning of modules that import things","date":"2019-02-22T17:11:48.619Z","type":"message"}
{"nick":"littledan","message":"the \"right\" tree might end up being run before the \"left\" tree if it's less deep","date":"2019-02-22T17:12:05.714Z","type":"message"}
{"nick":"littledan","message":"so, that's why a ends up running after b","date":"2019-02-22T17:12:39.864Z","type":"message"}
{"nick":"Domenic","message":"Right, I got that. But I'm trying to root cause. Is the issue you are queuing jobs in a different order than a-1, a-2, a, b, main?","date":"2019-02-22T17:12:46.246Z","type":"message"}
{"nick":"littledan","message":"well, we're telling the modules to start in the right order","date":"2019-02-22T17:13:06.022Z","type":"message"}
{"nick":"littledan","message":"it's just, when we tell a to start, it has to work through a bunch of Promise reactions first","date":"2019-02-22T17:13:25.937Z","type":"message"}
{"nick":"Domenic","message":"It seems like you could add an a-1.then(a-2) chain to do this","date":"2019-02-22T17:14:04.850Z","type":"message"}
{"nick":"Domenic","message":"Like, add a-1 to a-2's promise.all","date":"2019-02-22T17:14:18.544Z","type":"message"}
{"nick":"Domenic","message":"I'm just leery of essentially inserting a \"rearrange the job queue here\" step.","date":"2019-02-22T17:15:54.970Z","type":"message"}
{"nick":"Domenic","message":"Instead of ensuring the evaluation jobs get queued in the right order in the first place.","date":"2019-02-22T17:16:13.939Z","type":"message"}
{"nick":"littledan","message":"isn't that going back to \"variant A\"?","date":"2019-02-22T17:16:35.912Z","type":"message"}
{"nick":"littledan","message":"I think that would be adding more synchronous behavior than what I'm doing here","date":"2019-02-22T17:16:45.063Z","type":"message"}
{"nick":"Domenic","message":"Hmm","date":"2019-02-22T17:16:49.670Z","type":"message"}
{"nick":"littledan","message":"flushing the microtask queue is only about the parts that run synchronously, so it's a lot lighter weight","date":"2019-02-22T17:17:02.926Z","type":"message"}
{"nick":"Domenic","message":"Yeah, that would be variant A, bad.","date":"2019-02-22T17:17:14.319Z","type":"message"}
{"nick":"Domenic","message":"I'm just having a fundamental confusion:","date":"2019-02-22T17:17:22.890Z","type":"message"}
{"nick":"Domenic","message":"HTML ensures that whenever the stack is empty, the job queue is drained","date":"2019-02-22T17:17:34.642Z","type":"message"}
{"nick":"littledan","message":"but, a lot of people have had this kind of reaction, that it doesn't smell right to flush the microtask queue","date":"2019-02-22T17:17:35.552Z","type":"message"}
{"nick":"Domenic","message":"If you have to manually flush the job queue, then that means you are doing so when the stack is not empty","date":"2019-02-22T17:17:50.298Z","type":"message"}
{"nick":"Domenic","message":"I don't understand why that would be necessary.","date":"2019-02-22T17:17:56.476Z","type":"message"}
{"nick":"littledan","message":"when you say stack, do you mean that there's no JS running?","date":"2019-02-22T17:18:16.028Z","type":"message"}
{"nick":"Domenic","message":"Right.","date":"2019-02-22T17:18:23.667Z","type":"message"}
{"nick":"Domenic","message":"E.g. when we're waiting on a promise reaction","date":"2019-02-22T17:18:33.159Z","type":"message"}
{"nick":"littledan","message":"well, this algorithm is being driven by something that's not JS; there's no JS running","date":"2019-02-22T17:18:45.230Z","type":"message"}
{"nick":"littledan","message":"maybe we can do something at the JS level that explains that, duh, the job queue is clearly drained, no need for FlushJobs","date":"2019-02-22T17:19:08.088Z","type":"message"}
{"nick":"Domenic","message":"Hmm","date":"2019-02-22T17:19:11.353Z","type":"message"}
{"nick":"Domenic","message":"Maybe that is what I'm missing","date":"2019-02-22T17:19:23.861Z","type":"message"}
{"nick":"Domenic","message":"We are using jobs and promises, but there is no JS execution context stack, where emptying it triggers the microtask checkpoint... hmmm...","date":"2019-02-22T17:20:45.165Z","type":"message"}
{"nick":"littledan","message":"yeah, when you say HTML ensures this, do you mean in https://html.spec.whatwg.org/#event-loop-processing-model ?","date":"2019-02-22T17:21:12.451Z","type":"message"}
{"nick":"littledan","message":"I guess the issue is (again) that JS doesn't really have a \"processing model\"","date":"2019-02-22T17:21:28.996Z","type":"message"}
{"nick":"littledan","message":"and this algorithm is one of the few that runs when there's no JS active","date":"2019-02-22T17:21:49.698Z","type":"message"}
{"nick":"Domenic","message":"No, I mean in https://html.spec.whatwg.org/#clean-up-after-running-script","date":"2019-02-22T17:22:06.281Z","type":"message"}
{"nick":"littledan","message":"hmm, so an interesting thing about this algorithm is that we might not actually invoke JavaScript, we might just work our way through some Then reactions and find ourselves still blocked","date":"2019-02-22T17:23:52.526Z","type":"message"}
{"nick":"littledan","message":"oh, I guess that will still run the \"clean up after running script\" algorithnm","date":"2019-02-22T17:24:55.502Z","type":"message"}
{"nick":"littledan","message":"right, since that algorithm is run after each microtask","date":"2019-02-22T17:25:21.926Z","type":"message"}
{"nick":"Domenic","message":"Wait a minute","date":"2019-02-22T17:25:24.238Z","type":"message"}
{"nick":"Domenic","message":"Are all calls to InnerModuleEvaluation() synchronous?","date":"2019-02-22T17:25:34.266Z","type":"message"}
{"nick":"littledan","message":"yes","date":"2019-02-22T17:25:38.182Z","type":"message"}
{"nick":"Domenic","message":"Oh then it seems this is already aligned with HTML","date":"2019-02-22T17:25:47.366Z","type":"message"}
{"nick":"Domenic","message":"HTML already calls \"clean up after running script\" after it calls Evalaute()","date":"2019-02-22T17:25:55.892Z","type":"message"}
{"nick":"littledan","message":"that's not the right time, since Evaluate() is only called once, and we need it called after loading each module","date":"2019-02-22T17:26:10.493Z","type":"message"}
{"nick":"Domenic","message":"No, nevermind, yeah","date":"2019-02-22T17:26:18.850Z","type":"message"}
{"nick":"Domenic","message":"Right because you are using the job queue for things that could be synchronous, hmm","date":"2019-02-22T17:26:50.263Z","type":"message"}
{"nick":"Domenic","message":"OK I have to run to a meeting but I am coming around to draining the job queue","date":"2019-02-22T17:27:01.710Z","type":"message"}
{"nick":"Domenic","message":"I am hopeful my resolution will be to draft a lengthy non-normative note explaining why it makes sense","date":"2019-02-22T17:27:16.775Z","type":"message"}
{"nick":"littledan","message":"why FlushJobs makes sense, or why it's not necessary?","date":"2019-02-22T17:27:40.088Z","type":"message"}
{"nick":"Domenic","message":"Why it makes sense","date":"2019-02-22T17:27:44.601Z","type":"message"}
{"nick":"littledan","message":"OK, great","date":"2019-02-22T17:27:51.953Z","type":"message"}
{"nick":"Domenic","message":"We may want to tweak things a bit so we can do host setup, not just host teardown, before/after each chunk of graph work","date":"2019-02-22T17:28:24.538Z","type":"message"}
{"nick":"littledan","message":"that makes sense; I imagine that there could be other kinds of settings to put in place. The big question to answer at this point is whether we're doing a microtask checkpoint or going for all-synchronous execution.","date":"2019-02-22T17:32:39.136Z","type":"message"}
{"nick":"littledan","message":"and, if this seems reasonable to you, I'm leaning microtask checkpoint as well","date":"2019-02-22T17:33:05.445Z","type":"message"}
{"nick":"jorydotcom","date":"2019-02-22T17:33:46.629Z","type":"join"}
{"nick":"keith_mi_","date":"2019-02-22T17:35:04.313Z","type":"join"}
{"nick":"Domenic","message":"(turns out my meeting was a half-hour later, but now I need to get lunch in 25 minutes, whee)","date":"2019-02-22T17:35:21.838Z","type":"message"}
{"nick":"Domenic","message":"On the other hand it's a bit weird to anticipate every host adding very similar hooks just so that ES can use the job queue to do sync work","date":"2019-02-22T17:36:11.418Z","type":"message"}
{"nick":"jorydotcom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T18:19:29.002Z","type":"quit"}
{"nick":"jorydotcom","date":"2019-02-22T18:32:06.988Z","type":"join"}
{"nick":"Domenic","message":"https://github.com/whatwg/html/issues/4175#issuecomment-466047231 about a no-credentials mode instead of CORS is so weird to me.","date":"2019-02-22T18:41:00.562Z","type":"message"}
{"nick":"Domenic","message":"If we thought intranets didn't matter, we would've just made no-credentials a requirement for outgoing requests long ago and never had to do the CORS business.","date":"2019-02-22T18:41:22.262Z","type":"message"}
{"nick":"Domenic","message":"Oops, wrong channel","date":"2019-02-22T18:41:33.658Z","type":"message"}
{"nick":"jorydotcom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T18:42:02.401Z","type":"quit"}
{"nick":"aki_","date":"2019-02-22T18:45:20.362Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 255 seconds","date":"2019-02-22T18:45:29.643Z","type":"quit"}
{"nick":"ghmcadams","date":"2019-02-22T18:45:47.333Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T18:46:09.437Z","type":"nick"}
{"nick":"keith_miller","reason":"Ping timeout: 250 seconds","date":"2019-02-22T18:51:21.678Z","type":"quit"}
{"nick":"keith_miller","date":"2019-02-22T18:53:46.178Z","type":"join"}
{"nick":"rkirsling","message":"I just learned that `new Date(undefined)` is not the same thing as `new Date()` and I totally want to flip a table right now ü§Ø","date":"2019-02-22T19:19:03.702Z","type":"message"}
{"nick":"rkirsling","message":"...especially given that `new Date(null)` is treated as `new Date(0)`","date":"2019-02-22T19:19:22.586Z","type":"message"}
{"nick":"TabAtkins","message":":shakes fist at legacy apis:","date":"2019-02-22T19:19:27.200Z","type":"message"}
{"nick":"ljharb","message":"‚î¨Temporal‚î¨„Éé( ¬∫ _ ¬∫„Éé)","date":"2019-02-22T19:19:36.317Z","type":"message"}
{"nick":"rkirsling","message":"ljharb: good answer lol","date":"2019-02-22T19:19:46.319Z","type":"message"}
{"nick":"rkirsling","message":"in other news... mathiasbynens: that \"shapes get orphaned on field type change after preventExtensions\" bug the React folks discovered is really fascinating","date":"2019-02-22T19:31:09.815Z","type":"message"}
{"nick":"rkirsling","message":"I was trying to poke at exactly why the bug doesn't apply to JSC","date":"2019-02-22T19:31:35.387Z","type":"message"}
{"nick":"ljharb","message":"what bug?","date":"2019-02-22T19:31:45.201Z","type":"message"}
{"nick":"rkirsling","message":"read from here: https://slidr.io/bmeurer/javascript-engine-fundamentals-the-good-the-bad-and-the-ugly#151","date":"2019-02-22T19:32:20.524Z","type":"message"}
{"nick":"rkirsling","message":"seems like JSC structures don't have the same \"new shape that extends from the existing one\" pattern that V8 maps have, maybe that's the crux","date":"2019-02-22T19:34:04.609Z","type":"message"}
{"nick":"ljharb","message":"not sure if i get it without narration","date":"2019-02-22T19:34:17.180Z","type":"message"}
{"nick":"keith_miller","reason":"Ping timeout: 268 seconds","date":"2019-02-22T19:38:53.177Z","type":"quit"}
{"nick":"leobalter_","new_nick":"leobalter","date":"2019-02-22T19:40:24.324Z","type":"nick"}
{"nick":"keith_mi_","reason":"Ping timeout: 245 seconds","date":"2019-02-22T19:40:53.309Z","type":"quit"}
{"nick":"keith_miller","date":"2019-02-22T19:42:20.916Z","type":"join"}
{"nick":"rkirsling","message":"ljharb: so JSObjects have shapes (on-the-fly interfaces kept by the runtime, called \"maps\" in V8 and \"structures\" in JSC), and when you add a new property, a new shape gets extended from the old one (in V8 at least, as I understand it), and preventExtensions (or seal or freeze) makes sort of a final extension on top of that. The bug is that if you initialize a field to a small integer, prevent extensions, and then set it to a","date":"2019-02-22T19:42:57.664Z","type":"message"}
{"nick":"rkirsling","message":"double, you'd end up with a new orphaned shape for *every such object*: https://bugs.chromium.org/p/v8/issues/detail?id=8538","date":"2019-02-22T19:42:57.812Z","type":"message"}
{"nick":"rkirsling","message":"so they realized that to work around you could initialize the field with NaN or Number.MIN_VALUE (so that it's a double to start with) and then set it to whatever value you wanted (like 0, say) -- https://github.com/facebook/react/pull/14383","date":"2019-02-22T19:44:23.848Z","type":"message"}
{"nick":"rkirsling","message":"really comical and interesting situation","date":"2019-02-22T19:44:33.259Z","type":"message"}
{"nick":"rkirsling","message":"(note that \"smi\" is evidently the V8ism for \"small int\")","date":"2019-02-22T19:45:42.390Z","type":"message"}
{"nick":"keith_mi_","date":"2019-02-22T19:51:41.163Z","type":"join"}
{"nick":"ghmcadams","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2019-02-22T20:23:34.190Z","type":"quit"}
{"nick":"jorydotcom","date":"2019-02-22T20:23:46.631Z","type":"join"}
{"nick":"aki_","date":"2019-02-22T20:51:48.117Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2019-02-22T20:53:30.753Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T20:53:31.197Z","type":"nick"}
{"nick":"jwalden","date":"2019-02-22T21:11:11.310Z","type":"join"}
{"nick":"ghmcadams","date":"2019-02-22T21:11:51.287Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T21:50:19.752Z","type":"quit"}
{"nick":"sendilkumarn","date":"2019-02-22T21:51:19.066Z","type":"join"}
{"nick":"ghmcadams","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2019-02-22T21:53:22.147Z","type":"quit"}
{"nick":"ghmcadams","date":"2019-02-22T21:56:41.777Z","type":"join"}
{"nick":"keith_miller","date":"2019-02-22T21:57:18.307Z","type":"join"}
{"nick":"ghmcadams","reason":"Client Quit","date":"2019-02-22T21:58:42.356Z","type":"quit"}
{"nick":"ghmcadams","date":"2019-02-22T22:00:11.996Z","type":"join"}
{"nick":"sendilkumarn","reason":"Remote host closed the connection","date":"2019-02-22T22:14:11.586Z","type":"quit"}
{"nick":"sendilkumarn","date":"2019-02-22T22:18:21.149Z","type":"join"}
{"nick":"jorydotcom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T22:29:03.656Z","type":"quit"}
{"nick":"sendilkumarn","reason":"Remote host closed the connection","date":"2019-02-22T22:30:22.698Z","type":"quit"}
{"nick":"aki_","date":"2019-02-22T22:58:22.479Z","type":"join"}
{"nick":"devsnek","message":"that's a fun diff","date":"2019-02-22T22:58:43.027Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2019-02-22T22:59:12.221Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-22T22:59:12.512Z","type":"nick"}
{"nick":"ghmcadams","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2019-02-22T22:59:47.299Z","type":"quit"}
{"nick":"ghmcadams","date":"2019-02-22T23:02:09.998Z","type":"join"}
{"nick":"Nimelrian__","reason":"Ping timeout: 258 seconds","date":"2019-02-22T23:09:19.099Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2019-02-22T23:36:26.031Z","type":"quit"}
