{"nick":"rwaldron","date":"2018-03-11T00:58:11.436Z","type":"join"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-03-11T01:13:38.904Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-11T01:15:05.332Z","type":"quit"}
{"nick":"rwaldron","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-11T01:38:44.000Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-03-11T02:14:04.778Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-03-11T05:07:01.111Z","type":"quit"}
{"nick":"jschoi","date":"2018-03-11T05:39:55.140Z","type":"join"}
{"nick":"jschoi","reason":"Quit: Connection closed for inactivity","date":"2018-03-11T07:49:38.759Z","type":"quit"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2018-03-11T07:58:02.497Z","type":"quit"}
{"nick":"gskachkov_","date":"2018-03-11T08:15:44.805Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2018-03-11T09:29:19.338Z","type":"quit"}
{"nick":"spion","reason":"Ping timeout: 248 seconds","date":"2018-03-11T09:36:01.427Z","type":"quit"}
{"nick":"gskachkov_","date":"2018-03-11T09:37:24.769Z","type":"join"}
{"nick":"spion","date":"2018-03-11T09:38:45.116Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2018-03-11T09:39:28.030Z","type":"quit"}
{"nick":"gskachkov_","date":"2018-03-11T09:56:52.539Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-11T10:13:35.118Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-11T10:25:11.813Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-11T10:25:42.332Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2018-03-11T10:45:25.005Z","type":"quit"}
{"nick":"rwaldron","date":"2018-03-11T11:24:45.057Z","type":"join"}
{"nick":"AtumT","date":"2018-03-11T12:06:33.364Z","type":"join"}
{"nick":"rwaldron","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-11T12:21:27.755Z","type":"quit"}
{"nick":"jmdyck","date":"2018-03-11T12:59:37.556Z","type":"join"}
{"nick":"gskachkov_","date":"2018-03-11T14:51:18.935Z","type":"join"}
{"nick":"rwaldron","date":"2018-03-11T14:54:40.443Z","type":"join"}
{"nick":"rwaldron","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-11T15:08:12.837Z","type":"quit"}
{"nick":"jmdyck","reason":"Ping timeout: 248 seconds","date":"2018-03-11T16:12:17.447Z","type":"quit"}
{"nick":"jmdyck","date":"2018-03-11T16:13:01.490Z","type":"join"}
{"nick":"jschoi","date":"2018-03-11T16:30:42.251Z","type":"join"}
{"nick":"howdoi","date":"2018-03-11T16:47:37.121Z","type":"join"}
{"nick":"rwaldron","date":"2018-03-11T16:50:38.069Z","type":"join"}
{"nick":"rwaldron","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-11T16:57:48.901Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-03-11T18:34:11.137Z","type":"join"}
{"nick":"AtumT_","date":"2018-03-11T19:48:02.131Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 260 seconds","date":"2018-03-11T19:51:29.358Z","type":"quit"}
{"nick":"AtumT","date":"2018-03-11T20:01:41.505Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 264 seconds","date":"2018-03-11T20:02:46.153Z","type":"quit"}
{"nick":"isHavvy","reason":"Ping timeout: 256 seconds","date":"2018-03-11T20:43:42.547Z","type":"quit"}
{"nick":"Havvy","date":"2018-03-11T20:44:27.518Z","type":"join"}
{"nick":"jschoi","message":"TabAtkins: Following up regarding your question, from last Wednesday, about arrow functions in the smart-pipeline proposal: Arrow functions actually don’t need to be parenthesized, as per the existing grammar in https://jschoi.org/18/es-smart-pipelines/spec#sec-assignment-operators. In other words, `value |> f |> x => # + x` was valid after all and it groups as would be expected.","date":"2018-03-11T21:28:11.369Z","type":"message"}
{"nick":"jschoi","message":"Its result is a unary arrow function closing over the result of `f(value)`.","date":"2018-03-11T21:28:53.148Z","type":"message"}
{"nick":"jschoi","message":"I’m fixing the readme right now.","date":"2018-03-11T21:29:15.277Z","type":"message"}
{"nick":"jschoi","message":"…Hm. But how does `value |> f |> x => # + x |> g` group?… `value = x => y = z` parses as `value = (x => (y = z))`, not `value = (x => y) = z`…","date":"2018-03-11T21:32:21.480Z","type":"message"}
{"nick":"jschoi","message":"…Never mind. It *is* a syntax error without parentheses. I might need to change the spec. Sorry for the disturbance.","date":"2018-03-11T21:32:43.827Z","type":"message"}
{"nick":"jschoi","message":"...Nah, I don’t need to change the spec. Because it already uses ConditionalExpression on the RHS of PipelineExpression in PipelineTopicExpression, and ConditionalExpression requires parentheses around arrow functions. Right...","date":"2018-03-11T21:45:53.480Z","type":"message"}
{"nick":"jschoi","message":"Heh. Sorry again, everyone, for the crazy rambling.","date":"2018-03-11T21:46:28.340Z","type":"message"}
