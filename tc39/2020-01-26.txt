{"nick":"isHavvy","date":"2020-01-26T00:00:45.323Z","type":"join"}
{"nick":"Havvy","reason":"Ping timeout: 260 seconds","date":"2020-01-26T00:04:37.232Z","type":"quit"}
{"nick":"mgol","date":"2020-01-26T00:14:52.581Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2020-01-26T00:36:15.301Z","type":"quit"}
{"nick":"keith_miller","reason":"Ping timeout: 265 seconds","date":"2020-01-26T00:50:46.170Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-26T01:26:50.816Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2020-01-26T01:48:42.549Z","type":"quit"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2020-01-26T01:49:42.364Z","type":"quit"}
{"nick":"drousso","date":"2020-01-26T01:51:06.776Z","type":"join"}
{"nick":"drousso","reason":"Ping timeout: 248 seconds","date":"2020-01-26T01:55:48.744Z","type":"quit"}
{"nick":"drousso","date":"2020-01-26T02:04:46.274Z","type":"join"}
{"nick":"drousso","reason":"Client Quit","date":"2020-01-26T02:07:18.474Z","type":"quit"}
{"nick":"drousso","date":"2020-01-26T02:13:11.046Z","type":"join"}
{"nick":"drousso","reason":"Client Quit","date":"2020-01-26T02:13:55.975Z","type":"quit"}
{"nick":"drousso","date":"2020-01-26T02:17:32.279Z","type":"join"}
{"nick":"drousso","reason":"Client Quit","date":"2020-01-26T02:18:28.230Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-26T03:55:34.907Z","type":"join"}
{"nick":"jackworks","message":"ðŸ¤” does there any proposal like `import.self` to resolve this problem (`process.mainModule === module` esm equivalent)? https://github.com/nodejs/node/issues/15760","date":"2020-01-26T04:05:11.069Z","type":"message"}
{"nick":"ljharb","message":"jackworks: the recommendation for node is to use a separate file for \"main\" and \"bin\"; it's considered an antipattern to conflate them","date":"2020-01-26T04:07:00.201Z","type":"message"}
{"nick":"ljharb","message":"jackworks: node could handle it without any proposal by adding `import.meta.something`, but the modules group decided not to support the antipattern.","date":"2020-01-26T04:07:26.952Z","type":"message"}
{"nick":"jackworks","message":"ok... so maybe there is no more use case need to reference the module itself I guess","date":"2020-01-26T04:08:22.926Z","type":"message"}
{"nick":"ljharb","message":"jackworks: i mean, you can self-reference the package in node 13.7+ by using the package name","date":"2020-01-26T04:10:25.612Z","type":"message"}
{"nick":"ljharb","message":"jackworks: and theoretically you should be able to `import * as self from '.'` (altho i don't think that works right now)","date":"2020-01-26T04:10:46.464Z","type":"message"}
{"nick":"jackworks","message":"won't `import * as self from '.'` cause side effect?","date":"2020-01-26T04:11:32.745Z","type":"message"}
{"nick":"ljharb","message":"how?","date":"2020-01-26T04:12:18.695Z","type":"message"}
{"nick":"ljharb","message":"it's a circular dep, but it wouldn't repeat any side effects","date":"2020-01-26T04:12:25.412Z","type":"message"}
{"nick":"jackworks","message":"you're right","date":"2020-01-26T04:14:15.367Z","type":"message"}
{"nick":"Guest84932694632","date":"2020-01-26T04:15:27.664Z","type":"join"}
{"nick":"Guest84932694632","reason":"Remote host closed the connection","date":"2020-01-26T04:16:04.493Z","type":"quit"}
{"nick":"bathos","message":"self-import (including namespace) appears to work in node (13.7.0)","date":"2020-01-26T04:46:42.093Z","type":"message"}
{"nick":"bathos","message":"(though maybe you mean import relying on package.json for resolution, Iâ€™ve only tried with './specific-module-name.mjs')","date":"2020-01-26T04:47:46.247Z","type":"message"}
{"nick":"bathos","message":"if you do need to test if the current module is the entrypoint, process.argv might give you the means, though Iâ€™d be nervous about relying on it","date":"2020-01-26T04:49:27.010Z","type":"message"}
{"nick":"ljharb","message":"bathos: self package import does. Self module import does too, youâ€™re saying? (without repeating the file name)","date":"2020-01-26T04:58:09.018Z","type":"message"}
{"nick":"bathos","message":"Iâ€™d tested foo.mjs importing foo.mjs. I didnâ€™t test foo.mjs importing a package with \"main\": \"foo.mjs\". Iâ€™ll check it out now tho","date":"2020-01-26T05:10:21.681Z","type":"message"}
{"nick":"bathos","message":"I get a \"Cannot find module\" error when I try \".\", yeah.","date":"2020-01-26T05:12:28.775Z","type":"message"}
{"nick":"ljharb","message":"thatâ€™s what i think node needs to add support for. It works in browsers i think","date":"2020-01-26T05:14:04.752Z","type":"message"}
{"nick":"bathos","message":"browsers with import maps you mean?","date":"2020-01-26T05:18:06.457Z","type":"message"}
{"nick":"bathos","message":"(I havenâ€™t tried import maps yet, but afaik thatâ€™s the closest analog, since otherwise itâ€™s just URLs-that-cannot-be-pathname-relative-unless-they-start-with-dot-slash-or-dot-dot-slash-or-slash.)","date":"2020-01-26T05:19:23.035Z","type":"message"}
{"nick":"bathos","message":"(i.e. in a browser self-import works fine, but \".\" alone would be rejected at step 2 here html.spec.whatwg.org/multipage/webappapis.html#resolve-a-module-specifier)","date":"2020-01-26T05:22:58.626Z","type":"message"}
{"nick":"ljharb","message":"no, i mean no import maps","date":"2020-01-26T05:24:21.771Z","type":"message"}
{"nick":"ljharb","message":"but fair, that seems like a gap in browser esm too","date":"2020-01-26T05:24:43.987Z","type":"message"}
{"nick":"ljharb","message":"`.` is the current URL in every other browser relative url context","date":"2020-01-26T05:24:56.063Z","type":"message"}
{"nick":"jmdyck","reason":"Ping timeout: 272 seconds","date":"2020-01-26T05:25:23.275Z","type":"quit"}
{"nick":"bathos","message":"Yeah, Iâ€™m not sure what the point of eliminating \".\" there is (perhaps it was an oversight). It doesnâ€™t seem necessary for the purpose of reserving \"bare names\".","date":"2020-01-26T05:28:27.321Z","type":"message"}
{"nick":"ljharb","message":"right","date":"2020-01-26T05:34:15.907Z","type":"message"}
