{"nick":"SferaDev","reason":"Ping timeout: 272 seconds","date":"2019-08-23T00:05:04.590Z","type":"quit"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-23T00:11:09.558Z","type":"quit"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-23T00:14:15.790Z","type":"quit"}
{"nick":"drousso","date":"2019-08-23T00:22:38.693Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-08-23T00:47:55.960Z","type":"quit"}
{"nick":"underikar","reason":"Quit: Connection closed for inactivity","date":"2019-08-23T01:16:51.465Z","type":"quit"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-23T01:25:17.588Z","type":"quit"}
{"nick":"cybai","date":"2019-08-23T01:30:03.551Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-23T02:13:51.185Z","type":"quit"}
{"nick":"haxjs","date":"2019-08-23T02:36:32.329Z","type":"join"}
{"nick":"devsnek","message":"is it valid to have a production like `MultiLineComment HoistableDeclaration`","date":"2019-08-23T02:54:15.916Z","type":"message"}
{"nick":"devsnek","message":"will this magically take the needed precedence https://gc.gy/34235651.png","date":"2019-08-23T03:24:17.510Z","type":"message"}
{"nick":"SferaDev","date":"2019-08-23T04:01:50.834Z","type":"join"}
{"nick":"hellauer","reason":"Ping timeout: 250 seconds","date":"2019-08-23T04:29:01.700Z","type":"quit"}
{"nick":"drousso","date":"2019-08-23T04:57:20.563Z","type":"join"}
{"nick":"jmdyck","message":"devsnek: does any production have DocumentedClass on the rhs?","date":"2019-08-23T05:09:35.339Z","type":"message"}
{"nick":"devsnek","message":"jmdyck: no","date":"2019-08-23T05:09:44.622Z","type":"message"}
{"nick":"devsnek","message":"my goal here is just to introduce new runtime semantics for `MultiLineComment ClassDeclaration`","date":"2019-08-23T05:10:01.763Z","type":"message"}
{"nick":"devsnek","message":"if such a production ever occurs","date":"2019-08-23T05:10:09.440Z","type":"message"}
{"nick":"devsnek","message":"the only reason i created \"DocumentedClass\" was because just having `MultiLineComment ClassDeclaration` was rendered with a `:` in the middle","date":"2019-08-23T05:10:42.545Z","type":"message"}
{"nick":"jmdyck","message":"hm","date":"2019-08-23T05:11:27.967Z","type":"message"}
{"nick":"haxjs","reason":"Ping timeout: 246 seconds","date":"2019-08-23T05:12:04.260Z","type":"quit"}
{"nick":"jmdyck","message":"Comments don't survive to the syntactic level","date":"2019-08-23T05:12:33.604Z","type":"message"}
{"nick":"devsnek","message":"that's what i was worried about","date":"2019-08-23T05:12:42.680Z","type":"message"}
{"nick":"haxjs","date":"2019-08-23T05:12:57.245Z","type":"join"}
{"nick":"devsnek","message":"i mean a human reading this would know what's supposed to happen... but it would be good for it to conform to all our grammar invariants and whatnot","date":"2019-08-23T05:13:51.478Z","type":"message"}
{"nick":"jmdyck","message":"I don't think the spec has any way to bring those two things together.","date":"2019-08-23T05:15:33.877Z","type":"message"}
{"nick":"devsnek","message":"one could promote multilinecomment from scanning to parsing","date":"2019-08-23T05:16:56.400Z","type":"message"}
{"nick":"devsnek","message":"which is what babel does","date":"2019-08-23T05:16:59.653Z","type":"message"}
{"nick":"devsnek","message":"but would that break all the productions","date":"2019-08-23T05:17:04.832Z","type":"message"}
{"nick":"jmdyck","message":"yup","date":"2019-08-23T05:17:16.175Z","type":"message"}
{"nick":"devsnek","message":"this is still our own magical language to describe syntax right?","date":"2019-08-23T05:17:41.518Z","type":"message"}
{"nick":"jmdyck","message":"?","date":"2019-08-23T05:18:33.206Z","type":"message"}
{"nick":"devsnek","message":"like we can just specify new ways that productions match source text","date":"2019-08-23T05:18:50.914Z","type":"message"}
{"nick":"ljharb","message":"what's the goal?","date":"2019-08-23T05:19:30.174Z","type":"message"}
{"nick":"jmdyck","message":"we can add productions, but we don't have new ways that they can match source text","date":"2019-08-23T05:19:49.008Z","type":"message"}
{"nick":"devsnek","message":"ljharb: docstrings","date":"2019-08-23T05:19:59.009Z","type":"message"}
{"nick":"ljharb","message":"why would they need to be parsed as anything but a comment","date":"2019-08-23T05:20:16.631Z","type":"message"}
{"nick":"devsnek","message":"jmdyck: i mean why can't we just say \"productions can match nodes removed in scanning\"","date":"2019-08-23T05:20:40.715Z","type":"message"}
{"nick":"haxjs","reason":"Quit: This computer has gone to sleep","date":"2019-08-23T05:20:42.653Z","type":"quit"}
{"nick":"devsnek","message":"ljharb: comments are removed before we build the syntax","date":"2019-08-23T05:21:06.701Z","type":"message"}
{"nick":"devsnek","message":"they're just whitespace","date":"2019-08-23T05:21:11.600Z","type":"message"}
{"nick":"devsnek","message":"so atm they can't be used in syntactic productions","date":"2019-08-23T05:21:34.202Z","type":"message"}
{"nick":"ljharb","message":"why would we want them to tho","date":"2019-08-23T05:21:48.664Z","type":"message"}
{"nick":"jmdyck","message":"devsnek: we could maybe say that, but we'd have to be way more precise about what it means.","date":"2019-08-23T05:22:18.750Z","type":"message"}
{"nick":"devsnek","message":"jmdyck: i mean we would definitely want to use more formal language","date":"2019-08-23T05:22:47.119Z","type":"message"}
{"nick":"jmdyck","message":"(there is some vagueness at the syntactic/lexical boundary, but not in a way that would help this effort, I don't think)","date":"2019-08-23T05:23:48.030Z","type":"message"}
{"nick":"devsnek","message":"jmdyck: do you think i'm going about this the wrong way","date":"2019-08-23T05:24:27.101Z","type":"message"}
{"nick":"ljharb","message":"lol i'm still missing why you're going about this","date":"2019-08-23T05:24:49.176Z","type":"message"}
{"nick":"devsnek","message":"ljharb: cuz i want docstrings","date":"2019-08-23T05:25:03.832Z","type":"message"}
{"nick":"ljharb","message":"you already have them","date":"2019-08-23T05:25:15.588Z","type":"message"}
{"nick":"ljharb","message":"why does the language spec need to know about them","date":"2019-08-23T05:25:25.021Z","type":"message"}
{"nick":"devsnek","message":"for runtime shenanigans","date":"2019-08-23T05:25:39.470Z","type":"message"}
{"nick":"ljharb","message":"such as?","date":"2019-08-23T05:25:45.081Z","type":"message"}
{"nick":"devsnek","message":"have you seen python's help function","date":"2019-08-23T05:25:50.007Z","type":"message"}
{"nick":"ljharb","message":"i have not","date":"2019-08-23T05:26:06.404Z","type":"message"}
{"nick":"ljharb","message":"but why would \"not the engine\" need access to source text level stuff?","date":"2019-08-23T05:26:25.758Z","type":"message"}
{"nick":"devsnek","message":"python has a meta __doc__ string made from comments on functions","date":"2019-08-23T05:26:44.462Z","type":"message"}
{"nick":"devsnek","message":"which is used in repls and stuff to provide better completions and whatnot","date":"2019-08-23T05:27:00.261Z","type":"message"}
{"nick":"ljharb","message":"a repl is the engine tho, that has superpowers, no?","date":"2019-08-23T05:27:27.237Z","type":"message"}
{"nick":"devsnek","message":"i mean not just the built-in repl","date":"2019-08-23T05:28:00.461Z","type":"message"}
{"nick":"devsnek","message":"but doing it at the spec level also means all the various tooling will bother to understand it","date":"2019-08-23T05:28:42.381Z","type":"message"}
{"nick":"devsnek","message":"better docs in browser consoles, maybe in error output, etc","date":"2019-08-23T05:28:56.599Z","type":"message"}
{"nick":"jmdyck","message":"devnek: Not sure re \"going about this the wrong way\". Tough to see any way to fit it into the current spec 'architecture'.","date":"2019-08-23T05:28:59.685Z","type":"message"}
{"nick":"ljharb","message":"that kind of presumes docstrings are a good thing tho, when they don't enforce anything","date":"2019-08-23T05:29:03.639Z","type":"message"}
{"nick":"jmdyck","message":"afk","date":"2019-08-23T05:29:20.082Z","type":"message"}
{"nick":"devsnek","message":"ljharb: they're generally prose","date":"2019-08-23T05:29:27.671Z","type":"message"}
{"nick":"devsnek","message":"i'm not talking about jsdoc","date":"2019-08-23T05:29:32.497Z","type":"message"}
{"nick":"ljharb","message":"prose isn't parseable","date":"2019-08-23T05:29:36.122Z","type":"message"}
{"nick":"devsnek","message":"its just a string","date":"2019-08-23T05:29:42.573Z","type":"message"}
{"nick":"devsnek","message":"the source of a multiline comment","date":"2019-08-23T05:29:47.862Z","type":"message"}
{"nick":"ljharb","message":"ok, so like `value[Symbol.details] = 'some string'`?","date":"2019-08-23T05:29:55.474Z","type":"message"}
{"nick":"ljharb","message":"like if we want something at runtime, let's make it a runtime value","date":"2019-08-23T05:30:03.324Z","type":"message"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-08-23T05:30:51.396Z","type":"quit"}
{"nick":"devsnek","message":"ljharb: it's a runtime value","date":"2019-08-23T05:31:01.618Z","type":"message"}
{"nick":"ljharb","message":"that's what you're suggesting comments be made into","date":"2019-08-23T05:31:11.934Z","type":"message"}
{"nick":"devsnek","message":"so far i just define Symbol.documentation","date":"2019-08-23T05:31:16.900Z","type":"message"}
{"nick":"ljharb","message":"if the runtime can read them, they're a runtime value","date":"2019-08-23T05:31:20.037Z","type":"message"}
{"nick":"devsnek","message":"yes","date":"2019-08-23T05:31:24.441Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/34235651.png","date":"2019-08-23T05:31:26.553Z","type":"message"}
{"nick":"devsnek","message":"you can do whatever you want with that, override it","date":"2019-08-23T05:31:47.971Z","type":"message"}
{"nick":"devsnek","message":"delete it","date":"2019-08-23T05:31:51.420Z","type":"message"}
{"nick":"ljharb","message":"well sure but why turn comments into that","date":"2019-08-23T05:32:23.926Z","type":"message"}
{"nick":"ljharb","message":"that would also break like, every minifier","date":"2019-08-23T05:32:32.922Z","type":"message"}
{"nick":"ljharb","message":"if someone wants it runtime-available they'd write it as a string directly","date":"2019-08-23T05:32:38.367Z","type":"message"}
{"nick":"rkirsling","message":"and in Python it _is_ a String, no?","date":"2019-08-23T05:33:04.038Z","type":"message"}
{"nick":"devsnek","message":"ya","date":"2019-08-23T05:33:16.964Z","type":"message"}
{"nick":"devsnek","message":"just `fn.__doc__`","date":"2019-08-23T05:33:23.762Z","type":"message"}
{"nick":"devsnek","message":"a normal string","date":"2019-08-23T05:33:25.956Z","type":"message"}
{"nick":"rkirsling","message":"er yeah accessible as such, but I mean also directly written as such","date":"2019-08-23T05:33:58.195Z","type":"message"}
{"nick":"devsnek","message":"oh yeah","date":"2019-08-23T05:34:29.139Z","type":"message"}
{"nick":"devsnek","message":"it's a multiline string","date":"2019-08-23T05:34:32.914Z","type":"message"}
{"nick":"devsnek","message":"but they don't have multiline comments in python","date":"2019-08-23T05:34:48.905Z","type":"message"}
{"nick":"devsnek","message":"so multiline strings are double-duty","date":"2019-08-23T05:34:54.971Z","type":"message"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2019-08-23T05:55:11.243Z","type":"quit"}
{"nick":"gibson042","reason":"Ping timeout: 276 seconds","date":"2019-08-23T06:34:37.620Z","type":"quit"}
{"nick":"haxjs","date":"2019-08-23T07:05:17.927Z","type":"join"}
{"nick":"haxjs","reason":"Ping timeout: 258 seconds","date":"2019-08-23T07:14:46.775Z","type":"quit"}
{"nick":"haxjs","date":"2019-08-23T07:16:07.599Z","type":"join"}
{"nick":"cybai_","date":"2019-08-23T07:28:48.647Z","type":"join"}
{"nick":"cybai_","reason":"Remote host closed the connection","date":"2019-08-23T07:31:18.380Z","type":"quit"}
{"nick":"cybai","reason":"Ping timeout: 276 seconds","date":"2019-08-23T07:31:49.722Z","type":"quit"}
{"nick":"cybai","date":"2019-08-23T07:32:00.005Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-08-23T07:32:06.083Z","type":"quit"}
{"nick":"cybai","date":"2019-08-23T07:32:36.655Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-08-23T07:33:09.859Z","type":"quit"}
{"nick":"Jessidhia","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-23T07:40:07.937Z","type":"quit"}
{"nick":"hellauer","date":"2019-08-23T07:42:46.365Z","type":"join"}
{"nick":"hellauer","reason":"Client Quit","date":"2019-08-23T07:43:00.925Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-08-23T07:43:14.783Z","type":"join"}
{"nick":"cybai","date":"2019-08-23T07:44:16.978Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-08-23T07:44:23.062Z","type":"quit"}
{"nick":"cybai","date":"2019-08-23T07:45:26.712Z","type":"join"}
{"nick":"cybai_","date":"2019-08-23T07:53:08.568Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 276 seconds","date":"2019-08-23T07:56:31.603Z","type":"quit"}
