{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T00:28:09.960Z","type":"quit"}
{"nick":"bpayton","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T00:37:11.084Z","type":"quit"}
{"nick":"akirose","date":"2018-06-28T00:49:00.445Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 265 seconds","date":"2018-06-28T00:50:16.363Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-06-28T01:08:35.030Z","type":"join"}
{"nick":"keith_mi_","reason":"Client Quit","date":"2018-06-28T01:12:40.695Z","type":"quit"}
{"nick":"keith_m__","date":"2018-06-28T01:16:11.495Z","type":"join"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-06-28T01:41:43.709Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-06-28T02:06:59.367Z","type":"join"}
{"nick":"keith_m__","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T02:47:51.881Z","type":"quit"}
{"nick":"aki_","date":"2018-06-28T02:54:42.088Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 256 seconds","date":"2018-06-28T02:55:39.378Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-06-28T04:01:43.099Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-06-28T04:16:45.353Z","type":"quit"}
{"nick":"bpayton","date":"2018-06-28T04:49:17.077Z","type":"join"}
{"nick":"akirose","date":"2018-06-28T05:01:27.497Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 264 seconds","date":"2018-06-28T05:02:46.120Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-06-28T05:05:21.524Z","type":"quit"}
{"nick":"gibson042","reason":"Ping timeout: 260 seconds","date":"2018-06-28T05:24:54.071Z","type":"quit"}
{"nick":"bpayton","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T05:58:14.443Z","type":"quit"}
{"nick":"bpayton","date":"2018-06-28T06:03:51.843Z","type":"join"}
{"nick":"keith_mi_","date":"2018-06-28T06:04:23.883Z","type":"join"}
{"nick":"bpayton","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T06:09:22.585Z","type":"quit"}
{"nick":"bpayton","date":"2018-06-28T06:13:23.689Z","type":"join"}
{"nick":"M-IvanSanchez","reason":"Ping timeout: 260 seconds","date":"2018-06-28T06:39:34.900Z","type":"quit"}
{"nick":"M-IvanSanchez","date":"2018-06-28T06:41:43.638Z","type":"join"}
{"nick":"bpayton","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-06-28T07:06:42.026Z","type":"quit"}
{"nick":"aki_","date":"2018-06-28T07:07:20.115Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 248 seconds","date":"2018-06-28T07:08:17.451Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T07:41:44.364Z","type":"quit"}
{"nick":"pandem","reason":"Ping timeout: 260 seconds","date":"2018-06-28T08:46:20.697Z","type":"quit"}
{"nick":"pandem","date":"2018-06-28T08:53:39.327Z","type":"join"}
{"nick":"akirose","date":"2018-06-28T09:12:49.070Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 264 seconds","date":"2018-06-28T09:14:09.933Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-06-28T10:25:10.274Z","type":"quit"}
{"nick":"mylesborins","date":"2018-06-28T10:25:19.104Z","type":"join"}
{"nick":"AtumT","date":"2018-06-28T10:54:31.298Z","type":"join"}
{"nick":"PlasmaStar","reason":"Read error: Connection reset by peer","date":"2018-06-28T11:00:56.849Z","type":"quit"}
{"nick":"PlasmaStar","date":"2018-06-28T11:01:21.605Z","type":"join"}
{"nick":"aki_","date":"2018-06-28T11:18:32.667Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 260 seconds","date":"2018-06-28T11:19:34.067Z","type":"quit"}
{"nick":"jmdyck","date":"2018-06-28T12:30:03.156Z","type":"join"}
{"nick":"akirose","date":"2018-06-28T13:24:39.144Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 260 seconds","date":"2018-06-28T13:25:45.657Z","type":"quit"}
{"nick":"stpeter","date":"2018-06-28T13:45:35.734Z","type":"join"}
{"nick":"aki_","date":"2018-06-28T15:31:25.148Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 260 seconds","date":"2018-06-28T15:32:30.112Z","type":"quit"}
{"nick":"stpeter","reason":"Quit: stpeter","date":"2018-06-28T16:21:55.672Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-06-28T17:24:23.800Z","type":"join"}
{"nick":"akirose","date":"2018-06-28T17:37:35.204Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 260 seconds","date":"2018-06-28T17:38:58.189Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T17:40:16.255Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-06-28T17:41:15.488Z","type":"join"}
{"nick":"AtumT_","date":"2018-06-28T18:24:12.098Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 260 seconds","date":"2018-06-28T18:27:12.228Z","type":"quit"}
{"nick":"bpayton","date":"2018-06-28T18:28:39.141Z","type":"join"}
{"nick":"jwalden","date":"2018-06-28T18:33:48.177Z","type":"join"}
{"nick":"AtumT","date":"2018-06-28T18:36:49.284Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 260 seconds","date":"2018-06-28T18:38:14.123Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T18:39:16.843Z","type":"quit"}
{"nick":"coolreader18","date":"2018-06-28T18:58:43.879Z","type":"join"}
{"nick":"coolreader18","message":"What would anybody think about a dynamic class expression name syntax?","date":"2018-06-28T18:59:15.886Z","type":"message"}
{"nick":"coolreader18","message":"Something like class ['hey'] {}","date":"2018-06-28T18:59:29.926Z","type":"message"}
{"nick":"coolreader18","message":"Only for expressions","date":"2018-06-28T18:59:36.419Z","type":"message"}
{"nick":"coolreader18","message":"It's not like it would introduce anything new, necessarily","date":"2018-06-28T19:00:04.889Z","type":"message"}
{"nick":"coolreader18","message":"Cause you can already set anonymous class names","date":"2018-06-28T19:00:28.230Z","type":"message"}
{"nick":"keith_mi_","date":"2018-06-28T19:00:36.161Z","type":"join"}
{"nick":"coolreader18","message":"Object.defineProperty(class {}, 'name","date":"2018-06-28T19:00:39.236Z","type":"message"}
{"nick":"coolreader18","message":"woops, Object.defineProperty(class {}, 'name', { value: 'x' })","date":"2018-06-28T19:01:00.170Z","type":"message"}
{"nick":"coolreader18","message":"This would basically be syntactic sugar","date":"2018-06-28T19:01:30.485Z","type":"message"}
{"nick":"coolreader18","message":"class [name] { a() { return 'hey'; } } -> Object.defineProperty(class { a() { return 'hey'; } }, 'name', { value: name })","date":"2018-06-28T19:02:33.041Z","type":"message"}
{"nick":"PlasmaStar","reason":"Ping timeout: 248 seconds","date":"2018-06-28T19:14:41.408Z","type":"quit"}
{"nick":"aki_","date":"2018-06-28T19:43:21.845Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 260 seconds","date":"2018-06-28T19:44:30.069Z","type":"quit"}
{"nick":"ljharb","message":"coolreader18: would that create a binding, like class declarations do? or would it only work in expression position","date":"2018-06-28T20:07:59.830Z","type":"message"}
{"nick":"coolreader18","message":"Only work as an expression, yeah","date":"2018-06-28T20:09:04.753Z","type":"message"}
{"nick":"coolreader18","message":"cause you can't do `let [a]`","date":"2018-06-28T20:09:20.486Z","type":"message"}
{"nick":"coolreader18","message":"oh wait that's iterable destructuring","date":"2018-06-28T20:09:32.963Z","type":"message"}
{"nick":"coolreader18","message":"I don't know if it would throw a a syntax error in a statement position, like `function(){}` does, but probably, to avoid confusion","date":"2018-06-28T20:10:19.370Z","type":"message"}
{"nick":"coolreader18","message":"actually this could also apply to a standard function expression as well, even though no one uses them","date":"2018-06-28T20:11:19.113Z","type":"message"}
{"nick":"ljharb","message":"it seems subpar to have expressions have an ability declarations lack","date":"2018-06-28T20:18:00.164Z","type":"message"}
{"nick":"bpayton","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T20:35:49.127Z","type":"quit"}
{"nick":"coolreader18","message":"(function() {}) /* okay */; function() {} /* SyntaxError */;","date":"2018-06-28T20:48:39.667Z","type":"message"}
{"nick":"coolreader18","message":"I don't know if anonymous functions/classes/whatever is an ability, but expressions do have it","date":"2018-06-28T20:49:24.988Z","type":"message"}
{"nick":"coolreader18","message":"Also, expressions and declarations have different use cases, kinda","date":"2018-06-28T20:54:16.336Z","type":"message"}
{"nick":"coolreader18","message":"You could think of an object as a kind of scope","date":"2018-06-28T20:54:28.967Z","type":"message"}
{"nick":"coolreader18","message":"but because it's an expression, it can have stuff like { [key]: val }","date":"2018-06-28T20:54:59.376Z","type":"message"}
{"nick":"coolreader18","message":"expressions are more dynamic then declarations/statements, kind of inherently","date":"2018-06-28T20:55:36.323Z","type":"message"}
{"nick":"coolreader18","message":"so I think it's fine that expressions would have a feature like that that declarations lack","date":"2018-06-28T20:56:03.447Z","type":"message"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T21:07:03.987Z","type":"quit"}
{"nick":"devsnek","message":"you can name it by setting it as a property","date":"2018-06-28T21:07:15.400Z","type":"message"}
{"nick":"devsnek","message":"`{ 'some weird name': class {} }`","date":"2018-06-28T21:07:27.164Z","type":"message"}
{"nick":"keith_mi_","date":"2018-06-28T21:11:50.406Z","type":"join"}
{"nick":"ljharb","message":"coolreader18: right but in that case, the name is required in declaration form","date":"2018-06-28T21:12:38.569Z","type":"message"}
{"nick":"ljharb","message":"coolreader18: given that when class fields hits stage 4, you can do `class { static name = 'whatever'; }` i'm not sure it warrants extra syntax","date":"2018-06-28T21:13:20.506Z","type":"message"}
{"nick":"keith_mi_","reason":"Client Quit","date":"2018-06-28T21:15:36.705Z","type":"quit"}
{"nick":"IgnoredAmbience","message":"That won't bind it in the scope as well though, will it?","date":"2018-06-28T21:27:45.535Z","type":"message"}
{"nick":"coolreader18","message":"ljharb: huh, I didn't know that that works, that's pretty cool","date":"2018-06-28T21:31:29.006Z","type":"message"}
{"nick":"coolreader18","message":"However, it still would feel more intuitive to do class [''] {}","date":"2018-06-28T21:32:23.397Z","type":"message"}
{"nick":"coolreader18","message":"and if you wanted to do it with a function() {} expression, you'd still have to set it manually","date":"2018-06-28T21:32:49.288Z","type":"message"}
{"nick":"coolreader18","message":"IgnoredAmbience: it's not really the point to bind it in the scope, just to give it name dynamically rather than an anonymous (class {})","date":"2018-06-28T21:33:51.234Z","type":"message"}
{"nick":"ljharb","message":"IgnoredAmbience: it wouldn't be able to bind it in the scope regardless, since it's not a statically guaranteed identifiername","date":"2018-06-28T21:38:34.897Z","type":"message"}
{"nick":"coolreader18","message":"Oh I thought you were replying to devsnek originally","date":"2018-06-28T21:39:16.367Z","type":"message"}
{"nick":"coolreader18","message":"yeah, of course","date":"2018-06-28T21:39:20.283Z","type":"message"}
{"nick":"coolreader18","message":"I'm just going to say my use case for this: I have a utility function in my react app that turns a functional component into a PureComponent","date":"2018-06-28T21:41:14.854Z","type":"message"}
{"nick":"devsnek","message":"static name feels pretty natural to me","date":"2018-06-28T21:42:10.021Z","type":"message"}
{"nick":"devsnek","message":"i'm surprised that works though","date":"2018-06-28T21:42:14.366Z","type":"message"}
{"nick":"coolreader18","message":"and it'd be more idiomatic I feel to do something like (name, funcComponent) => class [name] extends React.PureComponent {render() {return funcComponent(this.props}}","date":"2018-06-28T21:43:02.550Z","type":"message"}
{"nick":"coolreader18","message":"rather than doing defineProperty and stuff","date":"2018-06-28T21:43:32.555Z","type":"message"}
{"nick":"devsnek","message":"`const factory = (name) => (class { static name = name })`","date":"2018-06-28T21:44:11.081Z","type":"message"}
{"nick":"stpeter","date":"2018-06-28T21:44:11.369Z","type":"join"}
{"nick":"coolreader18","message":"but I feel it's still relevant beyond my specific use case because in ES classes are values, not compile-time concepts like Java or C# or whatever","date":"2018-06-28T21:44:14.526Z","type":"message"}
{"nick":"coolreader18","message":"And some libraries, like React and I'm sure many others use classes as opposed to other forms of Components/whatever","date":"2018-06-28T21:44:52.381Z","type":"message"}
{"nick":"coolreader18","message":"So I think it's because ES is so dynamic with classes and functions that this proposal is justified","date":"2018-06-28T21:46:13.307Z","type":"message"}
{"nick":"coolreader18","message":"Sorry I was just typing","date":"2018-06-28T21:46:37.142Z","type":"message"}
{"nick":"ljharb","message":"coolreader18: that's not necessarily a good idea, btw","date":"2018-06-28T21:47:58.964Z","type":"message"}
{"nick":"ljharb","message":"coolreader18: overly making things PureComponents can make rendering much slower","date":"2018-06-28T21:48:09.556Z","type":"message"}
{"nick":"coolreader18","message":"devsnek: that doesn't feel very idiomatic, it depends on you knowing properties of the function prototype and their functions [heh]","date":"2018-06-28T21:48:31.270Z","type":"message"}
{"nick":"devsnek","message":"agree to disagree :P","date":"2018-06-28T21:48:50.531Z","type":"message"}
{"nick":"coolreader18","message":"ljharb: well I'm not passing very many props to it, so PureComponent's shouldComponentUpdate works well enough for me","date":"2018-06-28T21:49:38.861Z","type":"message"}
{"nick":"akirose","date":"2018-06-28T21:49:55.409Z","type":"join"}
{"nick":"devsnek","message":"now a truly useful thing would be a way to access the function you're currently in","date":"2018-06-28T21:50:08.231Z","type":"message"}
{"nick":"devsnek","message":"so you don't have to save a function to a variable to unregister it from an event target","date":"2018-06-28T21:50:21.733Z","type":"message"}
{"nick":"coolreader18","message":"ljharb: and componentizing that away from its parent's render function really did speed up performance","date":"2018-06-28T21:50:28.520Z","type":"message"}
{"nick":"ljharb","message":"coolreader18: right but if you're not passing many props to it, rerendering the SFC is often faster than the comparison","date":"2018-06-28T21:50:54.508Z","type":"message"}
{"nick":"aki_","reason":"Ping timeout: 255 seconds","date":"2018-06-28T21:50:59.850Z","type":"quit"}
{"nick":"ljharb","message":"devsnek: that already exists; just give it a lexical name","date":"2018-06-28T21:51:08.372Z","type":"message"}
{"nick":"devsnek","message":"muh arrow functions","date":"2018-06-28T21:51:20.816Z","type":"message"}
{"nick":"coolreader18","message":"devsnek: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode#Making_eval_and_arguments_simpler","date":"2018-06-28T21:51:24.956Z","type":"message"}
{"nick":"coolreader18","message":"devsnek: that was arguments.callee, but it was removed in strict mode to make the arguments object less \"magical\"","date":"2018-06-28T21:51:55.050Z","type":"message"}
{"nick":"devsnek","message":"bring back arguments.callee in arrow functions","date":"2018-06-28T21:52:16.799Z","type":"message"}
{"nick":"bpayton","date":"2018-06-28T21:52:54.710Z","type":"join"}
{"nick":"bradleymeck","message":"no","date":"2018-06-28T21:52:55.364Z","type":"message"}
{"nick":"ljharb","message":"devsnek: also no","date":"2018-06-28T21:53:00.226Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2018-06-28T21:53:07.688Z","type":"message"}
{"nick":"coolreader18","message":"ljharb: But it's rendering a lot of stuff, something like 100-200 children, so it's a lot faster","date":"2018-06-28T21:53:11.500Z","type":"message"}
{"nick":"bradleymeck","message":"function.callee *maybe*?","date":"2018-06-28T21:53:20.577Z","type":"message"}
{"nick":"coolreader18","message":"ljharb: I basically needed the shouldComponentUpdate lifecycle method","date":"2018-06-28T21:53:28.781Z","type":"message"}
{"nick":"bradleymeck","message":"but meh, just assign to some variable","date":"2018-06-28T21:53:32.129Z","type":"message"}
{"nick":"ljharb","message":"coolreader18: lol that's a pretty large SFC. any reason it's not an actual PureComponent in the code?","date":"2018-06-28T21:53:33.401Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: if it makes you feel better, i was joking about arguments.callee","date":"2018-06-28T21:53:35.806Z","type":"message"}
{"nick":"bradleymeck","message":"i would kind of like function.callee for recursion on rare occasions where I don't want to make variables.","date":"2018-06-28T21:54:06.313Z","type":"message"}
{"nick":"coolreader18","message":"ljharb: it only needs just the render function, it controls a modal in the parent component, so the logic for that is all there","date":"2018-06-28T21:54:35.840Z","type":"message"}
{"nick":"coolreader18","message":"ljharb: in the parent component","date":"2018-06-28T21:54:52.553Z","type":"message"}
{"nick":"coolreader18","message":"ljharb: the code is here https://github.com/coolreader18/homebrew-desktop/blob/master/src/renderer/Apps/Apps.tsx#L43 and here https://github.com/coolreader18/homebrew-desktop/blob/master/src/renderer/Apps/AppsGrid.tsx#L29 if you want to see it","date":"2018-06-28T21:56:51.579Z","type":"message"}
{"nick":"devsnek","message":"what is `<>` short for","date":"2018-06-28T21:57:29.366Z","type":"message"}
{"nick":"coolreader18","message":"React.Fragment","date":"2018-06-28T21:57:35.184Z","type":"message"}
{"nick":"devsnek","message":"what is React.Fragment short for","date":"2018-06-28T21:57:41.747Z","type":"message"}
{"nick":"ljharb","message":"devsnek: it lets you group elements without forcing you to add a div","date":"2018-06-28T21:58:01.553Z","type":"message"}
{"nick":"bradleymeck","message":"~ document.createDocumentFragment","date":"2018-06-28T21:58:01.738Z","type":"message"}
{"nick":"devsnek","message":"ic","date":"2018-06-28T21:58:08.021Z","type":"message"}
{"nick":"devsnek","message":"didn't people used to do parenthesis for that","date":"2018-06-28T21:58:35.036Z","type":"message"}
{"nick":"coolreader18","message":"not really, it kinda turns <div> <a/> <React.Fragment> <b/> <c/> </React.Fragment> <d/> </div> to <div> <a/> <b/> <c/> <d/> </div>","date":"2018-06-28T21:58:54.226Z","type":"message"}
{"nick":"coolreader18","message":"even if the React.Fragment is from a different component","date":"2018-06-28T21:59:24.038Z","type":"message"}
{"nick":"coolreader18","message":"like with const FragDemo = () => <> <a/> <b/> </>; <div> <FragDemo /> </div> is like <div> <a/> <b/> </div>","date":"2018-06-28T22:00:29.104Z","type":"message"}
{"nick":"coolreader18","message":"it's pretty powerful imo","date":"2018-06-28T22:00:43.903Z","type":"message"}
{"nick":"coolreader18","message":"you don't need wrapper divs for too much if you use them instead","date":"2018-06-28T22:00:59.463Z","type":"message"}
{"nick":"keith_mi_","date":"2018-06-28T22:04:05.781Z","type":"join"}
{"nick":"ljharb","message":"devsnek: no, parens in jsx don't do anything","date":"2018-06-28T22:05:15.831Z","type":"message"}
{"nick":"bpayton","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T22:06:13.319Z","type":"quit"}
{"nick":"bpayton","date":"2018-06-28T22:06:52.506Z","type":"join"}
{"nick":"ljharb","message":"mathiasbynens: any chance you have some character expertise for https://github.com/eslint/eslint/issues/10535#issuecomment-401177560 ? (i know it's about safari and not v8 but you still seem like the right person to ask)","date":"2018-06-28T22:18:34.860Z","type":"message"}
{"nick":"IgnoredAmbience","message":"(why am I reading this channel after 5 pints in the pub, but deary no, not callee)!!)","date":"2018-06-28T22:22:09.480Z","type":"message"}
{"nick":"IgnoredAmbience","message":"(i also just went to re-read the current class name binding spec to remind myself how it works before/after the class fields proposal)","date":"2018-06-28T22:23:33.247Z","type":"message"}
{"nick":"bpayton","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T22:26:39.784Z","type":"quit"}
{"nick":"bpayton","date":"2018-06-28T22:32:46.069Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T22:42:01.470Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-06-28T22:42:34.154Z","type":"join"}
{"nick":"keith_mi_","reason":"Client Quit","date":"2018-06-28T22:42:46.655Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-06-28T22:48:49.186Z","type":"join"}
{"nick":"keith_m__","date":"2018-06-28T22:49:51.538Z","type":"join"}
{"nick":"keith_mi_","reason":"Ping timeout: 260 seconds","date":"2018-06-28T22:53:30.107Z","type":"quit"}
{"nick":"bpayton","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-06-28T23:33:42.296Z","type":"quit"}
{"nick":"stpeter","reason":"Quit: stpeter","date":"2018-06-28T23:44:33.888Z","type":"quit"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-06-28T23:49:53.189Z","type":"quit"}
{"nick":"aki_","date":"2018-06-28T23:56:44.167Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 256 seconds","date":"2018-06-28T23:58:11.429Z","type":"quit"}
{"nick":"bpayton","date":"2018-06-28T23:59:14.177Z","type":"join"}
