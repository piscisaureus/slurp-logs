{"nick":"mattijs","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T00:08:05.841Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-03-07T00:09:26.710Z","type":"join"}
{"nick":"mattijs","date":"2018-03-07T00:09:31.732Z","type":"join"}
{"nick":"Bakkot","message":"mootools defines `Array.prototype.flatten` in a way incompatible with the proposal","date":"2018-03-07T01:04:06.355Z","type":"message"}
{"nick":"Bakkot","message":"so I guess that's dead","date":"2018-03-07T01:04:09.851Z","type":"message"}
{"nick":"Bakkot","message":"everything is terrible","date":"2018-03-07T01:04:12.892Z","type":"message"}
{"nick":"Domenic","message":"Bakkot: does it do if(!Array.prototype.flatten) or does it just override?","date":"2018-03-07T01:06:55.996Z","type":"message"}
{"nick":"Bakkot","message":"As of 8 years ago it just clobbers, but prior to that it was conditional, so it breaks.","date":"2018-03-07T01:07:12.988Z","type":"message"}
{"nick":"Bakkot","message":"Firefox ran into this in the wild: https://bugzilla.mozilla.org/show_bug.cgi?id=1443630","date":"2018-03-07T01:07:31.546Z","type":"message"}
{"nick":"cloudshu","message":"bootools","date":"2018-03-07T01:11:30.678Z","type":"message"}
{"nick":"ljharb","message":"wattt","date":"2018-03-07T01:18:13.037Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: what's the way that it defined it that's incompatible?","date":"2018-03-07T01:18:45.630Z","type":"message"}
{"nick":"Bakkot","message":"infinite depth by default, probably","date":"2018-03-07T01:19:01.890Z","type":"message"}
{"nick":"ljharb","message":"we could still do flatMap with a depth argument and `x => x` as the mapper, i guess :-(","date":"2018-03-07T01:19:02.074Z","type":"message"}
{"nick":"Bakkot","message":"at least, I know it has that incompatibility, and suspect that is the breaking one","date":"2018-03-07T01:19:09.626Z","type":"message"}
{"nick":"ljharb","message":"ah - we could make that change tho","date":"2018-03-07T01:19:11.048Z","type":"message"}
{"nick":"Bakkot","message":"mficarra will die before letting that change go in","date":"2018-03-07T01:19:28.658Z","type":"message"}
{"nick":"Bakkot","message":"See alternative solution https://github.com/tc39/proposal-flatMap/pull/56","date":"2018-03-07T01:19:46.751Z","type":"message"}
{"nick":"ljharb","message":"perhaps he'll re-evaluate if the alternative is killing flatten tho","date":"2018-03-07T01:19:48.695Z","type":"message"}
{"nick":"ljharb","message":"rofl","date":"2018-03-07T01:20:00.341Z","type":"message"}
{"nick":"Bakkot","message":"he will not.","date":"2018-03-07T01:20:20.302Z","type":"message"}
{"nick":"Jayflux","reason":"Ping timeout: 248 seconds","date":"2018-03-07T01:20:33.573Z","type":"quit"}
{"nick":"ljharb","message":":-/","date":"2018-03-07T01:21:01.949Z","type":"message"}
{"nick":"ljharb","message":"i'm not sure why","date":"2018-03-07T01:21:03.964Z","type":"message"}
{"nick":"ljharb","message":"i prefer 1 by default too, but the method is important to have","date":"2018-03-07T01:21:14.549Z","type":"message"}
{"nick":"Bakkot","message":"I'd be fine with .smoosh instead!","date":"2018-03-07T01:21:43.608Z","type":"message"}
{"nick":"ljharb","message":"lol","date":"2018-03-07T01:21:48.000Z","type":"message"}
{"nick":"ljharb","message":"sMOOshTools","date":"2018-03-07T01:21:56.182Z","type":"message"}
{"nick":"domfarolino","message":"I noticed in #sec-object-type it says \"The properties accessible via get and set access includes both...\" own and inherited properties, but isn't it true that a setter cannot set inherited properties?","date":"2018-03-07T01:23:03.287Z","type":"message"}
{"nick":"cloudshu","message":"Bakkot: motion for all new methods on primordials to be onomatopoeia","date":"2018-03-07T01:23:44.548Z","type":"message"}
{"nick":"keith_miller","date":"2018-03-07T01:24:15.662Z","type":"join"}
{"nick":"Bakkot","message":"cloudshu: seconded, let's do it","date":"2018-03-07T01:24:35.887Z","type":"message"}
{"nick":"Domenic","message":"smooshMap?","date":"2018-03-07T01:24:40.776Z","type":"message"}
{"nick":"not-an-aardvark","message":"`Array.prototype.splatten` and `Array.prototype.splatMap`","date":"2018-03-07T01:25:41.477Z","type":"message"}
{"nick":"not-an-aardvark","message":"ah, the first one apparently has a different meaning than I intended","date":"2018-03-07T01:26:10.168Z","type":"message"}
{"nick":"mattijs","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T01:26:43.040Z","type":"quit"}
{"nick":"domfarolino","message":"Ah, so then it says inherited properties = own properties + inherited properties, which is interesting + recursive","date":"2018-03-07T01:28:15.621Z","type":"message"}
{"nick":"caridy_","reason":"Remote host closed the connection","date":"2018-03-07T01:29:28.205Z","type":"quit"}
{"nick":"Bakkot","message":"domfarolino: I would consider `a.b = c` to be \"set access\", and that can invoke an inherited setter, so that language seems right to me.","date":"2018-03-07T01:29:39.158Z","type":"message"}
{"nick":"caridy","date":"2018-03-07T01:30:01.374Z","type":"join"}
{"nick":"caridy_","date":"2018-03-07T01:31:17.382Z","type":"join"}
{"nick":"caridy","reason":"Read error: Connection reset by peer","date":"2018-03-07T01:31:17.622Z","type":"quit"}
{"nick":"gibson042","date":"2018-03-07T01:32:30.444Z","type":"join"}
{"nick":"jschoi","message":"Squash.","date":"2018-03-07T01:34:13.240Z","type":"message"}
{"nick":"jschoi","message":"…also might be an okay synonym.","date":"2018-03-07T01:34:56.378Z","type":"message"}
{"nick":"domfarolino","message":"Bakkot: Ok yeah, that makes sense whoops","date":"2018-03-07T01:35:16.250Z","type":"message"}
{"nick":"bterlson","message":"radical idea: compat hacks?","date":"2018-03-07T01:35:51.276Z","type":"message"}
{"nick":"bterlson","message":"like, make the function falsy in scripts?","date":"2018-03-07T01:36:09.342Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: btw can we make sure not to merge that rename PR pre-meeting?","date":"2018-03-07T01:36:39.088Z","type":"message"}
{"nick":"bterlson","message":"also, +1 squash, -1 smoosh","date":"2018-03-07T01:36:58.484Z","type":"message"}
{"nick":"Bakkot","message":"no oh god please no compat hacks","date":"2018-03-07T01:38:03.346Z","type":"message"}
{"nick":"bterlson","message":"it gives us back the global namespace","date":"2018-03-07T01:38:25.052Z","type":"message"}
{"nick":"not-an-aardvark","message":"Could we make the default compatible with mootools (i.e. `depth = Infinity`)?","date":"2018-03-07T01:38:43.132Z","type":"message"}
{"nick":"Bakkot","message":"Only if people are using `if (!obj.prop)` instead of `if (!('prop' in obj))`","date":"2018-03-07T01:38:52.267Z","type":"message"}
{"nick":"Bakkot","message":"I do not want to have another ULEO","date":"2018-03-07T01:39:04.335Z","type":"message"}
{"nick":"cloudshu","message":"i forget what that stands for everytime","date":"2018-03-07T01:39:21.045Z","type":"message"}
{"nick":"bterlson","message":"undefined-like exotic object","date":"2018-03-07T01:39:29.093Z","type":"message"}
{"nick":"cloudshu","message":"undefined-like-??-object","date":"2018-03-07T01:39:29.744Z","type":"message"}
{"nick":"cloudshu","message":"ah ok","date":"2018-03-07T01:39:31.221Z","type":"message"}
{"nick":"bterlson","message":"I would be finie with depth = Infinity too if that's all it takes","date":"2018-03-07T01:40:06.397Z","type":"message"}
{"nick":"ljharb","message":"same","date":"2018-03-07T01:40:21.095Z","type":"message"}
{"nick":"bterlson","message":"*fine","date":"2018-03-07T01:41:30.462Z","type":"message"}
{"nick":"ljharb","message":"i also think the default for the depth arg is a weird hill for the proposal to die on.","date":"2018-03-07T01:41:58.452Z","type":"message"}
{"nick":"devsnek","message":"could just throw the feature as-is into all dev browser releases for a few years and the problem will fix itself :)","date":"2018-03-07T01:47:53.709Z","type":"message"}
{"nick":"bterlson","message":"devsnek: that's an interesting idea, I wonder how effective that is...","date":"2018-03-07T01:48:25.983Z","type":"message"}
{"nick":"bterlson","message":"though part of the problem is sites which have no developer","date":"2018-03-07T01:48:47.368Z","type":"message"}
{"nick":"devsnek","message":"i suggested that to ljharb when `global` got blocked by flickr mostly as a joke","date":"2018-03-07T01:48:49.548Z","type":"message"}
{"nick":"ljharb","message":"also the issue is that devs don't universally use dev builds.","date":"2018-03-07T01:49:10.056Z","type":"message"}
{"nick":"devsnek","message":"console warnings etc","date":"2018-03-07T01:49:37.717Z","type":"message"}
{"nick":"devsnek","message":"i dunno","date":"2018-03-07T01:49:42.354Z","type":"message"}
{"nick":"ljharb","message":"lol i've never even worked at a company where every web dev checks the console.","date":"2018-03-07T01:49:55.800Z","type":"message"}
{"nick":"devsnek","message":"hire skywriters","date":"2018-03-07T01:50:07.884Z","type":"message"}
{"nick":"not-an-aardvark","message":"there are a finite number of sites that would be broken by `Array.prototype.flatten`, and in principle they could all be fixed. But based on what happened with `Array.prototype.values`, people will probably still be using old sites even if they're not under active development.","date":"2018-03-07T01:50:43.821Z","type":"message"}
{"nick":"Bakkot","message":"Yeah, I'm pretty sure there is no path to getting the web to fix itself here.","date":"2018-03-07T01:51:01.523Z","type":"message"}
{"nick":"devsnek","message":"'use es2018' :^)","date":"2018-03-07T01:51:29.317Z","type":"message"}
{"nick":"bterlson","message":"skywriters could work, but the fuel costs would be a little steep","date":"2018-03-07T01:51:40.099Z","type":"message"}
{"nick":"Bakkot","message":"where by \"pretty sure\" I mean \"overwhelmingly confident\". we might get away with only breaking things which almost no one uses anymore, but that's still imo not acceptable.","date":"2018-03-07T01:51:48.658Z","type":"message"}
{"nick":"devsnek","message":"i wouldn't mind if my old websites were broken in the name of making js better","date":"2018-03-07T01:52:09.022Z","type":"message"}
{"nick":"not-an-aardvark","message":"Unfortunately not everyone cares about making js better, and many people care if their website breaks","date":"2018-03-07T01:52:38.729Z","type":"message"}
{"nick":"devsnek","message":"and if you care enough about your old websites that they don't break you should be able to keep them updated","date":"2018-03-07T01:52:39.060Z","type":"message"}
{"nick":"Bakkot","message":"Even if a webdev doesn't care, their users do.","date":"2018-03-07T01:53:14.401Z","type":"message"}
{"nick":"not-an-aardvark","message":"This is one step above a ULEO, I guess https://gist.github.com/not-an-aardvark/2f9b6d198de70892db02e171be6184c3","date":"2018-03-07T02:01:31.738Z","type":"message"}
{"nick":"devsnek","message":"that's pretty cool","date":"2018-03-07T02:14:08.130Z","type":"message"}
{"nick":"Domenic","message":"I think we should explore bterlson's skywriters option in more depth. After all, we have all these Ecma dues.","date":"2018-03-07T02:14:22.069Z","type":"message"}
{"nick":"not-an-aardvark","message":"Sorry, we can only explore it in 1 depth. If we wanted more depth we could just use the mootools version.","date":"2018-03-07T02:17:58.366Z","type":"message"}
{"nick":"devsnek","message":"🔥","date":"2018-03-07T02:18:44.208Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-07T02:22:57.033Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T02:53:51.683Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-03-07T02:57:54.538Z","type":"quit"}
{"nick":"caridy_","reason":"Remote host closed the connection","date":"2018-03-07T03:01:16.945Z","type":"quit"}
{"nick":"cloudshu","message":"Domenic: when google bought chelsea market did they buy the air rights","date":"2018-03-07T03:05:18.016Z","type":"message"}
{"nick":"cloudshu","message":"can google do skywriting on just that area","date":"2018-03-07T03:05:29.087Z","type":"message"}
{"nick":"devsnek","message":"kek","date":"2018-03-07T03:05:46.381Z","type":"message"}
{"nick":"bradleymeck","date":"2018-03-07T03:39:15.145Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-07T03:50:04.828Z","type":"quit"}
{"nick":"caridy","date":"2018-03-07T04:18:07.132Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2018-03-07T04:34:24.896Z","type":"quit"}
{"nick":"caridy","date":"2018-03-07T04:39:49.092Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2018-03-07T04:51:55.160Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-03-07T05:11:13.431Z","type":"quit"}
{"nick":"caridy","date":"2018-03-07T05:28:24.422Z","type":"join"}
{"nick":"caridy","reason":"Ping timeout: 248 seconds","date":"2018-03-07T05:32:49.449Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-07T07:34:02.809Z","type":"join"}
{"nick":"keith_miller","reason":"Remote host closed the connection","date":"2018-03-07T07:34:24.519Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-07T07:34:56.480Z","type":"join"}
{"nick":"Draggor","reason":"Ping timeout: 276 seconds","date":"2018-03-07T08:18:32.792Z","type":"quit"}
{"nick":"Draggor","date":"2018-03-07T08:23:17.740Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T08:32:47.078Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-07T09:32:29.403Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-07T11:25:10.686Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-07T11:25:41.260Z","type":"join"}
{"nick":"jmdyck","date":"2018-03-07T11:41:00.750Z","type":"join"}
{"nick":"Jayflux","date":"2018-03-07T11:41:47.031Z","type":"join"}
{"nick":"Jayflux","reason":"Changing host","date":"2018-03-07T11:41:47.031Z","type":"quit"}
{"nick":"Jayflux","date":"2018-03-07T11:41:47.031Z","type":"join"}
{"nick":"keith_miller","date":"2018-03-07T11:48:24.202Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T11:54:01.562Z","type":"quit"}
{"nick":"Jayflux","reason":"Remote host closed the connection","date":"2018-03-07T12:01:31.225Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-07T12:45:42.521Z","type":"join"}
{"nick":"AtumT","date":"2018-03-07T12:49:37.197Z","type":"join"}
{"nick":"bradleymeck","date":"2018-03-07T13:02:55.917Z","type":"join"}
{"nick":"evilpie","message":"ugh people behave terribly on github","date":"2018-03-07T13:21:37.276Z","type":"message"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-03-07T13:21:47.037Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-07T13:53:35.557Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-03-07T14:33:05.817Z","type":"join"}
{"nick":"Jayflux","date":"2018-03-07T14:50:02.871Z","type":"join"}
{"nick":"Jayflux","reason":"Remote host closed the connection","date":"2018-03-07T15:01:02.384Z","type":"quit"}
{"nick":"littledan","message":"evilpie: That discussion at https://github.com/tc39/proposal-flatMap/pull/56 is really surprising to me; I thought developers would want us to not break their pages. I guess it's fine if it's \"some else's\" page.","date":"2018-03-07T15:01:41.233Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T15:01:55.299Z","type":"quit"}
{"nick":"evilpie","message":"github is not representative for stuff like this","date":"2018-03-07T15:02:33.681Z","type":"message"}
{"nick":"caridy","date":"2018-03-07T15:53:00.765Z","type":"join"}
{"nick":"Jayflux","date":"2018-03-07T16:05:05.620Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-07T16:14:00.800Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-07T16:34:46.494Z","type":"join"}
{"nick":"bradleymeck","date":"2018-03-07T16:46:25.474Z","type":"join"}
{"nick":"keith_miller","date":"2018-03-07T16:52:57.218Z","type":"join"}
{"nick":"Jayflux","reason":"Remote host closed the connection","date":"2018-03-07T17:01:44.569Z","type":"quit"}
{"nick":"rwaldron","date":"2018-03-07T17:11:34.365Z","type":"join"}
{"nick":"rwaldron","reason":"Client Quit","date":"2018-03-07T17:12:17.500Z","type":"quit"}
{"nick":"rwaldron","date":"2018-03-07T17:16:07.848Z","type":"join"}
{"nick":"devsnek","message":"i think a lot of people don't care if their old websites get broken in the progression of js and they don't realise that other people don't feel the same way","date":"2018-03-07T17:22:40.737Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T17:26:05.416Z","type":"quit"}
{"nick":"TabAtkins","message":"FWIW, I agree with Domenic that the flatten/flatMap naming connection is nice, and if we do rename flatten, we should rename flatMap. I disagree that we should exactly follow the naming, tho - no need for smooshMap - instead, we should skip over to the other naming pattern and call it .chain().","date":"2018-03-07T17:31:33.408Z","type":"message"}
{"nick":"TabAtkins","message":"(I can't comment on the issue as I'm not a collab.)","date":"2018-03-07T17:31:44.343Z","type":"message"}
{"nick":"TabAtkins","message":"littledan: As a general rule, you will *always* find devs that have *very strong* bad opinions about the browser compat.  The same type of people will, of course, be the first to yell about their sites breaking when we *do* make a compat-breaking change.  It's not about having a consistent view of compat, it's about having the committee do what's personally best for them, without taking the larger view of the health of","date":"2018-03-07T17:33:37.231Z","type":"message"}
{"nick":"TabAtkins","message":"the web.","date":"2018-03-07T17:33:37.467Z","type":"message"}
{"nick":"bterlson","message":"TabAtkins: #smooshMap","date":"2018-03-07T17:33:44.152Z","type":"message"}
{"nick":"TabAtkins","message":"nO","date":"2018-03-07T17:33:48.483Z","type":"message"}
{"nick":"TabAtkins","message":"Bad bterlson!","date":"2018-03-07T17:33:54.473Z","type":"message"}
{"nick":"littledan","message":"TabAtkins: Weird. How do you make the committee open to feedback while having this sort of culture?","date":"2018-03-07T17:34:22.156Z","type":"message"}
{"nick":"TabAtkins","message":"That gif makes me extremely happy tho.","date":"2018-03-07T17:34:23.014Z","type":"message"}
{"nick":"bterlson","message":"littledan: you just have to take the feedback in the proper context","date":"2018-03-07T17:34:43.998Z","type":"message"}
{"nick":"TabAtkins","message":"littledan: You carefully cut off threads that get bad attention. It's pretty random what things will draw the lightning.","date":"2018-03-07T17:34:47.135Z","type":"message"}
{"nick":"littledan","message":"OK, this is frozen now; should we have done that several hours ago?","date":"2018-03-07T17:35:11.847Z","type":"message"}
{"nick":"TabAtkins","message":"Like all communities, there will *always* be a small minority of loud jerks that you have to handle.","date":"2018-03-07T17:35:14.356Z","type":"message"}
{"nick":"TabAtkins","message":"Yeah, I would have. ^_^","date":"2018-03-07T17:35:21.126Z","type":"message"}
{"nick":"littledan","message":"OK, it's my first time freezing a thread so I was timid!","date":"2018-03-07T17:35:31.385Z","type":"message"}
{"nick":"TabAtkins","message":"(I did see that it was frozen, you did good.)","date":"2018-03-07T17:35:37.212Z","type":"message"}
{"nick":"mattijs","reason":"Ping timeout: 276 seconds","date":"2018-03-07T17:35:41.108Z","type":"quit"}
{"nick":"TabAtkins","message":"Freezing is something to do with care! Too free with it, and people feel shut out.  But you quickly learn what sorts of discussions are productive and which are just rehashes of the same no-content discussions.","date":"2018-03-07T17:36:17.904Z","type":"message"}
{"nick":"bterlson","message":"tabatkins I can make you a collab on that repo if you like?","date":"2018-03-07T17:36:21.595Z","type":"message"}
{"nick":"TabAtkins","message":"If you want?","date":"2018-03-07T17:36:28.778Z","type":"message"}
{"nick":"bterlson","message":"k","date":"2018-03-07T17:36:32.974Z","type":"message"}
{"nick":"littledan","message":"offtopic: I need to avoid adding extra microtask queue delays, so I'm using a callback style instead of Promises... internally in a spec","date":"2018-03-07T17:36:36.104Z","type":"message"}
{"nick":"littledan","message":"TabAtkins: You can join the TC39 delegates group if you want, as a Googler","date":"2018-03-07T17:36:44.381Z","type":"message"}
{"nick":"TabAtkins","message":"Oh!","date":"2018-03-07T17:36:52.315Z","type":"message"}
{"nick":"TabAtkins","message":"how do","date":"2018-03-07T17:36:54.681Z","type":"message"}
{"nick":"bterlson","message":"littledan: oh duh","date":"2018-03-07T17:37:00.041Z","type":"message"}
{"nick":"bterlson","message":"I'll just add him to Delegates","date":"2018-03-07T17:37:05.790Z","type":"message"}
{"nick":"littledan","message":"invited","date":"2018-03-07T17:37:38.123Z","type":"message"}
{"nick":"bterlson","message":"oh thanks","date":"2018-03-07T17:37:53.870Z","type":"message"}
{"nick":"TabAtkins","message":"danke","date":"2018-03-07T17:38:20.521Z","type":"message"}
{"nick":"littledan","message":"anyway how strongly do people feel about the way that you can observe how many microtask delays each thing has? It seems kind of random due to internal spec mechanics how many turns things work out to today, but then it's observable and you can't take shortcuts (or longcuts) in an implementation or spec","date":"2018-03-07T17:38:46.573Z","type":"message"}
{"nick":"littledan","message":"everything would be great if we just... made the microtask queue have undefined ordering","date":"2018-03-07T17:39:19.208Z","type":"message"}
{"nick":"devsnek","message":"there were some okay ideas in that github issue even if overall it was too heated","date":"2018-03-07T17:40:01.608Z","type":"message"}
{"nick":"bterlson","message":"I dunno how much moderation work littledan had to do but there was a lot of swearing last night before I went to bed","date":"2018-03-07T17:40:23.595Z","type":"message"}
{"nick":"devsnek","message":"yea definitely","date":"2018-03-07T17:40:29.611Z","type":"message"}
{"nick":"littledan","message":"I only deleted one thing; I didn't see a lot of swearing","date":"2018-03-07T17:40:38.196Z","type":"message"}
{"nick":"littledan","message":"maybe someone else did","date":"2018-03-07T17:40:41.762Z","type":"message"}
{"nick":"devsnek","message":"i've been mostly thinking about in the future ways to get around this general issue","date":"2018-03-07T17:40:50.878Z","type":"message"}
{"nick":"devsnek","message":"people will always add weird things to primordial prototypes","date":"2018-03-07T17:41:14.283Z","type":"message"}
{"nick":"bterlson","message":"the era of emoji intrinsics are coming folks","date":"2018-03-07T17:41:48.243Z","type":"message"}
{"nick":"bterlson","message":"win + . + wink <enter> = 😉","date":"2018-03-07T17:42:20.746Z","type":"message"}
{"nick":"devsnek","message":"have you guys discussed this as a more general problem at meetings before","date":"2018-03-07T17:44:16.017Z","type":"message"}
{"nick":"bterlson","message":"devsnek: yeah a number of times","date":"2018-03-07T17:44:29.105Z","type":"message"}
{"nick":"bterlson","message":"devsnek: e.g. built-in modules were motivated by this problem in part","date":"2018-03-07T17:44:39.714Z","type":"message"}
{"nick":"devsnek","message":"import smoosh from Array (no quotes)","date":"2018-03-07T17:44:57.059Z","type":"message"}
{"nick":"TabAtkins","message":"(This is why I'm very glad I stuck to my guns with \"CSS custom properties need a distinguishable prefix\" policy.)","date":"2018-03-07T17:45:12.472Z","type":"message"}
{"nick":"devsnek","message":"i forgot some brackets tho","date":"2018-03-07T17:45:14.740Z","type":"message"}
{"nick":"bterlson","message":"devsnek: I had a similar idea! Naked identifiers in module specifier position = built-ins","date":"2018-03-07T17:45:32.889Z","type":"message"}
{"nick":"devsnek","message":"yea","date":"2018-03-07T17:45:41.839Z","type":"message"}
{"nick":"bterlson","message":"there were some issues with it that I will try to find","date":"2018-03-07T17:45:45.628Z","type":"message"}
{"nick":"TabAtkins","message":"(And \"no, we'll never add pluggable error-recovery\".)","date":"2018-03-07T17:45:51.828Z","type":"message"}
{"nick":"devsnek","message":"the thing that sticks out to me is that its a change in module parse with no clear transition path","date":"2018-03-07T17:46:17.632Z","type":"message"}
{"nick":"devsnek","message":"no way to detect etc","date":"2018-03-07T17:46:25.109Z","type":"message"}
{"nick":"devsnek","message":"need a new parse goal \"modules_v2\"","date":"2018-03-07T17:47:01.457Z","type":"message"}
{"nick":"littledan","message":"oh my god pluggable error recovery","date":"2018-03-07T17:48:41.790Z","type":"message"}
{"nick":"TabAtkins","message":"Hmmmmm. Stick with me here. 1. Add new things into the built-in modules, yes. 2. Allow *-importing of stuff in that module *by date*. 3. Make future dates some hard error so you can't cheat.","date":"2018-03-07T17:48:42.784Z","type":"message"}
{"nick":"littledan","message":"it's already the worst feature in CSS","date":"2018-03-07T17:48:47.157Z","type":"message"}
{"nick":"TabAtkins","message":"CSS's error recovery is its *best* feature, shut your mouth. ^_^ But I mean having a callback for \"uh, this property doesn't parse, you figure it out for me\".","date":"2018-03-07T17:49:26.139Z","type":"message"}
{"nick":"littledan","message":"TabAtkins: So what do you think when you hear about how everyone hates # ?","date":"2018-03-07T17:49:28.255Z","type":"message"}
{"nick":"TabAtkins","message":"The # glyph in JS?","date":"2018-03-07T17:49:46.243Z","type":"message"}
{"nick":"littledan","message":"yeah","date":"2018-03-07T17:49:49.010Z","type":"message"}
{"nick":"TabAtkins","message":"What's the context here, this feels like a complete topic switch.","date":"2018-03-07T17:49:59.702Z","type":"message"}
{"nick":"littledan","message":"oh, you were talking about distinguishable prefixes for CSS custom properties","date":"2018-03-07T17:50:12.532Z","type":"message"}
{"nick":"littledan","message":"and we've had a similar debate in TC39","date":"2018-03-07T17:50:18.824Z","type":"message"}
{"nick":"littledan","message":"where many people in the community don't like the committee's idea to make private field names start with #","date":"2018-03-07T17:50:33.034Z","type":"message"}
{"nick":"littledan","message":"but, we have technical reasons for why it has to be syntactically distinguished somehow or other, and this is the best we got","date":"2018-03-07T17:50:48.424Z","type":"message"}
{"nick":"devsnek","message":"its only because it makes it easy to distinguish as a sentinel right?","date":"2018-03-07T17:50:57.813Z","type":"message"}
{"nick":"littledan","message":"anyway sorry about error recovery, I get how it helps evolution sometimes, that comment of mine was not right","date":"2018-03-07T17:51:33.646Z","type":"message"}
{"nick":"TabAtkins","message":"Oh, ok. Yeah, I just had to be like \"too bad, this is important\" and ignored the feedback to the contrary.  I did still *listen* - that motivated the switch to using -- as the prefix, which I think was a good move.","date":"2018-03-07T17:51:36.879Z","type":"message"}
{"nick":"devsnek","message":"and i guess stops access from outside","date":"2018-03-07T17:51:45.838Z","type":"message"}
{"nick":"littledan","message":"what was the previous prefix?","date":"2018-03-07T17:51:53.077Z","type":"message"}
{"nick":"devsnek","message":"which helps with perf","date":"2018-03-07T17:51:54.686Z","type":"message"}
{"nick":"TabAtkins","message":"First was \"var-\", then \"_\".","date":"2018-03-07T17:52:02.851Z","type":"message"}
{"nick":"littledan","message":"heh, in this case, lots of people wish it were _, but it can't be","date":"2018-03-07T17:52:22.040Z","type":"message"}
{"nick":"littledan","message":"or the other candidate is @, but that has problems too","date":"2018-03-07T17:52:29.059Z","type":"message"}
{"nick":"TabAtkins","message":"Clearly the answer is dunder.","date":"2018-03-07T17:52:35.342Z","type":"message"}
{"nick":"TabAtkins","message":"And if not that, TRUNDER","date":"2018-03-07T17:52:39.326Z","type":"message"}
{"nick":"TabAtkins","message":"Q U U N D E R","date":"2018-03-07T17:52:48.647Z","type":"message"}
{"nick":"littledan","message":"I'm not sure, we may need a lot of unders","date":"2018-03-07T17:52:55.644Z","type":"message"}
{"nick":"TabAtkins","message":"(quunder works for four *or* five, it's a parsimonious word.)","date":"2018-03-07T17:53:12.003Z","type":"message"}
{"nick":"devsnek","message":"if it was just a normal variable name like `private xyz` it could still be compiled into a private symbol","date":"2018-03-07T17:53:20.434Z","type":"message"}
{"nick":"devsnek","message":"is the issue with external property access","date":"2018-03-07T17:53:26.194Z","type":"message"}
{"nick":"devsnek","message":"or injecting prototype methods?","date":"2018-03-07T17:53:33.184Z","type":"message"}
{"nick":"devsnek","message":"or smth","date":"2018-03-07T17:53:39.860Z","type":"message"}
{"nick":"Bakkot","message":"devsnek: https://github.com/tc39/proposal-class-fields/blob/master/PRIVATE_SYNTAX_FAQ.md","date":"2018-03-07T17:54:50.258Z","type":"message"}
{"nick":"littledan","message":"Me: this breaks my site. My site: class C { renderSite() { for (let i = 0; i++; i < 100000000000) { try { eval(\"_\".repeat(i)); assert(false); } catch (e) { assert(e instanceof ReferenceError) } }; document.write(\"my site\"); } } new C().renderSite();","date":"2018-03-07T17:56:07.372Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2018-03-07T17:56:30.626Z","type":"message"}
{"nick":"littledan","message":"(I wanted to use BigInt but that'd throw a TypeError early on for its use in repeat)","date":"2018-03-07T17:57:53.038Z","type":"message"}
{"nick":"devsnek","message":"hmm that actually reminds me","date":"2018-03-07T17:58:30.493Z","type":"message"}
{"nick":"devsnek","message":"methods in js stdlib that take numbers","date":"2018-03-07T17:58:38.508Z","type":"message"}
{"nick":"devsnek","message":"like String.prototype.repeat","date":"2018-03-07T17:58:44.483Z","type":"message"}
{"nick":"devsnek","message":"would those ever be able to also take BigInt","date":"2018-03-07T17:58:52.854Z","type":"message"}
{"nick":"TabAtkins","message":"Should, I'd think.","date":"2018-03-07T17:59:30.180Z","type":"message"}
{"nick":"littledan","message":"devsnek: The current plan is, no. Things only take BigInt when they really need a big value. Otherwise, stick with Number","date":"2018-03-07T17:59:44.009Z","type":"message"}
{"nick":"devsnek","message":"i feel like thats a bit of an oversight","date":"2018-03-07T17:59:55.298Z","type":"message"}
{"nick":"littledan","message":"well, it's a deliberate design decision. Ultimately, we can't make BigInt and Number interact seamlessly","date":"2018-03-07T18:00:17.378Z","type":"message"}
{"nick":"devsnek","message":"i didn't mean you should","date":"2018-03-07T18:00:27.775Z","type":"message"}
{"nick":"devsnek","message":"since you can't work with bigint and numbers at the same time people will generally be using one or the other","date":"2018-03-07T18:00:33.741Z","type":"message"}
{"nick":"littledan","message":"right, that's my hope for how people will use them","date":"2018-03-07T18:00:49.441Z","type":"message"}
{"nick":"littledan","message":"that you'll be aware of what you're working with and stick with that","date":"2018-03-07T18:01:01.231Z","type":"message"}
{"nick":"devsnek","message":"so i don't want to do like Number.fromString(xyz.toString()) every time i want to use builtin methods","date":"2018-03-07T18:01:10.527Z","type":"message"}
{"nick":"devsnek","message":"assuming my bigint fits into a number","date":"2018-03-07T18:01:24.211Z","type":"message"}
{"nick":"littledan","message":"if you know your BigInt will fit into a Number, just use Numbers already","date":"2018-03-07T18:01:45.225Z","type":"message"}
{"nick":"devsnek","message":"what if i don't know","date":"2018-03-07T18:01:51.919Z","type":"message"}
{"nick":"littledan","message":"BigInt is designed to be deliberately unergonomic for things like what you described, since you'll get a wrong answer if it doesn't fit","date":"2018-03-07T18:02:10.283Z","type":"message"}
{"nick":"devsnek","message":"thats my point :/","date":"2018-03-07T18:02:22.820Z","type":"message"}
{"nick":"littledan","message":"I mean, it's case by case. For String.prototype.repeat, I think it just doesn't work semantically. You won't have enough memory to hold the result, unless it's the empty string","date":"2018-03-07T18:03:04.887Z","type":"message"}
{"nick":"devsnek","message":"well doesn't the spec limit the length of a string to Number.MAX_INTEGER","date":"2018-03-07T18:03:33.287Z","type":"message"}
{"nick":"devsnek","message":"or something like that","date":"2018-03-07T18:03:37.097Z","type":"message"}
{"nick":"devsnek","message":"2^53-1","date":"2018-03-07T18:03:58.503Z","type":"message"}
{"nick":"littledan","message":"JS programs are generally intended to run on computers, which are only so big","date":"2018-03-07T18:05:50.460Z","type":"message"}
{"nick":"devsnek","message":"fair point","date":"2018-03-07T18:06:08.779Z","type":"message"}
{"nick":"bterlson","message":"littledan: false, ES mandates infinite memory","date":"2018-03-07T18:06:23.901Z","type":"message"}
{"nick":"bterlson","message":":-P","date":"2018-03-07T18:06:36.882Z","type":"message"}
{"nick":"devsnek","message":"but i think it isn't unreasonable to expect that if i call Math.max with all bigint arguments it should \"just work\" instead of throwing an error about coercing to a number","date":"2018-03-07T18:06:47.219Z","type":"message"}
{"nick":"littledan","message":"well, we talked about specifically overloading Math.max","date":"2018-03-07T18:07:18.176Z","type":"message"}
{"nick":"littledan","message":"maybe we could still add that, I can't remember the reason for not supporting it","date":"2018-03-07T18:07:50.880Z","type":"message"}
{"nick":"littledan","message":"for Math.pow, we opted to keep it Number-only; you can use ** on BigInts","date":"2018-03-07T18:08:07.229Z","type":"message"}
{"nick":"littledan","message":"the others don't really make sense on BigInts IIRC","date":"2018-03-07T18:08:13.668Z","type":"message"}
{"nick":"littledan","message":"generally, the design is, you *dont* get free overloading everywhere--basically only for operators, where it's necessary, otherwise there's risk that people will try to cast to Number to use operators","date":"2018-03-07T18:08:58.010Z","type":"message"}
{"nick":"littledan","message":"and generally bad ergonomics","date":"2018-03-07T18:09:05.168Z","type":"message"}
{"nick":"devsnek","message":"it doesn't have to be overloading","date":"2018-03-07T18:09:09.965Z","type":"message"}
{"nick":"devsnek","message":"er","date":"2018-03-07T18:09:22.383Z","type":"message"}
{"nick":"devsnek","message":"i said that wrong","date":"2018-03-07T18:09:28.772Z","type":"message"}
{"nick":"keith_miller","date":"2018-03-07T18:12:56.022Z","type":"join"}
{"nick":"kaalchakka","date":"2018-03-07T18:14:25.043Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T18:36:07.680Z","type":"quit"}
{"nick":"kaalchakka","reason":"Quit: ZZZzzz…","date":"2018-03-07T18:42:18.962Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-07T18:46:57.738Z","type":"join"}
{"nick":"bret_","date":"2018-03-07T18:58:58.086Z","type":"join"}
{"nick":"kaalchakka","date":"2018-03-07T19:00:25.749Z","type":"join"}
{"nick":"kaalchakka","reason":"Client Quit","date":"2018-03-07T19:05:00.109Z","type":"quit"}
{"nick":"jmdyck1","date":"2018-03-07T19:07:16.210Z","type":"join"}
{"nick":"jmdyck","reason":"Ping timeout: 240 seconds","date":"2018-03-07T19:07:40.729Z","type":"quit"}
{"nick":"kaalchakka","date":"2018-03-07T19:12:58.420Z","type":"join"}
{"nick":"bret_","reason":"Ping timeout: 260 seconds","date":"2018-03-07T19:17:04.991Z","type":"quit"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2018-03-07T19:31:50.017Z","type":"quit"}
{"nick":"caridy","date":"2018-03-07T19:32:36.854Z","type":"join"}
{"nick":"kaalchakka","reason":"Quit: ZZZzzz…","date":"2018-03-07T19:49:29.467Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T19:50:25.542Z","type":"quit"}
{"nick":"AtumT_","date":"2018-03-07T19:52:01.512Z","type":"join"}
{"nick":"bradleymeck_","date":"2018-03-07T19:52:07.073Z","type":"join"}
{"nick":"bradleymeck","reason":"Write error: Connection reset by peer","date":"2018-03-07T19:52:32.815Z","type":"quit"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2018-03-07T19:52:33.053Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2018-03-07T19:52:33.053Z","type":"nick"}
{"nick":"kaalchakka","date":"2018-03-07T20:01:12.558Z","type":"join"}
{"nick":"mattijs","date":"2018-03-07T20:03:28.220Z","type":"join"}
{"nick":"mattijs_","date":"2018-03-07T20:06:49.207Z","type":"join"}
{"nick":"efaust","date":"2018-03-07T20:07:13.119Z","type":"join"}
{"nick":"mattijs","reason":"Ping timeout: 252 seconds","date":"2018-03-07T20:07:57.227Z","type":"quit"}
{"nick":"jorendorff","date":"2018-03-07T20:08:21.131Z","type":"join"}
{"nick":"jwalden","date":"2018-03-07T20:08:35.163Z","type":"join"}
{"nick":"kaalchakka","reason":"Quit: ZZZzzz…","date":"2018-03-07T20:30:30.656Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-07T20:33:08.244Z","type":"join"}
{"nick":"mattijs_","new_nick":"mattijs[away]","date":"2018-03-07T20:40:20.842Z","type":"nick"}
{"nick":"mattijs[away]","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T20:40:50.522Z","type":"quit"}
{"nick":"rwaldron","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T20:58:50.746Z","type":"quit"}
{"nick":"kaalchakka","date":"2018-03-07T21:11:39.635Z","type":"join"}
{"nick":"littledan","message":"devsnek: What do you think it should be?","date":"2018-03-07T21:15:32.119Z","type":"message"}
{"nick":"devsnek","message":"I dunno if you'd call it overloading, but like, people are used to type checks based on the input of functions","date":"2018-03-07T21:22:51.061Z","type":"message"}
{"nick":"devsnek","message":"I guess that is a form of overloading","date":"2018-03-07T21:23:00.765Z","type":"message"}
{"nick":"devsnek","message":"the idea is though, the function is not coercing anything","date":"2018-03-07T21:23:26.425Z","type":"message"}
{"nick":"bradleymeck","message":"dynamic dispatch?","date":"2018-03-07T21:36:11.271Z","type":"message"}
{"nick":"devsnek","message":"well I'm sure engines could do whatever optimization they wanted","date":"2018-03-07T21:42:40.170Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: context is builtins that take numbers also taking bigints","date":"2018-03-07T21:43:14.006Z","type":"message"}
{"nick":"kaalchakka","new_nick":"kaal_away","date":"2018-03-07T21:47:12.902Z","type":"nick"}
{"nick":"kaal_away","new_nick":"kaalchakka","date":"2018-03-07T21:47:21.646Z","type":"nick"}
{"nick":"kaalchakka","reason":"Ping timeout: 245 seconds","date":"2018-03-07T22:03:57.052Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-07T22:04:19.830Z","type":"join"}
{"nick":"mattijs","reason":"Client Quit","date":"2018-03-07T22:05:38.434Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-07T22:13:28.431Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-03-07T22:15:52.674Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T22:17:40.065Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-07T22:18:49.329Z","type":"join"}
{"nick":"atticoos","date":"2018-03-07T22:44:35.589Z","type":"join"}
{"nick":"atticoos","reason":"Client Quit","date":"2018-03-07T22:45:22.284Z","type":"quit"}
{"nick":"atticoos","date":"2018-03-07T22:46:45.449Z","type":"join"}
{"nick":"atticoos","reason":"Client Quit","date":"2018-03-07T22:47:18.846Z","type":"quit"}
{"nick":"atticoos","date":"2018-03-07T22:49:05.390Z","type":"join"}
{"nick":"mattijs","date":"2018-03-07T23:16:09.224Z","type":"join"}
{"nick":"mattijs","new_nick":"mattijs[away]","date":"2018-03-07T23:21:48.175Z","type":"nick"}
{"nick":"mattijs[away]","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T23:23:33.858Z","type":"quit"}
{"nick":"mattijs","date":"2018-03-07T23:38:16.135Z","type":"join"}
{"nick":"jschoi","message":"I’d like to ask for feedback/criticism on an explainer and specification at https://github.com/js-choi/proposal-smart-pipelines/ and https://jschoi.org/18/es-smart-pipelines/spec.","date":"2018-03-07T23:40:28.448Z","type":"message"}
{"nick":"jschoi","message":"In particular, I’d like to know whether their current organization is too confusing. There is a simple “actual” Core Proposal, plus several optional Additional Features that extend the Core Proposal and address several other use cases.","date":"2018-03-07T23:41:09.166Z","type":"message"}
{"nick":"jschoi","message":"But the Additional Features are optional and mutually independent. I’ve currently integrated the Additional Features in the same documents as the Core Proposal because the Additional Features demonstrate the conceptual generality of the Core Proposal.","date":"2018-03-07T23:41:15.689Z","type":"message"}
{"nick":"jschoi","message":"Thanks in advance to anyone. 👍🏻","date":"2018-03-07T23:42:17.036Z","type":"message"}
{"nick":"devsnek","message":"wow","date":"2018-03-07T23:43:17.533Z","type":"message"}
{"nick":"devsnek","message":"impressive document you put together here","date":"2018-03-07T23:43:27.427Z","type":"message"}
{"nick":"jschoi","message":"Thanks, gosh. If the layout of the explainer is difficult to navigate by scrolling, there is a TOC in a details widget at the beginning.","date":"2018-03-07T23:44:17.073Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-07T23:44:30.627Z","type":"quit"}
{"nick":"devsnek","message":"i like it","date":"2018-03-07T23:45:07.797Z","type":"message"}
{"nick":"devsnek","message":"there is some weirdness with github formatting though","date":"2018-03-07T23:45:17.067Z","type":"message"}
{"nick":"devsnek","message":"oh you know what it is, code blocks and odd cells have the same color","date":"2018-03-07T23:45:41.892Z","type":"message"}
{"nick":"jschoi","message":"Yeah, I really do wish that they were different colors.","date":"2018-03-07T23:45:57.699Z","type":"message"}
{"nick":"devsnek","message":"topic style without topic reference may be bug prone but i don't think its worth a syntax error","date":"2018-03-07T23:47:31.601Z","type":"message"}
{"nick":"devsnek","message":"some people like programming with side effects","date":"2018-03-07T23:47:54.189Z","type":"message"}
{"nick":"jschoi","message":"devsnek: I’m having trouble picturing an example of that being useful. For side effects in the middle of a pipeline, you would do `… |> do { sideEffect(); # } |> …`.","date":"2018-03-07T23:51:00.717Z","type":"message"}
{"nick":"devsnek","message":"no i meant like","date":"2018-03-07T23:51:10.337Z","type":"message"}
{"nick":"devsnek","message":"throwing away the topic binding","date":"2018-03-07T23:51:15.194Z","type":"message"}
{"nick":"devsnek","message":"for whatever reason","date":"2018-03-07T23:51:18.235Z","type":"message"}
{"nick":"keith_miller","date":"2018-03-07T23:51:32.091Z","type":"join"}
{"nick":"bterlson","message":"jschoi: this is amazing","date":"2018-03-07T23:51:56.231Z","type":"message"}
{"nick":"jschoi","message":"devsnek: Yes, when you would wish to not use the result of the previous step in a pipeline?","date":"2018-03-07T23:52:12.787Z","type":"message"}
{"nick":"bterlson","message":"readme.md is so good","date":"2018-03-07T23:52:17.005Z","type":"message"}
{"nick":"jschoi","message":"bterlson: Thanks, gosh.","date":"2018-03-07T23:52:19.375Z","type":"message"}
{"nick":"bterlson","message":"minus the table highlighting :-P","date":"2018-03-07T23:52:22.775Z","type":"message"}
{"nick":"bterlson","message":"which also confused me momentarily","date":"2018-03-07T23:52:39.137Z","type":"message"}
{"nick":"devsnek","message":"jschoi: i have no idea, i probably wouldn't ever do that","date":"2018-03-07T23:52:46.818Z","type":"message"}
{"nick":"devsnek","message":"but i also wouldn't ever use lodash and people seem to do that","date":"2018-03-07T23:52:53.552Z","type":"message"}
{"nick":"jschoi","message":"bterlson: Yeah. I should figure out where to complain to GitHub about that.","date":"2018-03-07T23:53:02.575Z","type":"message"}
{"nick":"devsnek","message":"twitter","date":"2018-03-07T23:53:08.636Z","type":"message"}
{"nick":"jschoi","message":"Heh.","date":"2018-03-07T23:53:15.588Z","type":"message"}
{"nick":"jschoi","message":"I chose those libraries because they were the top used on NPM that I had time to get to.","date":"2018-03-07T23:53:38.627Z","type":"message"}
{"nick":"atticoos","reason":"Ping timeout: 260 seconds","date":"2018-03-07T23:53:44.369Z","type":"quit"}
{"nick":"devsnek","message":"oh are there examples in here with libraries?","date":"2018-03-07T23:53:50.084Z","type":"message"}
{"nick":"devsnek","message":"i'm about 1/6th of the way through","date":"2018-03-07T23:54:00.870Z","type":"message"}
{"nick":"jschoi","message":"Yeah, real-world examples for each subproposal. They’re subsections.","date":"2018-03-07T23:54:09.205Z","type":"message"}
{"nick":"devsnek","message":"ah ok","date":"2018-03-07T23:54:12.024Z","type":"message"}
{"nick":"devsnek","message":"rn i'm looking at `value |> function () { return #; }`","date":"2018-03-07T23:54:15.534Z","type":"message"}
{"nick":"jschoi","message":"First one is WHATWG Fetch’s spec examples.","date":"2018-03-07T23:54:18.605Z","type":"message"}
{"nick":"devsnek","message":"so the topic binding doesn't get closure'd","date":"2018-03-07T23:54:33.552Z","type":"message"}
{"nick":"devsnek","message":"is that what this example is showing?","date":"2018-03-07T23:54:37.961Z","type":"message"}
{"nick":"jschoi","message":"It does get closured.","date":"2018-03-07T23:54:43.240Z","type":"message"}
{"nick":"devsnek","message":"it says its a syntax error","date":"2018-03-07T23:54:49.510Z","type":"message"}
{"nick":"jschoi","message":"Oh, wait.","date":"2018-03-07T23:54:53.098Z","type":"message"}
{"nick":"jschoi","message":"I’m dumb.","date":"2018-03-07T23:54:54.230Z","type":"message"}
{"nick":"jschoi","message":"I read it as an arrow function.","date":"2018-03-07T23:54:59.055Z","type":"message"}
{"nick":"devsnek","message":"this and the below example with a class","date":"2018-03-07T23:55:20.051Z","type":"message"}
{"nick":"jschoi","message":"Topic references are invalid inside function () { … }.","date":"2018-03-07T23:55:24.848Z","type":"message"}
{"nick":"jschoi","message":"As well as most blocks.","date":"2018-03-07T23:55:31.067Z","type":"message"}
{"nick":"jschoi","message":"Arrow functions, if blocks, and try blocks are exceptions.","date":"2018-03-07T23:55:41.970Z","type":"message"}
{"nick":"bterlson","message":"jschoi: you tweet this yet? I need to retweet :-P","date":"2018-03-07T23:55:50.774Z","type":"message"}
{"nick":"jschoi","message":"The intent is to make scoping always clear. That’s one of the goals.","date":"2018-03-07T23:55:52.675Z","type":"message"}
{"nick":"devsnek","message":"man this is so detailed oof","date":"2018-03-07T23:56:14.517Z","type":"message"}
{"nick":"devsnek","message":"ok i just hit the fetch example","date":"2018-03-07T23:56:25.509Z","type":"message"}
{"nick":"devsnek","message":"i'm liking this so far","date":"2018-03-07T23:56:47.201Z","type":"message"}
{"nick":"jschoi","message":"bterlson: Ah, I barely use Twitter. Go ahead. I’m at…@__jschoi.","date":"2018-03-07T23:56:57.690Z","type":"message"}
{"nick":"jschoi","message":"Oh yeah, do blocks are also obviously exceptions. I say obviously because they’re in a lot of examples.","date":"2018-03-07T23:57:39.660Z","type":"message"}
{"nick":"jschoi","message":"Another intent is to stay forward compatible with tacit topic binding by other types of blocks. Like catch blocks.","date":"2018-03-07T23:58:08.037Z","type":"message"}
{"nick":"jschoi","message":"devsnek: Great, glad you like it so far.","date":"2018-03-07T23:58:25.920Z","type":"message"}
{"nick":"devsnek","message":"i didn't know lodash was in the js foundation","date":"2018-03-07T23:58:38.588Z","type":"message"}
{"nick":"jschoi","message":"Yeah, I hadn’t either until my research for this.","date":"2018-03-07T23:58:48.185Z","type":"message"}
{"nick":"devsnek","message":"can i join the foundation and attend tc39 meetings 😢","date":"2018-03-07T23:59:03.727Z","type":"message"}
{"nick":"mattijs_","date":"2018-03-07T23:59:08.136Z","type":"join"}
{"nick":"jschoi","message":"Let me know if you figure out the answer, haha.","date":"2018-03-07T23:59:45.712Z","type":"message"}
