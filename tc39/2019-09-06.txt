{"nick":"lucasteles","reason":"Quit: Quit","date":"2019-09-06T00:00:20.546Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-09-06T00:26:46.230Z","type":"quit"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-09-06T00:35:11.890Z","type":"quit"}
{"nick":"cybai","date":"2019-09-06T00:35:41.098Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 264 seconds","date":"2019-09-06T00:40:16.001Z","type":"quit"}
{"nick":"cybai","date":"2019-09-06T00:47:54.337Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-09-06T00:51:38.252Z","type":"quit"}
{"nick":"cybai","reason":"Ping timeout: 245 seconds","date":"2019-09-06T00:52:07.278Z","type":"quit"}
{"nick":"haxjs","date":"2019-09-06T01:02:48.696Z","type":"join"}
{"nick":"keith_miller","date":"2019-09-06T01:11:15.632Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-09-06T02:34:24.015Z","type":"quit"}
{"nick":"drousso_","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-09-06T02:52:43.078Z","type":"quit"}
{"nick":"cybai","date":"2019-09-06T03:33:50.763Z","type":"join"}
{"nick":"howdoi","date":"2019-09-06T04:00:29.765Z","type":"join"}
{"nick":"SferaDev8","date":"2019-09-06T04:01:36.583Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-09-06T04:09:54.576Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2019-09-06T04:27:06.887Z","type":"quit"}
{"nick":"drousso","date":"2019-09-06T04:43:31.687Z","type":"join"}
{"nick":"Nimelrian","date":"2019-09-06T05:50:28.117Z","type":"join"}
{"nick":"Nimelrian","reason":"Ping timeout: 252 seconds","date":"2019-09-06T06:21:22.104Z","type":"quit"}
{"nick":"keith_miller","date":"2019-09-06T06:53:43.809Z","type":"join"}
{"nick":"kpatticha","date":"2019-09-06T07:29:53.810Z","type":"join"}
{"nick":"kpatticha","reason":"Remote host closed the connection","date":"2019-09-06T07:34:12.186Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-09-06T07:48:25.284Z","type":"quit"}
{"nick":"haxjs","reason":"Quit: This computer has gone to sleep","date":"2019-09-06T08:00:36.415Z","type":"quit"}
{"nick":"kpatticha","date":"2019-09-06T08:08:17.329Z","type":"join"}
{"nick":"kpattich_","date":"2019-09-06T08:53:59.493Z","type":"join"}
{"nick":"kpatticha","reason":"Ping timeout: 246 seconds","date":"2019-09-06T08:56:25.402Z","type":"quit"}
{"nick":"kpattich__","date":"2019-09-06T09:03:30.116Z","type":"join"}
{"nick":"kpattich_","reason":"Ping timeout: 244 seconds","date":"2019-09-06T09:06:01.583Z","type":"quit"}
{"nick":"haxjs","date":"2019-09-06T09:17:46.858Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-09-06T09:52:07.666Z","type":"quit"}
{"nick":"cybai","date":"2019-09-06T09:52:47.046Z","type":"join"}
{"nick":"kpattich__","reason":"Remote host closed the connection","date":"2019-09-06T09:57:19.864Z","type":"quit"}
{"nick":"cybai","reason":"Ping timeout: 264 seconds","date":"2019-09-06T09:57:40.057Z","type":"quit"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-09-06T10:10:10.783Z","type":"quit"}
{"nick":"drousso","date":"2019-09-06T10:19:02.600Z","type":"join"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-09-06T10:46:03.051Z","type":"quit"}
{"nick":"haxjs","reason":"Quit: This computer has gone to sleep","date":"2019-09-06T11:07:47.508Z","type":"quit"}
{"nick":"jmdyck","date":"2019-09-06T11:44:35.343Z","type":"join"}
{"nick":"jmdyck","reason":"Ping timeout: 245 seconds","date":"2019-09-06T11:54:38.332Z","type":"quit"}
{"nick":"jmdyck","date":"2019-09-06T11:55:09.738Z","type":"join"}
{"nick":"cybai","date":"2019-09-06T12:10:32.667Z","type":"join"}
{"nick":"kpatticha","date":"2019-09-06T12:12:17.329Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 244 seconds","date":"2019-09-06T12:15:07.452Z","type":"quit"}
{"nick":"cybai","date":"2019-09-06T12:16:18.565Z","type":"join"}
{"nick":"Jessidhia","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-09-06T12:24:50.052Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-09-06T12:26:14.993Z","type":"join"}
{"nick":"mgol","date":"2019-09-06T14:27:30.428Z","type":"join"}
{"nick":"bradleymeck","message":"uncurrying `this` is... painful for perf ^_^;","date":"2019-09-06T14:30:34.181Z","type":"message"}
{"nick":"bradleymeck","message":"how many proposals have ways of tackling this ? bind / pipeline seem to","date":"2019-09-06T14:31:11.454Z","type":"message"}
{"nick":"Jessidhia","message":"is it even... uncurryable?","date":"2019-09-06T14:31:18.456Z","type":"message"}
{"nick":"bradleymeck","message":"`this` is","date":"2019-09-06T14:31:41.078Z","type":"message"}
{"nick":"Jessidhia","message":"or do you mean erasing the receiver from the calls (e.g. the `(0, a.b)(...)` trick that babel uses","date":"2019-09-06T14:31:42.714Z","type":"message"}
{"nick":"bradleymeck","message":"e.g. charCodeAt => Function.call.bind(charCodeAt)","date":"2019-09-06T14:32:03.399Z","type":"message"}
{"nick":"bradleymeck","message":"nah, receiver is fine","date":"2019-09-06T14:32:30.799Z","type":"message"}
{"nick":"Jessidhia","message":"uncurrying `this` by currying `Function#call` instead ðŸ¤¯","date":"2019-09-06T14:33:16.833Z","type":"message"}
{"nick":"bradleymeck","message":"i can't think of a way of tricking the receiver without mutation","date":"2019-09-06T14:34:23.309Z","type":"message"}
{"nick":"bradleymeck","message":"which also would have perf issues","date":"2019-09-06T14:34:30.794Z","type":"message"}
{"nick":"Jessidhia","message":"`const call = Function.prototype.call.bind(Function.prototype.call)`; `call(func, receiver, ...args)` ðŸ¤”","date":"2019-09-06T14:37:36.804Z","type":"message"}
{"nick":"bradleymeck","message":"Jessidhia: https://jsperf.com/uncurry-this-robustness/1 , though those benchmarks don't show the nightmare of when it is used in other functions that are being optimized","date":"2019-09-06T14:46:47.931Z","type":"message"}
{"nick":"bradleymeck","message":"basically, the VMs can't seem to figure out any of the calls being an uncurried this","date":"2019-09-06T14:47:29.848Z","type":"message"}
{"nick":"bradleymeck","message":"so they can't do optimizations that they normally would, and even worse won't do the optimizations for builtins","date":"2019-09-06T14:48:06.988Z","type":"message"}
{"nick":"Jessidhia","message":"so the engines need to be taught?","date":"2019-09-06T14:58:53.388Z","type":"message"}
{"nick":"bradleymeck","message":"its a difficult thing to analyze and probably not cheap to do so","date":"2019-09-06T14:59:22.681Z","type":"message"}
{"nick":"bradleymeck","message":"some alternative would probably be much easier in the form or a proposal","date":"2019-09-06T14:59:40.340Z","type":"message"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2019-09-06T14:59:51.020Z","type":"quit"}
{"nick":"bradleymeck","message":"even a `Function.prototype.uncurryThis` would be easier to deal with","date":"2019-09-06T15:00:01.637Z","type":"message"}
{"nick":"bradleymeck","message":"but if there are already proposals that handle this use case :shr","date":"2019-09-06T15:00:24.566Z","type":"message"}
{"nick":"bradleymeck","message":"ðŸ¤·","date":"2019-09-06T15:00:29.488Z","type":"message"}
{"nick":"Nimelrian","date":"2019-09-06T15:15:54.055Z","type":"join"}
{"nick":"AtumT","date":"2019-09-06T15:16:03.780Z","type":"join"}
{"nick":"haxjs","date":"2019-09-06T15:24:37.312Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-09-06T15:29:11.194Z","type":"quit"}
{"nick":"SferaDev8","reason":"Remote host closed the connection","date":"2019-09-06T15:41:01.382Z","type":"quit"}
{"nick":"SferaDev8","date":"2019-09-06T15:42:47.848Z","type":"join"}
{"nick":"kpatticha","reason":"Remote host closed the connection","date":"2019-09-06T15:56:50.956Z","type":"quit"}
