{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-12-19T00:11:24.441Z","type":"quit"}
{"nick":"akirose","date":"2018-12-19T00:14:08.700Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T01:50:55.692Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T01:52:16.872Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T02:03:54.095Z","type":"quit"}
{"nick":"akirose","reason":"Ping timeout: 268 seconds","date":"2018-12-19T02:20:59.853Z","type":"quit"}
{"nick":"akirose","date":"2018-12-19T02:21:52.247Z","type":"join"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-12-19T02:32:53.485Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T03:12:41.963Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2018-12-19T03:14:39.445Z","type":"quit"}
{"nick":"gibson042","date":"2018-12-19T04:25:23.703Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-12-19T04:28:31.253Z","type":"quit"}
{"nick":"akirose","date":"2018-12-19T04:30:44.778Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 250 seconds","date":"2018-12-19T04:42:01.711Z","type":"quit"}
{"nick":"jwalden","date":"2018-12-19T04:48:26.486Z","type":"join"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-12-19T05:30:50.098Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-12-19T05:40:46.142Z","type":"quit"}
{"nick":"akirose","reason":"Ping timeout: 250 seconds","date":"2018-12-19T06:38:32.773Z","type":"quit"}
{"nick":"akirose","date":"2018-12-19T06:39:07.483Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-12-19T06:50:30.736Z","type":"quit"}
{"nick":"akirose","date":"2018-12-19T06:53:42.528Z","type":"join"}
{"nick":"keith_miller","date":"2018-12-19T07:21:19.296Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T07:30:01.957Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T07:35:06.429Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T07:44:42.147Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T08:45:47.973Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2018-12-19T08:47:40.245Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T08:49:04.285Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2018-12-19T08:50:18.733Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T08:53:59.659Z","type":"join"}
{"nick":"keith_miller","reason":"Read error: Connection reset by peer","date":"2018-12-19T08:57:51.166Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T09:06:04.762Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T10:19:07.972Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T12:29:29.288Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T12:43:44.057Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T12:46:31.756Z","type":"join"}
{"nick":"jmdyck","date":"2018-12-19T12:51:45.292Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T13:26:13.330Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T14:00:52.580Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2018-12-19T14:01:59.411Z","type":"quit"}
{"nick":"gibson042","date":"2018-12-19T14:40:21.779Z","type":"join"}
{"nick":"keith_miller","date":"2018-12-19T15:05:16.044Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 268 seconds","date":"2018-12-19T15:19:50.695Z","type":"quit"}
{"nick":"gibson042","date":"2018-12-19T15:34:38.671Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T16:42:28.322Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T17:07:20.379Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T17:16:53.054Z","type":"quit"}
{"nick":"AtumT","date":"2018-12-19T17:18:33.572Z","type":"join"}
{"nick":"keith_miller","date":"2018-12-19T17:30:42.344Z","type":"join"}
{"nick":"devsnek","message":"has there ever been discussion of arbitrary precision floating points","date":"2018-12-19T17:48:50.886Z","type":"message"}
{"nick":"devsnek","message":"0.1f + 0.2f would be 0.3f","date":"2018-12-19T17:48:56.980Z","type":"message"}
{"nick":"keith_mi_","date":"2018-12-19T17:50:28.737Z","type":"join"}
{"nick":"keith_miller","reason":"Remote host closed the connection","date":"2018-12-19T17:52:23.659Z","type":"quit"}
{"nick":"leobalter","message":"devsnek do you mean non 32bit precision floating operations?","date":"2018-12-19T18:04:14.050Z","type":"message"}
{"nick":"devsnek","message":"leobalter: could be more or fewer bits","date":"2018-12-19T18:04:37.595Z","type":"message"}
{"nick":"devsnek","message":"depending on the number being represented","date":"2018-12-19T18:04:48.622Z","type":"message"}
{"nick":"devsnek","message":"same as how arbitrary precision ints work","date":"2018-12-19T18:04:53.932Z","type":"message"}
{"nick":"leobalter","message":"I'm not sure if this would go with a new number type","date":"2018-12-19T18:05:42.953Z","type":"message"}
{"nick":"leobalter","message":"these non bit operations might be heavy enough for engines, in a way implementors might now desire this feature enough to make a case","date":"2018-12-19T18:06:21.512Z","type":"message"}
{"nick":"leobalter","message":"this is my guess","date":"2018-12-19T18:06:26.020Z","type":"message"}
{"nick":"devsnek","message":"if you've used gmplib, its the same idea","date":"2018-12-19T18:06:48.338Z","type":"message"}
{"nick":"leobalter","message":"at the same time I admit I get annoyed by 0.1 + 0.2","date":"2018-12-19T18:06:49.602Z","type":"message"}
{"nick":"devsnek","message":"gmplib has an arbitrary precision for the mantissa and one \"word\" of precision for the exponent","date":"2018-12-19T18:07:19.861Z","type":"message"}
{"nick":"devsnek","message":"usually 32, 64, or 128","date":"2018-12-19T18:07:32.620Z","type":"message"}
{"nick":"leobalter","message":"yes, and the counter argument from implementors would be asking the advantage of having this natively. So far, it doesn't seem like it would be necessarily faster","date":"2018-12-19T18:08:38.186Z","type":"message"}
{"nick":"devsnek","message":"i suppose you could use bigints to represent these","date":"2018-12-19T18:09:00.353Z","type":"message"}
{"nick":"devsnek","message":"but then you lose using operators","date":"2018-12-19T18:09:07.355Z","type":"message"}
{"nick":"leobalter","message":"maybe, and this is just a guess, we could have a minimal work on Intl to have currency operations, for addition, etc","date":"2018-12-19T18:09:07.504Z","type":"message"}
{"nick":"devsnek","message":"i think it would definitely have a perf improvement to be a native feature","date":"2018-12-19T18:09:26.824Z","type":"message"}
{"nick":"leobalter","message":"not really, engines mostly reuse their C++","date":"2018-12-19T18:09:50.255Z","type":"message"}
{"nick":"devsnek","message":"i'm not sure what that sentence means","date":"2018-12-19T18:10:01.871Z","type":"message"}
{"nick":"leobalter","message":"and the abstractions wouldn't be that amazing as well","date":"2018-12-19T18:10:02.019Z","type":"message"}
{"nick":"leobalter","message":"engines are generally based on C++","date":"2018-12-19T18:10:28.781Z","type":"message"}
{"nick":"devsnek","message":"right","date":"2018-12-19T18:10:32.266Z","type":"message"}
{"nick":"leobalter","message":"unless you have something native from there","date":"2018-12-19T18:10:45.638Z","type":"message"}
{"nick":"leobalter","message":"you would have an abstraction similar to what you can already do in JS today","date":"2018-12-19T18:11:03.495Z","type":"message"}
{"nick":"devsnek","message":"you can make a bigint out of a system of reallocing Uint32Arrays","date":"2018-12-19T18:11:30.709Z","type":"message"}
{"nick":"devsnek","message":"you can make a bigfloat out of a system of bigints","date":"2018-12-19T18:11:43.685Z","type":"message"}
{"nick":"bradleymeck","message":"devsnek: littledan was looking at bigdecimal types last i knew","date":"2018-12-19T18:12:09.329Z","type":"message"}
{"nick":"devsnek","message":"gmplib is definitely faster than anything you can write in js, they're using platform specific assembly and simd and whatnot","date":"2018-12-19T18:12:27.705Z","type":"message"}
{"nick":"devsnek","message":"bradleymeck: as something for the language?","date":"2018-12-19T18:12:55.930Z","type":"message"}
{"nick":"bradleymeck","message":"yea, but bigint is new. he did give a presentation on different ways to store big decimals though","date":"2018-12-19T18:13:26.454Z","type":"message"}
{"nick":"devsnek","message":"definitely no shortage of ways to represent them","date":"2018-12-19T18:13:41.618Z","type":"message"}
{"nick":"littledan","message":"well, Andrew Paprocki gave that presentation (though I wrote the slides)","date":"2018-12-19T18:16:43.919Z","type":"message"}
{"nick":"littledan","message":"each language does it differently, and no one seems to care. My takeaway was that we should just use IEEE 128-bit decimal, since it's standard, there are libraries for it, and, just, no one complains about how all the other programming languages use observably different bespoke decimal formats, so I bet we don't actually need BigDecimal","date":"2018-12-19T18:17:49.415Z","type":"message"}
{"nick":"littledan","message":"(whereas people really do run into overflows of ints)","date":"2018-12-19T18:18:00.723Z","type":"message"}
{"nick":"littledan","message":"that was fun research!","date":"2018-12-19T18:18:18.542Z","type":"message"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T18:30:48.291Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T18:51:46.174Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T19:00:41.221Z","type":"quit"}
{"nick":"jschoi_","message":"Does anyone at the 2018-11-29 TC39 summary session have details regarding what got discussed during the function-call syntax discussion (https://github.com/tc39/tc39-notes/blob/master/es9/2018-11/nov-29.md#--function-calls)? TabAtkins?","date":"2018-12-19T19:20:43.094Z","type":"message"}
{"nick":"TabAtkins","message":"I do but am not in a position to write them out right now, I'll ping you later","date":"2018-12-19T19:21:33.721Z","type":"message"}
{"nick":"jschoi_","message":"Thanks!","date":"2018-12-19T19:33:10.983Z","type":"message"}
{"nick":"devsnek","message":"littledan: if you were modifying a script to use import() why couldn't you just go all the way and make it a module and use static import","date":"2018-12-19T19:53:09.653Z","type":"message"}
{"nick":"devsnek","message":"you would probably need to modify it anyway to deal with import() being async","date":"2018-12-19T19:53:53.718Z","type":"message"}
{"nick":"ljharb","message":"because i have scripts that require sloppy mode and also require builtins","date":"2018-12-19T19:55:39.330Z","type":"message"}
{"nick":"ljharb","message":"however, for all of those, they require a *sync* means of getting those builtins, so `import()` isn't an option anyways ¬Ø\\_(„ÉÑ)_/¬Ø","date":"2018-12-19T19:56:09.531Z","type":"message"}
{"nick":"devsnek","message":"yeah I don't really understand how import() would play with a stdlib","date":"2018-12-19T19:57:12.526Z","type":"message"}
{"nick":"zenparsing","message":"the ability to dynamically import anything that can be statically imported (and in basically the same way) is a nice quality","date":"2018-12-19T19:59:34.933Z","type":"message"}
{"nick":"ljharb","message":"totally agreed","date":"2018-12-19T20:02:53.184Z","type":"message"}
{"nick":"ljharb","message":"that's a current gap in the quadrants right now in the language - there's no way to synchronously import a Module into a Script.","date":"2018-12-19T20:03:25.326Z","type":"message"}
{"nick":"devsnek","message":"i kind of feel like its not a bad thing that scripts are being left behind","date":"2018-12-19T20:05:19.541Z","type":"message"}
{"nick":"devsnek","message":"(as long as they keep working as they do now)","date":"2018-12-19T20:05:49.264Z","type":"message"}
{"nick":"ljharb","message":"that's certainly not a unique attitude","date":"2018-12-19T20:07:29.161Z","type":"message"}
{"nick":"ljharb","message":"and yet, `import()` works in Scripts","date":"2018-12-19T20:07:44.092Z","type":"message"}
{"nick":"jwalden","date":"2018-12-19T20:08:26.827Z","type":"join"}
{"nick":"Domenic","message":"It's a one-way valve","date":"2018-12-19T20:09:37.279Z","type":"message"}
{"nick":"Domenic","message":"Get you out of classic scripts land, into module scripts land","date":"2018-12-19T20:09:45.983Z","type":"message"}
{"nick":"Domenic","message":"But you can't go back, very intentionally.","date":"2018-12-19T20:09:49.771Z","type":"message"}
{"nick":"ljharb","message":"it's fine for normal dynamic import, but it presents a problem for builtin modules","date":"2018-12-19T20:13:03.101Z","type":"message"}
{"nick":"keith_miller","date":"2018-12-19T20:23:10.283Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2018-12-19T20:25:34.074Z","type":"quit"}
{"nick":"Domenic","message":"The less stuff we can have work in classic scripts, the better, IMO.","date":"2018-12-19T20:39:28.283Z","type":"message"}
{"nick":"Domenic","message":"I just wish we'd also put a secure contexts restriction in there too.","date":"2018-12-19T20:39:41.266Z","type":"message"}
{"nick":"Domenic","message":"I guess we still can for built-in modules.","date":"2018-12-19T20:39:52.469Z","type":"message"}
{"nick":"keith_miller","date":"2018-12-19T21:08:46.597Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T21:59:48.902Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T22:02:25.444Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-12-19T22:15:10.600Z","type":"quit"}
{"nick":"keith_miller","date":"2018-12-19T22:17:03.446Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-12-19T22:35:11.894Z","type":"quit"}
{"nick":"AtumT","date":"2018-12-19T22:45:40.697Z","type":"join"}
{"nick":"ephemera_","reason":"Read error: Connection reset by peer","date":"2018-12-19T22:54:23.921Z","type":"quit"}
{"nick":"ephemera_","date":"2018-12-19T22:55:05.699Z","type":"join"}
{"nick":"efaust","date":"2018-12-19T23:42:02.858Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-12-19T23:55:43.670Z","type":"quit"}
