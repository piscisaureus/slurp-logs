{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-07-31T00:32:02.208Z","type":"quit"}
{"nick":"gkatsev","date":"2018-07-31T01:28:56.970Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-07-31T01:48:05.459Z","type":"quit"}
{"nick":"akirose","date":"2018-07-31T01:50:02.682Z","type":"join"}
{"nick":"Domenic","message":"Struct literals issue is waiting for someone to use it: https://github.com/whatwg/infra/issues/130","date":"2018-07-31T02:24:50.591Z","type":"message"}
{"nick":"jwalden","reason":"Quit: back tomorrow","date":"2018-07-31T02:30:17.073Z","type":"quit"}
{"nick":"devsnek","message":"does anyone know of a js parser that spits out an ast with the correct node names","date":"2018-07-31T02:52:06.566Z","type":"message"}
{"nick":"devsnek","message":"like espree says \"ObjectExpression\" instead of \"ObjectLiteral\"","date":"2018-07-31T02:52:37.308Z","type":"message"}
{"nick":"TimothyGu","message":"devsnek: there's no \"correct\" for JS parsers","date":"2018-07-31T03:21:26.192Z","type":"message"}
{"nick":"TimothyGu","message":"ESTree does that, and path of least resistance","date":"2018-07-31T03:22:04.585Z","type":"message"}
{"nick":"devsnek","message":"TimothyGu: I mean one where the names match what the spec defines","date":"2018-07-31T03:23:52.837Z","type":"message"}
{"nick":"devsnek","message":"the output is correct, just confusing while I'm trying to make the reference engine","date":"2018-07-31T03:24:12.964Z","type":"message"}
{"nick":"jmdyck","message":"devnek: A parse tree that conformed to the ES grammar would be rather space- and time-inefficient, I think.","date":"2018-07-31T03:41:22.841Z","type":"message"}
{"nick":"jmdyck","message":"So it's possible there's one out there, but I doubt it sees much use.","date":"2018-07-31T03:42:23.919Z","type":"message"}
{"nick":"jmdyck","message":"e.g., https://github.com/binast/ecmascript-binary-ast says \"the ECMA-262 grammar [...] is too verbose to be an efficient tree representation\"","date":"2018-07-31T03:44:17.028Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-07-31T03:56:37.671Z","type":"quit"}
{"nick":"aki_","date":"2018-07-31T03:56:48.454Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2018-07-31T03:57:12.608Z","type":"nick"}
{"nick":"Havvy","reason":"Read error: Connection reset by peer","date":"2018-07-31T04:05:12.039Z","type":"quit"}
{"nick":"Havvy","date":"2018-07-31T04:05:39.939Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-07-31T04:19:55.520Z","type":"quit"}
{"nick":"IgnoredAmbience","reason":"Read error: Connection reset by peer","date":"2018-07-31T04:29:16.035Z","type":"quit"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-07-31T04:46:45.481Z","type":"quit"}
{"nick":"bret","reason":"Read error: Connection reset by peer","date":"2018-07-31T04:51:56.184Z","type":"quit"}
{"nick":"bret","date":"2018-07-31T04:52:51.455Z","type":"join"}
{"nick":"howdoi","date":"2018-07-31T04:58:07.329Z","type":"join"}
{"nick":"devsnek","message":"jmdyck: i'm trying to be verbose","date":"2018-07-31T05:18:19.806Z","type":"message"}
{"nick":"devsnek","message":"why does this method take S if it doesn't do anything https://tc39.github.io/ecma262/#sec-declarative-environment-records-getbindingvalue-n-s","date":"2018-07-31T05:51:28.120Z","type":"message"}
{"nick":"aki_","date":"2018-07-31T06:03:27.075Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-07-31T06:04:35.462Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-07-31T06:04:35.847Z","type":"nick"}
{"nick":"rkirsling","message":"devsnek: because GetBindingValue is an abstract method for environment records in general, and even though declarative env records ignore that param, object/global env records make use of it, and they all share the same signature","date":"2018-07-31T06:22:34.369Z","type":"message"}
{"nick":"rkirsling","message":"*object/global/module, I should say","date":"2018-07-31T06:23:06.841Z","type":"message"}
{"nick":"devsnek","message":"so ecmarkdown can't handle calls with the wrong arity :P","date":"2018-07-31T06:23:26.596Z","type":"message"}
{"nick":"rkirsling","message":"heh, I'm still too new to know if what if anything could be refactored there ðŸ˜…","date":"2018-07-31T06:25:17.254Z","type":"message"}
{"nick":"rkirsling","message":"*know what","date":"2018-07-31T06:25:30.775Z","type":"message"}
{"nick":"devsnek","message":"nah that reasoning makes sense","date":"2018-07-31T06:25:31.396Z","type":"message"}
{"nick":"devsnek","message":"just kinda funny","date":"2018-07-31T06:25:34.303Z","type":"message"}
{"nick":"rkirsling","message":"indeed","date":"2018-07-31T06:25:39.838Z","type":"message"}
{"nick":"not-an-aardvark","date":"2018-07-31T07:56:30.451Z","type":"join"}
