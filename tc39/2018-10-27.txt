{"nick":"aki_","date":"2018-10-27T00:54:04.847Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2018-10-27T00:54:26.862Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-27T00:54:27.060Z","type":"nick"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2018-10-27T01:37:50.389Z","type":"quit"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-10-27T01:41:09.002Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-27T02:44:34.963Z","type":"join"}
{"nick":"keith_miller","reason":"Remote host closed the connection","date":"2018-10-27T02:45:50.295Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-27T02:46:34.614Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2018-10-27T03:02:22.816Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T03:03:55.293Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-10-27T03:07:51.508Z","type":"quit"}
{"nick":"aki_","date":"2018-10-27T05:10:07.065Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2018-10-27T05:10:28.297Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-27T05:10:28.730Z","type":"nick"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-10-27T05:11:54.528Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-27T07:11:06.508Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-10-27T07:16:27.034Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T07:18:36.105Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶","date":"2018-10-27T07:23:37.168Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-10-27T09:00:47.112Z","type":"quit"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-10-27T09:25:57.063Z","type":"quit"}
{"nick":"aki_","date":"2018-10-27T09:26:07.105Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-27T09:26:31.257Z","type":"nick"}
{"nick":"aki_","date":"2018-10-27T11:31:47.036Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-10-27T11:32:18.043Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-27T11:32:18.326Z","type":"nick"}
{"nick":"jmdyck","date":"2018-10-27T13:08:57.033Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-10-27T13:39:21.118Z","type":"quit"}
{"nick":"aki_","date":"2018-10-27T13:39:28.578Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-27T13:39:52.431Z","type":"nick"}
{"nick":"gibson042","date":"2018-10-27T13:52:30.980Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-10-27T15:46:27.429Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T15:46:44.460Z","type":"join"}
{"nick":"howdoi","date":"2018-10-27T16:48:28.721Z","type":"join"}
{"nick":"gibson042","reason":"Remote host closed the connection","date":"2018-10-27T17:31:18.077Z","type":"quit"}
{"nick":"aki_","date":"2018-10-27T17:52:27.067Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-10-27T17:53:07.470Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-27T17:53:07.745Z","type":"nick"}
{"nick":"gibson042","date":"2018-10-27T18:28:02.133Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T19:10:31.291Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T19:12:39.463Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T19:52:30.507Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T19:53:41.635Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T20:05:49.340Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T20:06:31.081Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T20:11:39.824Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T20:12:26.061Z","type":"join"}
{"nick":"arkain","date":"2018-10-27T20:18:38.238Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T20:21:07.310Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T20:23:31.610Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 250 seconds","date":"2018-10-27T20:29:19.728Z","type":"quit"}
{"nick":"arkain","message":"Anybody up? I was wondering if it's reasonably conceivable to have a new native object in ES, potentially called CallStack, that contains an array of called functions in order with CallStack[0] being the function currently running. Unlike the caller, callee problem, the functions in this stack should be proxied so that handler.apply always throws. Is this a viable idea?","date":"2018-10-27T20:32:28.102Z","type":"message"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T20:32:31.550Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T20:34:45.299Z","type":"join"}
{"nick":"akirose","reason":"Client Quit","date":"2018-10-27T20:35:23.196Z","type":"quit"}
{"nick":"ljharb","message":"arkain: i don‚Äôt think function.caller is just about being able to call that function - it‚Äôs also about the identity of it. what info would you hope to get if they‚Äôre all proxied?","date":"2018-10-27T20:37:40.316Z","type":"message"}
{"nick":"arkain","message":"The proxy could be made to confirm the identity of a function if the caller also has the original.","date":"2018-10-27T20:39:16.062Z","type":"message"}
{"nick":"arkain","message":"But I'm more interested in getting access to the properties attached to the function","date":"2018-10-27T20:39:36.663Z","type":"message"}
{"nick":"ljharb","message":"identity is ===, a Proxy can‚Äôt lie about that","date":"2018-10-27T20:39:57.668Z","type":"message"}
{"nick":"arkain","message":" It wouldnt have to.","date":"2018-10-27T20:40:30.973Z","type":"message"}
{"nick":"ljharb","message":"i think that that kind of access might also be problematic; it means you can write a function that behaves differently depending on how calls it","date":"2018-10-27T20:40:32.775Z","type":"message"}
{"nick":"ljharb","message":"*who calls it","date":"2018-10-27T20:40:42.835Z","type":"message"}
{"nick":"akirose","date":"2018-10-27T20:40:44.647Z","type":"join"}
{"nick":"ljharb","message":"what‚Äôs your use case? That might be more helpful than exploring your potential solution","date":"2018-10-27T20:41:09.345Z","type":"message"}
{"nick":"arkain","message":"I'm considering the possibility of class-fields reaching stage 4. That would be unfortunate due to all the problems it will cause.","date":"2018-10-27T20:42:03.913Z","type":"message"}
{"nick":"arkain","message":"That doesn't mean I don't want some of the capabilities it will bring. Just not the problems that come along with how it's bringing them.","date":"2018-10-27T20:42:44.174Z","type":"message"}
{"nick":"arkain","message":"So I've got a library that implements privacy on classes in a more straight forward way, but I need to be able to identify functions that have appropriate access.","date":"2018-10-27T20:43:30.952Z","type":"message"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T20:53:01.831Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T20:54:56.058Z","type":"join"}
{"nick":"akirose","reason":"Client Quit","date":"2018-10-27T20:59:26.171Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T21:00:35.968Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T21:05:50.428Z","type":"quit"}
{"nick":"arkain","reason":"Ping timeout: 256 seconds","date":"2018-10-27T21:06:05.219Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T21:10:01.617Z","type":"join"}
{"nick":"akirose","reason":"Remote host closed the connection","date":"2018-10-27T21:10:09.365Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T21:17:31.572Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T21:29:20.003Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T21:35:56.609Z","type":"join"}
{"nick":"akirose","reason":"Client Quit","date":"2018-10-27T21:37:19.216Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T21:47:31.053Z","type":"join"}
{"nick":"akirose","reason":"Client Quit","date":"2018-10-27T21:48:13.806Z","type":"quit"}
{"nick":"akirose","date":"2018-10-27T21:52:51.592Z","type":"join"}
{"nick":"arkain","date":"2018-10-27T22:12:29.207Z","type":"join"}
{"nick":"akirose","reason":"Quit: üëãüèª","date":"2018-10-27T22:12:30.926Z","type":"quit"}
{"nick":"arkain","message":"sorry about that. got pulled away by the mrs.","date":"2018-10-27T22:13:49.576Z","type":"message"}
{"nick":"arkain","message":"What I was thinking about was the possibility of having a call stack that kept track of the function objects that have been called, providing non-callable access to each one so that at least the objects themselves (or a proxy to them) was available.","date":"2018-10-27T22:15:43.105Z","type":"message"}
{"nick":"akirose","date":"2018-10-27T22:15:46.068Z","type":"join"}
{"nick":"arkain","message":"This would make it possible to tag each of those functions with a Symbol identifier that would make it possible to determine what security access the function is allowed.","date":"2018-10-27T22:16:50.496Z","type":"message"}
{"nick":"arkain","message":"I know that caller and callee had many issues. What I'm wondering is if those issues were due to the fact that the functions they held could be called, or was the problem deeper.","date":"2018-10-27T22:18:05.795Z","type":"message"}
{"nick":"bttf_","new_nick":"bttf","date":"2018-10-27T22:26:34.823Z","type":"nick"}
{"nick":"arkain","reason":"Ping timeout: 256 seconds","date":"2018-10-27T23:05:39.204Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-27T23:56:15.388Z","type":"join"}
