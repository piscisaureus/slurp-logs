{"nick":"mgol","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2020-01-03T00:14:16.938Z","type":"quit"}
{"nick":"mgol","date":"2020-01-03T00:17:45.816Z","type":"join"}
{"nick":"rkirsling","message":"regardless of the multifile discussion though, does anybody have thoughts about the styling of notes that I had mentioned?","date":"2020-01-03T00:20:46.202Z","type":"message"}
{"nick":"rkirsling","message":"I can open up an issue to discuss, just not sure whether 262 is the right repo or not","date":"2020-01-03T00:21:03.122Z","type":"message"}
{"nick":"ljharb","message":"rkirsling: which styling, the color contrast?","date":"2020-01-03T00:25:13.807Z","type":"message"}
{"nick":"ljharb","message":"rkirsling: it's just css; probably easiest to open a PR and the render preview can illustrate the difference","date":"2020-01-03T00:25:38.171Z","type":"message"}
{"nick":"rkirsling","message":"like having a light orange background instead of a grey bar on the left, say, in a similar fashion to HTML / WASM specs","date":"2020-01-03T00:26:07.766Z","type":"message"}
{"nick":"rkirsling","message":"yeah that's what I was thinking","date":"2020-01-03T00:26:23.604Z","type":"message"}
{"nick":"rkirsling","message":"cool.","date":"2020-01-03T00:26:26.411Z","type":"message"}
{"nick":"ljharb","message":"be sure to check the print stylesheet manually too, just to make sure it's sensible","date":"2020-01-03T00:27:02.155Z","type":"message"}
{"nick":"rkirsling","message":"oh good call, I wouldn't've thought of it","date":"2020-01-03T00:27:48.640Z","type":"message"}
{"nick":"devsnek","message":"ljharb: should FunctionDeclarationInstantiation 28.f.i.5 be Perform instead of Call?","date":"2020-01-03T00:33:38.833Z","type":"message"}
{"nick":"ljharb","message":"devsnek: typically Perform is when the return value doesn't matter, yes (https://tc39.es/ecma262/#sec-declarative-environment-records-initializebinding-n-v has one but it's not used in https://tc39.es/ecma262/#sec-functiondeclarationinstantiation). i also see 22.e, and 27.c.i.3, and probably others","date":"2020-01-03T00:36:18.332Z","type":"message"}
{"nick":"ljharb","message":"devsnek: want to make a PR that cleans up the side-effecty uses of Call?","date":"2020-01-03T00:36:27.839Z","type":"message"}
{"nick":"ljharb","message":"(on abstract ops only ofc)","date":"2020-01-03T00:36:36.601Z","type":"message"}
{"nick":"devsnek","message":"maybe","date":"2020-01-03T00:36:42.959Z","type":"message"}
{"nick":"devsnek","message":"i've only ever seen it this once","date":"2020-01-03T00:36:49.623Z","type":"message"}
{"nick":"rkirsling","message":"lol this comment is a riot https://github.com/tc39/ecma262/issues/875#issuecomment-292671155","date":"2020-01-03T00:36:57.985Z","type":"message"}
{"nick":"devsnek","message":"now i'm excited for this novel","date":"2020-01-03T00:38:16.280Z","type":"message"}
{"nick":"ljharb","message":"The Pragma Diaries","date":"2020-01-03T00:38:39.364Z","type":"message"}
{"nick":"devsnek","message":"i'm seeing assertion failures with that eval change","date":"2020-01-03T00:53:10.679Z","type":"message"}
{"nick":"devsnek","message":"still trying to debug it","date":"2020-01-03T00:53:16.981Z","type":"message"}
{"nick":"jmdyck","message":"ljharb: you gave thumbs-up to https://github.com/tc39/ecma262/pull/1791#discussion_r362648352, but it doesn't appear to have affected the merge","date":"2020-01-03T01:05:34.358Z","type":"message"}
{"nick":"ljharb","message":"whoops, i may have missed it, I’ll add the fix in shortly","date":"2020-01-03T01:10:46.203Z","type":"message"}
{"nick":"devsnek","message":"i should make a shortcut for this `git -c color.ui=always diff | awk '!/\\/\\//{print}'`","date":"2020-01-03T01:11:29.177Z","type":"message"}
{"nick":"devsnek","message":"or find a way to enable syntax highlighting in diffs","date":"2020-01-03T01:11:58.144Z","type":"message"}
{"nick":"rkirsling","message":"git diff seems to default to --color=always on my mac","date":"2020-01-03T01:18:29.495Z","type":"message"}
{"nick":"rkirsling","message":"what's the awk command for? seems to just print it all out instead of entering a scrolly view","date":"2020-01-03T01:18:49.663Z","type":"message"}
{"nick":"devsnek","message":"rkirsling: it ignores comments","date":"2020-01-03T01:22:01.914Z","type":"message"}
{"nick":"rkirsling","message":"ohh","date":"2020-01-03T01:22:19.355Z","type":"message"}
{"nick":"devsnek","message":"difficult to find problematic line when it looks like this https://gc.gy/45719539.png","date":"2020-01-03T01:22:25.468Z","type":"message"}
{"nick":"rkirsling","message":"hah","date":"2020-01-03T01:23:08.284Z","type":"message"}
{"nick":"devsnek","message":"but then i realized","date":"2020-01-03T01:24:15.304Z","type":"message"}
{"nick":"devsnek","message":"instead of hiding lines","date":"2020-01-03T01:24:18.331Z","type":"message"}
{"nick":"devsnek","message":"why not just syntax highlight the diff","date":"2020-01-03T01:24:25.809Z","type":"message"}
{"nick":"devsnek","message":"so now i'm going down an entirely separate rabbit hole","date":"2020-01-03T01:24:31.772Z","type":"message"}
{"nick":"rkirsling","message":"lol","date":"2020-01-03T01:25:52.369Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-03T01:58:51.736Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-03T02:06:33.668Z","type":"join"}
{"nick":"devsnek","message":"man this eval change is really giving me trouble","date":"2020-01-03T02:10:25.350Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/45722454.png","date":"2020-01-03T02:10:54.515Z","type":"message"}
{"nick":"drousso","date":"2020-01-03T02:15:11.982Z","type":"join"}
{"nick":"devsnek","message":"i think i need to rewrite all the iterator binding initialization stuff 😢","date":"2020-01-03T02:17:40.176Z","type":"message"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-03T02:22:15.151Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-03T03:04:23.584Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-03T03:35:04.465Z","type":"join"}
{"nick":"ljharb","message":"jmdyck: fixed, thanks for the catch https://github.com/tc39/ecma262/commit/cb73c69d861db21506c0246197fd87b723d6cdb4","date":"2020-01-03T03:41:44.848Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-03T03:47:58.925Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-03T03:52:46.670Z","type":"join"}
{"nick":"jmdyck","message":"ljharb: no problem","date":"2020-01-03T04:12:18.450Z","type":"message"}
{"nick":"rkirsling","message":"uhhhh speaking of notes","date":"2020-01-03T04:21:20.796Z","type":"message"}
{"nick":"rkirsling","message":"what happened here? https://tc39.es/ecma262/#table-42","date":"2020-01-03T04:21:26.144Z","type":"message"}
{"nick":"rkirsling","message":"it not only spills but isn't horizontally scrollable","date":"2020-01-03T04:21:40.266Z","type":"message"}
{"nick":"ljharb","message":"hm","date":"2020-01-03T04:21:54.660Z","type":"message"}
{"nick":"ljharb","message":"in spec.html, \"gives examples of the ExportEntry record fields\" is referencing table 42","date":"2020-01-03T04:23:29.958Z","type":"message"}
{"nick":"ljharb","message":"but somehow table 48 shows up","date":"2020-01-03T04:23:43.842Z","type":"message"}
{"nick":"ljharb","message":"let me do a bisect","date":"2020-01-03T04:24:02.031Z","type":"message"}
{"nick":"jmdyck","message":"no, it's referencing the thing whose id is \"table-42\", which happens to currently be Table 48","date":"2020-01-03T04:25:17.511Z","type":"message"}
{"nick":"ljharb","message":"ah","date":"2020-01-03T04:25:25.456Z","type":"message"}
{"nick":"ljharb","message":"then in that case, it seems like all those note-d tables should be hoisted outside of the emu-note","date":"2020-01-03T04:26:00.840Z","type":"message"}
{"nick":"ljharb","message":"or hmm","date":"2020-01-03T04:26:57.963Z","type":"message"}
{"nick":"ljharb","message":"i'm not really sure. it looks *weird* to have the tables inside a note, but that one table's the only one that's \"too wide\" such that it's a problem","date":"2020-01-03T04:27:16.419Z","type":"message"}
{"nick":"rkirsling","message":"yeah hm","date":"2020-01-03T04:32:33.045Z","type":"message"}
{"nick":"rkirsling","message":"wow, that table barely can be said to fit even if it is hoisted","date":"2020-01-03T04:34:33.219Z","type":"message"}
{"nick":"jmdyck","message":"the first column is <code> so white-space: pre, and the other columns can't be any smaller because of the header text","date":"2020-01-03T04:35:14.389Z","type":"message"}
{"nick":"rkirsling","message":"right","date":"2020-01-03T04:35:32.073Z","type":"message"}
{"nick":"rkirsling","message":"I'm struggling to come up with a suggestion","date":"2020-01-03T04:35:49.632Z","type":"message"}
{"nick":"jmdyck","message":"make your browser window really wide :)","date":"2020-01-03T04:36:20.338Z","type":"message"}
{"nick":"rkirsling","message":"lol","date":"2020-01-03T04:36:36.193Z","type":"message"}
{"nick":"rkirsling","message":"and print sideways?","date":"2020-01-03T04:36:52.308Z","type":"message"}
{"nick":"rkirsling","message":":p","date":"2020-01-03T04:36:54.350Z","type":"message"}
{"nick":"jmdyck","message":"hm, yeah, what does it look like in the pdf","date":"2020-01-03T04:37:41.691Z","type":"message"}
{"nick":"ljharb","message":"lol even if i make the `<code>` font-size 50% the table stlll doesn't fit","date":"2020-01-03T04:38:55.953Z","type":"message"}
{"nick":"jmdyck","message":"In the ES2019 PDF, it *almost* fits: in the rightmost column, the rightmost character gets trimmed","date":"2020-01-03T04:43:13.390Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-03T04:47:07.481Z","type":"quit"}
{"nick":"devsnek","message":"ok sanity check","date":"2020-01-03T05:21:17.726Z","type":"message"}
{"nick":"devsnek","message":"by step 25 of FunctionDeclarationInstantiation","date":"2020-01-03T05:21:57.281Z","type":"message"}
{"nick":"devsnek","message":"is `env` registered to the surrounding context in any way","date":"2020-01-03T05:22:26.775Z","type":"message"}
{"nick":"devsnek","message":"i don't think it is","date":"2020-01-03T05:22:30.391Z","type":"message"}
{"nick":"jmdyck","message":"\"registered\"?","date":"2020-01-03T05:23:17.820Z","type":"message"}
{"nick":"devsnek","message":"like attached to the callee context","date":"2020-01-03T05:23:37.433Z","type":"message"}
{"nick":"devsnek","message":"i think argument initializers are broken rn","date":"2020-01-03T05:24:08.689Z","type":"message"}
{"nick":"jmdyck","message":"`env` is set in 19.b or 20.c; that doesn't do what you're asking?","date":"2020-01-03T05:24:32.818Z","type":"message"}
{"nick":"devsnek","message":"but it isn't registered to calleeContext right","date":"2020-01-03T05:24:52.256Z","type":"message"}
{"nick":"devsnek","message":"imagine `(function(a, b = a) {})`","date":"2020-01-03T05:25:01.386Z","type":"message"}
{"nick":"devsnek","message":"IteratorBindingInitialization would create `a`","date":"2020-01-03T05:25:09.804Z","type":"message"}
{"nick":"devsnek","message":"because it gets passed `env` explicitly","date":"2020-01-03T05:25:14.949Z","type":"message"}
{"nick":"devsnek","message":"but then in `b = a`","date":"2020-01-03T05:25:24.140Z","type":"message"}
{"nick":"devsnek","message":"`env` is not attached to the context on the stack","date":"2020-01-03T05:25:35.072Z","type":"message"}
{"nick":"devsnek","message":"so you get a reference error","date":"2020-01-03T05:25:37.829Z","type":"message"}
{"nick":"devsnek","message":"shu: ^","date":"2020-01-03T05:26:21.929Z","type":"message"}
{"nick":"jmdyck","reason":"Ping timeout: 258 seconds","date":"2020-01-03T05:38:37.535Z","type":"quit"}
{"nick":"rkirsling","message":"ljharb: this is some impressive house-cleaning you're doing today","date":"2020-01-03T07:07:12.102Z","type":"message"}
{"nick":"rkirsling","message":"lol","date":"2020-01-03T07:07:12.676Z","type":"message"}
{"nick":"ljharb","message":":-p","date":"2020-01-03T07:07:31.546Z","type":"message"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2020-01-03T07:38:44.090Z","type":"quit"}
{"nick":"aradesh","date":"2020-01-03T07:51:22.301Z","type":"join"}
{"nick":"aqquadro","date":"2020-01-03T08:11:04.746Z","type":"join"}
{"nick":"aqquadro","reason":"Changing host","date":"2020-01-03T08:11:04.849Z","type":"quit"}
{"nick":"aqquadro","date":"2020-01-03T08:11:04.850Z","type":"join"}
{"nick":"aqquadro","reason":"Ping timeout: 248 seconds","date":"2020-01-03T08:19:16.818Z","type":"quit"}
{"nick":"aqquadro","date":"2020-01-03T09:15:21.552Z","type":"join"}
{"nick":"aqquadro","reason":"Changing host","date":"2020-01-03T09:15:21.657Z","type":"quit"}
{"nick":"aqquadro","date":"2020-01-03T09:15:21.658Z","type":"join"}
{"nick":"itamarok","date":"2020-01-03T10:19:25.041Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 252 seconds","date":"2020-01-03T10:23:56.059Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-03T12:00:55.571Z","type":"quit"}
{"nick":"Wizek","date":"2020-01-03T12:11:03.229Z","type":"join"}
{"nick":"mgol","date":"2020-01-03T12:27:34.434Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-03T12:32:40.891Z","type":"quit"}
{"nick":"jmdyck","date":"2020-01-03T13:10:18.511Z","type":"join"}
{"nick":"mgol","date":"2020-01-03T13:14:42.164Z","type":"join"}
{"nick":"cybai_","date":"2020-01-03T13:22:50.229Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 248 seconds","date":"2020-01-03T13:25:56.820Z","type":"quit"}
{"nick":"howdoi","date":"2020-01-03T14:33:26.072Z","type":"join"}
{"nick":"cybai_","reason":"Remote host closed the connection","date":"2020-01-03T14:56:43.556Z","type":"quit"}
{"nick":"Havvy","reason":"Ping timeout: 268 seconds","date":"2020-01-03T16:22:57.569Z","type":"quit"}
{"nick":"jwalden","date":"2020-01-03T16:47:55.996Z","type":"join"}
{"nick":"cybai","date":"2020-01-03T16:57:27.476Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 245 seconds","date":"2020-01-03T17:01:33.440Z","type":"quit"}
{"nick":"Havvy","date":"2020-01-03T17:11:38.549Z","type":"join"}
{"nick":"isHavvy","date":"2020-01-03T17:12:29.311Z","type":"join"}
{"nick":"Havvy","reason":"Ping timeout: 268 seconds","date":"2020-01-03T17:16:36.528Z","type":"quit"}
{"nick":"isHavvy","reason":"Ping timeout: 260 seconds","date":"2020-01-03T17:17:47.232Z","type":"quit"}
{"nick":"Havvy","date":"2020-01-03T17:18:58.993Z","type":"join"}
{"nick":"itamarok","date":"2020-01-03T17:28:55.061Z","type":"join"}
{"nick":"keith_miller","date":"2020-01-03T17:42:40.632Z","type":"join"}
{"nick":"aqquadro","reason":"Ping timeout: 265 seconds","date":"2020-01-03T18:20:09.247Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-03T19:20:12.455Z","type":"quit"}
{"nick":"aqquadro","date":"2020-01-03T19:22:02.228Z","type":"join"}
{"nick":"aqquadro","reason":"Changing host","date":"2020-01-03T19:22:02.296Z","type":"quit"}
{"nick":"aqquadro","date":"2020-01-03T19:22:02.296Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-03T19:37:11.631Z","type":"quit"}
{"nick":"cybai","date":"2020-01-03T21:16:21.002Z","type":"join"}
{"nick":"itamarok","date":"2020-01-03T21:16:57.672Z","type":"join"}
{"nick":"devsnek","message":"ljharb: was there recently an issue or plenary topic about built-in functions appearing to be a weird mix of strict and not strict","date":"2020-01-03T21:20:44.574Z","type":"message"}
{"nick":"cybai","reason":"Ping timeout: 240 seconds","date":"2020-01-03T21:20:50.984Z","type":"quit"}
{"nick":"devsnek","message":"i feel like there was but i can't find anything on it","date":"2020-01-03T21:20:54.819Z","type":"message"}
{"nick":"bathos","message":"Question re:","date":"2020-01-03T21:21:34.963Z","type":"message"}
{"nick":"bathos","message":"> If the phrase “[lookahead ∉ set]” appears in the right-hand side of a production, it indicates that the production may not be used if the immediately following input token sequence is a member of the given set. The set can be written as a comma separated list of one or two element terminal sequences enclosed in curly brackets.","date":"2020-01-03T21:21:44.287Z","type":"message"}
{"nick":"bathos","message":"> For convenience, the set can also be written as a nonterminal, in which case it represents the set of all terminals to which that nonterminal could expand. If the set consists of a single terminal the phrase “[lookahead ≠ terminal]” may be used.","date":"2020-01-03T21:21:46.884Z","type":"message"}
{"nick":"ljharb","message":"devsnek: i don't think a plenary topic, but yes an issue","date":"2020-01-03T21:22:33.808Z","type":"message"}
{"nick":"devsnek","message":"like doing `Array.caller` or `Array.arguments`","date":"2020-01-03T21:22:44.586Z","type":"message"}
{"nick":"bathos","message":"The grammar includes `[lookahead ≠ \"let\" \"[\"]` in many places, but I’m unclear on what would make that valid. The quoted text seems to be saying that this should be `[lookahead ∉ { \"let\" \"[\" }]`","date":"2020-01-03T21:23:06.340Z","type":"message"}
{"nick":"ljharb","message":"devsnek: oh hm, not sure about that part","date":"2020-01-03T21:23:09.055Z","type":"message"}
{"nick":"devsnek","message":"i'm not sure if that exactly was the topic","date":"2020-01-03T21:23:25.767Z","type":"message"}
{"nick":"devsnek","message":"but i'm pretty sure something weird like that","date":"2020-01-03T21:23:42.293Z","type":"message"}
{"nick":"devsnek","message":"bathos: `if (let [x] = 1)`","date":"2020-01-03T21:24:05.168Z","type":"message"}
{"nick":"devsnek","message":"er","date":"2020-01-03T21:24:09.633Z","type":"message"}
{"nick":"devsnek","message":"for","date":"2020-01-03T21:24:10.637Z","type":"message"}
{"nick":"devsnek","message":"not if","date":"2020-01-03T21:24:12.306Z","type":"message"}
{"nick":"devsnek","message":"my rust habits are leaking in","date":"2020-01-03T21:24:17.327Z","type":"message"}
{"nick":"bathos","message":"I understand the intended effect, I’m referring to the notation","date":"2020-01-03T21:24:37.728Z","type":"message"}
{"nick":"rkirsling","message":"devsnek: it's okay, you're just excited for Devin's proposal, right","date":"2020-01-03T21:24:50.282Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2020-01-03T21:24:56.923Z","type":"message"}
{"nick":"devsnek","message":"bathos: `lookahead ∉ { \"let\" \"[\" }` means lookahead cannot be one of the elements in the set","date":"2020-01-03T21:25:23.915Z","type":"message"}
{"nick":"bathos","message":"There’s seemingly no allowance for `[lookahead ≠ terminal-sequence]`, only the set notation seems to permit its members to be sequences of terminals / nonterminals","date":"2020-01-03T21:25:29.526Z","type":"message"}
{"nick":"bathos","message":"devsnek: only if there is a comma","date":"2020-01-03T21:25:43.730Z","type":"message"}
{"nick":"bathos","message":"set members can be sequences, as occurs in several places and is mentioned in that quoted bit. Commas separate the sequences","date":"2020-01-03T21:26:19.402Z","type":"message"}
{"nick":"devsnek","message":"oh you mean a single-itemed set of that production","date":"2020-01-03T21:26:53.874Z","type":"message"}
{"nick":"rkirsling","message":"hmm","date":"2020-01-03T21:26:54.215Z","type":"message"}
{"nick":"bathos","message":"(I mean, yes, it means lookahead cannot be one of the elements in the set. But that’s a set with one member)","date":"2020-01-03T21:26:55.972Z","type":"message"}
{"nick":"devsnek","message":"`If the set consists of a single terminal the phrase “[lookahead ≠ terminal]” may be used.`","date":"2020-01-03T21:27:06.456Z","type":"message"}
{"nick":"devsnek","message":"i think this is what you're looking for then","date":"2020-01-03T21:27:20.141Z","type":"message"}
{"nick":"bathos","message":"Right — but `let [` is two terminals.","date":"2020-01-03T21:27:47.824Z","type":"message"}
{"nick":"bathos","message":"It says the ‘shorthand’ is available when it’s just one.","date":"2020-01-03T21:28:14.984Z","type":"message"}
{"nick":"bathos","message":"I think maybe it should say ‘if the set consists of a single member’ or ‘if the set consists of a single sequence of terminals’","date":"2020-01-03T21:29:09.213Z","type":"message"}
{"nick":"rkirsling","message":"yeah the wording could be improved","date":"2020-01-03T21:29:21.624Z","type":"message"}
{"nick":"bathos","message":"(Example of sequences in the set notation here: https://tc39.es/ecma262/#prod-ExpressionStatement)","date":"2020-01-03T21:29:37.039Z","type":"message"}
{"nick":"rkirsling","message":"thankfully it's doing what it means to, so it's really just a little editorial thing","date":"2020-01-03T21:29:41.626Z","type":"message"}
{"nick":"devsnek","message":"i would say `If the set consists of a single element the phrase “[lookahead ≠ element]” may be used.`","date":"2020-01-03T21:30:20.907Z","type":"message"}
{"nick":"rkirsling","message":"the rest of the paragraph does refer to \"terminal sequence(s)\" though","date":"2020-01-03T21:31:26.210Z","type":"message"}
{"nick":"rkirsling","message":"so I think it would be natural to carry that through","date":"2020-01-03T21:31:35.507Z","type":"message"}
{"nick":"rkirsling","message":"(er well, there are two such paragraphs that are very similar but yeah)","date":"2020-01-03T21:31:48.390Z","type":"message"}
{"nick":"devsnek","message":"we should just have a link to a live web chat with waldemar","date":"2020-01-03T21:32:24.036Z","type":"message"}
{"nick":"devsnek","message":"where he explains the grammar","date":"2020-01-03T21:32:27.845Z","type":"message"}
{"nick":"rkirsling","message":"heh, I'm sure he'd love that","date":"2020-01-03T21:32:44.213Z","type":"message"}
{"nick":"rkirsling","message":"but it's just a simple oversight, really","date":"2020-01-03T21:32:52.738Z","type":"message"}
{"nick":"bathos","message":"Yeah — I think either \"element\" or \"terminal sequence\" would work. I wasn’t sure if I was missing something or if it was a typo etc.","date":"2020-01-03T21:32:54.742Z","type":"message"}
{"nick":"rkirsling","message":"another thing I noticed while looking at this","date":"2020-01-03T21:34:08.049Z","type":"message"}
{"nick":"rkirsling","message":"I wonder if the font usage in https://tc39.es/ecma262/#sec-grammar-notation is really what it's meant to be","date":"2020-01-03T21:34:25.013Z","type":"message"}
{"nick":"rkirsling","message":"like","date":"2020-01-03T21:34:46.373Z","type":"message"}
{"nick":"rkirsling","message":"> Terminal symbols are shown in `fixed width` font, both in the productions of the grammars and throughout this specification whenever the text directly refers to such a terminal symbol.","date":"2020-01-03T21:34:51.669Z","type":"message"}
{"nick":"rkirsling","message":"er well hmm actually maybe it's not fixable","date":"2020-01-03T21:35:27.965Z","type":"message"}
{"nick":"bathos","message":"Yeah, that should be something like ‘literal’ terminals. Referenced terminals use italics like nonterminals do.","date":"2020-01-03T21:35:29.096Z","type":"message"}
{"nick":"rkirsling","message":"er at least I was focused on the fixed width font being different in the paragraph vs. the production","date":"2020-01-03T21:36:04.788Z","type":"message"}
{"nick":"bathos","message":"ah","date":"2020-01-03T21:36:16.416Z","type":"message"}
{"nick":"rkirsling","message":"but that's just that our <code> font and our <emu-t> font are different, but both are at least fixed width, and the latter isn't choosable in body text","date":"2020-01-03T21:37:12.569Z","type":"message"}
{"nick":"rkirsling","message":"so I guess that's fine-ish","date":"2020-01-03T21:37:20.551Z","type":"message"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-03T22:09:40.434Z","type":"quit"}
{"nick":"bathos","message":"rkisling/devsnek — opened a PR for the description of the single-element shorthand: https://github.com/tc39/ecma262/pull/1828","date":"2020-01-03T22:14:59.744Z","type":"message"}
{"nick":"itamarok","date":"2020-01-03T22:15:23.267Z","type":"join"}
{"nick":"devsnek","message":"shu: dunno if you saw my ping yesterday, but the changes to function arguments broke the scope a bit. i'm trying to figure out a fix but i'm not 100% sure what the intended behaviour is supposed to be","date":"2020-01-03T22:17:22.140Z","type":"message"}
{"nick":"devsnek","message":"bathos: nice","date":"2020-01-03T22:17:38.840Z","type":"message"}
{"nick":"itamarok","reason":"Ping timeout: 260 seconds","date":"2020-01-03T22:19:57.252Z","type":"quit"}
{"nick":"shu","message":"devsnek: oh? i missed it, will look in a bit","date":"2020-01-03T22:20:44.336Z","type":"message"}
{"nick":"devsnek","message":"shu: very quick example `(function(a, b = a) {})()`, `a` is created in `env`, but `env` is not attached to the current context, so in `b = a`, looking up `a` is a reference error","date":"2020-01-03T22:21:33.414Z","type":"message"}
{"nick":"aradesh","reason":"Quit: WeeChat 1.9.1","date":"2020-01-03T22:22:25.163Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-03T22:31:10.075Z","type":"join"}
{"nick":"Wizek","reason":"Quit: Connection closed for inactivity","date":"2020-01-03T22:48:30.370Z","type":"quit"}
{"nick":"shu","message":"devsnek: isn't that example okay because env is passed in explicitly to IteratorBindingInitialization?","date":"2020-01-03T22:51:01.987Z","type":"message"}
{"nick":"devsnek","message":"shu: it creates the bindings just fine","date":"2020-01-03T22:51:26.369Z","type":"message"}
{"nick":"devsnek","message":"but the expression on the right hand side of an initializer","date":"2020-01-03T22:51:34.495Z","type":"message"}
{"nick":"devsnek","message":"can not see the environment","date":"2020-01-03T22:51:38.869Z","type":"message"}
{"nick":"shu","message":"ah, indeed that seems like a bug yes","date":"2020-01-03T22:52:32.660Z","type":"message"}
{"nick":"shu","message":"good catch","date":"2020-01-03T22:53:36.729Z","type":"message"}
{"nick":"shu","message":"step 2 for FDI needs to set both the LexicalEnvironment and the VariableEnvironment","date":"2020-01-03T22:54:02.605Z","type":"message"}
{"nick":"devsnek","message":"like `calleeContext.LexicalEnvironment = env` after step 19?","date":"2020-01-03T22:55:12.262Z","type":"message"}
{"nick":"devsnek","message":"well [[LexicalEnvironment]]","date":"2020-01-03T22:55:31.055Z","type":"message"}
{"nick":"devsnek","message":"or however the spec notates it","date":"2020-01-03T22:55:35.569Z","type":"message"}
{"nick":"shu","message":"i think it's one of those non-slot slots","date":"2020-01-03T22:57:34.803Z","type":"message"}
{"nick":"shu","message":"so it'd just be \"Set calleeContext's LexicalEnvironment to env\"","date":"2020-01-03T22:58:06.868Z","type":"message"}
{"nick":"devsnek","message":"seems to work in engine262","date":"2020-01-03T22:58:11.016Z","type":"message"}
{"nick":"devsnek","message":"this whole section of the spec is very confusing","date":"2020-01-03T22:58:46.065Z","type":"message"}
{"nick":"devsnek","message":"`(function(a = eval('var c = 1')) { return c })()` should this return 1 or throw an error","date":"2020-01-03T22:59:30.598Z","type":"message"}
{"nick":"devsnek","message":"i thought the extra environment was to separate it so it should throw but maybe i have the wrong idea","date":"2020-01-03T23:00:41.804Z","type":"message"}
{"nick":"shu","message":"that should return 1","date":"2020-01-03T23:01:21.700Z","type":"message"}
{"nick":"shu","message":"from outer to inner, for a function with parameter expressions, the envs are:","date":"2020-01-03T23:02:57.025Z","type":"message"}
{"nick":"shu","message":"1. FunctionEnv (holds vars introduced by direct eval in parameter expressions) -> 2. DeclarativeEnv (params, \"arguments\", etc) -> 3. DeclarativeEnv (body vars) -> 4. DeclarativeEnv (body lexicals)","date":"2020-01-03T23:04:16.138Z","type":"message"}
{"nick":"shu","message":"during parameter evaluation, 1 is the context's VariableEnvironment and 2 is the context's LexicalEnvironment","date":"2020-01-03T23:04:35.786Z","type":"message"}
{"nick":"shu","message":"during body evaluation, 3 is the VarEnv and 4 is the LexEnv","date":"2020-01-03T23:04:45.687Z","type":"message"}
{"nick":"shu","message":"at least that's what it's supposed to be","date":"2020-01-03T23:04:52.387Z","type":"message"}
{"nick":"devsnek","message":"i see","date":"2020-01-03T23:04:57.521Z","type":"message"}
{"nick":"shu","message":"shall i prepare a PR or do you have one handy?","date":"2020-01-03T23:05:59.742Z","type":"message"}
{"nick":"devsnek","message":"you probably should","date":"2020-01-03T23:06:08.819Z","type":"message"}
{"nick":"shu","message":"will do","date":"2020-01-03T23:07:28.831Z","type":"message"}
{"nick":"rkirsling","message":"it's kind of weird how often `NOTE:`s are inlined into algs","date":"2020-01-03T23:07:45.970Z","type":"message"}
{"nick":"rkirsling","message":"seems like probably more than necessary","date":"2020-01-03T23:07:56.524Z","type":"message"}
{"nick":"shu","message":"yeah, ecmarkup feature request","date":"2020-01-03T23:07:59.325Z","type":"message"}
{"nick":"shu","message":"they at least shouldn't end up renumbering the alg steps","date":"2020-01-03T23:08:15.280Z","type":"message"}
{"nick":"rkirsling","message":"is there an existing one?","date":"2020-01-03T23:08:58.819Z","type":"message"}
{"nick":"devsnek","message":"i'm still getting weird errors in engine262 and i'm not sure if they're spec bugs or engine262 bugs lol","date":"2020-01-03T23:09:03.074Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/45797934.png","date":"2020-01-03T23:09:04.832Z","type":"message"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-03T23:10:03.778Z","type":"quit"}
{"nick":"shu","message":"devsnek: your second example should error","date":"2020-01-03T23:10:29.982Z","type":"message"}
{"nick":"shu","message":"though that error doesn't make sense","date":"2020-01-03T23:10:36.464Z","type":"message"}
{"nick":"shu","message":"that is a redeclaration error","date":"2020-01-03T23:10:40.954Z","type":"message"}
{"nick":"rkirsling","message":"maybe I should help out with ecmarkup stuff","date":"2020-01-03T23:10:47.730Z","type":"message"}
{"nick":"rkirsling","message":"so many things that could be done","date":"2020-01-03T23:10:53.497Z","type":"message"}
{"nick":"devsnek","message":"shu: it's a runtime reference error","date":"2020-01-03T23:10:57.392Z","type":"message"}
{"nick":"devsnek","message":"should it be a syntax error","date":"2020-01-03T23:11:05.734Z","type":"message"}
{"nick":"shu","message":"the parameter 'a' is like a lexical binding, and the direct eval 'a' is trying to declare in the VarEnv, which is outer of the lexical env that contains the parameter 'a'","date":"2020-01-03T23:11:17.914Z","type":"message"}
{"nick":"shu","message":"so when the direct eval runs it should be a SyntaxError","date":"2020-01-03T23:11:23.658Z","type":"message"}
{"nick":"devsnek","message":"i see","date":"2020-01-03T23:11:28.425Z","type":"message"}
{"nick":"itamarok","date":"2020-01-03T23:12:10.814Z","type":"join"}
{"nick":"devsnek","message":"shu: is that re-declaration check added in annex b","date":"2020-01-03T23:12:29.367Z","type":"message"}
{"nick":"mgol","date":"2020-01-03T23:13:11.158Z","type":"join"}
{"nick":"shu","message":"devsnek: no, that's just a regular redeclaration check afaik","date":"2020-01-03T23:13:26.327Z","type":"message"}
{"nick":"shu","message":"it's the same semantics redeclaration wise as `let a; { var a; }`","date":"2020-01-03T23:13:42.710Z","type":"message"}
{"nick":"devsnek","message":"i'm trying to see if my impl of EvalDeclarationInstantiation diverges","date":"2020-01-03T23:13:54.514Z","type":"message"}
{"nick":"shu","message":"there is only one place where a var can be declared \"over\" an already declared lexical binding","date":"2020-01-03T23:14:19.328Z","type":"message"}
{"nick":"shu","message":"i think...","date":"2020-01-03T23:14:22.806Z","type":"message"}
{"nick":"shu","message":"which is the weird annex b catch block semantics","date":"2020-01-03T23:14:31.256Z","type":"message"}
{"nick":"shu","message":"where you can have a var with the same name as the lexical catch binding","date":"2020-01-03T23:14:37.216Z","type":"message"}
{"nick":"devsnek","message":"`let a; eval('var a')` throws a syntax error as expected","date":"2020-01-03T23:17:54.525Z","type":"message"}
{"nick":"shu","message":"on function entry, there is a single environment that is both the VarEnv and the LexEnv","date":"2020-01-03T23:21:12.648Z","type":"message"}
{"nick":"shu","message":"and then once you hit sloppy step with parameter expressions, you make a new env, set that as the LexEnv but leave the VarEnv alone","date":"2020-01-03T23:21:43.862Z","type":"message"}
{"nick":"shu","message":"is that what you're doing?","date":"2020-01-03T23:21:54.864Z","type":"message"}
{"nick":"devsnek","message":"i added a step after 19 that sets the VariableEnvironment and the LexicalEnvironment to env","date":"2020-01-03T23:22:20.773Z","type":"message"}
{"nick":"devsnek","message":"should it just be the LexicalEnvironment","date":"2020-01-03T23:22:30.509Z","type":"message"}
{"nick":"shu","message":"yeah, sorry, not both, just LexicalEnv","date":"2020-01-03T23:22:47.614Z","type":"message"}
{"nick":"shu","message":"let me push the PR and you can see the diff, it's small","date":"2020-01-03T23:23:02.134Z","type":"message"}
{"nick":"devsnek","message":"ey it works now","date":"2020-01-03T23:23:50.132Z","type":"message"}
{"nick":"shu","message":":+1:","date":"2020-01-03T23:26:05.367Z","type":"message"}
{"nick":"devsnek","message":"i assume it should also throw in strict mode right","date":"2020-01-03T23:26:28.361Z","type":"message"}
{"nick":"devsnek","message":"actually","date":"2020-01-03T23:27:36.577Z","type":"message"}
{"nick":"shu","message":"no it does not","date":"2020-01-03T23:27:40.844Z","type":"message"}
{"nick":"shu","message":"strict mode direct evals have their own var envs, vars cannot escape","date":"2020-01-03T23:27:48.447Z","type":"message"}
{"nick":"devsnek","message":"i think test262 needs to flag some tests as strict only in that case","date":"2020-01-03T23:28:06.132Z","type":"message"}
{"nick":"shu","message":"ah, i updated test262 for this, did i miss some?","date":"2020-01-03T23:28:29.092Z","type":"message"}
{"nick":"devsnek","message":"uh language/expressions/arrow-function/eval-var-scope-syntax-err.js","date":"2020-01-03T23:29:11.819Z","type":"message"}
{"nick":"devsnek","message":"language/expressions/async-generator/eval-var-scope-syntax-err.js","date":"2020-01-03T23:29:17.198Z","type":"message"}
{"nick":"devsnek","message":"i think these are all generated","date":"2020-01-03T23:29:21.859Z","type":"message"}
{"nick":"shu","message":"the description says \"sloppy only\"","date":"2020-01-03T23:29:49.555Z","type":"message"}
{"nick":"devsnek","message":"yeah","date":"2020-01-03T23:29:55.689Z","type":"message"}
{"nick":"devsnek","message":"should not run in strict mode","date":"2020-01-03T23:29:58.900Z","type":"message"}
{"nick":"shu","message":"there's a flag for that?","date":"2020-01-03T23:30:04.505Z","type":"message"}
{"nick":"devsnek","message":"yes by default all tests run in strict and sloppy mode","date":"2020-01-03T23:30:17.857Z","type":"message"}
{"nick":"shu","message":"wat","date":"2020-01-03T23:30:23.625Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2020-01-03T23:30:25.913Z","type":"message"}
{"nick":"devsnek","message":"there are two flags","date":"2020-01-03T23:31:03.538Z","type":"message"}
{"nick":"devsnek","message":"onlyStrict and noStrict","date":"2020-01-03T23:31:06.310Z","type":"message"}
{"nick":"rkirsling","message":"shu: how were you visualizing an inline note appearing without using a list item numeral?","date":"2020-01-03T23:41:44.785Z","type":"message"}
{"nick":"devsnek","message":"i assume like in the html spec","date":"2020-01-03T23:42:37.063Z","type":"message"}
{"nick":"rkirsling","message":"do they have the full note styling injected into the steps?","date":"2020-01-03T23:43:00.988Z","type":"message"}
{"nick":"shu","message":"rkirsling: i have not thought too much about it, maybe a differently colored box with the same indent as the step, but without a numeral?","date":"2020-01-03T23:43:07.636Z","type":"message"}
{"nick":"rkirsling","message":"right fair enough","date":"2020-01-03T23:43:16.263Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/45799992.png","date":"2020-01-03T23:43:21.872Z","type":"message"}
{"nick":"rkirsling","message":"cool","date":"2020-01-03T23:43:28.662Z","type":"message"}
{"nick":"shu","message":"we could get fancy like give notes their own separate ordinal","date":"2020-01-03T23:43:47.023Z","type":"message"}
{"nick":"devsnek","message":"i propose footnotes","date":"2020-01-03T23:44:05.945Z","type":"message"}
{"nick":"rkirsling","message":"well I would leave that part for after https://github.com/tc39/ecma262/issues/1825 I guess, but for now, I might just address the cases where either (1) there's a NOTE tacked onto the end of a line or (2) the final step is a NOTE that applies to the whole alg","date":"2020-01-03T23:44:21.364Z","type":"message"}
{"nick":"devsnek","message":"(/s)","date":"2020-01-03T23:44:23.087Z","type":"message"}
{"nick":"shu","message":"i think i like them inline actually","date":"2020-01-03T23:44:23.514Z","type":"message"}
{"nick":"devsnek","message":"yeah i was kidding, footnotes would be terrible","date":"2020-01-03T23:44:35.890Z","type":"message"}
{"nick":"devsnek","message":"having to jump to the bottom of an 800 page document","date":"2020-01-03T23:44:42.523Z","type":"message"}
{"nick":"rkirsling","message":"'cause those are the only two cases that I find problematic","date":"2020-01-03T23:44:50.462Z","type":"message"}
{"nick":"shu","message":"\"for footnotes, please purchase Volume: Footnotes\"","date":"2020-01-03T23:45:09.923Z","type":"message"}
{"nick":"rkirsling","message":"lol","date":"2020-01-03T23:45:15.972Z","type":"message"}
{"nick":"rkirsling","message":"\"if Ecma were an academic publishing org\"","date":"2020-01-03T23:45:35.764Z","type":"message"}
{"nick":"devsnek","message":"can we just copy everything the wasm spec does","date":"2020-01-03T23:46:01.042Z","type":"message"}
{"nick":"devsnek","message":"visually i mean","date":"2020-01-03T23:46:05.605Z","type":"message"}
{"nick":"devsnek","message":"writing our documentation in mathjax would suck","date":"2020-01-03T23:46:10.492Z","type":"message"}
{"nick":"shu","message":"like, use tex fonts?","date":"2020-01-03T23:46:15.696Z","type":"message"}
{"nick":"rkirsling","message":"wasm is real purty","date":"2020-01-03T23:46:24.248Z","type":"message"}
{"nick":"devsnek","message":"shu: yes","date":"2020-01-03T23:46:30.004Z","type":"message"}
{"nick":"rkirsling","message":"but yeah mathjax requires a multipage spec","date":"2020-01-03T23:46:35.611Z","type":"message"}
{"nick":"rkirsling","message":"otherwise it's \"brb gonna render 1200 pages of TeX real quick and get back to you\"","date":"2020-01-03T23:47:04.263Z","type":"message"}
{"nick":"devsnek","message":"i have a fun \"knuth\" theme for wikipedia","date":"2020-01-03T23:48:11.842Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/45800345.png","date":"2020-01-03T23:49:11.433Z","type":"message"}
{"nick":"shu","message":"no we are the people's spec","date":"2020-01-03T23:49:21.995Z","type":"message"}
{"nick":"shu","message":"none of them snooty tex type here","date":"2020-01-03T23:49:26.578Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/45800413.png","date":"2020-01-03T23:50:15.387Z","type":"message"}
{"nick":"rkirsling","message":"lol","date":"2020-01-03T23:51:59.942Z","type":"message"}
{"nick":"rkirsling","message":"shu: actually I think there is truth to that though","date":"2020-01-03T23:52:13.455Z","type":"message"}
{"nick":"rkirsling","message":"if we (along with most web specs) don't get by with normal web rendering then it seems a bit like blatant non-dogfooding","date":"2020-01-03T23:53:48.715Z","type":"message"}
{"nick":"rkirsling","message":"mathml would be a different story","date":"2020-01-03T23:54:14.639Z","type":"message"}
{"nick":"rkirsling","message":"hmm, there are a total of only four notes that bother me","date":"2020-01-03T23:55:28.309Z","type":"message"}
{"nick":"rkirsling","message":"*inline notes","date":"2020-01-03T23:55:38.195Z","type":"message"}
{"nick":"rkirsling","message":"three are on the same line as a normal alg step, one (well, maybe two) is a final inline note that should be non-inline","date":"2020-01-03T23:56:21.114Z","type":"message"}
{"nick":"rkirsling","message":"but I still hesitate slightly because step 14 at the end of https://tc39.es/ecma262/#sec-runtime-semantics-caseblockevaluation is tricky","date":"2020-01-03T23:57:04.942Z","type":"message"}
{"nick":"rkirsling","message":"well nah I suppose that can just be raised","date":"2020-01-03T23:57:34.338Z","type":"message"}
{"nick":"rkirsling","message":"these are effectively line comments after all","date":"2020-01-03T23:57:43.615Z","type":"message"}
{"nick":"devsnek","message":"that note is terrifying","date":"2020-01-03T23:58:14.947Z","type":"message"}
