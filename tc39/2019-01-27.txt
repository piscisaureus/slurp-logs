{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-01-27T00:32:05.650Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T00:57:43.811Z","type":"join"}
{"nick":"Domenic","message":"One day I hope the ES functions and constructors get a treatment like https://heycam.github.io/webidl/#create-an-interface-object and https://heycam.github.io/webidl/#create-an-interface-prototype-object instead of the current morass of prose \"as if\" conditions.","date":"2019-01-27T01:01:52.520Z","type":"message"}
{"nick":"Domenic","message":"For Web IDL we hope to roll that all up into one single algorithm which initializes everything in the realm.","date":"2019-01-27T01:02:15.539Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2019-01-27T01:26:46.757Z","type":"quit"}
{"nick":"akirose","date":"2019-01-27T01:27:24.996Z","type":"join"}
{"nick":"devsnek","message":"that's awesome","date":"2019-01-27T02:02:08.182Z","type":"message"}
{"nick":"ljharb","message":"What’s an example of an “as if”?","date":"2019-01-27T02:34:30.405Z","type":"message"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2019-01-27T03:05:56.111Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-01-27T03:25:16.622Z","type":"quit"}
{"nick":"Domenic","message":"Everything in https://tc39.github.io/ecma262/#sec-ecmascript-standard-built-in-objects","date":"2019-01-27T03:25:46.422Z","type":"message"}
{"nick":"Domenic","message":"I guess I meant \"Unless otherwise specified\"","date":"2019-01-27T03:26:21.788Z","type":"message"}
{"nick":"ljharb","message":"gotcha","date":"2019-01-27T03:26:42.113Z","type":"message"}
{"nick":"devsnek","message":"jmdyck and i were working on a refactoring of this a while ago","date":"2019-01-27T03:30:53.612Z","type":"message"}
{"nick":"devsnek","message":"i don't remember where it went","date":"2019-01-27T03:30:57.125Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2019-01-27T03:34:06.015Z","type":"quit"}
{"nick":"aki_","date":"2019-01-27T03:34:16.298Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2019-01-27T03:34:41.143Z","type":"nick"}
{"nick":"jmdyck","message":"Oh yeah, I really dislike \"Unless otherwise specified\"","date":"2019-01-27T04:05:06.839Z","type":"message"}
{"nick":"jmdyck","message":"devsnek: re \"i don't remember where it went\" https://github.com/tc39/ecma262/pull/539#issuecomment-451688570 ?","date":"2019-01-27T04:08:14.507Z","type":"message"}
{"nick":"devsnek","message":"jmdyck: that, and the formal writeup of how to interpret the definitions of the functions","date":"2019-01-27T04:09:15.455Z","type":"message"}
{"nick":"jmdyck","message":"yeah","date":"2019-01-27T04:09:27.467Z","type":"message"}
{"nick":"devsnek","message":"ljharb: is it on purpose that things get merged with --committer-date-is-author-date","date":"2019-01-27T05:33:06.460Z","type":"message"}
{"nick":"devsnek","message":"i was working on a script to grab the last 24 hours of commits to ecma262 but that obviously won't work in this case","date":"2019-01-27T05:34:01.474Z","type":"message"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-01-27T05:35:38.403Z","type":"quit"}
{"nick":"aki_","date":"2019-01-27T05:40:26.349Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2019-01-27T05:40:47.994Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-01-27T05:40:48.403Z","type":"nick"}
{"nick":"ljharb","message":"devsnek: i'm not using that flag anymore afaik","date":"2019-01-27T05:48:51.950Z","type":"message"}
{"nick":"ljharb","message":"devsnek: but that kind of script is never guaranteed to work on any git repo; commits aren't guaranteed to be chronological.","date":"2019-01-27T05:49:08.489Z","type":"message"}
{"nick":"devsnek","message":"yeah i found the reflector issue about how its caused by fast forward","date":"2019-01-27T05:49:18.769Z","type":"message"}
{"nick":"ljharb","message":"devsnek: you'd want to do a log from a reference sha, to HEAD","date":"2019-01-27T05:49:26.431Z","type":"message"}
{"nick":"devsnek","message":"(no project i've ever worked on uses this flow)","date":"2019-01-27T05:49:34.453Z","type":"message"}
{"nick":"ljharb","message":"there are many git flows; git doesn't have a history, it has a log.","date":"2019-01-27T05:49:59.054Z","type":"message"}
{"nick":"devsnek","message":"i'd call this git reality","date":"2019-01-27T05:50:25.220Z","type":"message"}
{"nick":"devsnek","message":"a pun on web reality","date":"2019-01-27T05:50:32.481Z","type":"message"}
{"nick":"ljharb","message":"lol","date":"2019-01-27T05:50:34.823Z","type":"message"}
{"nick":"devsnek","message":"is there something else that can be done","date":"2019-01-27T05:51:43.465Z","type":"message"}
{"nick":"devsnek","message":"putting iso dates in the commit messages or something","date":"2019-01-27T05:51:51.901Z","type":"message"}
{"nick":"ljharb","message":"what's the value of knowing when it landed?","date":"2019-01-27T05:52:32.295Z","type":"message"}
{"nick":"ljharb","message":"it seems like you're trying to compare to a reference date; but if you use a *sha* then it'll never be wrong","date":"2019-01-27T05:53:02.508Z","type":"message"}
{"nick":"devsnek","message":"what's the value of knowing when the patch was written","date":"2019-01-27T05:53:21.165Z","type":"message"}
{"nick":"ljharb","message":"that's dealing with the flag, and i'm not using the flag","date":"2019-01-27T05:53:42.675Z","type":"message"}
{"nick":"devsnek","message":"\"when the spec changed\" seems quite useful from a historical perspective","date":"2019-01-27T05:53:43.007Z","type":"message"}
{"nick":"ljharb","message":"sure, that data's all part of the PRs","date":"2019-01-27T05:53:54.698Z","type":"message"}
{"nick":"ljharb","message":"(which are all archived)","date":"2019-01-27T05:54:08.807Z","type":"message"}
{"nick":"devsnek","message":"it's usually part of the commit too","date":"2019-01-27T05:54:13.515Z","type":"message"}
{"nick":"devsnek","message":"we use the cli to land patches to node","date":"2019-01-27T05:54:21.803Z","type":"message"}
{"nick":"devsnek","message":"and they're dated by when they get merged","date":"2019-01-27T05:54:30.611Z","type":"message"}
{"nick":"ljharb","message":"sure, but the way node lands patches has tons of other problems, including that it marks PRs as closed and not merged - that's not really something to emulate","date":"2019-01-27T05:54:45.307Z","type":"message"}
{"nick":"ljharb","message":"so what's the value *to you*?","date":"2019-01-27T05:55:10.872Z","type":"message"}
{"nick":"devsnek","message":"they'd be marked as merged if we didn't amend them","date":"2019-01-27T05:55:11.635Z","type":"message"}
{"nick":"devsnek","message":"and we can still mark them as merged by pushing the amended commit back to the branch","date":"2019-01-27T05:55:38.551Z","type":"message"}
{"nick":"ljharb","message":"they're only marked as merged if they land as part of clicking the UI button, or if they're actually part of the PR branch","date":"2019-01-27T05:55:41.439Z","type":"message"}
{"nick":"ljharb","message":"right, if node did that it'd be great","date":"2019-01-27T05:55:47.548Z","type":"message"}
{"nick":"ljharb","message":"and that's exactly what is done here","date":"2019-01-27T05:55:55.488Z","type":"message"}
{"nick":"devsnek","message":"the value to me is a cron job i was working on to open issues on engine262 for changes to ecma262 in the last 24 hours","date":"2019-01-27T05:56:02.350Z","type":"message"}
{"nick":"ljharb","message":"ok so, instead of checking \"the last 24 hours\", can you persist a sha, and check \"since the last sha\"?","date":"2019-01-27T05:56:25.406Z","type":"message"}
{"nick":"devsnek","message":"its travis","date":"2019-01-27T05:56:37.257Z","type":"message"}
{"nick":"ljharb","message":"that has the advantage of always being 100% correct even if your cron job fails for a few days and then starts up again","date":"2019-01-27T05:56:49.939Z","type":"message"}
{"nick":"ljharb","message":"travis can persist things","date":"2019-01-27T05:56:55.988Z","type":"message"}
{"nick":"devsnek","message":"i couldn't find anything about travis persisting","date":"2019-01-27T05:57:07.287Z","type":"message"}
{"nick":"ljharb","message":"you can save the sha to a text file, and mark its dir as cached","date":"2019-01-27T05:57:09.562Z","type":"message"}
{"nick":"devsnek","message":"that would mess with the cache of the actual build jobs","date":"2019-01-27T05:57:27.630Z","type":"message"}
{"nick":"ljharb","message":"not sure what you mean","date":"2019-01-27T05:57:44.325Z","type":"message"}
{"nick":"ljharb","message":"every successful job writes back to the cache","date":"2019-01-27T05:57:50.262Z","type":"message"}
{"nick":"ljharb","message":"and every job reads from the cache, without exception","date":"2019-01-27T05:57:56.832Z","type":"message"}
{"nick":"devsnek","message":"so like","date":"2019-01-27T05:59:08.666Z","type":"message"}
{"nick":"ljharb","message":"(i often use travis's cache to cache the nvm cache dir as well as npm's, for example)","date":"2019-01-27T05:59:19.268Z","type":"message"}
{"nick":"devsnek","message":"`touch ~?last_processed_commit`","date":"2019-01-27T05:59:21.425Z","type":"message"}
{"nick":"devsnek","message":"except a slash instead of a question mark","date":"2019-01-27T05:59:29.751Z","type":"message"}
{"nick":"ljharb","message":"more like `cat $sha > last_processed_commit` but yeah","date":"2019-01-27T05:59:42.923Z","type":"message"}
{"nick":"ljharb","message":"if for some reason travis's cache wasn't reliable enough, you could also have travis push to a bare branch on your repo a single empty commit whose message is the sha, as another alternative","date":"2019-01-27T06:00:45.914Z","type":"message"}
{"nick":"ljharb","message":"¯\\_(ツ)_/¯ there's a bunch of ways to persist a single sha","date":"2019-01-27T06:00:58.813Z","type":"message"}
{"nick":"devsnek","message":"and of course the github api doesn't support \"commits after this sha\"","date":"2019-01-27T06:02:00.651Z","type":"message"}
{"nick":"ljharb","message":"it should, there's a \"since\" or something","date":"2019-01-27T06:02:24.185Z","type":"message"}
{"nick":"devsnek","message":"only by date","date":"2019-01-27T06:02:30.422Z","type":"message"}
{"nick":"ljharb","message":"O.o i'm pretty sure pagination works by sha, one sec","date":"2019-01-27T06:02:40.810Z","type":"message"}
{"nick":"devsnek","message":"i would have to fetch items in a loop","date":"2019-01-27T06:02:45.338Z","type":"message"}
{"nick":"devsnek","message":"until i find a commit object with that sha","date":"2019-01-27T06:02:50.015Z","type":"message"}
{"nick":"devsnek","message":"there's a \"sha\" param","date":"2019-01-27T06:02:58.685Z","type":"message"}
{"nick":"devsnek","message":"but it sets the head not the tail","date":"2019-01-27T06:03:04.073Z","type":"message"}
{"nick":"ljharb","message":"seems like a strange omission","date":"2019-01-27T06:04:09.135Z","type":"message"}
{"nick":"devsnek","message":"not really","date":"2019-01-27T06:04:15.231Z","type":"message"}
{"nick":"ljharb","message":"twitter's api works by date or by tweet ID, for example","date":"2019-01-27T06:04:16.737Z","type":"message"}
{"nick":"devsnek","message":"this api works by date too","date":"2019-01-27T06:04:35.910Z","type":"message"}
{"nick":"devsnek","message":"if the dates are correct","date":"2019-01-27T06:04:39.391Z","type":"message"}
{"nick":"TimothyGu","message":"devsnek: can we just… clone the repo and then do `git log $sha...HEAD`","date":"2019-01-27T06:04:59.772Z","type":"message"}
{"nick":"devsnek","message":"that's also an option","date":"2019-01-27T06:05:09.358Z","type":"message"}
{"nick":"ljharb","message":"or a git submodule","date":"2019-01-27T06:05:22.944Z","type":"message"}
{"nick":"devsnek","message":"but this script is getting annoyingly complex","date":"2019-01-27T06:05:25.411Z","type":"message"}
{"nick":"keith_miller","date":"2019-01-27T06:12:25.339Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T06:13:35.168Z","type":"quit"}
{"nick":"aki_","date":"2019-01-27T07:46:30.652Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2019-01-27T07:47:27.423Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-01-27T07:47:27.828Z","type":"nick"}
{"nick":"keith_miller","date":"2019-01-27T08:16:21.471Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T08:18:58.907Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T08:37:00.330Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-01-27T08:48:19.492Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T09:37:50.324Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T09:42:20.919Z","type":"quit"}
{"nick":"aki_","date":"2019-01-27T09:52:40.282Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2019-01-27T09:53:26.648Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-01-27T09:53:26.975Z","type":"nick"}
{"nick":"AtumT","date":"2019-01-27T11:08:40.602Z","type":"join"}
{"nick":"aki_","date":"2019-01-27T11:58:55.431Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2019-01-27T11:59:56.602Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-01-27T11:59:56.940Z","type":"nick"}
{"nick":"jmdyck","date":"2019-01-27T13:05:16.760Z","type":"join"}
{"nick":"keith_miller","date":"2019-01-27T13:45:00.300Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2019-01-27T14:05:47.399Z","type":"quit"}
{"nick":"akirose","date":"2019-01-27T14:06:36.316Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-01-27T14:08:04.696Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T14:26:53.588Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T14:31:36.105Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T14:40:49.899Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-01-27T14:46:50.079Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T14:48:53.589Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T14:51:30.079Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T14:59:17.830Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T15:00:43.626Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T15:03:56.830Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T15:05:53.676Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T15:27:47.400Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-01-27T15:42:06.441Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T15:48:37.626Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T15:51:06.959Z","type":"quit"}
{"nick":"keith_miller","date":"2019-01-27T16:07:10.241Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T16:11:10.843Z","type":"quit"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2019-01-27T16:13:23.293Z","type":"quit"}
{"nick":"akirose","date":"2019-01-27T16:13:47.930Z","type":"join"}
{"nick":"keith_miller","date":"2019-01-27T16:15:57.762Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-01-27T16:17:52.714Z","type":"quit"}
{"nick":"Domenic","message":"I do wish ecma262 just used squash and merge like a normal project.","date":"2019-01-27T17:03:54.665Z","type":"message"}
{"nick":"ljharb","message":"i think “like a normal project” is the thing that there’s no objective agreement on.","date":"2019-01-27T17:22:55.167Z","type":"message"}
{"nick":"Domenic","message":"I think there's objective statistics","date":"2019-01-27T17:23:12.381Z","type":"message"}
{"nick":"ljharb","message":"has github collected any?","date":"2019-01-27T17:23:29.648Z","type":"message"}
{"nick":"devsnek","message":"i've literally never seen a project do this except for ecma262","date":"2019-01-27T17:24:08.005Z","type":"message"}
{"nick":"ljharb","message":"anecdotally, of the hundreds of projects i interact with, only like 5-10 use squashmerge or rebasemerge. I’m sure we all have different anecdotal experiences.","date":"2019-01-27T17:24:08.365Z","type":"message"}
{"nick":"devsnek","message":"and i'm using literally correctly here","date":"2019-01-27T17:24:20.652Z","type":"message"}
{"nick":"ljharb","message":"sure, that’s another valid anecdotal perspective","date":"2019-01-27T17:24:58.102Z","type":"message"}
{"nick":"devsnek","message":"whatever happened to that webkit threading proposal","date":"2019-01-27T17:38:38.329Z","type":"message"}
{"nick":"aki_","date":"2019-01-27T18:19:28.536Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 250 seconds","date":"2019-01-27T18:20:32.812Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-01-27T18:20:33.197Z","type":"nick"}
{"nick":"AtumT_","date":"2019-01-27T18:58:44.594Z","type":"join"}
{"nick":"Domenic","message":"As far as I can tell that was pizlo's passion project, but he's full-time on WebAssembly, and I'm not sure how much appetite he (or other WebKit team members) have for pushing it in the language level. I'm also unsure how passionate he still is about it, versus thinking that WebAssembly threads is the way to go.","date":"2019-01-27T19:00:29.455Z","type":"message"}
{"nick":"AtumT","reason":"Ping timeout: 240 seconds","date":"2019-01-27T19:01:26.597Z","type":"quit"}
{"nick":"jmdyck1","date":"2019-01-27T19:46:56.314Z","type":"join"}
{"nick":"jmdyck","reason":"Ping timeout: 272 seconds","date":"2019-01-27T19:47:30.908Z","type":"quit"}
{"nick":"aki_","date":"2019-01-27T20:26:14.055Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 250 seconds","date":"2019-01-27T20:27:04.443Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-01-27T20:27:04.747Z","type":"nick"}
{"nick":"Havvy","reason":"Ping timeout: 246 seconds","date":"2019-01-27T20:55:41.999Z","type":"quit"}
{"nick":"Havvy","date":"2019-01-27T21:11:56.597Z","type":"join"}
{"nick":"AtumT_","reason":"Quit: AtumT_","date":"2019-01-27T21:29:03.305Z","type":"quit"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2019-01-27T22:32:17.994Z","type":"quit"}
{"nick":"aki_","date":"2019-01-27T22:32:25.615Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2019-01-27T22:32:49.895Z","type":"nick"}
{"nick":"Havvy","reason":"Ping timeout: 240 seconds","date":"2019-01-27T23:34:26.625Z","type":"quit"}
{"nick":"Havvy","date":"2019-01-27T23:36:08.331Z","type":"join"}
