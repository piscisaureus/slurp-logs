{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-26T00:32:38.653Z","type":"quit"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-03-26T00:38:14.135Z","type":"quit"}
{"nick":"gibson042","date":"2018-03-26T00:54:13.891Z","type":"join"}
{"nick":"keith_miller","date":"2018-03-26T01:31:33.641Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-26T02:38:09.392Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-26T03:16:09.790Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-03-26T03:25:30.581Z","type":"quit"}
{"nick":"howdoi","date":"2018-03-26T03:56:14.570Z","type":"join"}
{"nick":"jwalden","date":"2018-03-26T04:21:15.987Z","type":"join"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-03-26T04:34:54.818Z","type":"quit"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2018-03-26T05:07:30.186Z","type":"quit"}
{"nick":"isiahmeadows","date":"2018-03-26T07:46:51.484Z","type":"join"}
{"nick":"keith_miller","date":"2018-03-26T08:50:32.728Z","type":"join"}
{"nick":"isiahmeadows","reason":"Quit: isiahmeadows","date":"2018-03-26T09:46:38.060Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-26T10:25:34.086Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-26T10:26:04.627Z","type":"join"}
{"nick":"AtumT","date":"2018-03-26T11:29:44.154Z","type":"join"}
{"nick":"jmdyck","date":"2018-03-26T11:40:13.978Z","type":"join"}
{"nick":"JasonW_","date":"2018-03-26T13:40:11.196Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-03-26T13:45:30.692Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-03-26T13:47:48.081Z","type":"join"}
{"nick":"bradleymeck","message":"devsnek: REPL got pushed back until some mental model stuff is sorted, we barely made agenda without it as well so we couldn't gloss over things","date":"2018-03-26T13:54:43.232Z","type":"message"}
{"nick":"devsnek","message":"ah ok","date":"2018-03-26T13:56:18.534Z","type":"message"}
{"nick":"JasonW_","reason":"Remote host closed the connection","date":"2018-03-26T14:01:42.170Z","type":"quit"}
{"nick":"Jayflux","date":"2018-03-26T14:11:41.257Z","type":"join"}
{"nick":"Jayflux","reason":"Changing host","date":"2018-03-26T14:11:41.502Z","type":"quit"}
{"nick":"Jayflux","date":"2018-03-26T14:11:41.502Z","type":"join"}
{"nick":"Jayflux","new_nick":"JaseW","date":"2018-03-26T14:21:46.790Z","type":"nick"}
{"nick":"JaseW","reason":"Remote host closed the connection","date":"2018-03-26T14:36:54.756Z","type":"quit"}
{"nick":"bradleymeck","message":"aklein: https://github.com/bmeck/proposal-richer-keys/tree/master/object-compositeKey was updated with tiny blurb about wanting it to be per realm, however some people wanted to ensure that keys could be used in weakmaps. so they always would need to return object references.","date":"2018-03-26T14:42:08.922Z","type":"message"}
{"nick":"bradleymeck","message":"that combined with making keys always have a lifetime (by ensuring they are not only composed of primitives) makes me think we could remove the per realm idea?","date":"2018-03-26T14:42:48.567Z","type":"message"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2018-03-26T14:59:00.648Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-03-26T14:59:31.645Z","type":"join"}
{"nick":"caridy","date":"2018-03-26T15:11:33.366Z","type":"join"}
{"nick":"bradleymeck","message":"aklein: I've also added some counter arguments to extending a class as a proper way to approach `rekey` after some thoughts: https://github.com/bmeck/proposal-richer-keys/tree/master/collection-rekey#why-not-encourage-extending-collections","date":"2018-03-26T15:27:51.789Z","type":"message"}
{"nick":"boaz","date":"2018-03-26T15:30:09.735Z","type":"join"}
{"nick":"aklein","message":"bradleymeck:  does \"remove the per realm idea\" mean that you get the same composite key in any realm?","date":"2018-03-26T15:31:45.642Z","type":"message"}
{"nick":"AtumT","reason":"Quit: No Ping reply in 180 seconds.","date":"2018-03-26T15:31:47.211Z","type":"quit"}
{"nick":"bradleymeck","message":"aklein: yea, but by being an object with null proto you shouldn't need to keep realms alive just by holding a key obtained from one","date":"2018-03-26T15:32:46.985Z","type":"message"}
{"nick":"bradleymeck","message":"I'm a bit concerned with per realm but don't have a clear argument about what happens when you pass values from different realms into the compositeKey factory","date":"2018-03-26T15:33:17.846Z","type":"message"}
{"nick":"AtumT","date":"2018-03-26T15:33:30.003Z","type":"join"}
{"nick":"bradleymeck","message":"having it be idempotent across realms makes it kind of a non-issue","date":"2018-03-26T15:33:40.647Z","type":"message"}
{"nick":"bradleymeck","message":"having it be per realm makes it seem weird, but cannot fully describe","date":"2018-03-26T15:33:53.059Z","type":"message"}
{"nick":"bradleymeck","message":"also, I would really like `.emplace` after realizing that","date":"2018-03-26T15:37:18.160Z","type":"message"}
{"nick":"bradleymeck","message":"but cannot think of a good API since `map.emplace(foo, factoryToCallIfMissing)` seems odd","date":"2018-03-26T15:38:00.886Z","type":"message"}
{"nick":"bradleymeck","message":"lots of extending on github is just to insert if the key is missing in various ways so `.emplace` seems a good thing (would even clean up some of my code for compositeKey)","date":"2018-03-26T15:41:17.762Z","type":"message"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2018-03-26T15:49:36.166Z","type":"quit"}
{"nick":"caridy","date":"2018-03-26T15:50:12.423Z","type":"join"}
