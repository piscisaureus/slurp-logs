{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-10T00:02:34.516Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-10T00:10:08.808Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-10T00:11:28.326Z","type":"join"}
{"nick":"shu","message":"whether or IsArray is useful or not as it stands isn't really material, the question is more like","date":"2020-01-10T00:53:15.276Z","type":"message"}
{"nick":"shu","message":"if we want observable behavior to be able to depend on \"if obj is a Foo exotic object\", that check should be decidable","date":"2020-01-10T00:54:11.324Z","type":"message"}
{"nick":"shu","message":"i am very surprised this is contentious","date":"2020-01-10T00:54:41.093Z","type":"message"}
{"nick":"devsnek","message":"same","date":"2020-01-10T00:54:46.521Z","type":"message"}
{"nick":"shu","message":"though i am heartened by allen chiming in in agreement","date":"2020-01-10T00:55:22.611Z","type":"message"}
{"nick":"jmdyck","message":"devsnek: (re 3 hrs ago): I wondered that myself. Here's another: can you write a proxy that behaves exactly like an ordinary object?","date":"2020-01-10T01:07:43.644Z","type":"message"}
{"nick":"devsnek","message":"that i know you can do","date":"2020-01-10T01:08:10.049Z","type":"message"}
{"nick":"jmdyck","message":"ok, then it's a wider issue than just \"X is a Foo exotic object\"","date":"2020-01-10T01:09:58.849Z","type":"message"}
{"nick":"shu","message":"how so?","date":"2020-01-10T01:10:29.442Z","type":"message"}
{"nick":"shu","message":"the spec has visibility into a Proxy that behaves like an ordinary object in evaluation and an ordinary object","date":"2020-01-10T01:10:59.255Z","type":"message"}
{"nick":"jmdyck","message":"If the semantics of \"X is a Foo object\" were \"X exhibits behavior that conforms to the spec for Foo objects\" and some alg said \"If X is an ordinary object, ...\" then that would accept a proxy (or some other non-standard exotic) that's behaving like an ordinary, which we presumably don't want, so that'd be another argument against me. (Except that I don't think the spec ever says anything like \"If X is an ordinary object\". Ther","date":"2020-01-10T01:25:18.685Z","type":"message"}
{"nick":"jmdyck","message":"sertions, but I'm guessing they wouldn't be a problem.)","date":"2020-01-10T01:25:18.790Z","type":"message"}
{"nick":"shu","message":"ah","date":"2020-01-10T01:26:58.959Z","type":"message"}
{"nick":"shu","message":"yes i can't say there are any special checking for ordinary objects, only exotics","date":"2020-01-10T01:27:31.296Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-10T01:32:12.029Z","type":"quit"}
{"nick":"jmdyck","message":"in fact, it's a little odd that the spec *does* have \"If X is a Foo exotic object\". Places where the MOP doesn't entirely abstract away different behaviors","date":"2020-01-10T01:34:25.559Z","type":"message"}
{"nick":"ljharb","message":"that i agree with","date":"2020-01-10T01:35:11.407Z","type":"message"}
{"nick":"ljharb","message":"i'd rather see abstract operations, something concrete","date":"2020-01-10T01:35:28.934Z","type":"message"}
{"nick":"jmdyck","message":"There's not a huge number of them; it might be do-able.","date":"2020-01-10T01:38:15.767Z","type":"message"}
{"nick":"keith_miller","date":"2020-01-10T01:42:14.724Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-10T02:15:08.833Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-10T02:26:17.291Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-10T02:45:29.091Z","type":"quit"}
{"nick":"devsnek","message":"i feel like we need some sort of strategic initiative to spend time improving our spec tooling, consistency, etc","date":"2020-01-10T04:08:39.021Z","type":"message"}
{"nick":"devsnek","message":"like just pause proposals for a few months","date":"2020-01-10T04:08:44.561Z","type":"message"}
{"nick":"rkirsling","message":"lol I would support that so hard","date":"2020-01-10T04:09:14.428Z","type":"message"}
{"nick":"devsnek","message":"i started to outline what i think would be a cool syntax for defining spec","date":"2020-01-10T04:09:47.556Z","type":"message"}
{"nick":"jmdyck","message":"(would give me some time to work on ecmaspeak)","date":"2020-01-10T04:10:02.591Z","type":"message"}
{"nick":"devsnek","message":"i don't know how to write vim highlighting files though so it looks very drab","date":"2020-01-10T04:10:03.863Z","type":"message"}
{"nick":"devsnek","message":"is ecmaspeak your spec evaluator","date":"2020-01-10T04:10:12.911Z","type":"message"}
{"nick":"jmdyck","message":"more like linter so far, but yeah","date":"2020-01-10T04:10:39.718Z","type":"message"}
{"nick":"jmdyck","message":"what's your cool syntax look like?","date":"2020-01-10T04:11:37.821Z","type":"message"}
{"nick":"jmdyck","message":"(and do you think it has a hope of being adopted, or is this just for fun?)","date":"2020-01-10T04:13:47.276Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/46334636.png","date":"2020-01-10T04:14:01.009Z","type":"message"}
{"nick":"devsnek","message":"it's still in the \"rough sketch\" stage","date":"2020-01-10T04:14:16.127Z","type":"message"}
{"nick":"devsnek","message":"i need to figure out a better sigil for variables","date":"2020-01-10T04:15:04.814Z","type":"message"}
{"nick":"jmdyck","message":"is it completely markdown-ish, or are there html tags elsewhere?","date":"2020-01-10T04:15:27.909Z","type":"message"}
{"nick":"devsnek","message":"there are not any html tags yet","date":"2020-01-10T04:15:37.841Z","type":"message"}
{"nick":"devsnek","message":"i should say, the goal is not to approximate markdown","date":"2020-01-10T04:15:49.938Z","type":"message"}
{"nick":"devsnek","message":"the dash was chosen because typing `1.` each time is awkward and visually confusing","date":"2020-01-10T04:16:10.133Z","type":"message"}
{"nick":"devsnek","message":"i chose it over `*` because `*` is often rendered at the top of the line","date":"2020-01-10T04:16:36.358Z","type":"message"}
{"nick":"devsnek","message":"I'm also trying to make sure the structure is really consistent so it can be parsed","date":"2020-01-10T04:17:04.191Z","type":"message"}
{"nick":"jmdyck","message":"is there a way to distinguish (what in the current spec is) an <emu-alg> from a <ol> from a <ul>?","date":"2020-01-10T04:18:13.368Z","type":"message"}
{"nick":"devsnek","message":"i haven't gotten to ol/ul yet","date":"2020-01-10T04:19:01.780Z","type":"message"}
{"nick":"devsnek","message":"jmdyck: i also had an idea of making it much more like actual code, but i'm not sure it if would catch on","date":"2020-01-10T04:25:06.361Z","type":"message"}
{"nick":"jmdyck","message":"just the emu-alg stuff, you mean?","date":"2020-01-10T04:25:31.778Z","type":"message"}
{"nick":"devsnek","message":"yeah","date":"2020-01-10T04:25:58.552Z","type":"message"}
{"nick":"devsnek","message":"it would render out mostly the same though","date":"2020-01-10T04:26:53.537Z","type":"message"}
{"nick":"jmdyck","message":"actual code in an actual programming language?","date":"2020-01-10T04:26:57.711Z","type":"message"}
{"nick":"devsnek","message":"not in a current programming language","date":"2020-01-10T04:27:10.415Z","type":"message"}
{"nick":"devsnek","message":"just a very regular syntax","date":"2020-01-10T04:27:14.841Z","type":"message"}
{"nick":"jmdyck","message":" just actual code in a hypothetical language","date":"2020-01-10T04:27:17.818Z","type":"message"}
{"nick":"devsnek","message":"where you use like `==` instead of \"is\"","date":"2020-01-10T04:27:19.107Z","type":"message"}
{"nick":"devsnek","message":"https://gc.gy/46335461.png","date":"2020-01-10T04:27:46.053Z","type":"message"}
{"nick":"devsnek","message":"notes could be // comments or something","date":"2020-01-10T04:27:56.358Z","type":"message"}
{"nick":"devsnek","message":"much easier to edit","date":"2020-01-10T04:28:04.751Z","type":"message"}
{"nick":"devsnek","message":"and if we render it right, much more regular patterns when reading","date":"2020-01-10T04:28:13.818Z","type":"message"}
{"nick":"jmdyck","message":"You're saying that would render out mostly the same as currently? E.g., the \"} else {\" would render as \"Else,\" ?","date":"2020-01-10T04:31:38.837Z","type":"message"}
{"nick":"devsnek","message":"yes","date":"2020-01-10T04:31:46.210Z","type":"message"}
{"nick":"devsnek","message":"my thinking is","date":"2020-01-10T04:32:17.038Z","type":"message"}
{"nick":"devsnek","message":"the build tooling would parse it completely, understand it, validate it","date":"2020-01-10T04:32:26.831Z","type":"message"}
{"nick":"devsnek","message":"and then with all that knowledge of the structure","date":"2020-01-10T04:32:32.062Z","type":"message"}
{"nick":"devsnek","message":"we can output nice human readable stuff","date":"2020-01-10T04:32:39.135Z","type":"message"}
{"nick":"jmdyck","message":"It's possible, but spec-authors might find the difference confusing.","date":"2020-01-10T04:33:19.901Z","type":"message"}
{"nick":"devsnek","message":"true","date":"2020-01-10T04:33:33.171Z","type":"message"}
{"nick":"devsnek","message":"there are downsides to everything tbh","date":"2020-01-10T04:33:53.892Z","type":"message"}
{"nick":"jmdyck","message":"e.g., see something in rendered spec, want to find correponding thing in source.","date":"2020-01-10T04:33:54.908Z","type":"message"}
{"nick":"devsnek","message":"right now the spec is so horrid to edit","date":"2020-01-10T04:34:02.348Z","type":"message"}
{"nick":"devsnek","message":"that actually might not be as hard as you think","date":"2020-01-10T04:34:17.085Z","type":"message"}
{"nick":"devsnek","message":"rendered spec can retain links to the exact line/column of the source","date":"2020-01-10T04:34:42.724Z","type":"message"}
{"nick":"jmdyck","message":"well, i don't find the current spec horrid to edit, so who knows what I'd find hard.","date":"2020-01-10T04:35:04.860Z","type":"message"}
{"nick":"devsnek","message":"i mean relatively","date":"2020-01-10T04:35:13.431Z","type":"message"}
{"nick":"devsnek","message":"like think how easy it is to edit some python code","date":"2020-01-10T04:35:21.880Z","type":"message"}
{"nick":"devsnek","message":"compared to how easy it is to edit some es spec logic","date":"2020-01-10T04:35:32.361Z","type":"message"}
{"nick":"jmdyck","message":"feels about the same to me","date":"2020-01-10T04:36:00.281Z","type":"message"}
{"nick":"devsnek","message":"ok maybe a language that doesn't have significant whitespace","date":"2020-01-10T04:36:10.986Z","type":"message"}
{"nick":"jmdyck","message":"but again: do you think it has a hope of being adopted, or is this just for fun?","date":"2020-01-10T04:41:23.426Z","type":"message"}
{"nick":"devsnek","message":"either way its for fun","date":"2020-01-10T04:41:38.003Z","type":"message"}
{"nick":"devsnek","message":"but if i got something seriously working","date":"2020-01-10T04:41:42.750Z","type":"message"}
{"nick":"devsnek","message":"and people liked it","date":"2020-01-10T04:41:52.324Z","type":"message"}
{"nick":"jmdyck","message":"if it were adopted, that'd be a huge diff and a ton of merge conflicts for in-flight PRs.","date":"2020-01-10T04:41:57.085Z","type":"message"}
{"nick":"devsnek","message":"yeah","date":"2020-01-10T04:42:02.431Z","type":"message"}
{"nick":"devsnek","message":"and all the git history would be lost","date":"2020-01-10T04:42:19.796Z","type":"message"}
{"nick":"jmdyck","message":"well, not lost, but harder to see","date":"2020-01-10T04:42:34.581Z","type":"message"}
{"nick":"devsnek","message":"i'm also looking into ways to manually reattribute the history","date":"2020-01-10T04:42:47.051Z","type":"message"}
{"nick":"jmdyck","message":"(e.g., in a 'blame')","date":"2020-01-10T04:42:51.026Z","type":"message"}
{"nick":"devsnek","message":"but i don't think i can parse the current spec with enough regularity to map the blames","date":"2020-01-10T04:43:03.984Z","type":"message"}
{"nick":"jmdyck","message":"not sure what you mean there. Attributing chunks of the new spec to the commits that were responsible for the corresponding chunk of the old spec?","date":"2020-01-10T04:44:43.576Z","type":"message"}
{"nick":"devsnek","message":"yeah","date":"2020-01-10T04:44:56.292Z","type":"message"}
{"nick":"devsnek","message":"like creating fake commit history","date":"2020-01-10T04:45:03.612Z","type":"message"}
{"nick":"jmdyck","message":"is that even theoretically possible?","date":"2020-01-10T04:45:09.435Z","type":"message"}
{"nick":"devsnek","message":"with the same author information and stuff","date":"2020-01-10T04:45:09.707Z","type":"message"}
{"nick":"devsnek","message":"yeah","date":"2020-01-10T04:45:13.376Z","type":"message"}
{"nick":"devsnek","message":"its just difficult","date":"2020-01-10T04:45:18.681Z","type":"message"}
{"nick":"jmdyck","message":"ok, i think i get it now.","date":"2020-01-10T04:45:28.073Z","type":"message"}
{"nick":"jmdyck","message":"the whole history?","date":"2020-01-10T04:45:53.623Z","type":"message"}
{"nick":"devsnek","message":"no just one layer of indirection","date":"2020-01-10T04:46:01.198Z","type":"message"}
{"nick":"jmdyck","message":"don't know what that means in this context","date":"2020-01-10T04:46:31.521Z","type":"message"}
{"nick":"devsnek","message":"you'd end up looking at the current spec for anything more than one commit back","date":"2020-01-10T04:46:36.503Z","type":"message"}
{"nick":"devsnek","message":"from whenever we rewrote it","date":"2020-01-10T04:46:41.862Z","type":"message"}
{"nick":"devsnek","message":"its hard to describe","date":"2020-01-10T04:47:03.371Z","type":"message"}
{"nick":"jmdyck","message":"but would 'blame' work?","date":"2020-01-10T04:47:28.792Z","type":"message"}
{"nick":"devsnek","message":"sort of","date":"2020-01-10T04:47:46.082Z","type":"message"}
{"nick":"devsnek","message":"basically it would look like","date":"2020-01-10T04:47:53.181Z","type":"message"}
{"nick":"devsnek","message":"you click blame on the rewrite","date":"2020-01-10T04:47:59.488Z","type":"message"}
{"nick":"devsnek","message":"and you see something on some line like \"xyz: blah blah blah <link to actual commit>\"","date":"2020-01-10T04:48:25.769Z","type":"message"}
{"nick":"devsnek","message":"basically a fake placeholder commit","date":"2020-01-10T04:48:33.288Z","type":"message"}
{"nick":"devsnek","message":"that just targets those lines","date":"2020-01-10T04:48:42.786Z","type":"message"}
{"nick":"devsnek","message":"so that the blame is in the correct spot","date":"2020-01-10T04:48:49.822Z","type":"message"}
{"nick":"jmdyck","message":"I think I'd need to see a few lines from the current blame (involving a few different commits) and then the corresponding lines from the new blame. (Not that I'm asking for it now, just a suggestion if you want to propose it.)","date":"2020-01-10T04:51:09.295Z","type":"message"}
{"nick":"devsnek","message":"yeah i would figure it all out first","date":"2020-01-10T04:53:02.619Z","type":"message"}
{"nick":"itamarok","date":"2020-01-10T05:24:40.024Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 252 seconds","date":"2020-01-10T05:28:48.051Z","type":"quit"}
{"nick":"jmdyck","reason":"Ping timeout: 265 seconds","date":"2020-01-10T05:31:51.225Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-10T06:07:08.798Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-10T06:17:28.069Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2020-01-10T07:26:50.413Z","type":"quit"}
{"nick":"mgol","date":"2020-01-10T08:00:25.977Z","type":"join"}
{"nick":"bathos","reason":"Quit: Connection closed for inactivity","date":"2020-01-10T08:13:31.952Z","type":"quit"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-10T08:17:35.387Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-10T09:39:45.606Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2020-01-10T10:00:10.413Z","type":"quit"}
{"nick":"mgol","date":"2020-01-10T10:38:14.075Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-10T10:50:41.247Z","type":"quit"}
{"nick":"mgol","date":"2020-01-10T10:51:42.705Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-10T11:15:47.335Z","type":"quit"}
{"nick":"mgol","date":"2020-01-10T11:16:38.747Z","type":"join"}
{"nick":"jmdyck","date":"2020-01-10T11:45:29.154Z","type":"join"}
{"nick":"itamarok","date":"2020-01-10T12:54:54.844Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 246 seconds","date":"2020-01-10T12:59:09.089Z","type":"quit"}
{"nick":"gibson042","date":"2020-01-10T13:10:48.285Z","type":"join"}
{"nick":"aqquadro","date":"2020-01-10T13:17:43.734Z","type":"join"}
{"nick":"aqquadro","reason":"Changing host","date":"2020-01-10T13:17:43.841Z","type":"quit"}
{"nick":"aqquadro","date":"2020-01-10T13:17:43.841Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 260 seconds","date":"2020-01-10T13:21:32.280Z","type":"quit"}
{"nick":"gibson042","date":"2020-01-10T13:28:57.442Z","type":"join"}
