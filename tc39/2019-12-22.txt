{"nick":"bathos","message":"I would def agree that it is confusing for this to be left implicit, especially since it currently “half explains” the concept of tokens in play.","date":"2019-12-22T00:00:26.424Z","type":"message"}
{"nick":"bathos","message":"If we go to https://tc39.es/ecma262/#prod-TemplateLiteral you’ll see NoSubstitutionTemplate, TemplateHead, TemplateMiddle, and TemplateTail are all terminals of the syntactic grammar, but not TemplateSubstitutionTail, which is just a production of the lexical grammar that acts to group two alternatives that occur together more than once. It’s ‘gone’ at this stage — the productions of the lexical grammar aren’t","date":"2019-12-22T00:03:49.572Z","type":"message"}
{"nick":"bathos","message":"parse nodes.","date":"2019-12-22T00:03:49.678Z","type":"message"}
{"nick":"rkirsling","message":"I certainly see that it isn't used there but I don't understand non-post-hoc-ly what blesses the ones that are used","date":"2019-12-22T00:06:24.868Z","type":"message"}
{"nick":"bathos","message":"Well, how could it not be?","date":"2019-12-22T00:06:55.607Z","type":"message"}
{"nick":"bathos","message":"Is there any way the syntactic grammar could employ TemplateSubstitutionTail as a terminal?","date":"2019-12-22T00:07:29.381Z","type":"message"}
{"nick":"rkirsling","message":"it seems like the only difference between TemplateSubstitutionHead and TemplateMiddle / TemplateTail is that because the latter include raw tokens in their definition, there's no shorter way to refer to them","date":"2019-12-22T00:07:55.378Z","type":"message"}
{"nick":"rkirsling","message":"er \"shorter\" is a terrible word","date":"2019-12-22T00:08:42.595Z","type":"message"}
{"nick":"rkirsling","message":"more specific I mean","date":"2019-12-22T00:08:46.388Z","type":"message"}
{"nick":"bathos","message":"by TemplateSubstititionHead to you mean TemplateSubstitutionTail or Template?","date":"2019-12-22T00:09:42.214Z","type":"message"}
{"nick":"bathos","message":"do*","date":"2019-12-22T00:09:46.230Z","type":"message"}
{"nick":"rkirsling","message":"oops yeah","date":"2019-12-22T00:09:59.953Z","type":"message"}
{"nick":"rkirsling","message":"TemplateSubstitutionTail","date":"2019-12-22T00:10:04.844Z","type":"message"}
{"nick":"rkirsling","message":"but also Template in the same way","date":"2019-12-22T00:10:25.533Z","type":"message"}
{"nick":"bathos","message":"I may be misunderstanding the thing you see as being off-kilter","date":"2019-12-22T00:11:10.449Z","type":"message"}
{"nick":"jschoi___","date":"2019-12-22T00:11:26.882Z","type":"quit"}
{"nick":"jschoi___","date":"2019-12-22T00:11:38.442Z","type":"join"}
{"nick":"jschoi___","reason":"Client Quit","date":"2019-12-22T00:12:02.168Z","type":"quit"}
{"nick":"jschoi___","date":"2019-12-22T00:12:11.384Z","type":"join"}
{"nick":"jschoi___","reason":"Client Quit","date":"2019-12-22T00:12:11.451Z","type":"quit"}
{"nick":"jschoi__","date":"2019-12-22T00:12:29.792Z","type":"join"}
{"nick":"jschoi__","reason":"Client Quit","date":"2019-12-22T00:13:10.139Z","type":"quit"}
{"nick":"jschoi_","date":"2019-12-22T00:13:37.234Z","type":"join"}
{"nick":"bathos","message":"But I could say that the ‘blessing’ stems directly from necessity — it’s not arbitrary at least as far as ‘this specific thingie has a unique identity as a terminal symbol within the syntactic grammar’. A TemplateMiddle and a TemplateTail aren’t syntactically interchangeable.","date":"2019-12-22T00:13:46.660Z","type":"message"}
{"nick":"rkirsling","message":"completely don't understand how two productions in 11.8.6 can be said to have a different status from one another if both are further dependent on other productions; you seem to be suggesting a meaningful distinction between NoSubstitutionTemplate / TemplateHead / TemplateMiddle / TemplateTail which \"build\" something and TemplateSubstitutionTail / Template which simply list alternatives","date":"2019-12-22T00:14:33.200Z","type":"message"}
{"nick":"rkirsling","message":"but I don't know how to see this distinction manifest anywhere","date":"2019-12-22T00:15:02.710Z","type":"message"}
{"nick":"rkirsling","message":"right, a TemplateMiddle and a TemplateTail aren't interchangeable and so the syntactic grammar has had no reason to treat them the same for any purpose, but it seems like all you'd need is such a purpose, and voila","date":"2019-12-22T00:16:12.244Z","type":"message"}
{"nick":"bathos","message":"I think that’s a pretty accurate description of what I’m saying, yes. What makes this confusing is that ‘lexical production’ and ‘token’ are two different things, and yet a subset of lexical productions shares names with tokens, and the distinction is not made clear.","date":"2019-12-22T00:16:46.073Z","type":"message"}
{"nick":"rkirsling","message":"okay","date":"2019-12-22T00:18:03.899Z","type":"message"}
{"nick":"bathos","message":"The distinction can only be seen implicitly by actually analyzing which productions of the lexical grammar are referenced in the syntactic grammar. This alone is sufficient to make them terminals of that grammar.","date":"2019-12-22T00:18:06.896Z","type":"message"}
{"nick":"bathos","message":"(Like, in an abstract definitional grammar-y sense, not in spec terms specifically.)","date":"2019-12-22T00:19:22.867Z","type":"message"}
{"nick":"rkirsling","message":"but there is something 'unblessed' about using TemplateSubstitutionTail in the syntactic grammar right now, even if one could come up with a sensible purpose for doing so?","date":"2019-12-22T00:19:48.788Z","type":"message"}
{"nick":"bathos","message":"well, it would be unprecedented in this grammar to consider a single terminal to have two symbolic identities","date":"2019-12-22T00:20:31.753Z","type":"message"}
{"nick":"rkirsling","message":"okay fair enough","date":"2019-12-22T00:21:27.419Z","type":"message"}
{"nick":"bathos","message":"It’s confusing in ES because the lexical grammar is wound up with the syntactic grammar — the multiple goals are like a trick to keep pretending the lexical grammar is a ‘normal’ context-free, regular lexical grammar.","date":"2019-12-22T00:24:17.305Z","type":"message"}
{"nick":"rkirsling","message":"yeah","date":"2019-12-22T00:24:39.548Z","type":"message"}
{"nick":"bathos","message":"But if you imagine a more typical case, it’s usually possible to lex/tokenize independently from parsing.","date":"2019-12-22T00:24:40.284Z","type":"message"}
{"nick":"bathos","message":"And each token is just ‘one symbol’ and I think that’s what’s being aimed for here. But what you’re describing seems conceptually valid to me, just not something I’ve seen before in practice I think.","date":"2019-12-22T00:25:15.592Z","type":"message"}
{"nick":"rkirsling","message":"this is my first time thinking about goals at all, and evidently up 'til this point I've not really had to dwell on what makes the lexical grammar unique","date":"2019-12-22T00:25:15.698Z","type":"message"}
{"nick":"rkirsling","message":"gotcha","date":"2019-12-22T00:26:20.883Z","type":"message"}
{"nick":"bathos","message":"I am kind of obsessed with grammars/lexing/parsing so I’ve spent a lot of time on this subject within ES but I am by no means an expert so you should prob take my assessment with a few grains of salt.","date":"2019-12-22T00:26:38.425Z","type":"message"}
{"nick":"rkirsling","message":"haha","date":"2019-12-22T00:26:56.123Z","type":"message"}
{"nick":"jschoi_","date":"2019-12-22T00:28:09.071Z","type":"quit"}
{"nick":"rkirsling","message":"I am very much enjoying working on that domain within JSC's implementation but spec text still throws me curveballs sometimes","date":"2019-12-22T00:28:35.338Z","type":"message"}
{"nick":"jschoi","date":"2019-12-22T00:29:07.016Z","type":"join"}
{"nick":"rkirsling","message":"(not wrt to using it for impl, wrt to understanding whether something is \"written in the way that it's meant to be\" like this)","date":"2019-12-22T00:29:33.659Z","type":"message"}
{"nick":"rkirsling","message":"but also, having a background in linguistics, maybe it's better if I mentally rebucket the lexical grammar as \"morphology that happens to be specified in a way that looks almost just like syntax\"","date":"2019-12-22T00:30:16.459Z","type":"message"}
{"nick":"rkirsling","message":"(lol s/wrt to/wrt/ x2)","date":"2019-12-22T00:30:55.573Z","type":"message"}
{"nick":"jschoi","message":"bathos (“If the hashbang proposal, (private) instance fields proposal, and the smart pipeline proposal all ended up reaching stage four, would this imply ... nine different lexical goal symbols?”): For what it’s worth, a hope of the smart-pipe proposal is to consolidate several other alternative proposals, like partial application and binding, each of which proposes its own additional lexical symbol(s).","date":"2019-12-22T00:31:08.888Z","type":"message"}
{"nick":"bathos","message":"Understandably. On one hand I think the way the grammars are described in the spec is pretty elegant, on the other ... sometimes elegance isn’t the same as “optimized for accessible reading” ... it def took me a long time to figure out a lot of parts of the puzzle. I don’t know any other grammar that’s so parameterized (both explicitly and implicitly, e.g. ‘does annex b apply’, ‘is the goal symbol","date":"2019-12-22T00:31:28.829Z","type":"message"}
{"nick":"bathos","message":"module’, etc).","date":"2019-12-22T00:31:28.918Z","type":"message"}
{"nick":"jmdyck","message":"(dang, was afk for this conversation)","date":"2019-12-22T00:32:16.222Z","type":"message"}
{"nick":"rkirsling","message":"jmdyck: you're not too late lol","date":"2019-12-22T00:32:29.622Z","type":"message"}
{"nick":"jmdyck","message":"except now i have to go elsewhere","date":"2019-12-22T00:34:00.177Z","type":"message"}
{"nick":"jmdyck","message":"anyhow, the 'interface","date":"2019-12-22T00:34:11.147Z","type":"message"}
{"nick":"jmdyck","message":"'interface' between the syntactic and lexical grammars is ... interesting","date":"2019-12-22T00:34:29.058Z","type":"message"}
{"nick":"bathos","message":"@jschoi Cool, it would def be nice if partial application / topic were aligned. Partial application is a feature I think I would get a lot of use from personally.","date":"2019-12-22T00:34:56.017Z","type":"message"}
{"nick":"rkirsling","message":"shu: come share in my grad-school flashbacks about the morphosyntactic interface rn","date":"2019-12-22T00:35:32.897Z","type":"message"}
{"nick":"jschoi","message":"It’s certainly pretty true that there are a lot of tokens in the JavaScript language now.","date":"2019-12-22T00:40:20.007Z","type":"message"}
{"nick":"bathos","message":"@rkirsling my personal fave mindfuck in the lexical grammar is https://tc39.es/ecma262/#sec-html-like-comments. It took me two days to reverse engineer the reasoning behind why it is defined the way it is and what it is saying ... it does make sense, but it really felt like solving a puzzle.","date":"2019-12-22T00:46:33.137Z","type":"message"}
{"nick":"rkirsling","message":":ohno:","date":"2019-12-22T00:47:36.135Z","type":"message"}
{"nick":"rkirsling","message":"do I dare","date":"2019-12-22T00:47:47.992Z","type":"message"}
{"nick":"bathos","message":"haha, maybe you’ll get it faster than I did. It involves an explicit way of writing [yes LineTerminator here].","date":"2019-12-22T00:48:48.177Z","type":"message"}
{"nick":"bathos","message":"or in prose ‘--> begins a single line comment only if an input element preceding it was a LineTerminator or a comment including a LineTerminator or was a non-token input element which itself satisfies that same requirement’","date":"2019-12-22T00:51:21.783Z","type":"message"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-12-22T00:56:24.664Z","type":"quit"}
{"nick":"rkirsling","message":"I was always too afraid to know how HTML comments in JS actually worked but","date":"2019-12-22T00:56:40.488Z","type":"message"}
{"nick":"rkirsling","message":"I think I'm following","date":"2019-12-22T00:56:45.862Z","type":"message"}
{"nick":"rkirsling","message":"I'm amazed that <!-- and --> don't function _as_ a multiline comment?","date":"2019-12-22T00:57:34.385Z","type":"message"}
{"nick":"bathos","message":"And that `--> foo`, where legal, is all a comment — foo is not an identifier there!","date":"2019-12-22T00:58:52.878Z","type":"message"}
{"nick":"rkirsling","message":"😭 @ that","date":"2019-12-22T00:59:25.756Z","type":"message"}
{"nick":"bathos","message":"I believe this dates back to oldskool practices related to putting the content of <script> and <style> inside <!-- --> but I no longer even remember why people did that.","date":"2019-12-22T00:59:51.651Z","type":"message"}
{"nick":"bathos","message":"I guess to avoid entity references and things-that-look-like-closing-tags being interpreted as they normally would be.","date":"2019-12-22T01:00:29.723Z","type":"message"}
{"nick":"bathos","message":"Probably something related to Netscape Navigator or IE 3...","date":"2019-12-22T01:00:51.173Z","type":"message"}
{"nick":"rkirsling","message":"but I think we're saying that:","date":"2019-12-22T01:00:54.757Z","type":"message"}
{"nick":"rkirsling","message":"(1) <!-- can function like //","date":"2019-12-22T01:00:54.846Z","type":"message"}
{"nick":"rkirsling","message":"(2) --> can function like // after a line terminator and optionally a whitespace-separated sequence of partial-line /* */ comments","date":"2019-12-22T01:00:54.913Z","type":"message"}
{"nick":"rkirsling","message":"(3) --> can function like // after an (actual) multiline /* */ comment","date":"2019-12-22T01:00:54.914Z","type":"message"}
{"nick":"rkirsling","message":"yeah","date":"2019-12-22T01:01:27.859Z","type":"message"}
{"nick":"rkirsling","message":"it's hard to imagine those days accurately now that they're long-gore","date":"2019-12-22T01:01:45.519Z","type":"message"}
{"nick":"rkirsling","message":"*long-gone","date":"2019-12-22T01:01:51.870Z","type":"message"}
{"nick":"bathos","message":"yeah — any number of whitespace/comments/lineterminator as long as at least one included a line terminator and --> starts a comment","date":"2019-12-22T01:02:00.834Z","type":"message"}
{"nick":"rkirsling","message":"(but I guess you could call Annex B \"long gore\" lolol)","date":"2019-12-22T01:02:11.726Z","type":"message"}
{"nick":"devsnek","message":"if you use modules","date":"2019-12-22T03:28:47.856Z","type":"message"}
{"nick":"devsnek","message":"none of it matters","date":"2019-12-22T03:28:50.846Z","type":"message"}
{"nick":"devsnek","message":":P","date":"2019-12-22T03:28:50.913Z","type":"message"}
{"nick":"devsnek","message":"rkirsling: i found an interesting bug in jsc, it doesn't throw when Object.preventExtensions fails","date":"2019-12-22T03:29:28.793Z","type":"message"}
{"nick":"keith_miller","date":"2019-12-22T03:30:24.569Z","type":"join"}
{"nick":"rkirsling","message":"sounds like we need some coverage :D https://test262.report/browse/built-ins/Object/preventExtensions","date":"2019-12-22T03:33:02.499Z","type":"message"}
{"nick":"devsnek","message":"last commit to test262 adds coverage for it :D","date":"2019-12-22T03:33:28.949Z","type":"message"}
{"nick":"devsnek","message":"last commit to test262 honestly has a lot of shenanigans","date":"2019-12-22T03:33:49.845Z","type":"message"}
{"nick":"rkirsling","message":"cool","date":"2019-12-22T03:34:59.754Z","type":"message"}
{"nick":"drousso","date":"2019-12-22T05:18:16.814Z","type":"join"}
{"nick":"dpreston","date":"2019-12-22T05:27:39.029Z","type":"join"}
{"nick":"dpreston","reason":"Client Quit","date":"2019-12-22T05:29:28.486Z","type":"quit"}
{"nick":"jmdyck","message":"rkirsling: in the phrase \"syntactic grammar contexts where a TemplateMiddle or a TemplateTail is permitted\", you can't replace that with \"... a TemplateSubstitutionTail is permitted\", because there is no syntactic context where a TemplateSubstitutionTail is permitted. That is, using only syntactic productions, you can never derive (a sentence containing) TemplateSubstitutionTail.","date":"2019-12-22T06:02:28.958Z","type":"message"}
{"nick":"rkirsling","message":"ah","date":"2019-12-22T06:03:20.592Z","type":"message"}
{"nick":"jmdyck","message":"(whereas you certainly *can* derive TemplateMiddle and TemplateTail)","date":"2019-12-22T06:03:23.649Z","type":"message"}
{"nick":"rkirsling","message":"that is a satisfying explanation, thanks","date":"2019-12-22T06:03:58.813Z","type":"message"}
{"nick":"jmdyck","message":"ah good, yw.","date":"2019-12-22T06:04:07.619Z","type":"message"}
{"nick":"jmdyck","message":"And it looks like TemplateSubstitutionTail was added at the same time (in the same ES6 draft) as TemplateMiddle and TemplateTail (though they were originally named \"Quasi\" instead of \"Template\").","date":"2019-12-22T06:09:28.592Z","type":"message"}
{"nick":"devsnek","message":"templates are quite a weird bit of syntax","date":"2019-12-22T06:10:24.602Z","type":"message"}
{"nick":"rkirsling","message":"quasi, heh","date":"2019-12-22T06:15:48.953Z","type":"message"}
{"nick":"jmdyck","message":"bathos: In my opinion, the spec is a bit vague/inconsistent on what \"token\" means, so it's hard to say definitively whether an instance of TemplateSubstitutionTail qualifies as a token. My guess is, you're probably better off if you don't think of it as a token.","date":"2019-12-22T06:20:06.095Z","type":"message"}
{"nick":"jmdyck","message":"On second thought, i take that back. I'm not sure which way you're better off.","date":"2019-12-22T06:22:57.988Z","type":"message"}
{"nick":"jmdyck","message":"In the end, I don't think it matters.","date":"2019-12-22T06:25:48.356Z","type":"message"}
{"nick":"jmdyck","reason":"Ping timeout: 260 seconds","date":"2019-12-22T06:38:22.248Z","type":"quit"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-12-22T06:48:45.958Z","type":"quit"}
{"nick":"aradesh","date":"2019-12-22T07:52:42.821Z","type":"join"}
{"nick":"mgol","date":"2019-12-22T08:01:29.024Z","type":"join"}
{"nick":"bathos","message":"I agree it’s poorly described, but it’s still unambiguous at least as far as ‘it means what it means anywhere: the terminals of the syntactic grammar’ + the note in 11.5 makes it apparent that that’s what token is referring to. I’d be comfortable saying TemplateSubstitutionTail is ‘definitively not a token,’ but it’s true that it’s hard to point to a single bit of text that establishes that.","date":"2019-12-22T09:14:39.223Z","type":"message"}
{"nick":"bathos","message":"what makes tokens interesting in ES is that unlike in most langs w/ a lexical and syntactic grammar, the lexical grammar of ES produces things that aren’t tokens","date":"2019-12-22T09:16:08.882Z","type":"message"}
{"nick":"bathos","message":"like, produces in the sense of things the syntactic grammar needs to ‘see’","date":"2019-12-22T09:16:36.889Z","type":"message"}
{"nick":"bathos","message":"because of that, I’d expect it to be given a more concrete def","date":"2019-12-22T09:17:39.829Z","type":"message"}
{"nick":"bathos","message":"rather than being all read-between-the-linesy","date":"2019-12-22T09:17:58.024Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-12-22T10:21:30.209Z","type":"quit"}
{"nick":"itamarok","date":"2019-12-22T10:29:49.533Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 268 seconds","date":"2019-12-22T10:34:55.494Z","type":"quit"}
{"nick":"itamarok","date":"2019-12-22T12:23:48.046Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 252 seconds","date":"2019-12-22T12:27:58.105Z","type":"quit"}
{"nick":"jmdyck","date":"2019-12-22T13:03:45.461Z","type":"join"}
{"nick":"itamarok","date":"2019-12-22T13:19:17.287Z","type":"join"}
{"nick":"jmdyck","message":"For me, what's interesting about the syntactic/lexical boundary in ES...","date":"2019-12-22T13:46:26.473Z","type":"message"}
{"nick":"jmdyck","message":"(1) There's a lexical goal symbol at all. (Typically, a lexical 'grammar' will just be a bunch of rules that define the lexical form of the syntactic grammar's terminals.)","date":"2019-12-22T13:47:58.051Z","type":"message"}
{"nick":"jmdyck","message":"(2) There's actually 4 lexical goal symbols, and which one to use is determined by syntactic context.","date":"2019-12-22T13:48:43.369Z","type":"message"}
{"nick":"jmdyck","message":"(3) Once you've used the lexical grammar to parse the next input element, and have (at least theoretically) a lexical parse tree rooted at InputElement, the thing that the syntactic grammar/parser is interested in (the 'token', if you like) is not at a fixed depth below the root.","date":"2019-12-22T13:52:00.657Z","type":"message"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-12-22T13:54:03.368Z","type":"quit"}
{"nick":"jmdyck","message":"(E.g., a RegularExpressionLiteral is a child of the InputElement, but a TemplateHead is a child of a Template, which is a child of a CommonToken, which is a child of the InputElement.)","date":"2019-12-22T13:57:09.680Z","type":"message"}
{"nick":"itamarok","date":"2019-12-22T13:59:43.408Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 245 seconds","date":"2019-12-22T14:04:03.433Z","type":"quit"}
{"nick":"itamarok","date":"2019-12-22T15:10:32.834Z","type":"join"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-12-22T15:45:56.446Z","type":"quit"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-12-22T15:53:58.517Z","type":"quit"}
{"nick":"itamarok","date":"2019-12-22T15:59:41.421Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 245 seconds","date":"2019-12-22T16:04:03.453Z","type":"quit"}
{"nick":"bathos","message":"es makes the lexical goals explicit because it has more than one. when a lexical grammar doesn’t list one, it’s shorthand for ‘the goal symbol of this grammar has the following alternatives’","date":"2019-12-22T16:04:23.885Z","type":"message"}
{"nick":"bathos","message":"it is unusual to not have each token in that top disjunction, though the usefulness of other grouping stems from the multiple goals thing. with a single goal, there’d be no advantage","date":"2019-12-22T16:05:52.779Z","type":"message"}
{"nick":"itamarok","date":"2019-12-22T16:06:03.264Z","type":"join"}
{"nick":"bathos","message":"(i’m sure you already get that — just trying to articulate the reason for it. your points make sense, all of those things are unusual)","date":"2019-12-22T16:08:17.783Z","type":"message"}
{"nick":"bathos","message":"I’d add (4) line terminator twilight zone non token tokens","date":"2019-12-22T16:09:08.679Z","type":"message"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2019-12-22T16:30:07.941Z","type":"quit"}
{"nick":"itamarok","date":"2019-12-22T16:31:54.776Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 248 seconds","date":"2019-12-22T16:36:20.814Z","type":"quit"}
{"nick":"keith_miller","date":"2019-12-22T16:44:26.992Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-12-22T17:32:44.832Z","type":"quit"}
{"nick":"dpreston","date":"2019-12-22T20:23:42.445Z","type":"join"}
{"nick":"dpreston","date":"2019-12-22T20:34:56.062Z","type":"part"}
{"nick":"despreston","date":"2019-12-22T20:43:28.901Z","type":"join"}
{"nick":"despreston","date":"2019-12-22T20:50:34.663Z","type":"part"}
{"nick":"despreston","date":"2019-12-22T20:50:41.065Z","type":"join"}
{"nick":"devsnek","message":"would it be breaking to change block comments to be able to nest","date":"2019-12-22T20:51:54.516Z","type":"message"}
{"nick":"devsnek","message":"i think any code that would have changed behaviour would be syntactically invalid, just having a dangling `*/`","date":"2019-12-22T20:52:31.679Z","type":"message"}
{"nick":"despreston","message":"Hi, I'm looking for some help regarding a new proposal. I'm hoping for feedback on what additional information should be included in my initial README.","date":"2019-12-22T20:54:20.141Z","type":"message"}
{"nick":"despreston","message":"https://github.com/despreston/proposal-zip","date":"2019-12-22T20:54:23.389Z","type":"message"}
{"nick":"devsnek","message":"despreston: you might wanna say why it's preferable to something like Iterator.from(names).zip(scores)","date":"2019-12-22T20:57:42.717Z","type":"message"}
{"nick":"devsnek","message":"not that that exists right now, but it probably will soon","date":"2019-12-22T20:58:08.735Z","type":"message"}
{"nick":"despreston","message":"Thanks @devsnek -- that's a good idea.","date":"2019-12-22T20:58:10.953Z","type":"message"}
{"nick":"despreston","message":"has there been any work or discussion on Iterator.from(names).zip ?","date":"2019-12-22T20:58:25.376Z","type":"message"}
{"nick":"devsnek","message":"despreston: it was brought up on the iterator methods proposal","date":"2019-12-22T20:59:55.123Z","type":"message"}
{"nick":"devsnek","message":"i didn't include it because there are already 22 new methods","date":"2019-12-22T21:00:02.101Z","type":"message"}
{"nick":"devsnek","message":"but a future proposal will probably add it","date":"2019-12-22T21:00:07.891Z","type":"message"}
{"nick":"ljharb","message":"devsnek: `3 \\n */a/`?","date":"2019-12-22T21:03:26.766Z","type":"message"}
{"nick":"devsnek","message":"ljharb: how would that interfere with the block nesting though","date":"2019-12-22T21:04:05.642Z","type":"message"}
{"nick":"ljharb","message":"i'm probably not clear on what you're suggesting","date":"2019-12-22T21:04:32.067Z","type":"message"}
{"nick":"devsnek","message":"like","date":"2019-12-22T21:04:34.837Z","type":"message"}
{"nick":"devsnek","message":"`/* /* */ */`","date":"2019-12-22T21:04:40.681Z","type":"message"}
{"nick":"devsnek","message":"is one block comment","date":"2019-12-22T21:04:43.634Z","type":"message"}
{"nick":"devsnek","message":"instead of `/* /* */` and then `*/`","date":"2019-12-22T21:04:51.618Z","type":"message"}
{"nick":"devsnek","message":"its super annoying to block comment out something that already has a block comment somewhere within it","date":"2019-12-22T21:05:11.183Z","type":"message"}
{"nick":"devsnek","message":"in rust it keeps track of block comment depth","date":"2019-12-22T21:05:18.518Z","type":"message"}
{"nick":"devsnek","message":"so you can nest them","date":"2019-12-22T21:05:21.628Z","type":"message"}
{"nick":"devsnek","message":"and it's great","date":"2019-12-22T21:05:23.026Z","type":"message"}
{"nick":"despreston","message":"Thanks again, devsnek. I'll check those out.","date":"2019-12-22T21:06:24.084Z","type":"message"}
{"nick":"ljharb","message":"ok but so let's say i had `var g = 2; 3 \\n /* /* */ \\n */4/g` which produces NaN","date":"2019-12-22T21:06:46.301Z","type":"message"}
{"nick":"devsnek","message":"terrifying","date":"2019-12-22T21:09:02.816Z","type":"message"}
{"nick":"devsnek","message":"but yeah i guess that would break","date":"2019-12-22T21:09:12.474Z","type":"message"}
{"nick":"ljharb","message":"hopefully nobody has written code like that ofc","date":"2019-12-22T21:09:22.682Z","type":"message"}
{"nick":"devsnek","message":"but you couldn't do that in expression position","date":"2019-12-22T21:10:05.702Z","type":"message"}
{"nick":"devsnek","message":"so maybe we're safe?","date":"2019-12-22T21:10:20.883Z","type":"message"}
{"nick":"devsnek","message":"i dunno","date":"2019-12-22T21:10:44.513Z","type":"message"}
{"nick":"despreston","reason":"Ping timeout: 258 seconds","date":"2019-12-22T21:38:35.518Z","type":"quit"}
{"nick":"bathos","message":"weird as ‘multiply by regexp’ is, it’d plausibly be generated by a minifier inlining initializers. the code would have a bug (barring increasingly unlikely things) but it wouldn’t be a syntax error and could make it to prod out there somewhere","date":"2019-12-22T21:42:41.834Z","type":"message"}
{"nick":"drousso","date":"2019-12-22T21:44:09.486Z","type":"join"}
{"nick":"despreston","date":"2019-12-22T21:44:50.497Z","type":"join"}
{"nick":"bathos","message":"correct me if I’m wrong but I’m pretty sure even if found web-safe, anything that previously was syntactic valid having its interpretation *change* is subject to very high scrutiny (if ever permitted?) cause of the security implications of code that evals as two different things (as opposed to eval-vs-static-syntax-error) depending on es version implemented by agent","date":"2019-12-22T21:45:11.733Z","type":"message"}
{"nick":"bathos","message":"syntactically*","date":"2019-12-22T21:45:23.286Z","type":"message"}
{"nick":"bathos","message":"(I do think it would be a useful thing though, if it is considered possible)","date":"2019-12-22T21:46:36.895Z","type":"message"}
{"nick":"despreston","reason":"Client Quit","date":"2019-12-22T21:47:30.873Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-12-22T22:07:15.408Z","type":"quit"}
{"nick":"rkirsling","message":"yeah \"surely people wouldn't do that\" tends to be a tough sell wrt breaking the web","date":"2019-12-22T22:11:32.300Z","type":"message"}
{"nick":"bathos","message":"oh, there’s also a much more likely thing: // */","date":"2019-12-22T22:18:42.405Z","type":"message"}
{"nick":"bathos","message":"`/* /**/ console.log('hello'); // */`","date":"2019-12-22T22:19:12.973Z","type":"message"}
{"nick":"rkirsling","message":"nice","date":"2019-12-22T22:19:50.982Z","type":"message"}
{"nick":"rkirsling","message":"yeah `// */` is basically guaranteed to exist, I'd say","date":"2019-12-22T22:20:16.414Z","type":"message"}
{"nick":"bathos","message":"there’s also the reverse thing — comments like /* /* */ probably aren’t uncommon, and with that change, the code that follows them would become part of the comment","date":"2019-12-22T22:22:38.269Z","type":"message"}
{"nick":"bathos","message":"e.g. picture an accidentally nested jsdoc comment, or decorative comment borders like /* /* /* /* /*...","date":"2019-12-22T22:23:53.474Z","type":"message"}
{"nick":"bathos","message":"in fact, forget accidental partial nesting — some people do multiline bordering on the left where every line starts with /*","date":"2019-12-22T22:25:16.989Z","type":"message"}
{"nick":"rkirsling","message":"or people that were temporarily commenting out code and didn't actually remove it from the commit","date":"2019-12-22T22:25:24.279Z","type":"message"}
{"nick":"rkirsling","message":"but yeah I think that would be the guaranteed problem -- suddenly everybody's got block comments running 'til the end of the file","date":"2019-12-22T22:27:27.391Z","type":"message"}
{"nick":"bathos","message":"or the next comment, yeah","date":"2019-12-22T22:28:16.789Z","type":"message"}
{"nick":"keith_miller","date":"2019-12-22T23:00:45.667Z","type":"join"}
{"nick":"aradesh","reason":"Quit: WeeChat 1.9.1","date":"2019-12-22T23:05:59.656Z","type":"quit"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-12-22T23:22:34.036Z","type":"quit"}
{"nick":"mgol","date":"2019-12-22T23:47:24.811Z","type":"join"}
