{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-06-06T00:33:15.708Z","type":"quit"}
{"nick":"jridgewell","reason":"Quit: Connection closed for inactivity","date":"2019-06-06T00:37:40.053Z","type":"quit"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T00:38:50.725Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T00:41:45.318Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 248 seconds","date":"2019-06-06T00:46:24.262Z","type":"quit"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T00:50:40.501Z","type":"quit"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-06-06T01:19:13.292Z","type":"quit"}
{"nick":"bcoe","date":"2019-06-06T01:19:33.621Z","type":"join"}
{"nick":"chicoxyzzy","date":"2019-06-06T01:22:50.283Z","type":"join"}
{"nick":"bcoe","reason":"Ping timeout: 252 seconds","date":"2019-06-06T01:27:29.613Z","type":"quit"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T01:42:28.227Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T01:42:54.399Z","type":"join"}
{"nick":"cybai","date":"2019-06-06T01:59:29.352Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:06:08.519Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:06:57.676Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:07:54.336Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:08:10.284Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:13:45.972Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:14:24.987Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:19:19.948Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2019-06-06T02:19:32.757Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:20:01.662Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:24:56.310Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:25:37.393Z","type":"join"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2019-06-06T02:30:17.280Z","type":"quit"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:30:27.745Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:31:12.262Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:36:34.667Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:37:15.190Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:42:08.424Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:42:48.898Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:48:12.915Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:48:50.476Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:53:58.185Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T02:54:39.558Z","type":"join"}
{"nick":"jwalden","date":"2019-06-06T02:59:02.450Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T02:59:32.014Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T03:00:14.814Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T03:05:12.502Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T03:05:50.379Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T03:23:35.468Z","type":"quit"}
{"nick":"jiyeqian","date":"2019-06-06T03:42:26.889Z","type":"join"}
{"nick":"jiyeqian","date":"2019-06-06T03:42:37.438Z","type":"part"}
{"nick":"ghermeto","reason":"Remote host closed the connection","date":"2019-06-06T04:48:52.820Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-06-06T04:51:00.975Z","type":"quit"}
{"nick":"hellauer","reason":"Ping timeout: 258 seconds","date":"2019-06-06T05:59:12.133Z","type":"quit"}
{"nick":"hellauer","date":"2019-06-06T06:00:14.249Z","type":"join"}
{"nick":"jwalden","reason":"Quit: g'night world","date":"2019-06-06T06:17:33.395Z","type":"quit"}
{"nick":"jridgewell","date":"2019-06-06T06:30:48.114Z","type":"join"}
{"nick":"chicoxyzzy","date":"2019-06-06T07:00:01.394Z","type":"join"}
{"nick":"mgol","date":"2019-06-06T07:07:22.638Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T07:23:10.244Z","type":"quit"}
{"nick":"ghermeto","date":"2019-06-06T07:39:59.390Z","type":"join"}
{"nick":"ghermeto","reason":"Ping timeout: 246 seconds","date":"2019-06-06T07:44:25.393Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T07:55:42.554Z","type":"quit"}
{"nick":"ghermeto","date":"2019-06-06T08:04:05.487Z","type":"join"}
{"nick":"cloudshu","date":"2019-06-06T08:06:05.346Z","type":"join"}
{"nick":"chicoxyzzy","date":"2019-06-06T08:06:43.557Z","type":"join"}
{"nick":"brab","date":"2019-06-06T08:07:37.808Z","type":"join"}
{"nick":"ErrorIsNullError","date":"2019-06-06T08:09:07.508Z","type":"join"}
{"nick":"bcoe","date":"2019-06-06T08:18:36.213Z","type":"join"}
{"nick":"robpalme","date":"2019-06-06T08:24:37.108Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T08:34:02.237Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T08:35:46.556Z","type":"join"}
{"nick":"ghermeto","reason":"Read error: Connection reset by peer","date":"2019-06-06T08:36:33.755Z","type":"quit"}
{"nick":"ghermeto_","date":"2019-06-06T08:36:33.898Z","type":"join"}
{"nick":"guybedford","date":"2019-06-06T08:44:49.591Z","type":"join"}
{"nick":"keith_miller","date":"2019-06-06T08:48:43.529Z","type":"join"}
{"nick":"keith_miller","reason":"Remote host closed the connection","date":"2019-06-06T08:48:51.530Z","type":"quit"}
{"nick":"keith_miller","date":"2019-06-06T08:49:32.358Z","type":"join"}
{"nick":"mgol","date":"2019-06-06T08:59:20.396Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T09:01:53.582Z","type":"quit"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T09:03:46.395Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T09:05:22.686Z","type":"join"}
{"nick":"ghermeto","date":"2019-06-06T09:07:14.518Z","type":"join"}
{"nick":"ghermeto_","reason":"Read error: Connection reset by peer","date":"2019-06-06T09:07:14.661Z","type":"quit"}
{"nick":"keith_miller","date":"2019-06-06T09:13:01.334Z","type":"join"}
{"nick":"ghermeto","reason":"Remote host closed the connection","date":"2019-06-06T09:25:41.471Z","type":"quit"}
{"nick":"ghermeto","date":"2019-06-06T09:34:40.512Z","type":"join"}
{"nick":"kpatticha","date":"2019-06-06T10:12:23.374Z","type":"join"}
{"nick":"ghermeto","reason":"Remote host closed the connection","date":"2019-06-06T10:23:40.224Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T10:25:38.995Z","type":"quit"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-06-06T10:28:52.051Z","type":"quit"}
{"nick":"keith_miller","date":"2019-06-06T10:29:54.166Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T10:39:09.930Z","type":"quit"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T10:39:34.632Z","type":"quit"}
{"nick":"bcoe","reason":"Ping timeout: 248 seconds","date":"2019-06-06T10:40:27.394Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T11:03:37.732Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T11:04:04.803Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T11:04:17.398Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T11:04:51.358Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T11:05:03.909Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T11:05:40.698Z","type":"quit"}
{"nick":"cybai","date":"2019-06-06T11:05:46.396Z","type":"join"}
{"nick":"chicoxyzzy","date":"2019-06-06T11:05:51.382Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T11:06:28.090Z","type":"quit"}
{"nick":"keith_miller","date":"2019-06-06T11:06:31.297Z","type":"join"}
{"nick":"chicoxyzzy","date":"2019-06-06T11:06:40.738Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2019-06-06T11:07:14.275Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2019-06-06T11:07:30.311Z","type":"join"}
{"nick":"ghermeto","date":"2019-06-06T11:31:18.208Z","type":"join"}
{"nick":"bcoe","date":"2019-06-06T11:31:31.596Z","type":"join"}
{"nick":"chicoxyzzy_","date":"2019-06-06T11:48:15.276Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Quit: Leaving...","date":"2019-06-06T11:48:17.059Z","type":"quit"}
{"nick":"chicoxyzzy_","new_nick":"chicoxyzzy","date":"2019-06-06T11:48:17.202Z","type":"nick"}
{"nick":"kpatticha","reason":"Read error: Connection reset by peer","date":"2019-06-06T11:48:39.611Z","type":"quit"}
{"nick":"chicoxyz_","date":"2019-06-06T11:48:53.733Z","type":"join"}
{"nick":"chicoxyz_","reason":"Client Quit","date":"2019-06-06T11:49:23.443Z","type":"quit"}
{"nick":"kpatticha","date":"2019-06-06T11:55:07.301Z","type":"join"}
{"nick":"ghermeto","reason":"Remote host closed the connection","date":"2019-06-06T12:01:14.946Z","type":"quit"}
{"nick":"bcoe","reason":"Ping timeout: 248 seconds","date":"2019-06-06T12:05:48.676Z","type":"quit"}
{"nick":"ghermeto","date":"2019-06-06T12:08:50.529Z","type":"join"}
{"nick":"bcoe","date":"2019-06-06T12:12:00.309Z","type":"join"}
{"nick":"ghermeto","reason":"Remote host closed the connection","date":"2019-06-06T12:16:02.906Z","type":"quit"}
{"nick":"bcoe","reason":"Ping timeout: 248 seconds","date":"2019-06-06T12:18:35.234Z","type":"quit"}
{"nick":"guybedford","reason":"Quit: Connection closed for inactivity","date":"2019-06-06T12:24:52.024Z","type":"quit"}
{"nick":"bcoe","date":"2019-06-06T12:26:25.645Z","type":"join"}
{"nick":"jmdyck","date":"2019-06-06T12:26:47.257Z","type":"join"}
{"nick":"ghermeto","date":"2019-06-06T12:33:30.394Z","type":"join"}
{"nick":"brab","reason":"Remote host closed the connection","date":"2019-06-06T12:54:26.804Z","type":"quit"}
{"nick":"kpattich_","date":"2019-06-06T13:01:48.688Z","type":"join"}
{"nick":"ghermeto","reason":"Remote host closed the connection","date":"2019-06-06T13:02:22.580Z","type":"quit"}
{"nick":"kpatticha","reason":"Ping timeout: 248 seconds","date":"2019-06-06T13:04:32.307Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T13:05:44.087Z","type":"quit"}
{"nick":"ErrorIsNullError","reason":"Quit: Leaving.","date":"2019-06-06T13:07:41.485Z","type":"quit"}
{"nick":"bcoe","reason":"Ping timeout: 272 seconds","date":"2019-06-06T13:11:16.670Z","type":"quit"}
{"nick":"bcoe","date":"2019-06-06T13:19:59.396Z","type":"join"}
{"nick":"bcoe","reason":"Ping timeout: 248 seconds","date":"2019-06-06T13:30:35.297Z","type":"quit"}
{"nick":"gibson042","date":"2019-06-06T13:46:49.376Z","type":"join"}
{"nick":"kpattich__","date":"2019-06-06T13:51:21.353Z","type":"join"}
{"nick":"kpattich_","reason":"Ping timeout: 272 seconds","date":"2019-06-06T13:53:04.676Z","type":"quit"}
{"nick":"keith_miller","date":"2019-06-06T13:57:58.716Z","type":"join"}
{"nick":"keith_mi_","date":"2019-06-06T14:04:09.194Z","type":"join"}
{"nick":"keith_miller","reason":"Ping timeout: 258 seconds","date":"2019-06-06T14:04:26.934Z","type":"quit"}
{"nick":"bcoe","date":"2019-06-06T14:53:43.629Z","type":"join"}
{"nick":"obensource","reason":"Ping timeout: 248 seconds","date":"2019-06-06T15:08:16.466Z","type":"quit"}
{"nick":"benjamn","date":"2019-06-06T15:19:32.359Z","type":"join"}
{"nick":"obensource","date":"2019-06-06T15:21:46.335Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Quit: Connection closed for inactivity","date":"2019-06-06T15:26:15.720Z","type":"quit"}
{"nick":"robpalme","reason":"Quit: Connection closed for inactivity","date":"2019-06-06T15:43:57.033Z","type":"quit"}
{"nick":"Nimelrian","date":"2019-06-06T15:56:39.138Z","type":"join"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-06-06T16:06:03.524Z","type":"quit"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2019-06-06T16:29:44.202Z","type":"quit"}
{"nick":"AtumT","date":"2019-06-06T16:32:11.386Z","type":"join"}
{"nick":"kpattich__","reason":"Ping timeout: 245 seconds","date":"2019-06-06T16:46:18.422Z","type":"quit"}
{"nick":"cloudshu","date":"2019-06-06T17:10:08.295Z","type":"join"}
{"nick":"caitp","message":"Is anyone around who can answer some questions about the static class features proposal, WRT https://github.com/tc39/proposal-static-class-features/issues/38 ?","date":"2019-06-06T17:14:18.313Z","type":"message"}
{"nick":"caitp","message":"I'm assuming static fields are evaluated within the class lexical environment, and don't need any extra bindings like `this`, thus it doesn't need to be implemented as a method, right?","date":"2019-06-06T17:17:07.355Z","type":"message"}
{"nick":"jridgewell","reason":"Quit: Connection closed for inactivity","date":"2019-06-06T17:20:33.659Z","type":"quit"}
{"nick":"gibson042","date":"2019-06-06T17:22:46.656Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T17:50:55.911Z","type":"quit"}
{"nick":"Nimelrian","reason":"Ping timeout: 258 seconds","date":"2019-06-06T18:00:38.196Z","type":"quit"}
{"nick":"kpattich__","date":"2019-06-06T18:04:33.250Z","type":"join"}
{"nick":"jwalden","date":"2019-06-06T18:13:32.367Z","type":"join"}
{"nick":"bcoe","reason":"Ping timeout: 252 seconds","date":"2019-06-06T18:33:03.574Z","type":"quit"}
{"nick":"ljharb","message":"caitp: i'm reasonable sure `class { static singleton = new this();  }` needs to work, if that's what you mean?","date":"2019-06-06T18:41:35.939Z","type":"message"}
{"nick":"caitp","message":"I don't think it should work, when `class C { static singleton = new C(); }` would work and do what is expected","date":"2019-06-06T18:43:04.588Z","type":"message"}
{"nick":"bcoe","date":"2019-06-06T18:43:09.631Z","type":"join"}
{"nick":"caitp","message":"makes a lot more sense than rebinding `this`","date":"2019-06-06T18:43:24.872Z","type":"message"}
{"nick":"laughinghan","date":"2019-06-06T18:44:08.801Z","type":"join"}
{"nick":"laughinghan","reason":"Client Quit","date":"2019-06-06T18:45:07.644Z","type":"quit"}
{"nick":"ljharb","message":"the class fields proposal explicitly intended that to work","date":"2019-06-06T18:48:54.298Z","type":"message"}
{"nick":"bcoe","reason":"Ping timeout: 252 seconds","date":"2019-06-06T18:49:11.594Z","type":"quit"}
{"nick":"ljharb","message":"(that `this` directly inside the class body is either the instance or the class)","date":"2019-06-06T18:49:15.112Z","type":"message"}
{"nick":"caitp","message":"where on earth is that stated? (that is a bad idea)","date":"2019-06-06T18:49:46.294Z","type":"message"}
{"nick":"laughinghan","date":"2019-06-06T18:51:16.593Z","type":"join"}
{"nick":"ljharb","message":"why is it a bad idea??","date":"2019-06-06T18:53:21.655Z","type":"message"}
{"nick":"ljharb","message":"caitp: https://github.com/tc39/proposal-class-public-fields/issues/50","date":"2019-06-06T18:57:01.818Z","type":"message"}
{"nick":"caitp","message":"it's a bad idea because `this` changes meaning without crossing a function boundary","date":"2019-06-06T18:58:56.113Z","type":"message"}
{"nick":"ljharb","message":"it adds \"the class boundary\" as a place where it can change, and matches many people's intuition","date":"2019-06-06T18:59:26.771Z","type":"message"}
{"nick":"ljharb","message":"similarly, in an instance field, `foo = this`, `this` is the instance","date":"2019-06-06T18:59:42.623Z","type":"message"}
{"nick":"caitp","message":"class boundary really should not be a thing","date":"2019-06-06T18:59:55.272Z","type":"message"}
{"nick":"ljharb","message":"yet there's curly braces there :-p","date":"2019-06-06T19:00:05.487Z","type":"message"}
{"nick":"ljharb","message":"it sounds like in general you don't like the idea of fields at all tho","date":"2019-06-06T19:00:21.446Z","type":"message"}
{"nick":"ljharb","message":"the entire proposal is predicated on making \"class boundary\" a thing","date":"2019-06-06T19:00:35.197Z","type":"message"}
{"nick":"caitp","message":"nothing against fields, but `singleton = new this();` isn't any better than `singleton = new ClassName()`","date":"2019-06-06T19:01:03.166Z","type":"message"}
{"nick":"caitp","message":"which is arguably significantly easier to reason about","date":"2019-06-06T19:01:25.942Z","type":"message"}
{"nick":"caitp","message":"and doesn't prohbit accessing stuff from the real `this`","date":"2019-06-06T19:01:39.070Z","type":"message"}
{"nick":"caitp","message":"ClassName is in the lexical scope, has been since day 1, we should use that instead of doing some awkward stuff with `this`","date":"2019-06-06T19:03:16.079Z","type":"message"}
{"nick":"ljharb","message":"it's better because you don't have to repeat the classname in code","date":"2019-06-06T19:03:36.875Z","type":"message"}
{"nick":"ljharb","message":"and because not every class has a name at all","date":"2019-06-06T19:03:45.066Z","type":"message"}
{"nick":"ljharb","message":"ie an anonymous class expression","date":"2019-06-06T19:03:55.557Z","type":"message"}
{"nick":"caitp","message":"yeah so the solution there is to not use it in those cases innit","date":"2019-06-06T19:04:09.515Z","type":"message"}
{"nick":"ljharb","message":"lol","date":"2019-06-06T19:04:13.231Z","type":"message"}
{"nick":"ljharb","message":"that's one option","date":"2019-06-06T19:04:20.488Z","type":"message"}
{"nick":"caitp","message":"I'd rather provide a new metaproperty for people who really want to do that","date":"2019-06-06T19:05:45.508Z","type":"message"}
{"nick":"ljharb","message":"https://github.com/tc39/proposal-class-access-expressions","date":"2019-06-06T19:05:58.360Z","type":"message"}
{"nick":"caitp","message":"call it Self","date":"2019-06-06T19:06:00.166Z","type":"message"}
{"nick":"caitp","message":"make the rustaceans happy","date":"2019-06-06T19:06:04.850Z","type":"message"}
{"nick":"ljharb","message":"either way tho, `this` needs to be the instance inside instance fields","date":"2019-06-06T19:06:14.931Z","type":"message"}
{"nick":"ljharb","message":"so disallowing `this` in static fields doesn't seem very useful","date":"2019-06-06T19:06:24.358Z","type":"message"}
{"nick":"caitp","message":"I don't think you would disallow it, just let it evaluate to the `this` that already exists","date":"2019-06-06T19:07:09.065Z","type":"message"}
{"nick":"ljharb","message":"that'd be very confusing","date":"2019-06-06T19:09:37.379Z","type":"message"}
{"nick":"ljharb","message":"because tons of people expect it to be the class itself","date":"2019-06-06T19:09:49.863Z","type":"message"}
{"nick":"caitp","message":"I wouldn't expect it to be the class itself, I don't think I've ever written in any language where `this` refers to the class currently being defined","date":"2019-06-06T19:10:39.390Z","type":"message"}
{"nick":"caitp","message":"does python do that? maybe python does","date":"2019-06-06T19:11:04.503Z","type":"message"}
{"nick":"caitp","message":"but everybody hates python","date":"2019-06-06T19:11:07.472Z","type":"message"}
{"nick":"caitp","message":"excluding the possible exceptions of python/ruby/perl, what else does?","date":"2019-06-06T19:11:55.034Z","type":"message"}
{"nick":"caitp","message":"but anyways, regardless of all of that, where in the actual proposal does it say any of this?","date":"2019-06-06T19:16:06.808Z","type":"message"}
{"nick":"benjamn","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-06-06T19:36:02.891Z","type":"quit"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-06-06T19:39:08.297Z","type":"quit"}
{"nick":"gcommer","reason":"Ping timeout: 248 seconds","date":"2019-06-06T19:39:12.362Z","type":"quit"}
{"nick":"gcommer","date":"2019-06-06T19:40:45.699Z","type":"join"}
{"nick":"FireFly","message":"I would find overriding `this` with yet another meaning in another context to be confusing...","date":"2019-06-06T19:42:05.339Z","type":"message"}
{"nick":"FireFly","message":"in function expressions you have to specify a name if you want to refer to the function itself (e.g. to call it recursively) -- I would expect the same to be the case with class expressions","date":"2019-06-06T19:43:49.622Z","type":"message"}
{"nick":"FireFly","message":"How does `this` behave in static methods inside a class today?","date":"2019-06-06T19:44:43.008Z","type":"message"}
{"nick":"ljharb","message":"FireFly: it's the class","date":"2019-06-06T19:46:07.296Z","type":"message"}
{"nick":"FireFly","message":"Always?","date":"2019-06-06T19:46:12.775Z","type":"message"}
{"nick":"FireFly","message":"hmm","date":"2019-06-06T19:46:14.389Z","type":"message"}
{"nick":"FireFly","message":"alright, I guess it might make some sense (in that \"usual rules\" of method calls would make `this` be the class if you invoke it as Class.staticMethod())","date":"2019-06-06T19:47:20.218Z","type":"message"}
{"nick":"FireFly","message":"But it still seems a bit of a pity to me to add another rule to remember about what value `this` resolves to..","date":"2019-06-06T19:47:57.580Z","type":"message"}
{"nick":"ljharb","message":"caitp: i'm not sure where in the current proposal it says that tbh","date":"2019-06-06T19:52:02.272Z","type":"message"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T19:53:07.239Z","type":"quit"}
{"nick":"caitp","message":"\"Define an own property on the constructor which is set to the value of the initializer expression. The initializer is evaluated in a scope where the binding of the class is available--unlike in computed property names, the class can be referred to from inside initializers without leading to a ReferenceError. The this value in the initializer is the constructor.\" << that is...","date":"2019-06-06T19:58:00.188Z","type":"message"}
{"nick":"caitp","message":"so we can have scope swapping before and after every initializer is evaluated, for no reason","date":"2019-06-06T19:58:18.528Z","type":"message"}
{"nick":"mgol","date":"2019-06-06T19:58:52.838Z","type":"join"}
{"nick":"caitp","message":"I really don't see this as being something worth having in the spec, from a user perspective -or- implementor perspective","date":"2019-06-06T20:00:32.737Z","type":"message"}
{"nick":"caitp","message":"I will be ok with it if computed properties see the same `this` as initializers, but it's still nutso","date":"2019-06-06T20:01:09.098Z","type":"message"}
{"nick":"gibson042","date":"2019-06-06T20:24:10.654Z","type":"join"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2019-06-06T20:29:49.438Z","type":"quit"}
{"nick":"laughinghan","date":"2019-06-06T20:56:31.666Z","type":"join"}
{"nick":"laughinghan","reason":"Client Quit","date":"2019-06-06T20:57:14.393Z","type":"quit"}
{"nick":"laughinghan","date":"2019-06-06T20:59:04.193Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T21:01:35.476Z","type":"quit"}
{"nick":"gibson042","reason":"Ping timeout: 252 seconds","date":"2019-06-06T21:04:29.628Z","type":"quit"}
{"nick":"gibson042","date":"2019-06-06T21:17:47.737Z","type":"join"}
{"nick":"hellauer","reason":"Quit: WeeChat 2.4","date":"2019-06-06T21:25:15.701Z","type":"quit"}
{"nick":"kpattich__","reason":"Ping timeout: 248 seconds","date":"2019-06-06T21:32:43.392Z","type":"quit"}
{"nick":"hellauer","date":"2019-06-06T21:34:42.176Z","type":"join"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T21:47:15.452Z","type":"quit"}
{"nick":"mgol","date":"2019-06-06T21:55:10.164Z","type":"join"}
{"nick":"jwalden","reason":"Ping timeout: 248 seconds","date":"2019-06-06T22:12:43.373Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-06-06T22:13:43.207Z","type":"quit"}
{"nick":"keith_mi_","reason":"Remote host closed the connection","date":"2019-06-06T22:31:14.277Z","type":"quit"}
{"nick":"keith_miller","date":"2019-06-06T22:32:17.629Z","type":"join"}
{"nick":"ghermeto","date":"2019-06-06T22:40:21.569Z","type":"join"}
{"nick":"hellauer","reason":"Ping timeout: 258 seconds","date":"2019-06-06T22:43:32.199Z","type":"quit"}
{"nick":"hellauer","date":"2019-06-06T22:44:34.622Z","type":"join"}
{"nick":"jwalden","date":"2019-06-06T22:52:07.288Z","type":"join"}
{"nick":"laughinghan","date":"2019-06-06T23:02:19.713Z","type":"join"}
{"nick":"mgol","date":"2019-06-06T23:08:15.336Z","type":"join"}
{"nick":"mgol","reason":"Client Quit","date":"2019-06-06T23:11:12.843Z","type":"quit"}
{"nick":"Havvy","reason":"Read error: Connection reset by peer","date":"2019-06-06T23:44:33.357Z","type":"quit"}
{"nick":"Havvy","date":"2019-06-06T23:47:33.409Z","type":"join"}
{"nick":"ghermeto","reason":"Remote host closed the connection","date":"2019-06-06T23:52:54.507Z","type":"quit"}
