{"nick":"AtumT_","reason":"Quit: AtumT_","date":"2019-05-14T00:12:42.115Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2019-05-14T00:40:49.328Z","type":"quit"}
{"nick":"keith_miller","date":"2019-05-14T00:49:56.808Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-05-14T01:00:43.813Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-05-14T01:05:49.038Z","type":"quit"}
{"nick":"cybai","date":"2019-05-14T01:12:23.937Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T01:12:37.608Z","type":"quit"}
{"nick":"cybai","reason":"Ping timeout: 268 seconds","date":"2019-05-14T01:17:01.706Z","type":"quit"}
{"nick":"keith_miller","date":"2019-05-14T01:18:11.400Z","type":"join"}
{"nick":"cybai","date":"2019-05-14T01:35:13.656Z","type":"join"}
{"nick":"cybai_","date":"2019-05-14T01:38:22.066Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 244 seconds","date":"2019-05-14T01:39:41.510Z","type":"quit"}
{"nick":"ephemera_","date":"2019-05-14T02:00:13.825Z","type":"join"}
{"nick":"obensour1","reason":"Quit: WeeChat 1.0.1","date":"2019-05-14T02:06:05.343Z","type":"quit"}
{"nick":"obensource","date":"2019-05-14T02:06:48.336Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T02:47:59.236Z","type":"quit"}
{"nick":"vikash-afk","date":"2019-05-14T02:56:52.768Z","type":"join"}
{"nick":"keith_miller","date":"2019-05-14T03:18:14.520Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T04:15:46.635Z","type":"quit"}
{"nick":"keith_miller","date":"2019-05-14T04:37:51.750Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T04:45:00.687Z","type":"quit"}
{"nick":"keith_miller","date":"2019-05-14T04:48:21.988Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T04:52:43.316Z","type":"quit"}
{"nick":"howdoi","date":"2019-05-14T05:13:58.223Z","type":"join"}
{"nick":"vikash-afk","reason":"Quit: vikash.io","date":"2019-05-14T05:37:51.262Z","type":"quit"}
{"nick":"Nimelrian","date":"2019-05-14T05:43:52.249Z","type":"join"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2019-05-14T05:54:35.623Z","type":"quit"}
{"nick":"mquy90","date":"2019-05-14T07:02:20.262Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T07:24:16.429Z","type":"quit"}
{"nick":"vikash-afk","date":"2019-05-14T07:27:51.908Z","type":"join"}
{"nick":"kpatticha","date":"2019-05-14T07:31:20.375Z","type":"join"}
{"nick":"leobalter","reason":"Ping timeout: 245 seconds","date":"2019-05-14T07:32:33.357Z","type":"quit"}
{"nick":"leobalter_","date":"2019-05-14T07:32:52.141Z","type":"join"}
{"nick":"mgol","date":"2019-05-14T07:48:49.650Z","type":"join"}
{"nick":"cybai_","reason":"Quit: Leaving...","date":"2019-05-14T08:41:16.055Z","type":"quit"}
{"nick":"cybai","date":"2019-05-14T11:01:50.638Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-05-14T11:02:53.578Z","type":"quit"}
{"nick":"cybai","date":"2019-05-14T11:03:22.828Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 250 seconds","date":"2019-05-14T11:07:35.722Z","type":"quit"}
{"nick":"cybai","date":"2019-05-14T11:28:26.120Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 258 seconds","date":"2019-05-14T11:33:02.032Z","type":"quit"}
{"nick":"jmdyck","date":"2019-05-14T11:59:29.444Z","type":"join"}
{"nick":"kpattich_","date":"2019-05-14T12:16:45.414Z","type":"join"}
{"nick":"kpatticha","reason":"Ping timeout: 246 seconds","date":"2019-05-14T12:17:58.390Z","type":"quit"}
{"nick":"cybai","date":"2019-05-14T12:21:28.610Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 252 seconds","date":"2019-05-14T12:25:45.701Z","type":"quit"}
{"nick":"gcommer","reason":"Ping timeout: 258 seconds","date":"2019-05-14T12:25:55.990Z","type":"quit"}
{"nick":"gcommer","date":"2019-05-14T12:26:33.341Z","type":"join"}
{"nick":"cybai","date":"2019-05-14T12:26:33.769Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 250 seconds","date":"2019-05-14T12:30:47.736Z","type":"quit"}
{"nick":"cybai","date":"2019-05-14T12:43:25.346Z","type":"join"}
{"nick":"kpattich__","date":"2019-05-14T13:02:12.494Z","type":"join"}
{"nick":"kpattich_","reason":"Ping timeout: 252 seconds","date":"2019-05-14T13:03:42.470Z","type":"quit"}
{"nick":"gibson042","date":"2019-05-14T13:46:02.131Z","type":"join"}
{"nick":"kpattich__","reason":"Ping timeout: 245 seconds","date":"2019-05-14T15:17:58.390Z","type":"quit"}
{"nick":"AtumT","date":"2019-05-14T15:18:54.352Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T15:29:14.324Z","type":"quit"}
{"nick":"jwalden","date":"2019-05-14T16:01:51.310Z","type":"join"}
{"nick":"keith_miller","date":"2019-05-14T16:02:36.730Z","type":"join"}
{"nick":"devsnek","message":"was it ever suggested that return with an operand could be disallowed in generators","date":"2019-05-14T16:12:08.587Z","type":"message"}
{"nick":"cybai","new_nick":"cybai|leave","date":"2019-05-14T16:44:14.403Z","type":"nick"}
{"nick":"mquy90","reason":"Ping timeout: 245 seconds","date":"2019-05-14T16:48:23.753Z","type":"quit"}
{"nick":"jwalden","message":"vaguely idle question, given a variable |code| that is a string, is there any shorter/clearer way to count the number of code points in it than |[...code[Symbol.iterator]()].length|?","date":"2019-05-14T17:06:00.808Z","type":"message"}
{"nick":"jwalden","message":"I guess the iterator-call already happens for a spread, so |[...code].length| would work too","date":"2019-05-14T17:07:16.721Z","type":"message"}
{"nick":"annevk","message":"jwalden: the latter is shortest I suspect","date":"2019-05-14T17:45:44.551Z","type":"message"}
{"nick":"ljharb","message":"jwalden: i'd love to see an accessor that returned that length without the intermediate array","date":"2019-05-14T18:12:43.529Z","type":"message"}
{"nick":"jwalden","message":"static function to do the same seems maybe preferable to me, if I were concerned about API and not just writing some goofball test code right now","date":"2019-05-14T18:13:30.101Z","type":"message"}
{"nick":"ljharb","message":"sure, i suppose that's fine, but it seems weird since `.length` is an instance property","date":"2019-05-14T18:13:49.212Z","type":"message"}
{"nick":"jwalden","message":"given code point length is O(n), an accessor that hides the perf issue seems unideal","date":"2019-05-14T18:14:19.315Z","type":"message"}
{"nick":"jwalden","message":"or at least O(n) without a bunch of work to maintain a value that is currently never accessed","date":"2019-05-14T18:14:38.108Z","type":"message"}
{"nick":"ljharb","message":"why would it need to be O(n) inside the engine","date":"2019-05-14T18:14:46.009Z","type":"message"}
{"nick":"jwalden","message":"and would presumably be relatively rarely accessed were one introduced","date":"2019-05-14T18:14:49.161Z","type":"message"}
{"nick":"jwalden","message":"gotta run through all the code units to count the number of code points in them, no?","date":"2019-05-14T18:15:12.588Z","type":"message"}
{"nick":"ljharb","message":"or rather, how is `.length` not O(n) too?","date":"2019-05-14T18:15:17.380Z","type":"message"}
{"nick":"jwalden","message":".length is a count of code units, and that is maintained in the string to know how much memory the characters use","date":"2019-05-14T18:15:44.958Z","type":"message"}
{"nick":"jwalden","message":"or if the string is begin/end pointer denominated, you just subtract and divide by character size","date":"2019-05-14T18:16:07.911Z","type":"message"}
{"nick":"ljharb","message":"sure, but that's determined at string creation time by counting the code units","date":"2019-05-14T18:19:23.637Z","type":"message"}
{"nick":"ljharb","message":"while doing that count, couldn't the number of code points be counted at the same time, and stored alongside it?","date":"2019-05-14T18:19:38.450Z","type":"message"}
{"nick":"jwalden","message":"it /could/, but it's not accessed enough to justify four bytes' storage per string","date":"2019-05-14T18:20:54.938Z","type":"message"}
{"nick":"ljharb","message":"i'd be interested to know how often people do count code points, but also i suspect it's not accessed that much *because* it's not easy","date":"2019-05-14T18:21:40.485Z","type":"message"}
{"nick":"jwalden","message":"I suppose you can imagine custom-arena tricks or so to encode \"this has multiple-unit code points in it\" to avoid the cost for most things, but we're building up a lot of complexity for a thing that is not often used now","date":"2019-05-14T18:21:41.462Z","type":"message"}
{"nick":"ljharb","message":"it's usually the thing people actually want instead of length anyways","date":"2019-05-14T18:21:56.207Z","type":"message"}
{"nick":"ljharb","message":"(actually grapheme count is what people want, but that's a separate discussion)","date":"2019-05-14T18:22:04.779Z","type":"message"}
{"nick":"jwalden","message":"a number that's usable as an index is most often what people really want, if they're manipulating strings, and a count of code units plays much better with indexes as counts of code units","date":"2019-05-14T18:22:51.013Z","type":"message"}
{"nick":"ljharb","message":"hm, i'm not sure that's true","date":"2019-05-14T18:23:06.898Z","type":"message"}
{"nick":"ljharb","message":"manipulating strings by code units is often inherently broken, since code points exist","date":"2019-05-14T18:23:23.697Z","type":"message"}
{"nick":"ljharb","message":"but yeah a way to index by code point, like the `.at()` proposal, would make sense in concert","date":"2019-05-14T18:23:40.168Z","type":"message"}
{"nick":"jwalden","message":"well, if you have an index as a count of code points, of what use is it?  you have to iterate from start to find out the meaning of that index","date":"2019-05-14T18:23:41.543Z","type":"message"}
{"nick":"ljharb","message":"it's the number of things i will see on screen","date":"2019-05-14T18:23:51.966Z","type":"message"}
{"nick":"ljharb","message":"i don't care about the index","date":"2019-05-14T18:24:02.034Z","type":"message"}
{"nick":"Domenic","message":"No, that's grapheme clusters","date":"2019-05-14T18:30:29.615Z","type":"message"}
{"nick":"Domenic","message":"Code points are a not-so-useful in between, IME","date":"2019-05-14T18:30:41.049Z","type":"message"}
{"nick":"annevk","message":"Or font stuff, with ligatures","date":"2019-05-14T18:31:01.951Z","type":"message"}
{"nick":"ljharb","message":"Domenic: yeah that's fair that graphemes are what i really want","date":"2019-05-14T18:36:07.017Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T18:40:24.938Z","type":"quit"}
{"nick":"keith_miller","date":"2019-05-14T18:43:58.789Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2019-05-14T18:45:16.631Z","type":"quit"}
{"nick":"jwalden","message":"https://paste.rs/GNo.js is roughly what I'm working on/doing right now","date":"2019-05-14T18:45:29.101Z","type":"message"}
{"nick":"jwalden","message":"basically I'm changing a bunch of coordinate stuff inside SpiderMonkey from code units to code points -- a necessary change to be able to tokenize/parse UTF-8 without inflating to UTF-16 -- and I get to think in both coordinate spaces to some degree right now","date":"2019-05-14T18:46:17.949Z","type":"message"}
{"nick":"ljharb","message":"that's quite a gasp matrix","date":"2019-05-14T18:46:45.093Z","type":"message"}
{"nick":"jwalden","message":"it seemed appropriate for the subject matter","date":"2019-05-14T18:49:28.177Z","type":"message"}
{"nick":"rkirsling","message":"TIL (as a demonstration of the definition of grapheme cluster not being dependent on glyph rendering) ᄀᄀᄀ각ᆨᆨ is a single grapheme cluster 👀","date":"2019-05-14T18:49:48.012Z","type":"message"}
{"nick":"jwalden","message":"I'm doing work on computing column numbers in code, and so I need some code with a bunch of non-BMP stuff in it, at intervals such that dicing up a line by code unit will end up splitting some code points in half","date":"2019-05-14T18:50:16.640Z","type":"message"}
{"nick":"jwalden","message":"the dicing interval I'm using is 128, but in principle it could be any number that's at least 2 for UTF-16, or 4 for UTF-8","date":"2019-05-14T18:50:54.778Z","type":"message"}
{"nick":"ljharb","message":"rkirsling: lol so i guess what i really want is a way to iterate on glyphs, and get glyph count","date":"2019-05-14T18:51:12.886Z","type":"message"}
{"nick":"jwalden","message":"and I expect to run with 128 at the end of the day, so something that hits a couple few chunks of that size is desirable","date":"2019-05-14T18:51:32.567Z","type":"message"}
{"nick":"annevk","message":"ljharb: do you want ff or ffi as a single unit depending on the font though?","date":"2019-05-14T19:07:58.290Z","type":"message"}
{"nick":"ljharb","message":"annevk: lol i just want to know if i squint, how many chunks of ink will i see","date":"2019-05-14T19:08:31.786Z","type":"message"}
{"nick":"ljharb","message":"but yeah i'd expect a ligature to be counted as 1","date":"2019-05-14T19:08:53.492Z","type":"message"}
{"nick":"jwalden","message":"bringing font metrics into core JS sounds good","date":"2019-05-14T19:28:20.032Z","type":"message"}
{"nick":"jwalden","message":"my working assumption is code editors generally are going to denominate column numbers as counts of code points, so I'm trying to make things consistent with that","date":"2019-05-14T19:28:47.750Z","type":"message"}
{"nick":"jwalden","message":"but given UTF-8 making a major hash of code unit counts, there is zero chance counts of code units are what editors will typically display","date":"2019-05-14T19:29:14.747Z","type":"message"}
{"nick":"keith_miller","date":"2019-05-14T20:04:12.425Z","type":"join"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2019-05-14T20:09:45.166Z","type":"quit"}
{"nick":"mgol","date":"2019-05-14T20:23:07.931Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T21:50:18.744Z","type":"quit"}
{"nick":"gibson042","message":"jwalden There's a proposal for that: https://github.com/tc39/proposal-intl-segmenter includes `new Intl.Segmenter(locale, {granularity: \"grapheme\"})`","date":"2019-05-14T21:52:05.392Z","type":"message"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-05-14T21:52:53.574Z","type":"quit"}
{"nick":"jwalden","message":"gibson042: I could be wrong, but I don't think grapheme is the same as code point","date":"2019-05-14T21:53:40.693Z","type":"message"}
{"nick":"jwalden","message":"and a count of code points is definitely not a locale-sensitive thing","date":"2019-05-14T21:54:07.709Z","type":"message"}
{"nick":"jwalden","message":"(on a given string, that is)","date":"2019-05-14T21:54:16.226Z","type":"message"}
{"nick":"isHavvy","reason":"Read error: Connection reset by peer","date":"2019-05-14T22:07:58.798Z","type":"quit"}
{"nick":"Nimelrian","reason":"Ping timeout: 258 seconds","date":"2019-05-14T22:25:54.182Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2019-05-14T22:37:04.447Z","type":"quit"}
{"nick":"Nimelrian","date":"2019-05-14T22:57:03.203Z","type":"join"}
{"nick":"Nimelrian","reason":"Ping timeout: 258 seconds","date":"2019-05-14T23:01:33.112Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-05-14T23:44:38.801Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-05-14T23:54:40.632Z","type":"quit"}
{"nick":"Nimelrian","date":"2019-05-14T23:57:05.177Z","type":"join"}
