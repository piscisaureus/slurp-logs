{"nick":"AtumT_","reason":"Quit: AtumT_","date":"2018-08-10T00:14:26.917Z","type":"quit"}
{"nick":"jwalden","reason":"Ping timeout: 240 seconds","date":"2018-08-10T00:45:51.355Z","type":"quit"}
{"nick":"jwalden","date":"2018-08-10T00:47:55.316Z","type":"join"}
{"nick":"grit2","date":"2018-08-10T01:25:22.221Z","type":"join"}
{"nick":"grit2","reason":"Ping timeout: 256 seconds","date":"2018-08-10T01:31:54.721Z","type":"quit"}
{"nick":"aki_","date":"2018-08-10T01:53:05.542Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 256 seconds","date":"2018-08-10T01:54:00.694Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-08-10T01:54:01.037Z","type":"nick"}
{"nick":"ddstreet7","date":"2018-08-10T02:12:50.466Z","type":"join"}
{"nick":"ddstreet7","reason":"Killed (Unit193 (Spam is not permitted on freenode.))","date":"2018-08-10T02:13:06.848Z","type":"quit"}
{"nick":"zaberdampfer","date":"2018-08-10T02:23:25.565Z","type":"join"}
{"nick":"zaberdampfer","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-10T02:23:55.025Z","type":"quit"}
{"nick":"dodobrain0","date":"2018-08-10T02:32:32.576Z","type":"join"}
{"nick":"dodobrain0","reason":"Killed (Unit193 (Spam is not permitted on freenode.))","date":"2018-08-10T02:32:49.879Z","type":"quit"}
{"nick":"TimothyGu","message":"Anyone knows what the DeclarationPart static semantic is for? It just seems to return what it's called on","date":"2018-08-10T02:33:09.502Z","type":"message"}
{"nick":"TimothyGu","message":"https://tc39.github.io/ecma262/#sec-static-semantics-declarationpart","date":"2018-08-10T02:33:10.409Z","type":"message"}
{"nick":"jmdyck","message":"not exactly.","date":"2018-08-10T02:35:53.477Z","type":"message"}
{"nick":"jmdyck","message":"it returns a specific child of what it's called on.","date":"2018-08-10T02:36:18.654Z","type":"message"}
{"nick":"jmdyck","message":"happens to be the only child.","date":"2018-08-10T02:36:48.354Z","type":"message"}
{"nick":"jmdyck","message":"so \"DeclarationPart of |Foo|\" is equivalent to \"the only child of |Foo|\", but the latter hasn't been established as phrasing that the spec can use.","date":"2018-08-10T02:39:45.906Z","type":"message"}
{"nick":"bluszcz4","date":"2018-08-10T02:40:57.500Z","type":"join"}
{"nick":"bluszcz4","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-10T02:40:57.687Z","type":"quit"}
{"nick":"jmdyck","message":"plus it's possible that when DeclarationPart was introduced, there was a case in which it *wasn't* the only child.","date":"2018-08-10T02:41:31.520Z","type":"message"}
{"nick":"jmdyck","message":"... doesn't look like it though.","date":"2018-08-10T02:44:17.404Z","type":"message"}
{"nick":"TimothyGu","message":"jmdyck: I'm not sure I understand.","date":"2018-08-10T02:46:45.391Z","type":"message"}
{"nick":"jmdyck","message":"which part?","date":"2018-08-10T02:47:15.036Z","type":"message"}
{"nick":"TimothyGu","message":"so it's only used in context of \"Return a new List containing DeclarationPart of Declaration.\"","date":"2018-08-10T02:48:28.569Z","type":"message"}
{"nick":"TimothyGu","message":"or with formatting, \"Return a new List containing DeclarationPart of |Declaration|.\"","date":"2018-08-10T02:48:51.809Z","type":"message"}
{"nick":"TimothyGu","message":"why can't it just say \"Return a new List containing |Declaration|.\"","date":"2018-08-10T02:49:00.790Z","type":"message"}
{"nick":"TimothyGu","message":"In fact if you look at https://tc39.github.io/ecma262/#sec-exports-static-semantics-lexicallyscopeddeclarations, DeclarationPart isn't even applied consistently","date":"2018-08-10T02:49:52.427Z","type":"message"}
{"nick":"jmdyck","message":"Ah, well that's a more interesting question","date":"2018-08-10T02:50:52.574Z","type":"message"}
{"nick":"devsnek","message":"when in doubt, check what engines do","date":"2018-08-10T02:52:43.612Z","type":"message"}
{"nick":"devsnek","message":"then open a pr that will take a few years to merge","date":"2018-08-10T02:52:50.723Z","type":"message"}
{"nick":"jmdyck","message":"ultimately, it's presumably because the consumer(s) of that List expect its elements to be the child nodes, and not |Declaration|s.","date":"2018-08-10T02:53:52.966Z","type":"message"}
{"nick":"TimothyGu","message":"… yet when one says \"evaluate |Statement|\" the spec *really* means \"evaluate 'what the |Statement| actually is'\"…","date":"2018-08-10T02:56:26.056Z","type":"message"}
{"nick":"jmdyck","message":"no, it actually means evaluate the |Statement| node.","date":"2018-08-10T02:57:01.089Z","type":"message"}
{"nick":"jmdyck","message":"but how you do that will depend on the nature of the node.","date":"2018-08-10T02:57:30.611Z","type":"message"}
{"nick":"jmdyck","message":"unless you're talking about the chain production thing.","date":"2018-08-10T02:58:20.220Z","type":"message"}
{"nick":"TimothyGu","message":"chain production","date":"2018-08-10T02:58:26.165Z","type":"message"}
{"nick":"TimothyGu","message":"I think","date":"2018-08-10T02:58:55.495Z","type":"message"}
{"nick":"TimothyGu","message":"Ah yeah that's what I'm talking about","date":"2018-08-10T02:59:47.472Z","type":"message"}
{"nick":"jmdyck","message":"that's some editorial sleight-of-hand to avoid having to define a lot of really boring rules.","date":"2018-08-10T02:59:51.815Z","type":"message"}
{"nick":"TimothyGu","message":"imo DeclarationPart is one boring rule. lol.","date":"2018-08-10T03:00:42.517Z","type":"message"}
{"nick":"TimothyGu","message":"actually let's just say I remove \"DeclarationPart of\"","date":"2018-08-10T03:01:14.411Z","type":"message"}
{"nick":"TimothyGu","message":"would the spec still work?","date":"2018-08-10T03:01:24.937Z","type":"message"}
{"nick":"jmdyck","message":"I don't think so.","date":"2018-08-10T03:02:15.597Z","type":"message"}
{"nick":"jmdyck","message":"Well, it might be debateable.","date":"2018-08-10T03:02:36.057Z","type":"message"}
{"nick":"TimothyGu","message":"lol","date":"2018-08-10T03:02:48.874Z","type":"message"}
{"nick":"jmdyck","message":"E.g., see FunctionDeclarationInstantiation","date":"2018-08-10T03:02:56.846Z","type":"message"}
{"nick":"jmdyck","message":"which invokes VarScopedDeclarations, which returns one of these Lists.","date":"2018-08-10T03:03:13.913Z","type":"message"}
{"nick":"jmdyck","message":"it gets put in _varDeclarations_ which we then iterate over, binding each element to _d_","date":"2018-08-10T03:03:48.600Z","type":"message"}
{"nick":"jmdyck","message":"Then we say \"If _d_ is neither a |VariableDeclaration| nor a |ForBinding| nor a ...\"","date":"2018-08-10T03:04:02.673Z","type":"message"}
{"nick":"TimothyGu","message":"hmm, so it treats ForBinding and BindingIdentifier separately","date":"2018-08-10T03:04:12.853Z","type":"message"}
{"nick":"TimothyGu","message":"even though ForBinding may totally be a BindingIdentifier","date":"2018-08-10T03:04:33.958Z","type":"message"}
{"nick":"jmdyck","message":"so the question would be: if _d_ is (bound to) a |Declaration| whose only child is a |VariableDeclaration|, then does _d_ is a |VariableDeclaration| yield *true*?","date":"2018-08-10T03:05:17.705Z","type":"message"}
{"nick":"jmdyck","message":"I think the spec generally says no, though it may not be consistent on that point.","date":"2018-08-10T03:06:26.596Z","type":"message"}
{"nick":"TimothyGu","message":"I guess that's precisely what I was confused on","date":"2018-08-10T03:07:15.756Z","type":"message"}
{"nick":"TimothyGu","message":"because of the chain production thing, I was under the impression that the system is like object-oriented with inheritance","date":"2018-08-10T03:07:47.780Z","type":"message"}
{"nick":"jmdyck","message":"well, except a parse tree isn't an class-inheritance hierarchy","date":"2018-08-10T03:09:01.821Z","type":"message"}
{"nick":"TimothyGu","message":"yeah, exactly. I thought |Declaration| :: |VariableDeclaration| was an inheritance relationship rather than a parent-child hierarchy","date":"2018-08-10T03:10:06.417Z","type":"message"}
{"nick":"TimothyGu","message":"didn't realize that it's more like { type: 'Declaration', child: { type: 'Variable' } }","date":"2018-08-10T03:10:44.814Z","type":"message"}
{"nick":"TimothyGu","message":"*LexicalDeclaration","date":"2018-08-10T03:10:59.541Z","type":"message"}
{"nick":"TimothyGu","message":"ugh ESTree","date":"2018-08-10T03:11:14.295Z","type":"message"}
{"nick":"jmdyck","message":"yeah, it's probably better to think of it that way.","date":"2018-08-10T03:11:58.164Z","type":"message"}
{"nick":"jmdyck","message":"\"better\" = \"closer to how the spec 'wants' you to think about it\"","date":"2018-08-10T03:12:21.476Z","type":"message"}
{"nick":"th3bmw","date":"2018-08-10T03:27:31.265Z","type":"join"}
{"nick":"th3bmw","reason":"Remote host closed the connection","date":"2018-08-10T03:28:14.733Z","type":"quit"}
{"nick":"dave492528","date":"2018-08-10T03:31:26.009Z","type":"join"}
{"nick":"dave492528","reason":"Remote host closed the connection","date":"2018-08-10T03:31:39.563Z","type":"quit"}
{"nick":"aki_","date":"2018-08-10T03:59:20.384Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-08-10T03:59:44.584Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-08-10T03:59:44.963Z","type":"nick"}
{"nick":"atk20","date":"2018-08-10T04:23:00.476Z","type":"join"}
{"nick":"atk20","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-10T04:23:32.631Z","type":"quit"}
{"nick":"swoolley27","date":"2018-08-10T04:23:54.360Z","type":"join"}
{"nick":"swoolley27","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-10T04:24:33.362Z","type":"quit"}
{"nick":"Guest68301","date":"2018-08-10T04:38:38.143Z","type":"join"}
{"nick":"Guest68301","reason":"Remote host closed the connection","date":"2018-08-10T04:39:39.466Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-08-10T04:51:06.470Z","type":"quit"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2018-08-10T05:08:19.426Z","type":"quit"}
{"nick":"Soni23","date":"2018-08-10T05:39:41.148Z","type":"join"}
{"nick":"Soni23","reason":"K-Lined","date":"2018-08-10T05:39:45.861Z","type":"quit"}
{"nick":"aki_","date":"2018-08-10T06:05:58.251Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 248 seconds","date":"2018-08-10T06:06:57.387Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-08-10T06:06:57.964Z","type":"nick"}
{"nick":"ffernand2","date":"2018-08-10T06:25:01.887Z","type":"join"}
{"nick":"ffernand2","reason":"Ping timeout: 260 seconds","date":"2018-08-10T06:30:03.993Z","type":"quit"}
{"nick":"RoBz5","date":"2018-08-10T06:31:51.702Z","type":"join"}
{"nick":"RoBz5","reason":"K-Lined","date":"2018-08-10T06:32:00.838Z","type":"quit"}
{"nick":"armin1","date":"2018-08-10T06:32:14.064Z","type":"join"}
{"nick":"armin1","reason":"Remote host closed the connection","date":"2018-08-10T06:33:59.892Z","type":"quit"}
{"nick":"percY-21","date":"2018-08-10T06:48:55.036Z","type":"join"}
{"nick":"percY-21","reason":"Ping timeout: 268 seconds","date":"2018-08-10T06:54:20.816Z","type":"quit"}
{"nick":"mathiasbynens_","date":"2018-08-10T07:24:57.314Z","type":"part"}
{"nick":"mathiasbynens","date":"2018-08-10T07:25:37.361Z","type":"join"}
{"nick":"akoserwa","date":"2018-08-10T07:44:40.037Z","type":"join"}
{"nick":"moonythedwarf","date":"2018-08-10T07:55:25.386Z","type":"join"}
{"nick":"moonythedwarf","new_nick":"Guest14210","date":"2018-08-10T07:55:36.795Z","type":"nick"}
{"nick":"Guest14210","reason":"Killed (Unit193 (Spam is not permitted on freenode.))","date":"2018-08-10T07:56:34.587Z","type":"quit"}
{"nick":"HackMaster","date":"2018-08-10T07:59:46.554Z","type":"join"}
{"nick":"HackMaster","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-10T08:00:45.097Z","type":"quit"}
{"nick":"aki_","date":"2018-08-10T08:11:42.367Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 256 seconds","date":"2018-08-10T08:12:58.320Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-08-10T08:12:58.681Z","type":"nick"}
{"nick":"april","date":"2018-08-10T09:29:26.329Z","type":"join"}
{"nick":"april","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-10T09:30:32.061Z","type":"quit"}
{"nick":"aki_","date":"2018-08-10T10:18:24.395Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-08-10T10:18:51.484Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-08-10T10:18:51.704Z","type":"nick"}
{"nick":"howdoi","date":"2018-08-10T10:59:38.885Z","type":"join"}
{"nick":"AtumT","date":"2018-08-10T11:29:51.671Z","type":"join"}
{"nick":"tx14","date":"2018-08-10T11:42:06.162Z","type":"join"}
{"nick":"tx14","reason":"Remote host closed the connection","date":"2018-08-10T11:42:59.255Z","type":"quit"}
{"nick":"jmdyck","date":"2018-08-10T12:00:09.470Z","type":"join"}
{"nick":"Remco6","date":"2018-08-10T12:24:30.243Z","type":"join"}
{"nick":"aki_","date":"2018-08-10T12:25:07.719Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-08-10T12:25:21.393Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-08-10T12:25:21.743Z","type":"nick"}
{"nick":"Remco6","reason":"Remote host closed the connection","date":"2018-08-10T12:25:53.641Z","type":"quit"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2018-08-10T12:47:17.049Z","type":"quit"}
{"nick":"AtumT","date":"2018-08-10T12:51:48.859Z","type":"join"}
{"nick":"spion","date":"2018-08-10T13:07:44.512Z","type":"join"}
{"nick":"aki_","date":"2018-08-10T14:31:19.363Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 268 seconds","date":"2018-08-10T14:32:31.799Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-08-10T14:32:32.216Z","type":"nick"}
{"nick":"conno","date":"2018-08-10T15:00:26.135Z","type":"join"}
{"nick":"conno","reason":"K-Lined","date":"2018-08-10T15:00:40.215Z","type":"quit"}
{"nick":"akoserwa","reason":"Quit: Leaving","date":"2018-08-10T15:14:10.147Z","type":"quit"}
{"nick":"bladernr4","date":"2018-08-10T15:57:10.771Z","type":"join"}
{"nick":"bladernr4","reason":"Killed (Sigyn (Spam is off topic on freenode.))","date":"2018-08-10T15:57:50.797Z","type":"quit"}
