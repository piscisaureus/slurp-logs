{"nick":"aki_","date":"2018-09-10T00:07:16.428Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-09-10T00:07:37.426Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-10T00:07:37.753Z","type":"nick"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-09-10T01:15:33.041Z","type":"quit"}
{"nick":"rkirsling","message":"hmm, seems like a patch to clean up <code> and <var> would be in order too","date":"2018-09-10T01:15:47.219Z","type":"message"}
{"nick":"jmdyck","message":"Which uses of <var> do you have in mind?","date":"2018-09-10T01:48:20.641Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-09-10T02:13:27.521Z","type":"quit"}
{"nick":"aki_","date":"2018-09-10T02:13:29.421Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-10T02:13:53.598Z","type":"nick"}
{"nick":"rkirsling","message":"just seemed like that was a generally outdated way of writing it, unless I'm mistaken","date":"2018-09-10T02:29:27.981Z","type":"message"}
{"nick":"jmdyck","message":"\"outdated\" in HTML terms, or in ES spec terms?","date":"2018-09-10T02:44:05.393Z","type":"message"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-09-10T03:24:49.919Z","type":"quit"}
{"nick":"aki_","date":"2018-09-10T04:20:12.804Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-10T04:21:24.350Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-10T04:21:24.663Z","type":"nick"}
{"nick":"aki_","date":"2018-09-10T06:26:22.307Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2018-09-10T06:27:40.962Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-10T06:27:41.226Z","type":"nick"}
{"nick":"akoserwa","date":"2018-09-10T06:33:37.455Z","type":"join"}
{"nick":"aki_","date":"2018-09-10T08:33:05.526Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2018-09-10T08:34:04.291Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-10T08:34:04.573Z","type":"nick"}
{"nick":"keithamus","reason":"Ping timeout: 244 seconds","date":"2018-09-10T08:55:08.544Z","type":"quit"}
{"nick":"Aquazi","date":"2018-09-10T08:57:29.752Z","type":"join"}
{"nick":"aki_","date":"2018-09-10T10:40:22.975Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-09-10T10:41:03.480Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-10T10:41:03.864Z","type":"nick"}
{"nick":"AtumT","date":"2018-09-10T11:40:13.794Z","type":"join"}
{"nick":"jmdyck","date":"2018-09-10T12:24:09.285Z","type":"join"}
{"nick":"aki_","date":"2018-09-10T12:46:31.820Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-10T12:47:19.025Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-10T12:47:19.366Z","type":"nick"}
{"nick":"gibson042","date":"2018-09-10T12:50:32.881Z","type":"join"}
{"nick":"jmdyck","message":"rkirsling: https://github.com/tc39/ecma262/pull/1302#issuecomment-419813912: \"approach 2 would be a larger diff\" -- I think you mean approach 1.","date":"2018-09-10T13:03:42.527Z","type":"message"}
{"nick":"pandem","reason":"Ping timeout: 252 seconds","date":"2018-09-10T13:08:10.061Z","type":"quit"}
{"nick":"keithamus","date":"2018-09-10T13:41:00.523Z","type":"join"}
{"nick":"keithamus","reason":"Client Quit","date":"2018-09-10T13:42:16.262Z","type":"quit"}
{"nick":"keithamus","date":"2018-09-10T13:42:40.529Z","type":"join"}
{"nick":"pandem","date":"2018-09-10T14:34:47.045Z","type":"join"}
{"nick":"aki_","date":"2018-09-10T14:52:14.588Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2018-09-10T14:53:42.830Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-10T14:53:43.117Z","type":"nick"}
{"nick":"cloudshu","date":"2018-09-10T15:11:01.925Z","type":"join"}
{"nick":"keithamus","reason":"Quit: The Lounge - https://thelounge.github.io","date":"2018-09-10T15:19:22.028Z","type":"quit"}
{"nick":"keithamus","date":"2018-09-10T15:19:58.748Z","type":"join"}
{"nick":"akoserwa","reason":"Quit: Leaving","date":"2018-09-10T15:35:49.785Z","type":"quit"}
{"nick":"rkirsling","message":"jmdyck: d'oh, that's what I get for commenting as I was going to bed, heh","date":"2018-09-10T15:48:15.927Z","type":"message"}
{"nick":"rkirsling","message":"as for <var>, I was just gathering that ecmarkup was largely replaced with ecmarkdown other than some residue left behind, but that's my own speculation so perhaps not the whole picture","date":"2018-09-10T15:49:53.694Z","type":"message"}
{"nick":"rkirsling","message":"(replaced in the cases where that's a thing one can do, I mean)","date":"2018-09-10T15:50:32.449Z","type":"message"}
{"nick":"jmdyck","message":"rkirsling: There was never a version of the spec that was ecmarkup-only, no ecmarkdown, if that's what you're thinking.","date":"2018-09-10T16:25:34.426Z","type":"message"}
{"nick":"rkirsling","message":"yeah, I didn't know that for a fact but was imagining so. some of the NativeError stuff, for instance, looks older at a glance","date":"2018-09-10T16:30:57.947Z","type":"message"}
{"nick":"jmdyck","message":"Most occurrences of <var> are inside <code>, e.g. <code>%<var>xx</var></code>. You can imagine rewriting it as `%_xx_` but I think that would be 'rendered' as <code>%_xx_</code>.","date":"2018-09-10T16:34:56.726Z","type":"message"}
{"nick":"jmdyck","message":"i.e. ecmarkdown doesn't support nested spans.","date":"2018-09-10T16:36:29.454Z","type":"message"}
{"nick":"bterlson","message":"rkirsling: there is no replacement, the two formats are in superposition (and both are necessary) .  Vars are for variables in algorithms and are semantically distinct from code","date":"2018-09-10T16:36:30.801Z","type":"message"}
{"nick":"bterlson","message":"vars enable click to show references e.g.","date":"2018-09-10T16:36:44.519Z","type":"message"}
{"nick":"bterlson","message":"pedantically, the idea was that backtick/code would only be used in contexts where you're talking about literal code and */emu-val used for values. Es6 and prior had this convention in Word. Re: the PR, properties should probably be \"the *\"foo\"* property\", but I've not been pedantic on that point as it seems confusing :-P","date":"2018-09-10T16:39:29.187Z","type":"message"}
{"nick":"jmdyck","message":"I'm pretty sure rkirsling understands that <var> and <code> are semantically distinct. I think he was wondering why we use the html elements rather than ecmarkdown characters.","date":"2018-09-10T16:40:01.825Z","type":"message"}
{"nick":"bterlson","message":"oooh I misunderstood","date":"2018-09-10T16:40:48.851Z","type":"message"}
{"nick":"bterlson","message":"yeah _ can be used everywhere. IIRC there's some usage where parsing gets weird so var was used.","date":"2018-09-10T16:43:39.673Z","type":"message"}
{"nick":"jmdyck","message":"I think if you wrote my example as <code>%_xx_</code>, that would render as desired, but I think using <var> there seemed safer.","date":"2018-09-10T16:44:27.791Z","type":"message"}
{"nick":"jmdyck","message":"Conceivably, ecmarkdown could be changed to handle nested spans, but then you'd have to find + 'protect' the cases that are currently *relying* on it not handling nested spans.","date":"2018-09-10T16:46:12.670Z","type":"message"}
{"nick":"bterlson","message":"what do you mean nested spans here?","date":"2018-09-10T16:46:51.309Z","type":"message"}
{"nick":"jmdyck","message":"See above, the example `%_xx_`, whether ecmarkdown should treat that as an underscore-span inside a backtick-span.","date":"2018-09-10T16:48:19.637Z","type":"message"}
{"nick":"bterlson","message":"ahh","date":"2018-09-10T16:50:40.641Z","type":"message"}
{"nick":"bterlson","message":"backticks are lexed as a literal span and their contents are basically ignored. This is by design (and per commonmark :-P)","date":"2018-09-10T16:51:15.599Z","type":"message"}
{"nick":"bterlson","message":"it's important to allow all sorts of code inside backticks","date":"2018-09-10T16:51:26.520Z","type":"message"}
{"nick":"jmdyck","message":"example from the spec: `\"*default*\"` is a backtick-span whose content includes literal asterisks, NOT an asterisk-span.","date":"2018-09-10T16:51:36.442Z","type":"message"}
{"nick":"rkirsling","message":"right, I was imagining that there would be cases easier to sidestep with explicit markup ðŸ¤”","date":"2018-09-10T16:58:03.848Z","type":"message"}
{"nick":"rkirsling","message":"bterlson: if you want me to jump straight to asterisks in that PR, I certainly can do so","date":"2018-09-10T16:58:53.250Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-09-10T16:59:15.609Z","type":"quit"}
{"nick":"akirose","date":"2018-09-10T17:02:27.651Z","type":"join"}
{"nick":"bterlson","message":"rkirsling: I feel like I'm the only one who likes the *'s for values convention","date":"2018-09-10T17:17:01.610Z","type":"message"}
{"nick":"bterlson","message":"if jmdyck likes it let's go with it ;)","date":"2018-09-10T17:21:30.996Z","type":"message"}
{"nick":"jwalden","date":"2018-09-10T17:25:07.773Z","type":"join"}
{"nick":"rkirsling","message":"bterlson: :D","date":"2018-09-10T17:35:20.594Z","type":"message"}
{"nick":"rkirsling","message":"I think it will work so long as a new precedent gets set in that direction","date":"2018-09-10T17:35:52.618Z","type":"message"}
{"nick":"rkirsling","message":"it might be hard to catch every instance in one pass","date":"2018-09-10T17:36:29.120Z","type":"message"}
{"nick":"rkirsling","message":"but maybe that's okay","date":"2018-09-10T17:36:37.022Z","type":"message"}
{"nick":"Aquazi","reason":"Quit: Connection closed for inactivity","date":"2018-09-10T18:22:51.227Z","type":"quit"}
{"nick":"jwalden","action":"grmbls under his breath about the JSON.stringify adjustment proposal just sitting there at stage 2 still :-)","date":"2018-09-10T18:49:18.508Z","type":"action"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-10T19:10:24.631Z","type":"quit"}
{"nick":"akirose","date":"2018-09-10T19:11:02.998Z","type":"join"}
{"nick":"jmdyck","message":"bterlson: I think I'd like a more precise statement of what should get asterisk markdown.","date":"2018-09-10T20:35:45.250Z","type":"message"}
{"nick":"rkirsling","message":"it does get fuzzy for sure","date":"2018-09-10T20:42:24.812Z","type":"message"}
{"nick":"rkirsling","message":"for instance, I was updating cases of \"value `foo`\", but a few are like \"the value `getMonth()`\"","date":"2018-09-10T20:45:09.906Z","type":"message"}
{"nick":"rkirsling","message":"I didn't touch those since it seems kind of like a misspeak for \"the value of `getMonth()`\"","date":"2018-09-10T20:45:52.290Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-10T21:19:21.929Z","type":"quit"}
{"nick":"akirose","date":"2018-09-10T21:22:59.773Z","type":"join"}
{"nick":"keithamus","reason":"Quit: The Lounge - https://thelounge.github.io","date":"2018-09-10T22:24:52.816Z","type":"quit"}
{"nick":"keithamus","date":"2018-09-10T22:25:23.660Z","type":"join"}
{"nick":"keithamus","reason":"Quit: The Lounge - https://thelounge.github.io","date":"2018-09-10T22:37:11.053Z","type":"quit"}
{"nick":"keithamus","date":"2018-09-10T22:38:05.565Z","type":"join"}
{"nick":"keithamus","reason":"Quit: The Lounge - https://thelounge.github.io","date":"2018-09-10T22:49:04.742Z","type":"quit"}
{"nick":"keithamus","date":"2018-09-10T22:49:37.284Z","type":"join"}
{"nick":"devsnek","message":"we should set up a CI to render diffs of prs with <add> and <sub>","date":"2018-09-10T23:01:55.226Z","type":"message"}
{"nick":"ljharb","message":"devsnek: sounds great, are you volunteering","date":"2018-09-10T23:05:48.797Z","type":"message"}
{"nick":"devsnek","message":"ljharb: maybe lol","date":"2018-09-10T23:06:03.272Z","type":"message"}
{"nick":"devsnek","message":"but good to discuss first, maybe someone tried before and ran into some issue or has existing code i could work on top of","date":"2018-09-10T23:06:31.061Z","type":"message"}
{"nick":"ljharb","message":"i think the challenge is that you'd have to set up the CI task to push to a folder in gh-pages keyed by PR number, but with protection against someone opening a malicious PR that has, like, rogue JS or something","date":"2018-09-10T23:07:06.696Z","type":"message"}
{"nick":"ljharb","message":"but the challenge for *that* is that the gh-pages branch gets recreated on every master push, so we'd have to make gh-pages persistent *there* first.","date":"2018-09-10T23:07:29.001Z","type":"message"}
{"nick":"aki_","date":"2018-09-10T23:29:38.612Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2018-09-10T23:31:08.792Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-10T23:31:09.180Z","type":"nick"}
