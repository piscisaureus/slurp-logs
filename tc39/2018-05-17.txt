{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2018-05-17T00:33:08.525Z","type":"quit"}
{"nick":"steffansluis","date":"2018-05-17T00:46:15.976Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-17T00:47:54.329Z","type":"quit"}
{"nick":"steffansluis","message":"Hello! I read this is a place for the discussion of potential tc39 proposals. I'm not ready to propose anything, but I am curious about what you think. I was thinking about async data structures, and the problem with the combination of Promises and Observables. Both are async data structures, but one is natively supported under the `async` keyword and the other isn't, resulting in nasty problems when mixing libraries that support on","date":"2018-05-17T00:51:39.636Z","type":"message"}
{"nick":"steffansluis","message":"My first thoughts were, maybe an async keyword makes sense, to level out the differences between the data structures. It could be implemented with reverse compatibility by means of a Symbol. In any case, my instinct tells me this is a fundamental problem with the nature of async data in JS, and that it should be solved in the structure of the language itself, hence my thoughts of starting a discussion. Interested to hear what you th","date":"2018-05-17T00:52:04.227Z","type":"message"}
{"nick":"steffansluis","message":"Hehe, character limits","date":"2018-05-17T00:52:25.550Z","type":"message"}
{"nick":"steffansluis","message":"So to clarify: what I am thinking of is something like `async { complete: () => Promise.resolve(42), error: () => throw new Error('') }` as a valid replacement for a Promise by providing an alternative to resolve and reject","date":"2018-05-17T00:55:34.882Z","type":"message"}
{"nick":"steffansluis","reason":"Quit: Page closed","date":"2018-05-17T00:58:55.953Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-05-17T01:52:54.547Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-17T02:10:42.139Z","type":"quit"}
{"nick":"devsnek","message":"steffansluis: the best way to compare promise vs observable that i can think of is like","date":"2018-05-17T02:12:00.971Z","type":"message"}
{"nick":"devsnek","message":"singular vs plural","date":"2018-05-17T02:12:04.602Z","type":"message"}
{"nick":"devsnek","message":"`await` can only give you a single value","date":"2018-05-17T02:12:29.916Z","type":"message"}
{"nick":"devsnek","message":"its also worth noting that an object with a function named \"then\" is a valid replacement for a promise","date":"2018-05-17T02:13:16.494Z","type":"message"}
{"nick":"devsnek","message":"they could give you an async iterator though","date":"2018-05-17T02:14:55.193Z","type":"message"}
{"nick":"devsnek","message":"observables","date":"2018-05-17T02:15:02.430Z","type":"message"}
{"nick":"howdoi","date":"2018-05-17T03:19:53.430Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-05-17T03:53:28.611Z","type":"quit"}
{"nick":"Draggor","reason":"Ping timeout: 256 seconds","date":"2018-05-17T04:55:27.448Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-05-17T05:17:19.764Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-05-17T05:23:33.687Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-05-17T05:25:31.514Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-17T06:23:37.386Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-05-17T06:28:59.915Z","type":"join"}
{"nick":"Draggor","date":"2018-05-17T07:32:48.382Z","type":"join"}
{"nick":"Draggor","reason":"Quit: WeeChat 1.9.1","date":"2018-05-17T07:43:49.726Z","type":"quit"}
{"nick":"Draggor","date":"2018-05-17T07:47:52.987Z","type":"join"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-05-17T07:56:55.093Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-17T08:35:14.706Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-05-17T09:33:00.892Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-05-17T09:56:40.417Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-05-17T10:25:05.162Z","type":"quit"}
{"nick":"mylesborins","date":"2018-05-17T10:25:35.556Z","type":"join"}
{"nick":"AtumT","date":"2018-05-17T10:39:34.454Z","type":"join"}
{"nick":"jmdyck","date":"2018-05-17T13:09:33.815Z","type":"join"}
{"nick":"keith_mi_","date":"2018-05-17T13:52:19.788Z","type":"join"}
{"nick":"littledan","message":"bradleymeck: Not sure what you mean; do you see any mismatches?","date":"2018-05-17T14:24:14.024Z","type":"message"}
{"nick":"littledan","message":"I tried to update both the spec text and the explainer; see Shu's slides for an abbreviated summary of the motivation","date":"2018-05-17T14:24:56.382Z","type":"message"}
{"nick":"cloudshu","date":"2018-05-17T14:27:31.088Z","type":"join"}
{"nick":"bradleymeck","message":"littledan: we were reading https://tc39.github.io/proposal-static-class-features/ and noticed a distinct lack of \"Private\" stuff in it, but in the README it has a fair amount of stuff about \"Private\". This was just editorial review, seeing it be explained regarding another feature that isn't there yet we were just trying to see if something was going on / missing from spec text. The spec text does not explicitly ...","date":"2018-05-17T14:43:10.353Z","type":"message"}
{"nick":"bradleymeck","message":"mention private, but seems like it would work for private? we thought this was ok in the end, but might have some integration issues","date":"2018-05-17T14:43:34.894Z","type":"message"}
{"nick":"bradleymeck","message":"we are trying to create some text about when proposals reference each other due to cross cutting so that we can be explicit about what we might block on and what can be seen as safe(ish) to include. the basic idea is that if integration can be clearly separated most things don't need to be concerned","date":"2018-05-17T14:44:36.780Z","type":"message"}
{"nick":"bradleymeck","message":"yay for editorial process documents being created?","date":"2018-05-17T14:45:00.957Z","type":"message"}
{"nick":"zenparsing","date":"2018-05-17T15:12:08.237Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-17T15:46:50.095Z","type":"quit"}
{"nick":"srl295","message":"littledan: running late here","date":"2018-05-17T16:09:53.971Z","type":"message"}
{"nick":"howdoi","date":"2018-05-17T16:36:15.604Z","type":"join"}
{"nick":"Draggor","reason":"Ping timeout: 240 seconds","date":"2018-05-17T16:49:57.820Z","type":"quit"}
{"nick":"Draggor","date":"2018-05-17T16:54:04.820Z","type":"join"}
{"nick":"keith_mi_","date":"2018-05-17T17:21:46.444Z","type":"join"}
{"nick":"leobalter","message":"mylesborins ljharb meeting?","date":"2018-05-17T17:35:34.778Z","type":"message"}
{"nick":"ljharb","message":"omw","date":"2018-05-17T17:35:54.556Z","type":"message"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-17T17:46:21.168Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-05-17T17:47:33.480Z","type":"join"}
{"nick":"bradleymeck","message":"littledan: I can't click my name on https://github.com/tc39/proposal-decorators/issues/66 since my github handle doesn't match anything else XD","date":"2018-05-17T17:51:28.837Z","type":"message"}
{"nick":"mylesborins","message":"sorry I was late :simle:","date":"2018-05-17T18:11:16.983Z","type":"message"}
{"nick":"littledan","message":"bradleymeck: Oh, heh, forgot to build it","date":"2018-05-17T18:32:20.810Z","type":"message"}
{"nick":"littledan","message":"bradleymeck: Were you signed up as a Stage 3 reviewer for decorators?","date":"2018-05-17T18:33:08.148Z","type":"message"}
{"nick":"bradleymeck","message":"littledan: I was way back when and am just putting my marks around saying that I am not seeing problems moving it forward. Papertrail for myself and others.","date":"2018-05-17T18:34:17.722Z","type":"message"}
{"nick":"bradleymeck","message":"i still have increasing concerns about the topics i was focusing on","date":"2018-05-17T18:35:43.767Z","type":"message"}
{"nick":"bradleymeck","message":"but feel that we can address it elsewhere given how robust code can't even be obtained by builtin devtools right now","date":"2018-05-17T18:36:11.789Z","type":"message"}
{"nick":"bradleymeck","message":"at least not what I'm hoping we can get to","date":"2018-05-17T18:36:29.324Z","type":"message"}
{"nick":"littledan","message":"oh right you are on the checklist, oops","date":"2018-05-17T18:38:18.349Z","type":"message"}
{"nick":"littledan","message":"bradleymeck: Oops, actually the specification *was* recently built, and it *does* add static private fields and methods","date":"2018-05-17T18:47:19.647Z","type":"message"}
{"nick":"littledan","message":"all it needed to do, basically, was remove the things that banned \"private\" in those contexts, which you can see in <del> lines","date":"2018-05-17T18:47:37.208Z","type":"message"}
{"nick":"littledan","message":"namely, deleting \"It is a Syntax Error if PrivateBoundNames of MethodDefinition is non-empty.\"","date":"2018-05-17T18:48:19.954Z","type":"message"}
{"nick":"littledan","message":"everything else just sort of fell out","date":"2018-05-17T18:48:27.087Z","type":"message"}
{"nick":"bradleymeck","message":"thats what it looked like when we talked about it","date":"2018-05-17T18:48:41.584Z","type":"message"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-05-17T19:28:04.076Z","type":"quit"}
{"nick":"jwalden","date":"2018-05-17T20:05:32.537Z","type":"join"}
{"nick":"littledan","message":"bradleymeck: I'm not sure what you mean. See this patch for what changed when static private fields and methods were added back in https://github.com/tc39/proposal-static-class-features/commit/7a319b580cee991f5bbac8ef96792e23d05e02b6","date":"2018-05-17T20:29:40.138Z","type":"message"}
{"nick":"littledan","message":"note that this literally just goes back to the state of the Stage 3 world in November 2017; for this reason, I didn't even ask for Stage 3 reviews","date":"2018-05-17T20:30:23.414Z","type":"message"}
{"nick":"bradleymeck","message":"littledan: at top you have \"This proposal defines static public fields, static private fields, and static private methods.\"","date":"2018-05-17T20:31:17.268Z","type":"message"}
{"nick":"littledan","message":"yes, that's what we're defining","date":"2018-05-17T20:32:33.503Z","type":"message"}
{"nick":"littledan","message":"proposing","date":"2018-05-17T20:32:35.523Z","type":"message"}
{"nick":"littledan","message":"bradleymeck: What's the issue?","date":"2018-05-17T20:32:44.271Z","type":"message"}
{"nick":"bradleymeck","message":"we were just reviewing the spec text and noticed it didn't have anything really that seemed to define the private bit separately from the public, it is fine just was confusing while we read it over together","date":"2018-05-17T20:32:47.430Z","type":"message"}
{"nick":"bradleymeck","message":"littledan: no issue we determined","date":"2018-05-17T20:32:53.590Z","type":"message"}
{"nick":"littledan","message":"the spec text does define static private fields and methods","date":"2018-05-17T20:33:02.702Z","type":"message"}
{"nick":"bradleymeck","message":"just confusion (i posted a comment while we were talking to see if we could get quick feedback)","date":"2018-05-17T20:33:09.573Z","type":"message"}
{"nick":"littledan","message":"by removing the syntax errors","date":"2018-05-17T20:33:13.115Z","type":"message"}
{"nick":"littledan","message":"OK","date":"2018-05-17T20:33:25.644Z","type":"message"}
{"nick":"bradleymeck","message":"if we land that without separate private stuff for field/method definition it wouldn't add private stuff","date":"2018-05-17T20:33:43.186Z","type":"message"}
{"nick":"bradleymeck","message":"thats what we got confused about, but it seems to work fine separate of those and would act like just adding public static","date":"2018-05-17T20:34:21.896Z","type":"message"}
{"nick":"bradleymeck","message":"basically an isolation issue. we think this is fine. We (I) need to make some text for ourselves and other explaining how this kind of mismatch is fine so that others don't misunderstand our thoughts","date":"2018-05-17T20:35:40.488Z","type":"message"}
{"nick":"bradleymeck","message":"since more proposals are not being considered in isolation due to cross cutting concerns we are in a bit of a confusing state of things if we integrate 1 that mentions another, but not the other at the same time","date":"2018-05-17T20:36:25.515Z","type":"message"}
{"nick":"zenparsing","reason":"Quit: Connection closed for inactivity","date":"2018-05-17T21:11:28.066Z","type":"quit"}
{"nick":"arai","reason":"Ping timeout: 240 seconds","date":"2018-05-17T22:03:27.815Z","type":"quit"}
{"nick":"littledan","message":"The spec for static class features is a diff vs class fields+private methods","date":"2018-05-17T23:25:39.097Z","type":"message"}
{"nick":"littledan","message":"Probably we should have a big spec of all class features together with the contribution of each one highlighted","date":"2018-05-17T23:26:01.590Z","type":"message"}
{"nick":"arai","date":"2018-05-17T23:32:17.539Z","type":"join"}
{"nick":"littledan","message":"The term cross-cutting concern seems a bit odd here. One proposal has a dependency on the other; it is very explicit","date":"2018-05-17T23:32:52.706Z","type":"message"}
{"nick":"bradleymeck","message":"if there is a better term? all the split and joins might be a different perspective for me than others","date":"2018-05-17T23:43:37.617Z","type":"message"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-05-17T23:44:41.944Z","type":"quit"}
