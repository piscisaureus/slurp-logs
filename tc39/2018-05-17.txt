{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2018-05-17T00:33:08.525Z","type":"quit"}
{"nick":"steffansluis","date":"2018-05-17T00:46:15.976Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-17T00:47:54.329Z","type":"quit"}
{"nick":"steffansluis","message":"Hello! I read this is a place for the discussion of potential tc39 proposals. I'm not ready to propose anything, but I am curious about what you think. I was thinking about async data structures, and the problem with the combination of Promises and Observables. Both are async data structures, but one is natively supported under the `async` keyword and the other isn't, resulting in nasty problems when mixing libraries that support on","date":"2018-05-17T00:51:39.636Z","type":"message"}
{"nick":"steffansluis","message":"My first thoughts were, maybe an async keyword makes sense, to level out the differences between the data structures. It could be implemented with reverse compatibility by means of a Symbol. In any case, my instinct tells me this is a fundamental problem with the nature of async data in JS, and that it should be solved in the structure of the language itself, hence my thoughts of starting a discussion. Interested to hear what you th","date":"2018-05-17T00:52:04.227Z","type":"message"}
{"nick":"steffansluis","message":"Hehe, character limits","date":"2018-05-17T00:52:25.550Z","type":"message"}
{"nick":"steffansluis","message":"So to clarify: what I am thinking of is something like `async { complete: () => Promise.resolve(42), error: () => throw new Error('') }` as a valid replacement for a Promise by providing an alternative to resolve and reject","date":"2018-05-17T00:55:34.882Z","type":"message"}
{"nick":"steffansluis","reason":"Quit: Page closed","date":"2018-05-17T00:58:55.953Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-05-17T01:52:54.547Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-17T02:10:42.139Z","type":"quit"}
{"nick":"devsnek","message":"steffansluis: the best way to compare promise vs observable that i can think of is like","date":"2018-05-17T02:12:00.971Z","type":"message"}
{"nick":"devsnek","message":"singular vs plural","date":"2018-05-17T02:12:04.602Z","type":"message"}
{"nick":"devsnek","message":"`await` can only give you a single value","date":"2018-05-17T02:12:29.916Z","type":"message"}
{"nick":"devsnek","message":"its also worth noting that an object with a function named \"then\" is a valid replacement for a promise","date":"2018-05-17T02:13:16.494Z","type":"message"}
{"nick":"devsnek","message":"they could give you an async iterator though","date":"2018-05-17T02:14:55.193Z","type":"message"}
{"nick":"devsnek","message":"observables","date":"2018-05-17T02:15:02.430Z","type":"message"}
{"nick":"howdoi","date":"2018-05-17T03:19:53.430Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-05-17T03:53:28.611Z","type":"quit"}
{"nick":"Draggor","reason":"Ping timeout: 256 seconds","date":"2018-05-17T04:55:27.448Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-05-17T05:17:19.764Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-05-17T05:23:33.687Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-05-17T05:25:31.514Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-17T06:23:37.386Z","type":"quit"}
{"nick":"keith_mi_","date":"2018-05-17T06:28:59.915Z","type":"join"}
{"nick":"Draggor","date":"2018-05-17T07:32:48.382Z","type":"join"}
{"nick":"Draggor","reason":"Quit: WeeChat 1.9.1","date":"2018-05-17T07:43:49.726Z","type":"quit"}
{"nick":"Draggor","date":"2018-05-17T07:47:52.987Z","type":"join"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-05-17T07:56:55.093Z","type":"quit"}
