{"nick":"keith_miller","date":"2018-07-10T00:02:04.613Z","type":"join"}
{"nick":"stpeter","reason":"Quit: stpeter","date":"2018-07-10T00:16:03.830Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-07-10T00:19:50.542Z","type":"quit"}
{"nick":"vikash-afk","reason":"Remote host closed the connection","date":"2018-07-10T00:49:28.990Z","type":"quit"}
{"nick":"keith_miller","date":"2018-07-10T01:02:37.543Z","type":"join"}
{"nick":"vikash-afk","date":"2018-07-10T01:02:48.720Z","type":"join"}
{"nick":"akirose","date":"2018-07-10T01:27:59.741Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 240 seconds","date":"2018-07-10T01:28:51.339Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-07-10T01:41:53.153Z","type":"quit"}
{"nick":"keith_miller","date":"2018-07-10T01:50:56.638Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-07-10T02:10:53.112Z","type":"quit"}
{"nick":"keith_miller","date":"2018-07-10T02:12:49.360Z","type":"join"}
{"nick":"benwiley4000","date":"2018-07-10T02:13:53.004Z","type":"join"}
{"nick":"aki_","date":"2018-07-10T02:14:17.565Z","type":"join"}
{"nick":"surma_","date":"2018-07-10T02:14:56.166Z","type":"join"}
{"nick":"benwiley4000","message":"Hi folks, I'm super new here. I just finished a very first draft of a proposal for a new method called Array.prototype.replace. I could use advice/champions :) https://github.com/benwiley4000/array-replace","date":"2018-07-10T02:16:05.571Z","type":"message"}
{"nick":"benwiley4000","message":"(it's also a polyfill you can try)","date":"2018-07-10T02:16:40.275Z","type":"message"}
{"nick":"gkatsev_","date":"2018-07-10T02:16:58.436Z","type":"join"}
{"nick":"ephemera__","date":"2018-07-10T02:17:22.866Z","type":"join"}
{"nick":"IgnoredA1bience","date":"2018-07-10T02:17:29.461Z","type":"join"}
{"nick":"awx_","date":"2018-07-10T02:18:56.704Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-07-10T02:19:22.842Z","type":"quit"}
{"nick":"ephemera_","reason":"Ping timeout: 240 seconds","date":"2018-07-10T02:19:29.835Z","type":"quit"}
{"nick":"surma","reason":"Ping timeout: 260 seconds","date":"2018-07-10T02:19:31.418Z","type":"quit"}
{"nick":"gkatsev","reason":"Ping timeout: 260 seconds","date":"2018-07-10T02:19:31.659Z","type":"quit"}
{"nick":"IgnoredAmbience","reason":"Ping timeout: 260 seconds","date":"2018-07-10T02:19:32.890Z","type":"quit"}
{"nick":"awx","reason":"Ping timeout: 260 seconds","date":"2018-07-10T02:19:33.046Z","type":"quit"}
{"nick":"surma_","reason":"Changing host","date":"2018-07-10T02:19:35.185Z","type":"quit"}
{"nick":"surma_","date":"2018-07-10T02:19:35.345Z","type":"join"}
{"nick":"surma_","new_nick":"surma","date":"2018-07-10T02:19:35.566Z","type":"nick"}
{"nick":"devsnek","message":"benwiley4000: es-discuss@mozilla.org is a good place to iterate","date":"2018-07-10T02:27:52.425Z","type":"message"}
{"nick":"devsnek","message":"i don't really understand this though","date":"2018-07-10T02:28:43.453Z","type":"message"}
{"nick":"devsnek","message":"oh it makes a clone","date":"2018-07-10T02:28:57.465Z","type":"message"}
{"nick":"benwiley4000","message":"yeah","date":"2018-07-10T02:29:29.811Z","type":"message"}
{"nick":"devsnek","message":"i don't think this is super needed tbh","date":"2018-07-10T02:29:47.383Z","type":"message"}
{"nick":"benwiley4000","message":"it's mainly frustrating that the language is now set up to provide an easy way to do this with object literals but not arrays even though replacing a item in an array is a common use case","date":"2018-07-10T02:31:00.607Z","type":"message"}
{"nick":"devsnek","message":"replacing an item in an array yes","date":"2018-07-10T02:31:44.926Z","type":"message"}
{"nick":"devsnek","message":"also creating a whole new array not so much","date":"2018-07-10T02:31:52.266Z","type":"message"}
{"nick":"devsnek","message":"i find this thing with state where everything has to be duplicated to be a misunderstanding of how to use js","date":"2018-07-10T02:32:11.510Z","type":"message"}
{"nick":"devsnek","message":"but thats just my opinion","date":"2018-07-10T02:32:14.448Z","type":"message"}
{"nick":"benwiley4000","message":"haha yeah well I tend to disagree, as do many, but I do understand where you're coming from :) mutation doesn't always have to be avoided but man does it making debugging more reliable sometimes :)","date":"2018-07-10T02:33:27.603Z","type":"message"}
{"nick":"benwiley4000","message":"*avoiding mutation","date":"2018-07-10T02:33:40.567Z","type":"message"}
{"nick":"benwiley4000","message":"also to be clear this is a shallow clone not a deep clone","date":"2018-07-10T02:34:38.212Z","type":"message"}
{"nick":"benwiley4000","message":"also to be clear I'm not at all suggesting this should be chosen over splice in all circumstances but I think it has some compelling use cases which I outlined :)","date":"2018-07-10T02:41:41.808Z","type":"message"}
{"nick":"benwiley4000","reason":"Read error: Connection reset by peer","date":"2018-07-10T02:41:42.525Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-07-10T03:18:17.178Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-07-10T04:06:45.690Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-07-10T04:18:01.714Z","type":"quit"}
{"nick":"aki_","reason":"Ping timeout: 244 seconds","date":"2018-07-10T04:20:55.656Z","type":"quit"}
{"nick":"akirose","date":"2018-07-10T04:21:10.763Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 245 seconds","date":"2018-07-10T05:20:40.360Z","type":"quit"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-07-10T05:23:37.207Z","type":"quit"}
{"nick":"aki_","date":"2018-07-10T06:26:27.749Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 268 seconds","date":"2018-07-10T06:27:56.798Z","type":"quit"}
{"nick":"akoserwa","date":"2018-07-10T07:56:22.116Z","type":"join"}
{"nick":"akoserwa","new_nick":"akoserwa|lunch","date":"2018-07-10T07:56:25.778Z","type":"nick"}
{"nick":"keith_miller","date":"2018-07-10T08:25:07.895Z","type":"join"}
{"nick":"akirose","date":"2018-07-10T08:32:10.792Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 240 seconds","date":"2018-07-10T08:32:57.744Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-07-10T09:41:48.652Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-07-10T10:25:09.906Z","type":"quit"}
{"nick":"mylesborins","date":"2018-07-10T10:25:18.767Z","type":"join"}
{"nick":"aki_","date":"2018-07-10T10:38:24.362Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 276 seconds","date":"2018-07-10T10:40:11.746Z","type":"quit"}
{"nick":"jmdyck","date":"2018-07-10T10:59:48.932Z","type":"join"}
{"nick":"Oguz_","date":"2018-07-10T11:45:54.618Z","type":"join"}
{"nick":"akoserwa|lunch","reason":"Remote host closed the connection","date":"2018-07-10T12:25:39.703Z","type":"quit"}
{"nick":"akoserwa|lunch","date":"2018-07-10T12:26:00.275Z","type":"join"}
{"nick":"akirose","date":"2018-07-10T12:45:08.890Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 240 seconds","date":"2018-07-10T12:45:51.377Z","type":"quit"}
{"nick":"IgnoredA1bience","new_nick":"IgnoredAmbience","date":"2018-07-10T12:46:50.268Z","type":"nick"}
{"nick":"Oguz_","reason":"Ping timeout: 252 seconds","date":"2018-07-10T12:58:42.625Z","type":"quit"}
{"nick":"cloudshu","date":"2018-07-10T13:23:13.377Z","type":"join"}
{"nick":"cloudshu","reason":"Changing host","date":"2018-07-10T13:23:28.135Z","type":"quit"}
{"nick":"cloudshu","date":"2018-07-10T13:23:28.290Z","type":"join"}
{"nick":"stpeter","date":"2018-07-10T14:32:07.043Z","type":"join"}
{"nick":"aki_","date":"2018-07-10T14:50:20.510Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 260 seconds","date":"2018-07-10T14:51:34.916Z","type":"quit"}
{"nick":"akoserwa|lunch","reason":"Quit: Leaving","date":"2018-07-10T15:14:10.493Z","type":"quit"}
{"nick":"gkatsev_","new_nick":"gkatsev","date":"2018-07-10T15:26:08.929Z","type":"nick"}
{"nick":"dpk","reason":"Quit: .","date":"2018-07-10T15:43:09.452Z","type":"quit"}
{"nick":"dpk","date":"2018-07-10T15:43:25.514Z","type":"join"}
{"nick":"jwalden","date":"2018-07-10T15:45:17.414Z","type":"join"}
{"nick":"keith_miller","date":"2018-07-10T15:48:02.092Z","type":"join"}
{"nick":"bradleymeck","message":"i wonder if destructuring should let you delete stuff... `let {remove: delete, ...rest} = {remove: 1, x: 2, y: 3}` -> `rest == {x:2,y:3}`","date":"2018-07-10T16:21:32.765Z","type":"message"}
{"nick":"bradleymeck","message":"might get a bit wonky though since `delete` has a bunch of things that it could do","date":"2018-07-10T16:22:08.596Z","type":"message"}
{"nick":"cloudshu","message":"bradleymeck: wait what do you mean by delete","date":"2018-07-10T16:28:18.796Z","type":"message"}
{"nick":"cloudshu","message":"you mean omission when constructing a new object?","date":"2018-07-10T16:28:29.290Z","type":"message"}
{"nick":"bradleymeck","message":"yea","date":"2018-07-10T16:28:32.611Z","type":"message"}
{"nick":"cloudshu","message":"or do you mean deleting from the thing matching","date":"2018-07-10T16:28:34.318Z","type":"message"}
{"nick":"cloudshu","message":"oh okay","date":"2018-07-10T16:28:35.261Z","type":"message"}
{"nick":"bradleymeck","message":"right now you can use throwaway variables... but that gets weird","date":"2018-07-10T16:28:44.911Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-07-10T16:28:59.818Z","type":"quit"}
{"nick":"cloudshu","message":"because you gotta find fresh names yourself?","date":"2018-07-10T16:29:03.181Z","type":"message"}
{"nick":"bradleymeck","message":"I never do that XD","date":"2018-07-10T16:30:02.972Z","type":"message"}
{"nick":"cloudshu","message":"gensym proposal? :)","date":"2018-07-10T16:30:38.492Z","type":"message"}
{"nick":"bradleymeck","message":"{let rest; { let _; ({remove: _, also: _, ...rest} = {remove: 0, also: 1, x: 2, y: 3}); }; rest}","date":"2018-07-10T16:31:17.585Z","type":"message"}
{"nick":"bradleymeck","message":"gensym?","date":"2018-07-10T16:31:27.842Z","type":"message"}
{"nick":"bradleymeck","message":"I just want to send the result to the void","date":"2018-07-10T16:31:44.106Z","type":"message"}
{"nick":"bradleymeck","message":"no clue how this would work for array destructuring though, if it would make a hole or ... ?","date":"2018-07-10T16:32:54.674Z","type":"message"}
{"nick":"devsnek","message":"`let { remove: void } = ...`","date":"2018-07-10T16:33:04.595Z","type":"message"}
{"nick":"keith_miller","date":"2018-07-10T16:41:48.406Z","type":"join"}
{"nick":"bradleymeck","message":"i think the main thing here is I'd prefer if no get/has trap was fired but i guess would be odd","date":"2018-07-10T16:42:41.791Z","type":"message"}
{"nick":"cloudshu","message":"bradleymeck: gensym's a lisp-ism to generate fresh names","date":"2018-07-10T16:44:45.724Z","type":"message"}
{"nick":"bradleymeck","message":"cloudshu: but wouldn't you still fire get/has traps","date":"2018-07-10T16:47:15.583Z","type":"message"}
{"nick":"bradleymeck","message":"i truly don't care about/want those properties so why fire traps?","date":"2018-07-10T16:47:42.651Z","type":"message"}
{"nick":"cloudshu","message":"bradleymeck: yes, you would. i misunderstood the problem, i thought you were mainly after the ability to not having to pick fresh names","date":"2018-07-10T16:49:48.199Z","type":"message"}
{"nick":"bradleymeck","message":"nah, block statement plus `_` get the job done","date":"2018-07-10T16:53:56.964Z","type":"message"}
{"nick":"akirose","date":"2018-07-10T16:57:16.085Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 248 seconds","date":"2018-07-10T16:57:37.447Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-07-10T18:54:13.507Z","type":"quit"}
{"nick":"keith_miller","date":"2018-07-10T19:02:06.742Z","type":"join"}
{"nick":"aki_","date":"2018-07-10T19:03:41.634Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 264 seconds","date":"2018-07-10T19:05:10.077Z","type":"quit"}
{"nick":"AtumT_","date":"2018-07-10T19:45:59.341Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 255 seconds","date":"2018-07-10T19:48:35.871Z","type":"quit"}
{"nick":"AtumT","date":"2018-07-10T19:59:13.123Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 240 seconds","date":"2018-07-10T19:59:21.343Z","type":"quit"}
{"nick":"Draggor","reason":"Ping timeout: 240 seconds","date":"2018-07-10T20:16:05.514Z","type":"quit"}
{"nick":"Draggor","date":"2018-07-10T20:17:42.415Z","type":"join"}
{"nick":"akirose","date":"2018-07-10T21:10:26.790Z","type":"join"}
{"nick":"aki_","reason":"Ping timeout: 244 seconds","date":"2018-07-10T21:11:31.580Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-07-10T23:15:27.544Z","type":"quit"}
{"nick":"aki_","date":"2018-07-10T23:16:18.650Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 268 seconds","date":"2018-07-10T23:17:25.778Z","type":"quit"}
