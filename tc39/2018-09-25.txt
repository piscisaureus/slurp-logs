{"nick":"fs211","date":"2018-09-25T00:04:57.089Z","type":"join"}
{"nick":"fs211","reason":"Remote host closed the connection","date":"2018-09-25T00:05:03.714Z","type":"quit"}
{"nick":"jwalden","reason":"Ping timeout: 240 seconds","date":"2018-09-25T00:23:04.728Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-09-25T00:31:26.440Z","type":"quit"}
{"nick":"jwalden","date":"2018-09-25T00:40:28.320Z","type":"join"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-09-25T01:01:13.097Z","type":"quit"}
{"nick":"WARlrus9","date":"2018-09-25T01:27:44.367Z","type":"join"}
{"nick":"WARlrus9","reason":"Remote host closed the connection","date":"2018-09-25T01:27:53.573Z","type":"quit"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2018-09-25T01:39:03.458Z","type":"quit"}
{"nick":"aki_","date":"2018-09-25T01:40:03.901Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-09-25T01:40:54.526Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-25T01:40:54.875Z","type":"nick"}
{"nick":"gernot20","date":"2018-09-25T01:44:41.089Z","type":"join"}
{"nick":"gernot20","reason":"Ping timeout: 245 seconds","date":"2018-09-25T01:51:18.280Z","type":"quit"}
{"nick":"devsnek","message":"is `import * as X, { Y, Z } from '...'` valid?","date":"2018-09-25T01:54:08.042Z","type":"message"}
{"nick":"devsnek","message":"babel keeps trying to output something like that","date":"2018-09-25T01:55:50.361Z","type":"message"}
{"nick":"ljharb","message":"devsnek: i think it probably could be, but i think it's not? not 100% sure","date":"2018-09-25T02:08:56.092Z","type":"message"}
{"nick":"devsnek","message":"ljharb: i'm also very confused lol","date":"2018-09-25T02:09:08.078Z","type":"message"}
{"nick":"devsnek","message":"https://tc39.github.io/ecma262/#sec-typeof-operator-runtime-semantics-evaluation","date":"2018-09-25T02:21:49.167Z","type":"message"}
{"nick":"devsnek","message":"won't Type(val) always be Completion","date":"2018-09-25T02:21:55.350Z","type":"message"}
{"nick":"devsnek","message":"i think this needs an extra ReturnIfAbrupt(val)","date":"2018-09-25T02:23:17.822Z","type":"message"}
{"nick":"ljharb","message":"devsnek: GetValue will throw if `[[Get]]` returns abruptly","date":"2018-09-25T02:24:48.690Z","type":"message"}
{"nick":"ljharb","message":"devsnek: like what about a getter on the global object that throws","date":"2018-09-25T02:25:04.604Z","type":"message"}
{"nick":"devsnek","message":"yeah but there's no GetValue before the Type(val)","date":"2018-09-25T02:25:11.030Z","type":"message"}
{"nick":"devsnek","message":"step 2","date":"2018-09-25T02:25:15.740Z","type":"message"}
{"nick":"ljharb","message":"i'm confused","date":"2018-09-25T02:25:21.404Z","type":"message"}
{"nick":"ljharb","message":"there's no ReturnIfAbryupt","date":"2018-09-25T02:25:31.828Z","type":"message"}
{"nick":"devsnek","message":"where it says if Type(val) is Reference","date":"2018-09-25T02:25:33.537Z","type":"message"}
{"nick":"ljharb","message":"sure","date":"2018-09-25T02:25:39.065Z","type":"message"}
{"nick":"devsnek","message":"at that point, won't val always be a completion","date":"2018-09-25T02:25:42.453Z","type":"message"}
{"nick":"devsnek","message":"which might have [[Value]]: some reference","date":"2018-09-25T02:26:06.996Z","type":"message"}
{"nick":"devsnek","message":"so Type(val) would be Completion","date":"2018-09-25T02:26:15.361Z","type":"message"}
{"nick":"ljharb","message":"would \"evaluating UnaryExpression\" return a completion?","date":"2018-09-25T02:27:06.252Z","type":"message"}
{"nick":"devsnek","message":"what else would it do","date":"2018-09-25T02:27:25.830Z","type":"message"}
{"nick":"devsnek","message":"don't all productions implicitly return completions","date":"2018-09-25T02:27:40.551Z","type":"message"}
{"nick":"ljharb","message":"i'm not sure that's the case, due to reference","date":"2018-09-25T02:28:00.311Z","type":"message"}
{"nick":"ljharb","message":"s","date":"2018-09-25T02:28:01.004Z","type":"message"}
{"nick":"ljharb","message":"https://tc39.github.io/ecma262/#sec-delete-operator-runtime-semantics-evaluation for example evals a unary expr and then does returnifabrupt, and then checks to see if it's a reference","date":"2018-09-25T02:28:29.390Z","type":"message"}
{"nick":"devsnek","message":"wouldn't it be `[[Value]]: a reference` in that case?","date":"2018-09-25T02:28:33.317Z","type":"message"}
{"nick":"ljharb","message":"i don't think [[Value]] can contain a reference","date":"2018-09-25T02:28:53.497Z","type":"message"}
{"nick":"ljharb","message":"i think that can only be a JS value","date":"2018-09-25T02:28:57.919Z","type":"message"}
{"nick":"ljharb","message":"(because a reference isn't a reified thing, just like a completion record is not)","date":"2018-09-25T02:29:22.831Z","type":"message"}
{"nick":"jmdyck","message":"(In my world, where Normal Completions do not exist, evaluation returns a language value or ~empty~ or a Reference or an abrupt completion (I think).)","date":"2018-09-25T02:33:46.140Z","type":"message"}
{"nick":"jmdyck","message":"In status quo spec world, it's a bit messy.","date":"2018-09-25T02:37:17.721Z","type":"message"}
{"nick":"jmdyck","message":"Type(_val_) isn't *necessarily* always Completion, because \"Any reference to a Completion Record value that is in a context that does not explicitly require a complete Completion Record value is equivalent to an explicit reference to the [[Value]] field of the Completion Record value ...\"","date":"2018-09-25T02:38:40.848Z","type":"message"}
{"nick":"jmdyck","message":"and Type(...) isn't a context that explicitly requires a \"complete Completion Record value\",","date":"2018-09-25T02:39:26.028Z","type":"message"}
{"nick":"devsnek","message":"whatever the case is in reality","date":"2018-09-25T02:39:43.791Z","type":"message"}
{"nick":"devsnek","message":"the spec has a disparity somewhere","date":"2018-09-25T02:39:51.869Z","type":"message"}
{"nick":"jmdyck","message":"yup","date":"2018-09-25T02:39:58.964Z","type":"message"}
{"nick":"devsnek","message":"normal completions not existing sounds fine until things like Call check for [[Type]]","date":"2018-09-25T02:40:52.065Z","type":"message"}
{"nick":"jmdyck","message":"see https://github.com/tc39/ecma262/issues/496","date":"2018-09-25T02:40:54.532Z","type":"message"}
{"nick":"devsnek","message":"i'm not quite sure what to do here though","date":"2018-09-25T02:42:00.786Z","type":"message"}
{"nick":"devsnek","message":"domenic says everything should be completions and i kinda agree","date":"2018-09-25T02:42:42.239Z","type":"message"}
{"nick":"Sirisian_","date":"2018-09-25T02:43:31.340Z","type":"join"}
{"nick":"jmdyck","message":"where code currently checks [[Type]], it would, in my world, (first) ask \"is this an abrupt completion?\" (or perhaps \"is this a normal value?\")","date":"2018-09-25T02:43:34.747Z","type":"message"}
{"nick":"devsnek","message":"i don't see any reason why spec types can't be in completions","date":"2018-09-25T02:45:03.936Z","type":"message"}
{"nick":"devsnek","message":"and it would solve this problem","date":"2018-09-25T02:45:13.710Z","type":"message"}
{"nick":"jmdyck","message":"yeah, well, I disagree with the \"everything should be completions\" camp, but I'm not pushing on it for now","date":"2018-09-25T02:45:42.144Z","type":"message"}
{"nick":"devsnek","message":"well something needs to happen","date":"2018-09-25T02:45:59.921Z","type":"message"}
{"nick":"Sirisian__","reason":"Ping timeout: 240 seconds","date":"2018-09-25T02:47:34.725Z","type":"quit"}
{"nick":"jmdyck","message":"people seem to be able to create interoperable implementations despite the spec's inconsistency on this point, so it's somewhat debatable whether something *needs* to happen","date":"2018-09-25T02:49:28.981Z","type":"message"}
{"nick":"devsnek","message":"sigh","date":"2018-09-25T02:49:42.024Z","type":"message"}
{"nick":"jmdyck","message":"indeed, sigh.","date":"2018-09-25T02:51:57.757Z","type":"message"}
{"nick":"devsnek","message":"modified completion coercion to ignore references","date":"2018-09-25T02:52:50.371Z","type":"message"}
{"nick":"devsnek","message":"i hope no one ever benchmarks this engine","date":"2018-09-25T02:53:15.163Z","type":"message"}
{"nick":"jmdyck","message":"going back a ways, Type(_val_) isn't necessarily Completion, but if you apply it to an Abrupt Completion,  the result is probably Completion. So I don't think you need a ReturnIfAbrupt() on that score.","date":"2018-09-25T02:57:13.245Z","type":"message"}
{"nick":"jmdyck","message":"Although inserting one would probably be clearer.","date":"2018-09-25T03:46:15.746Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-09-25T03:46:53.941Z","type":"quit"}
{"nick":"akirose","date":"2018-09-25T03:47:59.581Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-09-25T04:14:04.534Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-09-25T05:13:26.273Z","type":"quit"}
{"nick":"maxpowa8","date":"2018-09-25T05:45:16.799Z","type":"join"}
{"nick":"maxpowa8","reason":"Remote host closed the connection","date":"2018-09-25T05:48:39.974Z","type":"quit"}
{"nick":"aki_","date":"2018-09-25T05:54:00.382Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-09-25T05:55:06.535Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-25T05:55:06.896Z","type":"nick"}
{"nick":"Aquazi","date":"2018-09-25T06:59:31.774Z","type":"join"}
{"nick":"Smilex21","date":"2018-09-25T07:48:11.059Z","type":"join"}
{"nick":"Smilex21","reason":"Remote host closed the connection","date":"2018-09-25T07:51:29.582Z","type":"quit"}
{"nick":"lupino2b0","date":"2018-09-25T07:56:07.366Z","type":"join"}
{"nick":"lupino2b0","reason":"Remote host closed the connection","date":"2018-09-25T07:57:33.753Z","type":"quit"}
