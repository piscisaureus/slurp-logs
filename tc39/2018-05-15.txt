{"nick":"Havvy","reason":"Ping timeout: 240 seconds","date":"2018-05-15T00:17:27.797Z","type":"quit"}
{"nick":"Havvy","date":"2018-05-15T00:19:39.784Z","type":"join"}
{"nick":"keith_miller","date":"2018-05-15T00:28:49.967Z","type":"join"}
{"nick":"arai","date":"2018-05-15T00:30:15.837Z","type":"join"}
{"nick":"arai","reason":"Remote host closed the connection","date":"2018-05-15T00:31:15.045Z","type":"quit"}
{"nick":"arai","date":"2018-05-15T00:32:24.427Z","type":"join"}
{"nick":"basicdays","reason":"Ping timeout: 256 seconds","date":"2018-05-15T00:36:53.611Z","type":"quit"}
{"nick":"basicdays","date":"2018-05-15T00:53:55.686Z","type":"join"}
{"nick":"not-an-aardvark","date":"2018-05-15T01:22:03.899Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T01:42:34.083Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T01:53:44.162Z","type":"join"}
{"nick":"jmdyck","message":"bterlson: ?","date":"2018-05-15T01:55:31.483Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T02:25:48.042Z","type":"quit"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2018-05-15T02:39:38.913Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T02:46:46.241Z","type":"join"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-05-15T02:47:29.147Z","type":"quit"}
{"nick":"howdoi","date":"2018-05-15T03:18:14.879Z","type":"join"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2018-05-15T04:06:47.750Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T05:06:12.382Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T05:07:09.882Z","type":"join"}
{"nick":"Havvy","reason":"Read error: Connection reset by peer","date":"2018-05-15T05:40:35.179Z","type":"quit"}
{"nick":"Havvy","date":"2018-05-15T05:41:03.502Z","type":"join"}
{"nick":"keith_mi_","date":"2018-05-15T05:41:19.047Z","type":"join"}
{"nick":"keith_miller","reason":"Ping timeout: 276 seconds","date":"2018-05-15T05:44:47.845Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-05-15T06:21:46.910Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T06:24:34.161Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T06:36:17.187Z","type":"join"}
{"nick":"keith_miller","reason":"Client Quit","date":"2018-05-15T06:36:37.962Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T06:44:59.107Z","type":"join"}
{"nick":"Havvy","reason":"Read error: Connection reset by peer","date":"2018-05-15T08:09:37.166Z","type":"quit"}
{"nick":"Havvy","date":"2018-05-15T08:12:19.363Z","type":"join"}
{"nick":"arai","reason":"Remote host closed the connection","date":"2018-05-15T08:16:10.310Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T09:42:55.236Z","type":"quit"}
{"nick":"vikash-afk","reason":"Remote host closed the connection","date":"2018-05-15T09:59:39.291Z","type":"quit"}
{"nick":"vikash-afk","date":"2018-05-15T10:15:51.735Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-05-15T10:25:07.803Z","type":"quit"}
{"nick":"mylesborins","date":"2018-05-15T10:25:38.126Z","type":"join"}
{"nick":"AtumT","date":"2018-05-15T10:39:33.862Z","type":"join"}
{"nick":"arai","date":"2018-05-15T10:50:01.243Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 265 seconds","date":"2018-05-15T11:40:40.415Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T11:44:52.716Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T12:44:57.832Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T12:51:25.813Z","type":"join"}
{"nick":"keith_miller","reason":"Read error: Connection reset by peer","date":"2018-05-15T12:55:12.641Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T12:55:49.750Z","type":"join"}
{"nick":"devsnek","message":"how come the may meeting is a day longer than usual","date":"2018-05-15T13:05:10.822Z","type":"message"}
{"nick":"IgnoredAmbience","message":"3 days? That's the usual length","date":"2018-05-15T13:05:41.304Z","type":"message"}
{"nick":"devsnek","message":"aren't they usually 2","date":"2018-05-15T13:05:52.948Z","type":"message"}
{"nick":"IgnoredAmbience","message":"Every one I've seen has been 3","date":"2018-05-15T13:06:17.136Z","type":"message"}
{"nick":"devsnek","message":"maybe i can't count shrug","date":"2018-05-15T13:06:32.937Z","type":"message"}
{"nick":"devsnek","message":"lel","date":"2018-05-15T13:06:40.768Z","type":"message"}
{"nick":"jmdyck","date":"2018-05-15T13:10:49.493Z","type":"join"}
{"nick":"cloudshu","date":"2018-05-15T14:03:15.284Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T14:52:05.212Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T14:58:09.346Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2018-05-15T15:01:58.868Z","type":"quit"}
{"nick":"rwaldron","message":"devsnek they've been 3 days since the first meeting I attended, which was May 2012. Prior to that, meetings were 2 days","date":"2018-05-15T15:07:36.034Z","type":"message"}
{"nick":"devsnek","message":"devsnek is crazy confirmed","date":"2018-05-15T15:08:18.799Z","type":"message"}
{"nick":"jwalden","date":"2018-05-15T15:54:32.811Z","type":"join"}
{"nick":"srl295","date":"2018-05-15T16:13:03.589Z","type":"join"}
{"nick":"leobalter","message":"Domenic https://github.com/domenic/proposal-blocks#example-usage - I'm totally up for using top-level await in the worker blocks.","date":"2018-05-15T16:32:24.716Z","type":"message"}
{"nick":"leobalter","message":"even if we start only with top level await inside workers","date":"2018-05-15T16:33:20.084Z","type":"message"}
{"nick":"leobalter","message":"worker / blöck or whatever the name it gets","date":"2018-05-15T16:34:24.807Z","type":"message"}
{"nick":"Domenic","message":"Why don't you like async function body?","date":"2018-05-15T16:38:51.553Z","type":"message"}
{"nick":"leobalter","message":"I didn't say this. I'm supportive for top-level await, and supportive to start it within the proposed syntax for blöcks","date":"2018-05-15T16:50:04.085Z","type":"message"}
{"nick":"annevk","message":"Domenic: https://github.com/domenic/proposal-blocks/issues/1 I initially thought this was about the base URL not being clear","date":"2018-05-15T17:00:58.472Z","type":"message"}
{"nick":"annevk","message":"Domenic: it seems that's another issue","date":"2018-05-15T17:01:02.626Z","type":"message"}
{"nick":"Domenic","message":"Yeah, the web side of how we define worker() is a whole separate thing","date":"2018-05-15T17:01:38.337Z","type":"message"}
{"nick":"devsnek","message":"about the name, these are technically lambdas right?","date":"2018-05-15T17:35:48.166Z","type":"message"}
{"nick":"devsnek","message":"if you stretch the definition of a lambda a bit","date":"2018-05-15T17:36:31.486Z","type":"message"}
{"nick":"devsnek","message":"these feel closer to a c++ lambda than to a js block","date":"2018-05-15T17:36:45.388Z","type":"message"}
{"nick":"TabAtkins","message":"Yes, they're (if you squint), lambdas.","date":"2018-05-15T17:37:37.124Z","type":"message"}
{"nick":"TabAtkins","message":"Or, uh, closure-free closures. ^_^","date":"2018-05-15T17:37:44.042Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2018-05-15T17:37:55.722Z","type":"message"}
{"nick":"zkat","message":"I was literally working on a thing recently that would've benefited hugely from this. I was even doing value injection and managing the env to disable closures. I feel like there's pieces of this construct that are missing when you take certain real-world use into account. For example, how do you handle imports within blocks? Do you need to re-import everything? Does it -have- to be a dynamic import() or can I use `import` format?","date":"2018-05-15T17:50:13.373Z","type":"message"}
{"nick":"devsnek","message":"i think you should be able to use static import","date":"2018-05-15T17:50:51.164Z","type":"message"}
{"nick":"zkat","message":"(I mean I know this doesn't seem to have any allowances for imports right now -- but it's a pain point I ran into when playing around with a construct like this. Most JS devs I know don't just use whatever the current plain environment happens to have)","date":"2018-05-15T17:50:52.894Z","type":"message"}
{"nick":"devsnek","message":"re-importing seems given","date":"2018-05-15T17:50:58.113Z","type":"message"}
{"nick":"devsnek","message":"also i really like the idea of using the primordial state of the global","date":"2018-05-15T17:51:17.877Z","type":"message"}
{"nick":"zkat","message":"I'd go so far as to suggest that any import-bindings that the block references should be auto-imported on the Other Side (or at least provide some facility to do so, like the var capture thing)","date":"2018-05-15T17:51:42.692Z","type":"message"}
{"nick":"zkat","message":"and I say this instead of \"just\" using the var-capture-passing thing because passing arguments like that in a language like javascript is nowhere near the nice, smooth experience that it is in Erlang -- which gets around a lot of this by being universally immutable and fully serializable. JS is _not_ universally serializable and I don't know how one would prevent massive footgunning for users who don't understand this","date":"2018-05-15T17:52:42.718Z","type":"message"}
{"nick":"zkat","message":"and then they start shoving args at these blocks and don't understand why everything went to hell","date":"2018-05-15T17:52:58.184Z","type":"message"}
{"nick":"zkat","message":"my first impression is that I'm excited af to have something like this in JS and imagine a lot of the possibilities it opens up for concurrency and distribution.","date":"2018-05-15T17:53:54.057Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T17:54:33.272Z","type":"quit"}
{"nick":"zkat","message":"my second impression is that I feel like this proposal needs to be included with a much bigger picture about concurrency, serialization, and do more to address how non-obvious concurrency issues are to users.","date":"2018-05-15T17:54:58.175Z","type":"message"}
{"nick":"devsnek","message":"i opened an issue a few months ago for whatwg about serialising js","date":"2018-05-15T17:56:06.656Z","type":"message"}
{"nick":"devsnek","message":"like structured clone but with a standardised intermediate format","date":"2018-05-15T17:56:36.538Z","type":"message"}
{"nick":"zkat","message":"I feel like that's a fool's errand to do right tbh","date":"2018-05-15T17:57:21.067Z","type":"message"}
{"nick":"devsnek","message":"the biggest issue i can think of is that it would be another python pickle or erlang etf","date":"2018-05-15T17:57:45.766Z","type":"message"}
{"nick":"zkat","message":"my instinct is to say that only buffer/string data can be sent over the pipe","date":"2018-05-15T17:58:08.137Z","type":"message"}
{"nick":"devsnek","message":"have you ever played with v8's serialization api","date":"2018-05-15T17:58:39.450Z","type":"message"}
{"nick":"devsnek","message":"its what they exposed so that chromium could make postMessage","date":"2018-05-15T17:58:53.885Z","type":"message"}
{"nick":"zkat","message":"I haven't :)","date":"2018-05-15T17:59:11.251Z","type":"message"}
{"nick":"devsnek","message":"https://nodejs.org/api/v8.html#v8_serialization_api","date":"2018-05-15T17:59:28.139Z","type":"message"}
{"nick":"devsnek","message":"i imagine something like this but with a standardized format","date":"2018-05-15T17:59:53.336Z","type":"message"}
{"nick":"jwalden","reason":"Ping timeout: 276 seconds","date":"2018-05-15T18:18:08.845Z","type":"quit"}
{"nick":"devsnek","message":"why can't symbols be used as weak map keys","date":"2018-05-15T18:18:16.484Z","type":"message"}
{"nick":"TabAtkins","message":"Probably by accident, as a semi-primitive? But they have object identity, so they should be fine to use. (I think.)","date":"2018-05-15T18:20:39.710Z","type":"message"}
{"nick":"devsnek","message":"mdn even explicitly mentions it","date":"2018-05-15T18:22:42.468Z","type":"message"}
{"nick":"devsnek","message":"`Primitive data types as keys are not allowed (e.g. a Symbol can't be a WeakMap key).`","date":"2018-05-15T18:23:11.041Z","type":"message"}
{"nick":"TabAtkins","message":"Yeah, I suspect it's just accident of history, as they were defined at roughly the same time. Symbols are unforgeable, should be fine to WeakMap with.","date":"2018-05-15T18:23:48.115Z","type":"message"}
{"nick":"devsnek","message":"so how do \"spec bugs\" get fixed","date":"2018-05-15T18:26:19.175Z","type":"message"}
{"nick":"TabAtkins","message":"file them as issues in gh","date":"2018-05-15T18:26:30.213Z","type":"message"}
{"nick":"TabAtkins","message":"Or yell at bterlson or something","date":"2018-05-15T18:26:41.520Z","type":"message"}
{"nick":"devsnek","message":"so there doesn't need to be a \"symbols as weakmap keys proposal\"","date":"2018-05-15T18:27:29.524Z","type":"message"}
{"nick":"TabAtkins","message":"Depends. If people end up thinking it's more than just a bug, it might get upgraded to that. But try it as a bug first.","date":"2018-05-15T18:27:53.485Z","type":"message"}
{"nick":"Bakkot","message":"I don't think they should be, for consistency with other primitives and because of the interaction with the symbol registry","date":"2018-05-15T18:32:08.166Z","type":"message"}
{"nick":"keith_miller","date":"2018-05-15T18:32:12.489Z","type":"join"}
{"nick":"devsnek","message":"as a replacement i'm using frozen objects with null prototypes","date":"2018-05-15T18:32:40.425Z","type":"message"}
{"nick":"Bakkot","message":"e.g. `let map = new WeakMap; { let x = Symbol.for(''); map.set(x, obj); }` means that `obj` can never be collected from the map","date":"2018-05-15T18:33:05.818Z","type":"message"}
{"nick":"devsnek","message":"thats true with literally anything","date":"2018-05-15T18:33:27.729Z","type":"message"}
{"nick":"devsnek","message":"although i get the point","date":"2018-05-15T18:33:38.242Z","type":"message"}
{"nick":"devsnek","message":"wait","date":"2018-05-15T18:33:47.090Z","type":"message"}
{"nick":"devsnek","message":"no","date":"2018-05-15T18:33:59.250Z","type":"message"}
{"nick":"devsnek","message":"you can retrieve Symbol.for('') later","date":"2018-05-15T18:34:10.024Z","type":"message"}
{"nick":"Bakkot","message":"The fact that you can retreive `Symbol.for('')` later is the reason that you can never collect `obj` from the map.","date":"2018-05-15T18:35:05.638Z","type":"message"}
{"nick":"Bakkot","message":"same as if you'd put a string or other primitive in.","date":"2018-05-15T18:35:16.350Z","type":"message"}
{"nick":"TabAtkins","message":"The Symbol registry, here, is just like any global reference. You can always stash objects globally and have them never get collected.","date":"2018-05-15T18:35:25.214Z","type":"message"}
{"nick":"devsnek","message":"huh?","date":"2018-05-15T18:35:43.803Z","type":"message"}
{"nick":"devsnek","message":"i'm not following your logic","date":"2018-05-15T18:35:43.984Z","type":"message"}
{"nick":"devsnek","message":"oh collected as in gc'd","date":"2018-05-15T18:35:59.049Z","type":"message"}
{"nick":"ljharb","message":"symbols are primitives; only objects can be weakmap keys, because only objects can be collected","date":"2018-05-15T18:37:05.058Z","type":"message"}
{"nick":"TabAtkins","message":"Or, well, hm, I guess I get the objection to the symbol registry. It's akin to making *some* symbols forgeable.","date":"2018-05-15T18:37:24.992Z","type":"message"}
{"nick":"ljharb","message":"altho it does seem reasonable that a non-global-registry symbol should be collectible","date":"2018-05-15T18:37:25.246Z","type":"message"}
{"nick":"ljharb","message":"but then you'd have a weird thing where some symbols could be used as weakmap keys and not others","date":"2018-05-15T18:37:55.996Z","type":"message"}
{"nick":"ljharb","message":"so it makes sense to prohibit them all","date":"2018-05-15T18:38:03.060Z","type":"message"}
{"nick":"TabAtkins","message":"Eh. Symbols that return undefined from `Symbol.keyFor(x)` would be usable, others not.  You can't create a Symbol and then toggle into being part of the registry, it's specially created by the runtime for you.","date":"2018-05-15T18:39:14.119Z","type":"message"}
{"nick":"TabAtkins","message":"So since this property is stable for the lifetime of the symbol, seems like something you could reasonably key off of.","date":"2018-05-15T18:40:18.476Z","type":"message"}
{"nick":"TabAtkins","message":"Alternately tho, just: if you use a registry Symbol, yeah, that key can't be collected. Don't do that. Same as using an object that you then stash into a global variable.","date":"2018-05-15T18:40:54.903Z","type":"message"}
{"nick":"jwalden","date":"2018-05-15T18:43:36.808Z","type":"join"}
{"nick":"TabAtkins","message":"Like, `wmap.set(window, obj)` isn't going to go very well for you either.","date":"2018-05-15T18:46:00.979Z","type":"message"}
{"nick":"devsnek","message":"+1 to that","date":"2018-05-15T18:49:19.743Z","type":"message"}
{"nick":"Domenic","message":"zkat: dynamic import works right now. Unclear whether static import buys much beyond that given that this code is dynamically evaluated anyway.","date":"2018-05-15T19:00:21.646Z","type":"message"}
{"nick":"Domenic","message":"And yes, working out the web side of how worker() would work is a big task, and I wouldn't anticipate this getting beyond the cross-cutting concerns stage without full buy in from the web side on some ready-to-go blöck tags.","date":"2018-05-15T19:02:08.040Z","type":"message"}
{"nick":"zkat","message":"👍🏼","date":"2018-05-15T19:02:27.476Z","type":"message"}
{"nick":"zkat","message":"v excite to see more work along this sort of thing. This bit's an important part of the story for sure ^_^","date":"2018-05-15T19:02:44.831Z","type":"message"}
{"nick":"zkat","message":"thanks for working on it!","date":"2018-05-15T19:02:52.153Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-05-15T20:40:41.676Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T20:52:04.442Z","type":"join"}
{"nick":"not-an-aardvark","date":"2018-05-15T22:12:18.242Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T22:18:02.991Z","type":"quit"}
{"nick":"keith_miller","date":"2018-05-15T22:24:04.489Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-05-15T22:33:43.594Z","type":"quit"}
{"nick":"arai","reason":"Ping timeout: 260 seconds","date":"2018-05-15T23:41:42.245Z","type":"quit"}
