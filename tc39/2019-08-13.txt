{"nick":"SferaDev","reason":"Ping timeout: 245 seconds","date":"2019-08-13T00:04:12.161Z","type":"quit"}
{"nick":"laughinghan","date":"2019-08-13T00:07:59.868Z","type":"join"}
{"nick":"Bakkot","message":"devsnek: seems like there's pretty broad consensus that Iterator should be a class","date":"2019-08-13T00:19:19.270Z","type":"message"}
{"nick":"Bakkot","message":"something along the lines of","date":"2019-08-13T00:20:07.647Z","type":"message"}
{"nick":"Bakkot","message":"When the Iterator function is called, the following steps are taken:","date":"2019-08-13T00:20:18.425Z","type":"message"}
{"nick":"Bakkot","message":"1. If NewTarget is either undefined or the active function, then","date":"2019-08-13T00:20:19.165Z","type":"message"}
{"nick":"Bakkot","message":"  a. Throw a TypeError exception.","date":"2019-08-13T00:20:20.321Z","type":"message"}
{"nick":"Bakkot","message":"2. Return ? OrdinaryCreateFromConstructor(NewTarget, \"%Iterator.prototype%\").","date":"2019-08-13T00:20:20.927Z","type":"message"}
{"nick":"devsnek","message":"Bakkot: yes, now its more about whether it should be directly constructable","date":"2019-08-13T00:20:27.612Z","type":"message"}
{"nick":"Bakkot","message":"devsnek: seems pretty broad agreement on that too","date":"2019-08-13T00:20:36.883Z","type":"message"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-13T00:20:43.920Z","type":"quit"}
{"nick":"Bakkot","message":"at least, I found Domenic's comment in https://github.com/tc39/proposal-iterator-helpers/issues/30#issuecomment-520537582 convincing, and I haven't seen anyone else disagree","date":"2019-08-13T00:21:23.514Z","type":"message"}
{"nick":"devsnek","message":"ok","date":"2019-08-13T00:21:29.317Z","type":"message"}
{"nick":"devsnek","message":"i was about to say, i was confused who was agreeing, cuz you and domenic had different viewpoints","date":"2019-08-13T00:21:52.526Z","type":"message"}
{"nick":"devsnek","message":"good to know the consensus is","date":"2019-08-13T00:22:00.664Z","type":"message"}
{"nick":"Bakkot","message":"sorry, I guess I ought to have more explicit than just +1'ing his comment","date":"2019-08-13T00:22:17.062Z","type":"message"}
{"nick":"devsnek","message":"i will write up a constructor that throws on ~~Math.random() > 0.5~~ NewTarget being the current function","date":"2019-08-13T00:22:48.885Z","type":"message"}
{"nick":"Bakkot","message":"(consensus among the ~5 people who have looked at this anyway; I can't guarantee the rest of the committee will go for it)","date":"2019-08-13T00:23:13.830Z","type":"message"}
{"nick":"devsnek","message":"we shall see","date":"2019-08-13T00:24:08.909Z","type":"message"}
{"nick":"devsnek","message":"Domenic: this is what you had in mind right? https://gc.gy/33361267.png","date":"2019-08-13T00:31:17.811Z","type":"message"}
{"nick":"Bakkot","message":"devsnek: since presumably it should also not be callable as a function, you would want to check for undefined as well","date":"2019-08-13T00:35:28.029Z","type":"message"}
{"nick":"devsnek","message":"oh good catch","date":"2019-08-13T00:35:35.997Z","type":"message"}
{"nick":"Bakkot","message":"also it's spelled %Iterator.prototype% now","date":"2019-08-13T00:35:45.158Z","type":"message"}
{"nick":"Bakkot","message":"(I wrote this a few lines above)","date":"2019-08-13T00:35:49.965Z","type":"message"}
{"nick":"devsnek","message":"should i just s/%IteratorPrototype%/%Iterator.prototype/","date":"2019-08-13T00:36:46.221Z","type":"message"}
{"nick":"Bakkot","message":"presumably yes (cc ljharb)","date":"2019-08-13T00:36:59.003Z","type":"message"}
{"nick":"ljharb","message":"devsnek: since `%Iterator%` exists, yes","date":"2019-08-13T00:50:33.686Z","type":"message"}
{"nick":"devsnek","message":"cool","date":"2019-08-13T00:50:44.790Z","type":"message"}
{"nick":"devsnek","message":"i wonder how hard it will be to add suspendable builtins to v8","date":"2019-08-13T00:50:55.828Z","type":"message"}
{"nick":"ljharb","message":"so wait, what will `new Iterator()` do?","date":"2019-08-13T00:51:03.284Z","type":"message"}
{"nick":"devsnek","message":"throw a type error","date":"2019-08-13T00:51:08.768Z","type":"message"}
{"nick":"ljharb","message":"but `new class extends Iterator {}` will work?","date":"2019-08-13T00:51:17.178Z","type":"message"}
{"nick":"devsnek","message":"yes","date":"2019-08-13T00:51:20.257Z","type":"message"}
{"nick":"ljharb","message":"SGTM","date":"2019-08-13T00:51:22.410Z","type":"message"}
{"nick":"devsnek","message":"👍🏻","date":"2019-08-13T00:51:25.035Z","type":"message"}
{"nick":"ljharb","message":"altho tbh `new class extends Iterator {}` is kind of silly to require when `new Iterator` could work ¯\\_(ツ)_/¯","date":"2019-08-13T00:51:45.127Z","type":"message"}
{"nick":"devsnek","message":"a lot of things *could* work","date":"2019-08-13T00:51:59.153Z","type":"message"}
{"nick":"Bakkot","message":"ljharb: at that point you would presumably just write `Object.create(Iterator.prototype)`","date":"2019-08-13T00:53:22.863Z","type":"message"}
{"nick":"drousso","reason":"Ping timeout: 250 seconds","date":"2019-08-13T01:00:55.740Z","type":"quit"}
{"nick":"laughinghan","date":"2019-08-13T01:01:25.697Z","type":"join"}
{"nick":"Bakkot","message":"(or `Iterator.from({ next })` I guess)","date":"2019-08-13T01:03:30.894Z","type":"message"}
{"nick":"drousso","date":"2019-08-13T01:11:15.747Z","type":"join"}
{"nick":"gibson042","message":"Can someone point out text making `let def\\u{61}ult` an error? The closest I see is \"All interpretations of IdentifierName within this specification are based upon their actual code points regardless of whether or not an escape sequence was used to contribute any particular code point.\", but that seems to be trumped by \"A code point in a ReservedWord cannot be expressed by a \\ UnicodeEscapeSequence.\" (a note, but one that is only","date":"2019-08-13T01:13:14.741Z","type":"message"}
{"nick":"drousso_","date":"2019-08-13T01:13:41.142Z","type":"join"}
{"nick":"rkirsling","message":"gibson042: it's a good question -- I don't really see what's enforcing the note","date":"2019-08-13T01:15:06.296Z","type":"message"}
{"nick":"drousso","reason":"Ping timeout: 268 seconds","date":"2019-08-13T01:16:50.711Z","type":"quit"}
{"nick":"rkirsling","message":"oh wait","date":"2019-08-13T01:17:46.305Z","type":"message"}
{"nick":"rkirsling","message":"I think it's that 11.6.2.1 is listing out the keywords exactly as they're expected to appear in the source text?","date":"2019-08-13T01:18:33.787Z","type":"message"}
{"nick":"rkirsling","message":"yeah that has to be it.","date":"2019-08-13T01:19:13.352Z","type":"message"}
{"nick":"gibson042","message":"I'm considering that, and still not seeing anything to justify rejecting non-export use","date":"2019-08-13T01:21:10.418Z","type":"message"}
{"nick":"cybai","date":"2019-08-13T01:21:21.758Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 250 seconds","date":"2019-08-13T01:25:37.820Z","type":"quit"}
{"nick":"ljharb","message":"Bakkot: unless you were doing a generic `new IteratorType()` thing, and the default was `Iterator`","date":"2019-08-13T01:26:01.797Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: iow it kind of seems like a useless inconsistency to disallow `new Iterator`","date":"2019-08-13T01:26:14.853Z","type":"message"}
{"nick":"Bakkot","message":"gibson042: Identifier has an Early Error reading","date":"2019-08-13T01:28:31.425Z","type":"message"}
{"nick":"Bakkot","message":"> It is a Syntax Error if StringValue of IdentifierName is the same String value as the StringValue of any ReservedWord except for yield or await.","date":"2019-08-13T01:28:38.129Z","type":"message"}
{"nick":"Bakkot","message":"is the thing making that an error.","date":"2019-08-13T01:28:56.151Z","type":"message"}
{"nick":"drousso_","reason":"Remote host closed the connection","date":"2019-08-13T01:30:13.276Z","type":"quit"}
{"nick":"rkirsling","message":"ahh","date":"2019-08-13T01:30:18.528Z","type":"message"}
{"nick":"drousso","date":"2019-08-13T01:30:25.352Z","type":"join"}
{"nick":"Bakkot","message":"this applies because `def\\u{61}ult` is an Identifier via `Identifier : IdentifierName but not ReservedWord` (ReservedWords, like other tokens, are specified as sequences of SourceCharacter elements, and do not have alternatives allowing unicode escapes)","date":"2019-08-13T01:30:26.467Z","type":"message"}
{"nick":"Bakkot","message":"(also \"default\" is a ReservedWord because it is a Keyword, is the remaining part of this)","date":"2019-08-13T01:31:04.922Z","type":"message"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2019-08-13T01:34:52.946Z","type":"quit"}
{"nick":"gibson042","message":"Thank you. And that means that `({ def\\u0061ult: true })` is a syntax error, right?","date":"2019-08-13T01:35:12.755Z","type":"message"}
{"nick":"Bakkot","message":"gibson042: no, it's legal, because the production for PropertyName is IdentifierName, not Identifier, and so that Early Error does not apply","date":"2019-08-13T01:35:44.444Z","type":"message"}
{"nick":"Bakkot","message":"(specifically, the production for LiteralPropertyName, which is the relevant case of PropertyName)","date":"2019-08-13T01:36:09.616Z","type":"message"}
{"nick":"gibson042","message":"why does that not track to Identifier via IdentifierReference?","date":"2019-08-13T01:36:39.148Z","type":"message"}
{"nick":"gibson042","message":"https://tc39.es/ecma262/#prod-PropertyDefinition","date":"2019-08-13T01:36:47.452Z","type":"message"}
{"nick":"gibson042","message":"ah, n/m","date":"2019-08-13T01:37:04.692Z","type":"message"}
{"nick":"Bakkot","message":"gibson042: IdentifierReference is not the relevant production, because it is not followed by `:`","date":"2019-08-13T01:37:09.040Z","type":"message"}
{"nick":"gibson042","message":"yep","date":"2019-08-13T01:37:12.359Z","type":"message"}
{"nick":"gibson042","action":"wipes brow","date":"2019-08-13T01:37:35.086Z","type":"action"}
{"nick":"Bakkot","message":"(`({ def\\u0061ult })` is forbidden and, I guess, should probably also have a test, if it doesn't)","date":"2019-08-13T01:37:37.409Z","type":"message"}
{"nick":"Bakkot","message":"ljharb: Iterator.prototype does not have a `next` method, so `new Iterator` is not ever going to give you a useful thing","date":"2019-08-13T01:37:57.956Z","type":"message"}
{"nick":"Bakkot","message":"so it seems reasonable to forbid it","date":"2019-08-13T01:38:03.542Z","type":"message"}
{"nick":"Bakkot","message":"anyway, feel free to comment on https://github.com/tc39/proposal-iterator-helpers/issues/30#issuecomment-520537582","date":"2019-08-13T01:38:17.009Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: ah yeah, that's a fair point. but then it'd error when you tried to iterate it, no?","date":"2019-08-13T01:56:09.386Z","type":"message"}
{"nick":"rkirsling","message":"incidentally *only* V8 throws on `foo = {}; foo.def\\u{61}ult = 3;`","date":"2019-08-13T02:00:59.524Z","type":"message"}
{"nick":"rkirsling","message":"probably ought to add that to the issue","date":"2019-08-13T02:01:54.509Z","type":"message"}
{"nick":"devsnek","message":"v8 unconditionally considers escaped keywords to be syntax errors","date":"2019-08-13T02:02:04.983Z","type":"message"}
{"nick":"devsnek","message":"the only reason they even parse them is to have a custom error message instead of \"unexpected token\"","date":"2019-08-13T02:02:33.543Z","type":"message"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-13T02:16:51.669Z","type":"quit"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-13T02:18:23.643Z","type":"quit"}
{"nick":"rkirsling","message":"Bakkot: wait a sec","date":"2019-08-13T02:20:13.075Z","type":"message"}
{"nick":"laughinghan","date":"2019-08-13T02:20:20.627Z","type":"join"}
{"nick":"rkirsling","message":"is there even a meaningful way to test `({ def\\u0061ult })` if you can't make a bound identifier named `default`?","date":"2019-08-13T02:20:35.984Z","type":"message"}
{"nick":"devsnek","message":"assign to global","date":"2019-08-13T02:27:29.988Z","type":"message"}
{"nick":"devsnek","message":"or object+with","date":"2019-08-13T02:27:32.320Z","type":"message"}
{"nick":"devsnek","message":"with probably is a bad idea cuz of strict tests","date":"2019-08-13T02:28:09.332Z","type":"message"}
{"nick":"devsnek","message":"rkirsling: actually, `({ default })` apparently isn't valid syntax","date":"2019-08-13T02:32:01.884Z","type":"message"}
{"nick":"rkirsling","message":"gah.","date":"2019-08-13T02:37:14.370Z","type":"message"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-13T02:37:42.510Z","type":"quit"}
{"nick":"laughinghan","date":"2019-08-13T02:42:37.714Z","type":"join"}
{"nick":"rkirsling","message":"er rather on the contrary","date":"2019-08-13T02:59:40.339Z","type":"message"}
{"nick":"rkirsling","message":"in an identifier context there's no case where adding the escape changes whether it is or isn't an error, right?","date":"2019-08-13T03:01:49.114Z","type":"message"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-13T03:05:18.515Z","type":"quit"}
{"nick":"jmdyck","message":"right (I think), assuming \"adding the escape\" = \"replacing a character with the equivalent Unicode escape sequence\"","date":"2019-08-13T03:11:24.228Z","type":"message"}
{"nick":"rkirsling","message":"yeah","date":"2019-08-13T03:18:05.115Z","type":"message"}
{"nick":"devsnek","message":"for anyone writing tests for nullish coalescing, engine262 has an implementation now, if that helps at all","date":"2019-08-13T03:40:06.118Z","type":"message"}
{"nick":"SferaDev","date":"2019-08-13T04:02:43.799Z","type":"join"}
{"nick":"drousso","date":"2019-08-13T04:08:02.324Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-08-13T04:13:47.440Z","type":"quit"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-08-13T05:19:33.820Z","type":"quit"}
{"nick":"cybai","date":"2019-08-13T05:21:58.179Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 264 seconds","date":"2019-08-13T05:26:28.052Z","type":"quit"}
{"nick":"vikash-afk","reason":"Quit: vikash.io","date":"2019-08-13T05:32:15.757Z","type":"quit"}
{"nick":"Nimelrian","date":"2019-08-13T05:35:21.113Z","type":"join"}
{"nick":"laughinghan","date":"2019-08-13T05:55:31.272Z","type":"join"}
{"nick":"laughinghan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-13T06:43:58.940Z","type":"quit"}
{"nick":"kpatticha","date":"2019-08-13T06:47:44.658Z","type":"join"}
{"nick":"drousso","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2019-08-13T07:13:06.208Z","type":"quit"}
{"nick":"mgol","date":"2019-08-13T07:54:09.343Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-13T09:01:48.845Z","type":"quit"}
{"nick":"mgol","date":"2019-08-13T09:11:25.149Z","type":"join"}
{"nick":"kpattich_","date":"2019-08-13T09:18:51.326Z","type":"join"}
{"nick":"kpatticha","reason":"Ping timeout: 272 seconds","date":"2019-08-13T09:21:40.686Z","type":"quit"}
{"nick":"cybai","date":"2019-08-13T09:22:33.668Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 250 seconds","date":"2019-08-13T09:27:03.747Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-13T09:28:01.783Z","type":"quit"}
{"nick":"kpattich_","reason":"Ping timeout: 246 seconds","date":"2019-08-13T09:29:37.314Z","type":"quit"}
{"nick":"kpattich_","date":"2019-08-13T09:35:50.210Z","type":"join"}
{"nick":"kpattich_","reason":"Ping timeout: 245 seconds","date":"2019-08-13T09:40:02.289Z","type":"quit"}
{"nick":"kpattich_","date":"2019-08-13T09:47:50.113Z","type":"join"}
{"nick":"kpattich_","reason":"Remote host closed the connection","date":"2019-08-13T09:48:40.717Z","type":"quit"}
{"nick":"kpatticha","date":"2019-08-13T10:02:09.577Z","type":"join"}
{"nick":"kpattich_","date":"2019-08-13T10:04:26.651Z","type":"join"}
{"nick":"kpatticha","reason":"Ping timeout: 244 seconds","date":"2019-08-13T10:06:38.481Z","type":"quit"}
{"nick":"mgol","date":"2019-08-13T10:11:25.960Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-08-13T10:18:04.747Z","type":"quit"}
{"nick":"mgol","date":"2019-08-13T10:49:44.299Z","type":"join"}
{"nick":"mgol","reason":"Client Quit","date":"2019-08-13T10:50:04.350Z","type":"quit"}
{"nick":"mgol","date":"2019-08-13T10:51:25.407Z","type":"join"}
{"nick":"Nimelrian","reason":"Ping timeout: 252 seconds","date":"2019-08-13T11:22:58.080Z","type":"quit"}
{"nick":"jmdyck","date":"2019-08-13T11:30:34.786Z","type":"join"}
{"nick":"kpattich__","date":"2019-08-13T12:00:20.715Z","type":"join"}
{"nick":"kpattich_","reason":"Ping timeout: 272 seconds","date":"2019-08-13T12:01:16.656Z","type":"quit"}
{"nick":"kpattich__","reason":"Ping timeout: 248 seconds","date":"2019-08-13T12:18:43.772Z","type":"quit"}
{"nick":"kpattich__","date":"2019-08-13T12:19:10.351Z","type":"join"}
{"nick":"gibson042","date":"2019-08-13T13:25:07.757Z","type":"join"}
{"nick":"samth","reason":"Changing host","date":"2019-08-13T13:34:03.933Z","type":"quit"}
{"nick":"samth","date":"2019-08-13T13:34:04.140Z","type":"join"}
{"nick":"Nimelrian","date":"2019-08-13T13:49:56.143Z","type":"join"}
{"nick":"obensource","reason":"Ping timeout: 246 seconds","date":"2019-08-13T13:57:01.370Z","type":"quit"}
{"nick":"obensource","date":"2019-08-13T14:10:14.363Z","type":"join"}
{"nick":"devsnek","message":"is chrome still the only browser with SAB enabled","date":"2019-08-13T14:10:18.817Z","type":"message"}
{"nick":"bradleymeck","message":"think so","date":"2019-08-13T14:11:27.490Z","type":"message"}
{"nick":"devsnek","message":"so sad","date":"2019-08-13T14:11:55.137Z","type":"message"}
{"nick":"devsnek","message":"SAB can let me add stepped evaluation to engine262","date":"2019-08-13T14:12:21.838Z","type":"message"}
{"nick":"bradleymeck","message":"that should be able to be gated on feature detection though right? you are just using the Atomics","date":"2019-08-13T14:13:34.291Z","type":"message"}
{"nick":"bradleymeck","message":"but Atomics.wait is banned on main thread of browsers","date":"2019-08-13T14:13:44.049Z","type":"message"}
{"nick":"bradleymeck","message":":themoreyouknow:","date":"2019-08-13T14:13:54.486Z","type":"message"}
{"nick":"devsnek","message":"I only use wait on the worker thread","date":"2019-08-13T14:14:12.264Z","type":"message"}
{"nick":"devsnek","message":"there's no way to pause evaluation in engine262 so I just block the onNodeEvaluation callback","date":"2019-08-13T14:14:58.332Z","type":"message"}
{"nick":"mgol","reason":"Read error: Connection reset by peer","date":"2019-08-13T14:48:09.278Z","type":"quit"}
{"nick":"mgol","date":"2019-08-13T14:48:56.317Z","type":"join"}
{"nick":"annevk","message":"devsnek: please help fix dependencies of https://bugzilla.mozilla.org/show_bug.cgi?id=1477743","date":"2019-08-13T15:26:12.017Z","type":"message"}
{"nick":"devsnek","message":"oh wow this is big","date":"2019-08-13T15:26:41.391Z","type":"message"}
{"nick":"devsnek","message":"annevk: how does something like 1562506 block SAB","date":"2019-08-13T15:28:54.900Z","type":"message"}
{"nick":"devsnek","message":"1565206*","date":"2019-08-13T15:29:08.000Z","type":"message"}
{"nick":"devsnek","message":"1565205*","date":"2019-08-13T15:29:29.760Z","type":"message"}
{"nick":"annevk","message":"devsnek: Spectre","date":"2019-08-13T15:30:51.722Z","type":"message"}
{"nick":"annevk","message":"devsnek: https://docs.google.com/document/d/1zDlfvfTJ_9e8Jdc8ehuV4zMEu9ySMCiTGMS9y0GU92k/edit might help","date":"2019-08-13T15:32:44.673Z","type":"message"}
{"nick":"devsnek","message":"oh ok this makes more sense now","date":"2019-08-13T15:34:05.904Z","type":"message"}
{"nick":"annevk","message":"glad to hear that","date":"2019-08-13T15:35:07.565Z","type":"message"}
{"nick":"kpattich__","reason":"Ping timeout: 245 seconds","date":"2019-08-13T15:57:08.426Z","type":"quit"}
