{"nick":"akirose","message":"dibs on being skipper","date":"2018-09-06T00:05:17.421Z","type":"message"}
{"nick":"devsnek","message":"i've always wanted to drive a boat","date":"2018-09-06T00:06:11.256Z","type":"message"}
{"nick":"akirose","message":"wait jk iâ€™ll be the professor","date":"2018-09-06T00:07:52.561Z","type":"message"}
{"nick":"TabAtkins","message":"akirose: okay but i'm ginger","date":"2018-09-06T00:08:18.451Z","type":"message"}
{"nick":"akirose","message":"wait who has to do the least amount of work","date":"2018-09-06T00:08:33.912Z","type":"message"}
{"nick":"akirose","message":"i wanna be that person","date":"2018-09-06T00:08:36.894Z","type":"message"}
{"nick":"akirose","message":"unless itâ€™s gilligan","date":"2018-09-06T00:08:40.832Z","type":"message"}
{"nick":"devsnek","message":"passengers","date":"2018-09-06T00:08:41.570Z","type":"message"}
{"nick":"akirose","message":"i have standards","date":"2018-09-06T00:08:43.284Z","type":"message"}
{"nick":"TabAtkins","message":"the passengers are all dead","date":"2018-09-06T00:09:03.685Z","type":"message"}
{"nick":"akirose","message":"that got dark","date":"2018-09-06T00:09:56.609Z","type":"message"}
{"nick":"devsnek","message":"what if jsconf was on a boat","date":"2018-09-06T00:10:40.008Z","type":"message"}
{"nick":"akirose","message":"what if jsconf was on a beach OH WAIT IT IS WAIKIKI BEACH","date":"2018-09-06T00:10:53.678Z","type":"message"}
{"nick":"devsnek","message":"i was at that beach for a few hours like 8 years ago","date":"2018-09-06T00:11:24.625Z","type":"message"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-09-06T00:41:32.602Z","type":"quit"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-09-06T01:01:27.390Z","type":"quit"}
{"nick":"akirose","date":"2018-09-06T01:01:39.283Z","type":"join"}
{"nick":"FireFly","reason":"Quit: Goodbye","date":"2018-09-06T01:24:02.113Z","type":"quit"}
{"nick":"FireFly","date":"2018-09-06T01:25:15.213Z","type":"join"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-09-06T02:49:28.161Z","type":"quit"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2018-09-06T03:09:38.287Z","type":"quit"}
{"nick":"akirose","date":"2018-09-06T03:10:01.413Z","type":"join"}
{"nick":"dpk","reason":"Ping timeout: 260 seconds","date":"2018-09-06T03:24:50.324Z","type":"quit"}
{"nick":"dpk","date":"2018-09-06T03:30:09.804Z","type":"join"}
{"nick":"rkirsling","message":"augh, manual spec linting really raises some tricky questions","date":"2018-09-06T03:31:27.597Z","type":"message"}
{"nick":"rkirsling","message":"one can be fully pedantic or not give a damn, but there's not really an in between, short of a policy of only ever making surgical changes :(","date":"2018-09-06T03:32:38.339Z","type":"message"}
{"nick":"rkirsling","message":"if we align on writing `\"length\"`, then that certainly implies `\"prototype\"` and should imply `\"toString\"`, but then you hit a phrase like","date":"2018-09-06T03:35:37.615Z","type":"message"}
{"nick":"rkirsling","message":"> the `Math` property of the global object","date":"2018-09-06T03:35:37.796Z","type":"message"}
{"nick":"devsnek","message":"put quotes","date":"2018-09-06T03:36:27.129Z","type":"message"}
{"nick":"rkirsling","message":"but then the same for every built-in object?","date":"2018-09-06T03:37:22.920Z","type":"message"}
{"nick":"devsnek","message":"oh like `is the initial value of the Promise property of the global object.`","date":"2018-09-06T03:37:54.248Z","type":"message"}
{"nick":"rkirsling","message":"yessir","date":"2018-09-06T03:38:01.128Z","type":"message"}
{"nick":"rkirsling","message":"that was exactly the sentence","date":"2018-09-06T03:38:13.394Z","type":"message"}
{"nick":"devsnek","message":"i think quotes makes sense there","date":"2018-09-06T03:38:34.134Z","type":"message"}
{"nick":"devsnek","message":"and then there's https://gc.gy/3910207.png","date":"2018-09-06T03:40:06.862Z","type":"message"}
{"nick":"rkirsling","message":"yeah so `\"length\"` there comes from this patch of mine: https://github.com/tc39/ecma262/pull/1239","date":"2018-09-06T03:41:01.963Z","type":"message"}
{"nick":"devsnek","message":"i would put quotes on name","date":"2018-09-06T03:41:26.179Z","type":"message"}
{"nick":"rkirsling","message":"initially I tried to unify everything the other way because it seemed to be statistically the most consistent with existing practices","date":"2018-09-06T03:41:50.810Z","type":"message"}
{"nick":"rkirsling","message":"but yeah, `\"length\"` easily implies `\"name\"` there, that's for sure","date":"2018-09-06T03:42:07.815Z","type":"message"}
{"nick":"devsnek","message":"no quotes relies on conventional wisdom that properties are strings","date":"2018-09-06T03:42:22.668Z","type":"message"}
{"nick":"devsnek","message":"i think the spec should be as explicit as possible","date":"2018-09-06T03:42:30.091Z","type":"message"}
{"nick":"rkirsling","message":"problem is if you write `\"Promise\"` in one place, how can we not write it like that everywhere?","date":"2018-09-06T03:42:45.499Z","type":"message"}
{"nick":"rkirsling","message":"this manual linting effort is only worth it if it's ultimately actually enforceable someday","date":"2018-09-06T03:43:00.973Z","type":"message"}
{"nick":"rkirsling","message":"(at least in theory, haha)","date":"2018-09-06T03:43:05.295Z","type":"message"}
{"nick":"devsnek","message":"`<word> property of`","date":"2018-09-06T03:43:19.911Z","type":"message"}
{"nick":"devsnek","message":"it seems fairly consistent that they're always followed by \"property of\"","date":"2018-09-06T03:43:35.286Z","type":"message"}
{"nick":"devsnek","message":"you could use that to lint","date":"2018-09-06T03:43:38.189Z","type":"message"}
{"nick":"rkirsling","message":"yeah \"property\", \"own property\", \"data property\", \"method\", \"static method\", or \"function\" (at least in the cases where it's used to mean \"static method\")","date":"2018-09-06T03:44:37.618Z","type":"message"}
{"nick":"rkirsling","message":"I mean that would be a policy to start with, for sure","date":"2018-09-06T03:45:00.823Z","type":"message"}
{"nick":"ljharb","message":"quotes are for strings, which are property names","date":"2018-09-06T03:46:39.509Z","type":"message"}
{"nick":"ljharb","message":"backticks are for identifiers","date":"2018-09-06T03:46:42.503Z","type":"message"}
{"nick":"rkirsling","message":"right, so I was thinking a policy of just","date":"2018-09-06T03:49:43.326Z","type":"message"}
{"nick":"rkirsling","message":"> `Object.prototype.hasOwnProperty`, `Object.prototype`, `Object`","date":"2018-09-06T03:49:43.545Z","type":"message"}
{"nick":"rkirsling","message":"> `\"prototype\"`, `\"hasOwnProperty\"`","date":"2018-09-06T03:49:43.545Z","type":"message"}
{"nick":"rkirsling","message":"would work","date":"2018-09-06T03:49:43.545Z","type":"message"}
{"nick":"rkirsling","message":"but now `Object` seems to be brought into question by being a property of the global object","date":"2018-09-06T03:50:14.411Z","type":"message"}
{"nick":"devsnek","message":"i think it depends on context","date":"2018-09-06T03:50:49.594Z","type":"message"}
{"nick":"rkirsling","message":"another fun one is","date":"2018-09-06T03:53:22.284Z","type":"message"}
{"nick":"rkirsling","message":"> The behaviour of the functions `acos`, `acosh`, `asin`, `asinh`, `atan`, `atanh`, `atan2`, `cbrt`, `cos`, `cosh`, `exp`, `expm1`, `hypot`, `log`,`log1p`, `log2`, `log10`, `pow`, `random`, `sin`, `sinh`, `sqrt`, `tan`, and `tanh` is not precisely specified here except to require specific results for certain argument values that represent boundary cases of interest.","date":"2018-09-06T03:53:22.501Z","type":"message"}
{"nick":"rkirsling","message":"gonna be a whole lotta quotes goin' on :P","date":"2018-09-06T03:53:43.592Z","type":"message"}
{"nick":"rkirsling","message":"but that one aside","date":"2018-09-06T04:00:41.436Z","type":"message"}
{"nick":"rkirsling","message":"the very notion of an identifier comes into question, because `var x` can end up accessible as `window.x` or `global.x`","date":"2018-09-06T04:01:49.625Z","type":"message"}
{"nick":"rkirsling","message":"so then what *isn't* a string becomes a tenuous line to draw?","date":"2018-09-06T04:02:12.475Z","type":"message"}
{"nick":"rkirsling","message":"this was the whole thought process that went into my comment here: https://github.com/tc39/ecma262/pull/1239#discussion_r198345731","date":"2018-09-06T04:04:42.291Z","type":"message"}
{"nick":"rkirsling","message":"it was kind of the only way I could think of every case without getting terrible dizzy ðŸ˜‚","date":"2018-09-06T04:05:07.872Z","type":"message"}
{"nick":"rkirsling","message":"er, s/kind of//","date":"2018-09-06T04:05:29.458Z","type":"message"}
{"nick":"rkirsling","message":"and *terribly","date":"2018-09-06T04:05:40.746Z","type":"message"}
{"nick":"ljharb","message":"i think that's why globals don't need quotes","date":"2018-09-06T04:06:12.337Z","type":"message"}
{"nick":"ljharb","message":"because they're also identifiers","date":"2018-09-06T04:06:15.037Z","type":"message"}
{"nick":"rkirsling","message":"that seems like a good way to put it","date":"2018-09-06T04:06:47.712Z","type":"message"}
{"nick":"rkirsling","message":"so there's no way to construe `prototype` or `hasOwnProperty` as an identifier (unless you decide to make it one), but `Object` and company surely are","date":"2018-09-06T04:07:39.258Z","type":"message"}
{"nick":"rkirsling","message":"so then you'd be okay with no quotes in \"the `Math` property of the global object\", ljharb?","date":"2018-09-06T04:08:13.810Z","type":"message"}
{"nick":"ljharb","message":"personally yeah","date":"2018-09-06T04:08:28.974Z","type":"message"}
{"nick":"rkirsling","message":"cool. I think that basically resolves my qualms then ðŸ˜…","date":"2018-09-06T04:09:01.459Z","type":"message"}
{"nick":"jmdyck","message":"I'd be inclined to expect quotes when you're explicitly giving a property key and not when you're not. E.g.: \"the `\"Math\"` property of the global object\" vs \"the `Math` object\". (Or \"the function `acos`\" vs \"the `\"acos\"` property of the `Math` object\")","date":"2018-09-06T04:23:36.435Z","type":"message"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-09-06T04:25:58.423Z","type":"quit"}
{"nick":"devsnek","message":"i'm in agreement with that","date":"2018-09-06T04:36:27.665Z","type":"message"}
{"nick":"rkirsling","message":"if jmdyck is suggesting it, he must have some way of viewing it as enforceable :D ...and yet he has disappeared :(","date":"2018-09-06T04:39:13.012Z","type":"message"}
{"nick":"aki_","date":"2018-09-06T05:16:44.378Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-09-06T05:17:27.502Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-06T05:17:27.682Z","type":"nick"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-09-06T05:30:49.011Z","type":"quit"}
{"nick":"devsnek","message":"anyone willing to champion a `has` operator? https://github.com/devsnek/ecma262/commit/42172ce2df217cd872683b36a037ea6661683fba","date":"2018-09-06T06:47:48.979Z","type":"message"}
{"nick":"ljharb","message":"that's not a reserved word","date":"2018-09-06T06:56:19.569Z","type":"message"}
{"nick":"ljharb","message":"so i think it'd need a NLT","date":"2018-09-06T06:56:31.963Z","type":"message"}
{"nick":"devsnek","message":"ljharb: NLT?","date":"2018-09-06T06:59:24.249Z","type":"message"}
{"nick":"ljharb","message":"no line terminator here","date":"2018-09-06T07:00:35.561Z","type":"message"}
{"nick":"ljharb","message":"ie, to avoid ASI issues","date":"2018-09-06T07:00:43.184Z","type":"message"}
{"nick":"devsnek","message":"oh","date":"2018-09-06T07:01:16.413Z","type":"message"}
{"nick":"ljharb","message":"ie `'toString' \\n in \\n {}` works, but for `has` to work, it'd have to only allow non-newline-whitespace before and after the `has`","date":"2018-09-06T07:01:38.372Z","type":"message"}
{"nick":"devsnek","message":"yeah","date":"2018-09-06T07:01:43.152Z","type":"message"}
{"nick":"devsnek","message":"honestly i don't understand most of the grammar lol","date":"2018-09-06T07:02:12.531Z","type":"message"}
{"nick":"aki_","date":"2018-09-06T07:22:49.503Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-09-06T07:23:07.449Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-09-06T07:23:07.694Z","type":"nick"}
{"nick":"Bakkot","message":"devsnek: a) really doesn't seem worth the syntax, but also b) there's a `has` handler on proxies which is a trap for the `in` operator, so that name is particularly unfortunate","date":"2018-09-06T07:27:30.250Z","type":"message"}
{"nick":"devsnek","message":"Bakkot: i think it would be used quite often. Object.prototype.hasOwnProperty.call is quite a common pattern","date":"2018-09-06T07:28:33.139Z","type":"message"}
{"nick":"devsnek","message":"i do recognize that the name isn't ideal","date":"2018-09-06T07:28:48.680Z","type":"message"}
{"nick":"devsnek","message":"i'm open to suggestions :)","date":"2018-09-06T07:28:57.600Z","type":"message"}
{"nick":"Bakkot","message":"yes, but we already have Object.prototype.hasOwnProperty.call","date":"2018-09-06T07:29:00.670Z","type":"message"}
{"nick":"Bakkot","message":"(or `{}.hasOwnProperty.call`, as I think most people write it? or maybe just the code I read.)","date":"2018-09-06T07:29:27.702Z","type":"message"}
{"nick":"Bakkot","message":"also, >95% of the places I see it used are for-in loops, which are adequately served by instead using `for (let name of Object.keys(obj)) {...}` instead of `for (let name in obj) { if (!{}.hasOwnProperty.call(obj, name)) continue; ... }`","date":"2018-09-06T07:30:48.378Z","type":"message"}
{"nick":"Bakkot","message":"\"would be used quite often\" isn't really adequate justification for new syntax, IMO","date":"2018-09-06T07:31:06.847Z","type":"message"}
{"nick":"devsnek","message":"it seems like such a common thing that js people do","date":"2018-09-06T07:31:28.517Z","type":"message"}
{"nick":"devsnek","message":"not just in for-in loops","date":"2018-09-06T07:31:35.683Z","type":"message"}
