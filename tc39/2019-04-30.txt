{"nick":"ArashPT","reason":"Ping timeout: 245 seconds","date":"2019-04-30T00:20:01.961Z","type":"quit"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-30T01:07:32.522Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-04-30T01:18:22.964Z","type":"join"}
{"nick":"keith_mi_","reason":"Remote host closed the connection","date":"2019-04-30T01:26:31.229Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-04-30T01:26:46.298Z","type":"join"}
{"nick":"keith_mi_","reason":"Ping timeout: 246 seconds","date":"2019-04-30T01:54:37.283Z","type":"quit"}
{"nick":"keith_mi_","date":"2019-04-30T01:57:28.003Z","type":"join"}
{"nick":"keith_mi_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-04-30T02:23:50.047Z","type":"quit"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2019-04-30T03:35:04.909Z","type":"quit"}
{"nick":"cybai","date":"2019-04-30T03:43:41.070Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 246 seconds","date":"2019-04-30T03:47:53.997Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-04-30T04:07:06.449Z","type":"quit"}
{"nick":"cybai","date":"2019-04-30T04:19:42.347Z","type":"join"}
{"nick":"rkirsling","message":"so I've got a question that's most likely shockingly newbish","date":"2019-04-30T04:53:19.994Z","type":"message"}
{"nick":"rkirsling","message":"does `Let R be the result of evaluating DefaultClause.` not carry any implication that we're actually going to evaluate something such that side effects would be seen? it seems that the answer has to be yes but I don't think I understand why","date":"2019-04-30T04:54:32.220Z","type":"message"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2019-04-30T04:54:57.396Z","type":"quit"}
{"nick":"ljharb","message":"rkirsling: is this like in a switch statement?","date":"2019-04-30T04:56:26.689Z","type":"message"}
{"nick":"rkirsling","message":"yessir","date":"2019-04-30T04:56:30.437Z","type":"message"}
{"nick":"ljharb","message":"it's a statement list, so yeah that sounds right","date":"2019-04-30T04:56:47.924Z","type":"message"}
{"nick":"ljharb","message":"i think there's something about the default clause not being required to be last, but it'll still be evaluated last?","date":"2019-04-30T04:57:18.432Z","type":"message"}
{"nick":"ljharb","message":"switch statements are weird","date":"2019-04-30T04:57:26.968Z","type":"message"}
{"nick":"rkirsling","message":"that's exactly what I opened the spec to search for","date":"2019-04-30T04:59:06.142Z","type":"message"}
{"nick":"devsnek","message":"rkirsling: so","date":"2019-04-30T04:59:36.520Z","type":"message"}
{"nick":"rkirsling","message":"but in the RS here https://tc39.github.io/ecma262/#sec-runtime-semantics-caseblockevaluation","date":"2019-04-30T04:59:42.950Z","type":"message"}
{"nick":"devsnek","message":"the evaluation of switch is defined such that the `DefaultClause` is plucked out","date":"2019-04-30T04:59:59.596Z","type":"message"}
{"nick":"devsnek","message":"and always run last","date":"2019-04-30T05:00:01.424Z","type":"message"}
{"nick":"devsnek","message":"because its defined as `Clauses DefaultClause Clauses_opt` or something like that","date":"2019-04-30T05:00:21.668Z","type":"message"}
{"nick":"devsnek","message":"oh yeah its those two syntax branches","date":"2019-04-30T05:00:56.713Z","type":"message"}
{"nick":"rkirsling","message":"yeah but it seems that we check the cases before the default in source order, then evaluate default and tentatively set its completion value as the overall completion value, then go through the cases after the default in source order","date":"2019-04-30T05:01:39.737Z","type":"message"}
{"nick":"ljharb","message":"that's probably so the spec can be written top down, but unobservably so that implementations can re-order the default clause and it works the same?","date":"2019-04-30T05:02:07.343Z","type":"message"}
{"nick":"ljharb","message":"totally throwing out guesses","date":"2019-04-30T05:02:20.859Z","type":"message"}
{"nick":"devsnek","message":"oh i see what you're saying","date":"2019-04-30T05:02:32.868Z","type":"message"}
{"nick":"rkirsling","message":"yeah I'm clearly missing something because the engines all do the right thing (no side effects putting default above the case that we want)","date":"2019-04-30T05:03:03.105Z","type":"message"}
{"nick":"ljharb","message":"hm, are you suggesting the spec implies that `default` should be ran always (when it's not last) even if it's not triggered? O.o","date":"2019-04-30T05:03:34.513Z","type":"message"}
{"nick":"devsnek","message":"its doing it this way for fallthrough","date":"2019-04-30T05:03:48.528Z","type":"message"}
{"nick":"rkirsling","message":"that's what I'm reading it as and feeling like I must be mistaken","date":"2019-04-30T05:03:55.456Z","type":"message"}
{"nick":"devsnek","message":"things in front of the default might still need to fall through to the default","date":"2019-04-30T05:04:11.488Z","type":"message"}
{"nick":"devsnek","message":"but things after don't","date":"2019-04-30T05:04:15.239Z","type":"message"}
{"nick":"ljharb","message":"aha","date":"2019-04-30T05:04:20.041Z","type":"message"}
{"nick":"devsnek","message":"which is why foundInB returns immediately","date":"2019-04-30T05:04:28.088Z","type":"message"}
{"nick":"devsnek","message":"but a only returns if its abrupt (throw or break)","date":"2019-04-30T05:04:35.050Z","type":"message"}
{"nick":"devsnek","message":"ngl this is confusing af","date":"2019-04-30T05:05:00.631Z","type":"message"}
{"nick":"rkirsling","message":"oh for crying out loud","date":"2019-04-30T05:06:14.641Z","type":"message"}
{"nick":"devsnek","message":"lol","date":"2019-04-30T05:06:26.016Z","type":"message"}
{"nick":"rkirsling","message":"I think my eyes just jumped over step 7","date":"2019-04-30T05:06:45.149Z","type":"message"}
{"nick":"rkirsling","message":"okay yeah I've fully got it now","date":"2019-04-30T05:22:24.443Z","type":"message"}
{"nick":"rkirsling","message":"anyway that's what I get for skimming too fast","date":"2019-04-30T05:35:05.484Z","type":"message"}
{"nick":"rkirsling","message":"since I wrote it out clearly for my own purposes, I'll copy-paste it here for closure's sake","date":"2019-04-30T05:39:03.351Z","type":"message"}
{"nick":"rkirsling","message":"1. we check the _before_ cases in order","date":"2019-04-30T05:39:52.922Z","type":"message"}
{"nick":"rkirsling","message":"2. if we match *and* hit a `break`/`return` somewhere before the `default`, we're done","date":"2019-04-30T05:39:52.925Z","type":"message"}
{"nick":"rkirsling","message":"3. otherwise, we check the _after_ cases in order","date":"2019-04-30T05:39:52.925Z","type":"message"}
{"nick":"rkirsling","message":"4. if we matched an _after_ case we're done (regardless of `break`/`return`)","date":"2019-04-30T05:39:52.925Z","type":"message"}
{"nick":"rkirsling","message":"5. otherwise, we evaluate the `default`","date":"2019-04-30T05:39:52.925Z","type":"message"}
{"nick":"rkirsling","message":"6. if we *still* haven't hit a `break`/`return` we evaluate on into the _after_ cases as necessary","date":"2019-04-30T05:39:53.554Z","type":"message"}
{"nick":"rkirsling","message":"so that matches expected behavior","date":"2019-04-30T05:40:13.957Z","type":"message"}
{"nick":"rkirsling","message":"(this all started because I was reading one of LLVM's tutorial docs and they've got a (C++) switch with default first, and I literally never thought about that being valid to do before now...)","date":"2019-04-30T05:42:37.196Z","type":"message"}
{"nick":"devsnek","message":"i think the only valid thing to do is avoid c style switch cases","date":"2019-04-30T05:44:22.076Z","type":"message"}
{"nick":"rkirsling","message":"we all know ljharb agrees ;)","date":"2019-04-30T05:45:37.130Z","type":"message"}
{"nick":"rkirsling","message":"they're kind of like \"goto's last bastion\"","date":"2019-04-30T05:46:28.670Z","type":"message"}
{"nick":"rkirsling","message":"heh","date":"2019-04-30T05:46:29.605Z","type":"message"}
{"nick":"ljharb","message":"lol yes, burn them with fire","date":"2019-04-30T05:47:17.026Z","type":"message"}
{"nick":"devsnek","message":"`do { break label } while (false);`","date":"2019-04-30T05:47:39.399Z","type":"message"}
{"nick":"devsnek","message":"actually can you jump to labels that are defined later","date":"2019-04-30T05:48:07.133Z","type":"message"}
{"nick":"devsnek","message":"aw you can't","date":"2019-04-30T05:48:26.281Z","type":"message"}
{"nick":"ArashPT","date":"2019-04-30T05:58:13.641Z","type":"join"}
{"nick":"cybai_","date":"2019-04-30T05:59:51.842Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 250 seconds","date":"2019-04-30T05:59:54.931Z","type":"quit"}
{"nick":"ArashPT","reason":"Read error: Connection reset by peer","date":"2019-04-30T06:43:17.108Z","type":"quit"}
{"nick":"ArashPT","date":"2019-04-30T06:43:39.049Z","type":"join"}
{"nick":"ArashPT","reason":"Ping timeout: 258 seconds","date":"2019-04-30T06:52:33.007Z","type":"quit"}
{"nick":"ArashPT","date":"2019-04-30T06:54:38.373Z","type":"join"}
{"nick":"ArashPT","reason":"Client Quit","date":"2019-04-30T06:54:56.944Z","type":"quit"}
{"nick":"howdoi_","date":"2019-04-30T06:57:42.073Z","type":"join"}
{"nick":"howdoi_","new_nick":"howdoi","date":"2019-04-30T06:58:02.138Z","type":"nick"}
{"nick":"cybai","date":"2019-04-30T07:02:37.371Z","type":"join"}
{"nick":"cybai_","reason":"Ping timeout: 268 seconds","date":"2019-04-30T07:03:31.788Z","type":"quit"}
{"nick":"cybai_","date":"2019-04-30T07:10:32.059Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 246 seconds","date":"2019-04-30T07:12:04.398Z","type":"quit"}
{"nick":"kpatticha","date":"2019-04-30T07:23:29.751Z","type":"join"}
{"nick":"cybai_","reason":"Quit: Leaving...","date":"2019-04-30T07:25:01.412Z","type":"quit"}
{"nick":"kpattich_","date":"2019-04-30T07:25:09.808Z","type":"join"}
{"nick":"kpatticha","reason":"Ping timeout: 255 seconds","date":"2019-04-30T07:28:11.737Z","type":"quit"}
