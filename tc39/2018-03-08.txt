{"nick":"devsnek","message":"markdown tables need wider rendering on github","date":"2018-03-08T00:00:28.711Z","type":"message"}
{"nick":"bterlson","message":"devsnek: say hello to your rep maggiepint ;)","date":"2018-03-08T00:00:29.527Z","type":"message"}
{"nick":"mattijs","reason":"Ping timeout: 240 seconds","date":"2018-03-08T00:00:33.186Z","type":"quit"}
{"nick":"devsnek","message":"everything looks equally terrible cuz its newlined to death","date":"2018-03-08T00:00:48.845Z","type":"message"}
{"nick":"jschoi","message":"devsnek: Yeah, I had to really modify the real-world examples to not cause scrolling. Very annoying. Oh, are you looking on a phone?","date":"2018-03-08T00:00:59.218Z","type":"message"}
{"nick":"devsnek","message":"nah","date":"2018-03-08T00:01:05.940Z","type":"message"}
{"nick":"devsnek","message":"github just has harsh rendering width limits","date":"2018-03-08T00:01:23.114Z","type":"message"}
{"nick":"devsnek","message":"bterlson: who is maggiepint?","date":"2018-03-08T00:01:36.617Z","type":"message"}
{"nick":"devsnek","message":"jschoi: did you come up with this: `+> # + 2`","date":"2018-03-08T00:03:20.722Z","type":"message"}
{"nick":"bterlson","message":"devsnek: works on moment, reps jsf to tc39","date":"2018-03-08T00:03:39.237Z","type":"message"}
{"nick":"devsnek","message":"ah","date":"2018-03-08T00:03:45.868Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit:  ","date":"2018-03-08T00:04:24.528Z","type":"quit"}
{"nick":"jschoi","message":"devsnek: Yeah. Probably influenced by Clojure.","date":"2018-03-08T00:04:25.517Z","type":"message"}
{"nick":"jschoi","message":"bterlson: https://twitter.com/__jschoi/status/971536904662409216?s=21","date":"2018-03-08T00:04:30.369Z","type":"message"}
{"nick":"devsnek","message":"maybe node.js can buy a seat and send me to your meetings 😄","date":"2018-03-08T00:04:45.312Z","type":"message"}
{"nick":"devsnek","message":"jschoi: i'm trying to star your repo but github is glitching out","date":"2018-03-08T00:08:41.154Z","type":"message"}
{"nick":"jschoi","message":"But I have to stress that that `+> # + 2` form is an additional feature that is not part of the core proposal. It does show the potential of simply extending the core proposal to handle composition, partial application, and method extraction with just one more operator. I tried to keep it forward compatible with all of the additional features. But I don’t want to scare people with too much at once, though.","date":"2018-03-08T00:09:05.215Z","type":"message"}
{"nick":"jschoi","message":"Ah, I appreciate the sentiment.","date":"2018-03-08T00:09:16.407Z","type":"message"}
{"nick":"devsnek","message":"https://i.imgur.com/PddLcsa.png","date":"2018-03-08T00:09:34.577Z","type":"message"}
{"nick":"devsnek","message":"yea i realize all that other stuff is extra","date":"2018-03-08T00:09:46.091Z","type":"message"}
{"nick":"AtumT_","reason":"Remote host closed the connection","date":"2018-03-08T00:16:41.815Z","type":"quit"}
{"nick":"littledan","message":"devsnek: If you are part of an organization that wants to become a TC39 member, let's be in touch; I can help you make that happen. You can email me at littledan@igalia.com","date":"2018-03-08T00:21:06.459Z","type":"message"}
{"nick":"littledan","message":"I mean, an Ecma member","date":"2018-03-08T00:21:22.820Z","type":"message"}
{"nick":"littledan","message":"we're always happy to have new members","date":"2018-03-08T00:21:27.889Z","type":"message"}
{"nick":"devsnek","message":"hehe i'm honored, but i'm just a junior in high school :)","date":"2018-03-08T00:21:29.284Z","type":"message"}
{"nick":"littledan","message":"oh, hehe","date":"2018-03-08T00:21:37.388Z","type":"message"}
{"nick":"devsnek","message":"maybe someday","date":"2018-03-08T00:21:47.622Z","type":"message"}
{"nick":"littledan","message":"I got into programming languages when I was in high school too, though I think you chose a more meaningful project than I did at the time","date":"2018-03-08T00:22:09.237Z","type":"message"}
{"nick":"devsnek","message":"i mean, you're here deciding the future of the most used programming language in the world, so it seems to have worked out 😄","date":"2018-03-08T00:22:53.355Z","type":"message"}
{"nick":"bterlson","message":"devsnek: how many of your peers know about IRC? just curious","date":"2018-03-08T00:31:52.350Z","type":"message"}
{"nick":"devsnek","message":"at my school?","date":"2018-03-08T00:32:05.916Z","type":"message"}
{"nick":"bterlson","message":"yeah","date":"2018-03-08T00:32:28.043Z","type":"message"}
{"nick":"devsnek","message":"i haven't met anyone else there who does this kinda thing","date":"2018-03-08T00:32:29.732Z","type":"message"}
{"nick":"devsnek","message":"and its a fairly small school","date":"2018-03-08T00:32:34.992Z","type":"message"}
{"nick":"bterlson","message":"ah","date":"2018-03-08T00:32:39.525Z","type":"message"}
{"nick":"devsnek","message":"why ask?","date":"2018-03-08T00:32:56.753Z","type":"message"}
{"nick":"devsnek","message":"just cuz its weird to see someone my age on irc? 😆","date":"2018-03-08T00:33:17.317Z","type":"message"}
{"nick":"bterlson","message":"in my day (over a decade ago :-P) there were so many reasons to use IRC for a high schooler","date":"2018-03-08T00:33:42.830Z","type":"message"}
{"nick":"bterlson","message":"I suspect none of them exist now","date":"2018-03-08T00:33:48.470Z","type":"message"}
{"nick":"devsnek","message":"all the people in my school are on snapchat","date":"2018-03-08T00:34:15.838Z","type":"message"}
{"nick":"devsnek","message":"i've never really used it tho hehe","date":"2018-03-08T00:34:25.022Z","type":"message"}
{"nick":"bterlson","message":"well bad news, you need a snapstreak of 100 or more to attend TC39 meetings","date":"2018-03-08T00:34:57.743Z","type":"message"}
{"nick":"devsnek","message":"i don't even know what that is 😢","date":"2018-03-08T00:35:19.235Z","type":"message"}
{"nick":"devsnek","action":"googles \"snapstreak\"","date":"2018-03-08T00:35:34.176Z","type":"action"}
{"nick":"devsnek","message":"hah they have a zendesk","date":"2018-03-08T00:35:53.195Z","type":"message"}
{"nick":"jschoi","message":"For what it’s worth, I had never been able to use IRC until I discovered IRCCloud. IRC always had too high of a cognitive burden for me to use while working, before. But I knew of it in school…in the same sense that I know of Usenet.","date":"2018-03-08T00:46:05.050Z","type":"message"}
{"nick":"devsnek","message":"i couldn't use irc without a bouncer, i had my own znc instance up until i switched to irccloud","date":"2018-03-08T00:48:49.863Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-08T01:01:52.236Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-08T01:08:04.406Z","type":"join"}
{"nick":"keith_miller","reason":"Remote host closed the connection","date":"2018-03-08T01:10:51.004Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-08T01:11:38.320Z","type":"join"}
{"nick":"mattijs_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-08T01:11:46.037Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-03-08T01:17:28.486Z","type":"join"}
{"nick":"kaalchakka","date":"2018-03-08T01:29:32.600Z","type":"join"}
{"nick":"kaalchakka","new_nick":"kaal_away","date":"2018-03-08T01:40:49.041Z","type":"nick"}
{"nick":"TabAtkins","message":"What is the  `??:` operator being used in the first examples in https://github.com/js-choi/proposal-smart-pipelines/#core-proposal?","date":"2018-03-08T01:40:58.065Z","type":"message"}
{"nick":"TabAtkins","message":"Maybe null-coalesce?","date":"2018-03-08T01:41:19.277Z","type":"message"}
{"nick":"TabAtkins","message":"Crap, I'm *really* happy about @littledan's new pipeline proposal. Feels *very* elegant.","date":"2018-03-08T01:52:35.978Z","type":"message"}
{"nick":"devsnek","message":"i assumed it was some sort of nullish operator","date":"2018-03-08T02:03:21.369Z","type":"message"}
{"nick":"devsnek","message":"like the proposal","date":"2018-03-08T02:03:24.557Z","type":"message"}
{"nick":"jschoi","message":"devsnek, TabAtkins: The `??:` is what the nullish-coalescing infix operator has changed to in recent conversations.","date":"2018-03-08T02:04:54.749Z","type":"message"}
{"nick":"devsnek","message":"wouldn't be true nullish coalescing without a colon amirite","date":"2018-03-08T02:05:22.078Z","type":"message"}
{"nick":"TabAtkins","message":"k, that's what I figured, I just hadn't seen that proposal get updated like that","date":"2018-03-08T02:05:24.320Z","type":"message"}
{"nick":"jschoi","message":"See https://github.com/tc39/proposal-nullish-coalescing/pull/23.","date":"2018-03-08T02:05:38.366Z","type":"message"}
{"nick":"TabAtkins","message":"jschoi: Thanks a ton for this writeup, btw.  (I dunno which of you two actually did it, but thanks to either of you.)","date":"2018-03-08T02:06:00.315Z","type":"message"}
{"nick":"jschoi","message":"TabAtkins: To which pipeline proposal were you referring to being elegant?","date":"2018-03-08T02:06:15.219Z","type":"message"}
{"nick":"jschoi","message":"Oh,","date":"2018-03-08T02:06:27.072Z","type":"message"}
{"nick":"TabAtkins","message":"The one expressed in your explainer","date":"2018-03-08T02:06:27.272Z","type":"message"}
{"nick":"jschoi","message":"Thanks!","date":"2018-03-08T02:06:30.142Z","type":"message"}
{"nick":"TabAtkins","message":"It's super good.","date":"2018-03-08T02:06:40.425Z","type":"message"}
{"nick":"TabAtkins","message":"Like, addresses all of my concerns, in just its base form.","date":"2018-03-08T02:06:49.785Z","type":"message"}
{"nick":"TabAtkins","message":"jschoi: In the first arrow-function example, the arrow function isn't parenthesized; in later ones it is, and there's an section explicitly about having to parenthesize it. Is this valid just because it's in the final leg of the pipeline?","date":"2018-03-08T02:09:02.712Z","type":"message"}
{"nick":"jschoi","message":"TabAtkins: If I may ask, what concerns have you had, and did you find the structure of the explainer (with the additional features in the same document) confusing?","date":"2018-03-08T02:09:03.814Z","type":"message"}
{"nick":"jschoi","message":"Oh, it probably is a mistake.","date":"2018-03-08T02:09:14.995Z","type":"message"}
{"nick":"jschoi","message":"I’ll check.","date":"2018-03-08T02:09:21.519Z","type":"message"}
{"nick":"jschoi","message":"Yeah, a mistake; forgot to update that part after choosing a precedence level. Whoops.","date":"2018-03-08T02:10:31.452Z","type":"message"}
{"nick":"jschoi","message":"Needs to be parenthesized.","date":"2018-03-08T02:10:42.412Z","type":"message"}
{"nick":"jschoi","message":"Would be a syntax error.","date":"2018-03-08T02:10:51.117Z","type":"message"}
{"nick":"TabAtkins","message":"kk","date":"2018-03-08T02:11:37.661Z","type":"message"}
{"nick":"TabAtkins","message":"My concerns were:","date":"2018-03-08T02:11:49.787Z","type":"message"}
{"nick":"TabAtkins","action":"1. Handling awaiting a value in the pipeline with any sort of elegance.","date":"2018-03-08T02:12:27.825Z","type":"action"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-08T02:12:28.311Z","type":"quit"}
{"nick":"TabAtkins","message":"2. Elm-style \"call a function with the LHS value *and* other arguments\".","date":"2018-03-08T02:13:02.095Z","type":"message"}
{"nick":"TabAtkins","message":"3. Anything non-trivial seemed to require the weight (both text-wise and runtime-wise) of a nested arrow function.","date":"2018-03-08T02:13:52.371Z","type":"message"}
{"nick":"TabAtkins","message":"This solves all of these super elegantly, and then some, while still maintaining the nice bare functional style if that's all you need. V good overall.","date":"2018-03-08T02:14:53.206Z","type":"message"}
{"nick":"TabAtkins","message":"Only minor concern so far is that the treatment of `new` and `await` in the bare form are actually different - `new` modifies the identifier (`(new foo)(#)`) while `await` modifies the returned value `await (foo(#))`)","date":"2018-03-08T02:16:17.874Z","type":"message"}
{"nick":"TabAtkins","message":"That's probably fine tho - I think it *reads* well in both cases.","date":"2018-03-08T02:16:35.063Z","type":"message"}
{"nick":"TabAtkins","message":"(versus just requiring a `|> await #` line following any promise-returning functions that you want to wait on)","date":"2018-03-08T02:18:00.015Z","type":"message"}
{"nick":"not-an-aardvark","message":"Is it intentional that there is an early error for something like `text |> loud ? toUpperCase : toLowerCase` ?","date":"2018-03-08T02:18:12.832Z","type":"message"}
{"nick":"not-an-aardvark","message":"From what I can tell that would be an early error because the `#` is not used, even though the expression is actually intended to be a conditional function to apply in the pipeline.","date":"2018-03-08T02:18:47.213Z","type":"message"}
{"nick":"TabAtkins","message":"Yes, that's an early error, and it's intentional from my reading, to avoid accidental foot-shooting.","date":"2018-03-08T02:19:03.721Z","type":"message"}
{"nick":"TabAtkins","message":"Non-trivial expressions have to use the topic form.","date":"2018-03-08T02:19:19.219Z","type":"message"}
{"nick":"jschoi","message":"TabAtkins: Thanks! Yes, I tried to keep bare style minimal and hopefully the difference between its three forms is not a big burden.","date":"2018-03-08T02:19:38.229Z","type":"message"}
{"nick":"TabAtkins","message":"`text |> loud ? toUpperCase(#) : toLowerCase(#)` is pretty trivial.","date":"2018-03-08T02:19:49.013Z","type":"message"}
{"nick":"not-an-aardvark","message":"Fair enough","date":"2018-03-08T02:20:01.454Z","type":"message"}
{"nick":"jschoi","message":"not-an-aardvark: Yes. Bare style is meant to be simple to distinguish without garden-path parsing, the avoidance of which is one of the goals.","date":"2018-03-08T02:20:11.150Z","type":"message"}
{"nick":"TabAtkins","message":"Another *huge* benefit of bare form as written, which wouldn't apply if arbitrary expressions like the above were allowed: CAN GRAB METHODS WITHOUT HAVING TO MANUALLY BIND THEM","date":"2018-03-08T02:21:00.587Z","type":"message"}
{"nick":"TabAtkins","message":"(Because it's a call form, so it handles the binding for you.)","date":"2018-03-08T02:21:09.827Z","type":"message"}
{"nick":"keith_miller","date":"2018-03-08T02:21:27.793Z","type":"join"}
{"nick":"not-an-aardvark","message":"Can pipelines be nested? If so, would the `#` in an inner scope shadow the one from the outer scope?","date":"2018-03-08T02:21:42.702Z","type":"message"}
{"nick":"TabAtkins","message":"Yes and yes - it's in the examples nearer the bottom.","date":"2018-03-08T02:21:54.389Z","type":"message"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-03-08T02:22:04.591Z","type":"quit"}
{"nick":"not-an-aardvark","message":"Never mind, just found the example. Thanks.","date":"2018-03-08T02:22:09.369Z","type":"message"}
{"nick":"TabAtkins","message":"Like, frickin, the fact that `sel |> document.querySelector |> foo` works is super great. In the old pipeline (RHS was an arbitrary expression that must evaluate to a function, which is invoked with the LHS) you'd have to write `sel |> (x=>document.querySelector(x)) |> foo` or `sel |> document.querySelector.bind(querySelector) |> foo`.","date":"2018-03-08T02:25:35.595Z","type":"message"}
{"nick":"TabAtkins","message":"jschoi: Last example in the BP feature section is using ? as the topic ref in the pipeline example; should be #.","date":"2018-03-08T02:28:09.272Z","type":"message"}
{"nick":"jschoi","message":"Do you mean `$` not `?`? But yes, I see the mistake. Will fix soon.","date":"2018-03-08T02:29:48.417Z","type":"message"}
{"nick":"jschoi","message":"Thanks!","date":"2018-03-08T02:30:01.845Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-08T02:34:27.815Z","type":"quit"}
{"nick":"TabAtkins","message":"Yeah, sorry.","date":"2018-03-08T02:34:38.176Z","type":"message"}
{"nick":"TabAtkins","message":"jschoi: Example in the PF section showing how it combines with PP has a few syntax errors; look mostly like leftovers from previous syntax ideas.","date":"2018-03-08T02:37:45.241Z","type":"message"}
{"nick":"jschoi","message":"TabAtkins: The ones with array.map? Yeah, I see some mistakes. Thanks!","date":"2018-03-08T02:40:27.737Z","type":"message"}
{"nick":"TabAtkins","message":"jschoi: Shoot, I think the vastly improved usability of methods with this proposal needs to be front-and-center when comparing with the old proposal. Both `val |> foo.bar` working as expected (bar retains its foo binding) and `val |> #.foo`; both require an explicit arrow function (or a bunch more syntax) to work in the old version.","date":"2018-03-08T02:41:31.908Z","type":"message"}
{"nick":"TabAtkins","message":"jschoi: omg, `+> foo.bar` giving us method extraction for free, goddammit this is good stuff","date":"2018-03-08T02:45:17.461Z","type":"message"}
{"nick":"devsnek","message":"ikr","date":"2018-03-08T02:45:35.775Z","type":"message"}
{"nick":"jschoi","message":"TabAtkins: Thanks again for the feedback. The errors you found have been corrected. I’ll try to think of ways to make the `x |> o.m` semantics more prominent, too.","date":"2018-03-08T03:13:44.415Z","type":"message"}
{"nick":"Domenic","message":"jschoi: I would strongly suggest removing ??: usage. I have no idea what that is and it distracts from the proposal.","date":"2018-03-08T03:44:19.340Z","type":"message"}
{"nick":"jschoi","message":"Domenic: Will do; I’ll replace it with `||`.","date":"2018-03-08T03:45:52.047Z","type":"message"}
{"nick":"Domenic","message":"It's pretty compelling, if I can get over the reuse of # :)","date":"2018-03-08T03:48:20.731Z","type":"message"}
{"nick":"jschoi","message":"Domenic: Thanks! It doesn’t have to be `#`—it could also be `@`. Bikeshedding of the token has been occurring at https://github.com/tc39/proposal-pipeline-operator/issues/91.","date":"2018-03-08T03:56:24.121Z","type":"message"}
{"nick":"keith_miller","date":"2018-03-08T04:11:25.244Z","type":"join"}
{"nick":"devsnek","message":"symbol should be ❤","date":"2018-03-08T04:12:18.795Z","type":"message"}
{"nick":"bterlson","message":"bare style maybe seems like a lot of confusion to save 3 characters?","date":"2018-03-08T04:46:17.628Z","type":"message"}
{"nick":"bterlson","message":"complexity anyway","date":"2018-03-08T04:46:41.039Z","type":"message"}
{"nick":"jschoi","message":"bterlson: It depends on how complex its rules are. I tried to make them simple enough to say in one sentence: “one or more identifiers, separated by `.`s, optionally preceded by `new` or `await`”. If you haven’t already taken a look at the formal grammar (https://jschoi.org/18/es-smart-pipelines/spec#sec-pipeline-operator), does it still seem complex after you look at it?","date":"2018-03-08T04:53:43.710Z","type":"message"}
{"nick":"jschoi","message":"The character savings rapidly multiply over chains of functional composition.","date":"2018-03-08T04:54:19.721Z","type":"message"}
{"nick":"bterlson","message":"the grammar changes are simple enough","date":"2018-03-08T04:54:48.769Z","type":"message"}
{"nick":"jschoi","message":"Confusion with topic style is made less likely by the early error that forbids topic-style pipelines that don’t use the topic reference—hopefully enough so that accidental use of topic style instead of bare style is almost impossible.","date":"2018-03-08T04:56:28.630Z","type":"message"}
{"nick":"jschoi","message":"Or vice versa.","date":"2018-03-08T04:58:12.305Z","type":"message"}
{"nick":"jmdyck1","reason":"Remote host closed the connection","date":"2018-03-08T05:05:30.815Z","type":"quit"}
{"nick":"jschoi","message":"That would go not only for human writing but also for human reading, too. The rules of bare style hopefully ensure that it only can be used when it would not be visually confusable with a topic-style arbitrary expression, by a reader of the code.","date":"2018-03-08T05:08:14.094Z","type":"message"}
{"nick":"caridy","reason":"Ping timeout: 268 seconds","date":"2018-03-08T05:08:14.860Z","type":"quit"}
{"nick":"jschoi","message":"The bare style optimizes for the very common functional style in which unary functions are composed. It also optimizes for the common case of method extraction. The benefits in terseness would be multiplied by the number of times such unary functions or methods are used—hopefully with minimal cost in visual confusion, given the grammar rules and the early errors. That’s the hope.","date":"2018-03-08T05:11:12.629Z","type":"message"}
{"nick":"caridy","date":"2018-03-08T05:16:38.787Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-08T05:35:54.075Z","type":"quit"}
{"nick":"keith_miller","date":"2018-03-08T05:39:19.125Z","type":"join"}
{"nick":"kaal_away","reason":"Quit: ZZZzzz…","date":"2018-03-08T05:43:50.246Z","type":"quit"}
{"nick":"pandem","date":"2018-03-08T06:28:54.580Z","type":"join"}
{"nick":"jschoi","message":"TabAtkins: For what it’s worth, even if bare awaited function calls weren’t part of bare style, you don’t have to do `x |> af |> await #`. You could do `x |> await af(#)`. In fact, that had been my preferred style, before adding bare awaited function calls only recently to the proposal, after finishing rewriting the real-world examples.","date":"2018-03-08T06:52:53.864Z","type":"message"}
{"nick":"caridy","reason":"Ping timeout: 268 seconds","date":"2018-03-08T07:10:20.729Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-03-08T08:52:33.779Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-03-08T09:27:11.762Z","type":"quit"}
{"nick":"littledan","message":"TabAtkins: Glad you're happy about it, but basically all of the work is from the community, not me; it'll be great to have your feedback about the various alternatives, between jschoi 's proposal and the \"F#\" option that mAAdhaTTah  is working through","date":"2018-03-08T10:32:05.841Z","type":"message"}
{"nick":"littledan","message":"my plan at TC39 is to summarize both of these and get more input that way","date":"2018-03-08T10:32:43.230Z","type":"message"}
{"nick":"Jayflux","date":"2018-03-08T10:51:15.550Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-08T11:25:28.557Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-08T11:25:58.137Z","type":"join"}
{"nick":"Jayflux","reason":"Remote host closed the connection","date":"2018-03-08T11:28:24.498Z","type":"quit"}
{"nick":"AtumT","date":"2018-03-08T11:39:14.284Z","type":"join"}
{"nick":"gskachkov","date":"2018-03-08T12:12:21.787Z","type":"join"}
{"nick":"gibson0421","date":"2018-03-08T12:43:37.371Z","type":"join"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2018-03-08T12:43:40.505Z","type":"quit"}
{"nick":"jmdyck","date":"2018-03-08T13:13:25.044Z","type":"join"}
{"nick":"keith_miller","date":"2018-03-08T13:27:33.600Z","type":"join"}
{"nick":"gibson0421","reason":"Quit: Leaving.","date":"2018-03-08T13:43:24.400Z","type":"quit"}
{"nick":"atticoos_","date":"2018-03-08T14:19:31.956Z","type":"join"}
{"nick":"devsnek","message":"has something like css's @supports been discussed for js","date":"2018-03-08T15:05:27.505Z","type":"message"}
{"nick":"devsnek","message":"actually scratch that, thats stupid :D","date":"2018-03-08T15:07:38.009Z","type":"message"}
{"nick":"rwaldron","date":"2018-03-08T15:11:46.324Z","type":"join"}
{"nick":"littledan","message":"when the spec mentions \"the following two cases\", should I note that two as a mathematical value or a Number? ;)","date":"2018-03-08T15:16:33.415Z","type":"message"}
{"nick":"devsnek","message":"as an ieee 754 double precision floating point obviously","date":"2018-03-08T15:33:35.028Z","type":"message"}
{"nick":"devsnek","message":"i just used a do block instead of a wrapped arrow function and i feel like a god 😄","date":"2018-03-08T15:34:26.452Z","type":"message"}
{"nick":"mattijs","date":"2018-03-08T15:45:10.425Z","type":"join"}
{"nick":"caridy","date":"2018-03-08T15:53:11.535Z","type":"join"}
