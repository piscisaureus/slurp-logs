{"nick":"Jessidhia","reason":"Remote host closed the connection","date":"2019-02-04T01:03:09.162Z","type":"quit"}
{"nick":"Jessidhia","date":"2019-02-04T01:04:06.013Z","type":"join"}
{"nick":"jmdyck","reason":"Ping timeout: 250 seconds","date":"2019-02-04T01:19:46.429Z","type":"quit"}
{"nick":"jmdyck","date":"2019-02-04T01:27:21.317Z","type":"join"}
{"nick":"aki_","date":"2019-02-04T01:55:13.589Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 272 seconds","date":"2019-02-04T01:56:52.762Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T01:56:53.169Z","type":"nick"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-02-04T02:48:38.482Z","type":"quit"}
{"nick":"gibson042","date":"2019-02-04T03:10:43.460Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 250 seconds","date":"2019-02-04T03:38:52.438Z","type":"quit"}
{"nick":"gibson042","date":"2019-02-04T03:53:32.621Z","type":"join"}
{"nick":"aki_","date":"2019-02-04T04:01:50.327Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2019-02-04T04:02:56.598Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T04:02:57.588Z","type":"nick"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2019-02-04T05:36:35.753Z","type":"quit"}
{"nick":"obensource","reason":"Ping timeout: 245 seconds","date":"2019-02-04T05:57:33.327Z","type":"quit"}
{"nick":"aki_","date":"2019-02-04T06:08:01.256Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2019-02-04T06:08:47.391Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T06:08:47.694Z","type":"nick"}
{"nick":"obensource","date":"2019-02-04T06:12:08.093Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 240 seconds","date":"2019-02-04T06:28:26.591Z","type":"quit"}
{"nick":"keith_miller","date":"2019-02-04T07:51:01.589Z","type":"join"}
{"nick":"aki_","date":"2019-02-04T08:14:17.256Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2019-02-04T08:15:10.257Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T08:15:10.555Z","type":"nick"}
{"nick":"akoserwa","date":"2019-02-04T08:19:25.588Z","type":"join"}
{"nick":"akoserwa_","date":"2019-02-04T08:21:56.256Z","type":"join"}
{"nick":"akoserwa","reason":"Ping timeout: 240 seconds","date":"2019-02-04T08:24:26.657Z","type":"quit"}
{"nick":"Guest20778","date":"2019-02-04T08:58:46.954Z","type":"join"}
{"nick":"Guest20778","date":"2019-02-04T08:59:29.585Z","type":"part"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-02-04T09:21:12.337Z","type":"quit"}
{"nick":"akoserwa__","date":"2019-02-04T09:56:03.759Z","type":"join"}
{"nick":"akoserwa_","reason":"Ping timeout: 246 seconds","date":"2019-02-04T09:58:25.255Z","type":"quit"}
{"nick":"akoserwa__","reason":"Ping timeout: 272 seconds","date":"2019-02-04T10:05:10.776Z","type":"quit"}
{"nick":"aki_","date":"2019-02-04T10:20:57.448Z","type":"join"}
{"nick":"AtumT","date":"2019-02-04T10:21:19.795Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2019-02-04T10:21:52.259Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T10:21:52.620Z","type":"nick"}
{"nick":"keith_miller","date":"2019-02-04T12:01:22.870Z","type":"join"}
{"nick":"obensource","reason":"Ping timeout: 268 seconds","date":"2019-02-04T12:27:34.708Z","type":"quit"}
{"nick":"aki_","date":"2019-02-04T12:27:44.016Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2019-02-04T12:28:55.708Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T12:28:55.788Z","type":"nick"}
{"nick":"obensource","date":"2019-02-04T12:40:27.012Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-02-04T13:16:58.770Z","type":"quit"}
{"nick":"cybai","reason":"Ping timeout: 250 seconds","date":"2019-02-04T13:42:30.444Z","type":"quit"}
{"nick":"cybai","date":"2019-02-04T13:53:40.636Z","type":"join"}
{"nick":"jmdyck","date":"2019-02-04T14:00:19.323Z","type":"join"}
{"nick":"aki_","date":"2019-02-04T14:32:52.779Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2019-02-04T14:33:44.994Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T14:33:45.364Z","type":"nick"}
{"nick":"rmarkins","reason":"Remote host closed the connection","date":"2019-02-04T15:58:24.110Z","type":"quit"}
{"nick":"rmarkins","date":"2019-02-04T15:59:00.040Z","type":"join"}
{"nick":"keith_miller","date":"2019-02-04T16:07:51.332Z","type":"join"}
{"nick":"cloudshu","date":"2019-02-04T16:13:32.890Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-02-04T16:18:49.732Z","type":"quit"}
{"nick":"rmarkins","reason":"Quit: Leaving...","date":"2019-02-04T16:26:17.747Z","type":"quit"}
{"nick":"Nimelrian","date":"2019-02-04T16:36:10.885Z","type":"join"}
{"nick":"aki_","date":"2019-02-04T16:39:35.614Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 250 seconds","date":"2019-02-04T16:40:36.778Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T16:40:37.172Z","type":"nick"}
{"nick":"gibson042","date":"2019-02-04T17:06:24.527Z","type":"join"}
{"nick":"rmarkins","date":"2019-02-04T17:20:35.256Z","type":"join"}
{"nick":"keith_miller","date":"2019-02-04T17:34:07.486Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-02-04T18:39:00.203Z","type":"quit"}
{"nick":"aki_","date":"2019-02-04T18:45:46.040Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2019-02-04T18:46:56.586Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T18:46:56.923Z","type":"nick"}
{"nick":"keith_miller","date":"2019-02-04T18:49:44.183Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 250 seconds","date":"2019-02-04T18:59:42.432Z","type":"quit"}
{"nick":"gibson042","date":"2019-02-04T19:02:52.832Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 250 seconds","date":"2019-02-04T19:07:04.867Z","type":"quit"}
{"nick":"TabAtkins","message":"Heh, the `math` tag function. Is there anything tagged templates *can't* do?","date":"2019-02-04T19:09:28.761Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-02-04T19:10:25.999Z","type":"quit"}
{"nick":"TabAtkins","message":"That does offer... intriguing possibilities for typedOM. cssMath`${el.styleMap.get('width')} + 5px`, anybody?","date":"2019-02-04T19:10:29.901Z","type":"message"}
{"nick":"TabAtkins","message":"https://twitter.com/tabatkins/status/1092502187387670528","date":"2019-02-04T19:16:51.084Z","type":"message"}
{"nick":"ljharb","message":"TabAtkins: generically have proper syntax highlighting for your arbitrary DSL?","date":"2019-02-04T19:18:44.981Z","type":"message"}
{"nick":"TabAtkins","message":"\"generically\" no. Just recognizing that a tagged string whose tag is named \"js\", \"html\", or \"css\" is likely to be at least *similar* to those languages, enough that highlighting will be useful.","date":"2019-02-04T19:19:24.168Z","type":"message"}
{"nick":"ljharb","message":"perhaps, but brittle","date":"2019-02-04T19:19:39.128Z","type":"message"}
{"nick":"AtumT","reason":"Ping timeout: 250 seconds","date":"2019-02-04T19:21:48.780Z","type":"quit"}
{"nick":"gibson042","date":"2019-02-04T19:22:34.340Z","type":"join"}
{"nick":"AtumT","date":"2019-02-04T19:27:20.910Z","type":"join"}
{"nick":"Nimelrian","reason":"Read error: Connection reset by peer","date":"2019-02-04T19:39:20.784Z","type":"quit"}
{"nick":"Nimelrian","date":"2019-02-04T19:41:51.656Z","type":"join"}
{"nick":"TabAtkins","message":"Vaguely related: the set/get dance to update a value in a Map is annoying. I'd like to fix this for CSS by adding a `update(cb)` method that takes an `oldval=>newVal` callback, so `obj.update('width', old=>old.add(CSS.px(5)))` is the same as `obj.set('width', obj.get('width').add(CSS.px(5)))`","date":"2019-02-04T19:41:57.955Z","type":"message"}
{"nick":"TabAtkins","message":"Looking over the Collection Methods proposal, doesn't look like this method exists yet. Any history I should look at before I open an issue?","date":"2019-02-04T19:43:33.420Z","type":"message"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2019-02-04T19:46:36.174Z","type":"quit"}
{"nick":"AtumT","date":"2019-02-04T19:47:22.013Z","type":"join"}
{"nick":"jwalden","date":"2019-02-04T20:37:28.599Z","type":"join"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2019-02-04T20:44:35.140Z","type":"quit"}
{"nick":"aki_","date":"2019-02-04T20:51:00.434Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 246 seconds","date":"2019-02-04T20:52:06.047Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T20:52:06.378Z","type":"nick"}
{"nick":"bradleymeck","message":"TabAtkins: I've though about proposing `emplace` (insert if missing), but haven't gotten around to it","date":"2019-02-04T21:01:22.784Z","type":"message"}
{"nick":"bradleymeck","message":"we had some talks at last meeting about a variety of things around collections, did seem like some people felt OOP protocols should be invoked for new methods and it caused some friction","date":"2019-02-04T21:02:13.215Z","type":"message"}
{"nick":"TabAtkins","message":"That's a different method than what I'm asking for; yours is `setdefault` from Python, right? (A `get`, except it first sets it to the provided default value if it's missing.)","date":"2019-02-04T21:02:14.968Z","type":"message"}
{"nick":"bradleymeck","message":"TabAtkins: yes, similar but quite different","date":"2019-02-04T21:02:34.546Z","type":"message"}
{"nick":"bradleymeck","message":"the big thing for me is when people argue for calling into OOP hooks using things like .add/.set do in the constructors","date":"2019-02-04T21:03:08.572Z","type":"message"}
{"nick":"bradleymeck","message":"that gets really complex if you model it after that, but at the same time subclassing is extremely fragile if you don't","date":"2019-02-04T21:03:43.531Z","type":"message"}
{"nick":"TabAtkins","message":"Yeah, as I said in IRC during the meeting, I'm very much for making sure that new methods don't break on subclasses; it sucks if you have to reimplement the entire (gradually growing) suite of built-in methods just to subclass a simple collection class, when the new methods could be built on top of the core methods instead.","date":"2019-02-04T21:10:40.848Z","type":"message"}
{"nick":"TabAtkins","message":"But I\"m also sensitive to the \"we can do it more efficiently if it's custom\" argument. :/","date":"2019-02-04T21:10:54.893Z","type":"message"}
{"nick":"TabAtkins","message":"Really feels like protocols are the answer here; a Maplike protocol that depends on some core methods, and provides all the additional methods, but allows custom overriding when necessary. Then you don't need to subclass and worry about the Map-specialized code doing bad things for your subclass.","date":"2019-02-04T21:11:47.072Z","type":"message"}
{"nick":"annevk","message":"When does subclassing beat protocols?","date":"2019-02-04T21:17:18.946Z","type":"message"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2019-02-04T21:18:53.744Z","type":"quit"}
{"nick":"AtumT","date":"2019-02-04T21:19:29.599Z","type":"join"}
{"nick":"keith_miller","date":"2019-02-04T21:33:16.720Z","type":"join"}
{"nick":"bradleymeck","message":"annevk: when the protocols already exist subclassing is relatively nice if it can be built upon them","date":"2019-02-04T21:38:03.895Z","type":"message"}
{"nick":"bradleymeck","message":"TabAtkins: rekey (now toValue/toKey) took a similar approach on letting you push the logic of core protocol like methods up to the language, i'm not 100% sure on the symbols based approach i've seen elsewhere these days","date":"2019-02-04T21:39:22.749Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-02-04T21:39:24.002Z","type":"quit"}
{"nick":"gibson042","date":"2019-02-04T21:43:10.933Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 272 seconds","date":"2019-02-04T22:00:12.759Z","type":"quit"}
{"nick":"gibson042","date":"2019-02-04T22:13:58.599Z","type":"join"}
{"nick":"keith_miller","date":"2019-02-04T22:35:05.221Z","type":"join"}
{"nick":"Nimelrian","reason":"Ping timeout: 240 seconds","date":"2019-02-04T22:39:56.627Z","type":"quit"}
{"nick":"aki_","date":"2019-02-04T22:57:18.090Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2019-02-04T22:58:07.324Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2019-02-04T22:58:07.768Z","type":"nick"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2019-02-04T22:58:24.620Z","type":"quit"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2019-02-04T23:43:44.042Z","type":"quit"}
{"nick":"keith_miller","date":"2019-02-04T23:49:45.592Z","type":"join"}
