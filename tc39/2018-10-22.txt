{"nick":"aki_","date":"2018-10-22T00:19:52.138Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-10-22T00:20:42.513Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-22T00:20:42.797Z","type":"nick"}
{"nick":"chuck9001","date":"2018-10-22T00:24:40.408Z","type":"join"}
{"nick":"aki_","date":"2018-10-22T02:26:35.373Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 264 seconds","date":"2018-10-22T02:27:40.067Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-22T02:27:40.399Z","type":"nick"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-10-22T03:29:04.790Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-22T03:32:50.059Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-10-22T03:44:34.753Z","type":"quit"}
{"nick":"aki_","date":"2018-10-22T04:32:13.587Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 252 seconds","date":"2018-10-22T04:33:21.650Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-22T04:33:22.035Z","type":"nick"}
{"nick":"ystartsev","reason":"Ping timeout: 250 seconds","date":"2018-10-22T04:54:21.724Z","type":"quit"}
{"nick":"linclark","reason":"Ping timeout: 250 seconds","date":"2018-10-22T04:54:21.960Z","type":"quit"}
{"nick":"ystartsev","date":"2018-10-22T04:55:00.749Z","type":"join"}
{"nick":"linclark","date":"2018-10-22T04:55:48.394Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 244 seconds","date":"2018-10-22T06:39:44.537Z","type":"quit"}
{"nick":"akirose","date":"2018-10-22T06:39:56.041Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-10-22T06:57:02.363Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-22T07:00:35.353Z","type":"join"}
{"nick":"akoserwa","date":"2018-10-22T07:02:29.347Z","type":"join"}
{"nick":"abernix_","new_nick":"abernix","date":"2018-10-22T07:10:50.731Z","type":"nick"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-10-22T07:12:22.477Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-22T07:35:10.062Z","type":"join"}
{"nick":"akoserwa","reason":"Quit: Leaving","date":"2018-10-22T07:50:19.611Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-10-22T08:04:43.511Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-22T08:12:40.061Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-10-22T08:25:20.451Z","type":"quit"}
{"nick":"akirose","reason":"Ping timeout: 264 seconds","date":"2018-10-22T08:47:28.066Z","type":"quit"}
{"nick":"akirose","date":"2018-10-22T08:48:42.433Z","type":"join"}
{"nick":"jmdyck","date":"2018-10-22T10:00:52.022Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-10-22T10:55:47.505Z","type":"quit"}
{"nick":"aki_","date":"2018-10-22T10:55:51.298Z","type":"join"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-22T10:56:15.481Z","type":"nick"}
{"nick":"keith_miller","date":"2018-10-22T12:23:36.515Z","type":"join"}
{"nick":"keith_miller","reason":"Remote host closed the connection","date":"2018-10-22T12:31:33.614Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-22T12:32:10.468Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-10-22T12:39:55.996Z","type":"quit"}
{"nick":"keith_miller","date":"2018-10-22T12:48:07.547Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-10-22T12:56:38.716Z","type":"quit"}
{"nick":"aki_","date":"2018-10-22T13:02:33.473Z","type":"join"}
{"nick":"akirose","reason":"Ping timeout: 245 seconds","date":"2018-10-22T13:03:23.295Z","type":"quit"}
{"nick":"aki_","new_nick":"akirose","date":"2018-10-22T13:03:23.670Z","type":"nick"}
{"nick":"gibson042","date":"2018-10-22T14:20:08.658Z","type":"join"}
{"nick":"cloudshu","date":"2018-10-22T14:44:06.372Z","type":"join"}
{"nick":"howdoi","date":"2018-10-22T14:50:47.111Z","type":"join"}
{"nick":"bradleymeck","message":"devsnek: itertools would be a great addition but i think we are still stuck on where to place such a thing, some people want to make a standard library set of modules, others want things to be globals","date":"2018-10-22T14:56:16.224Z","type":"message"}
{"nick":"devsnek","message":"you could put map and filter on the actual iterator prototype","date":"2018-10-22T14:58:06.607Z","type":"message"}
{"nick":"TabAtkins","message":"Also, for serious, itertools won't be useful unless we have a call operator.","date":"2018-10-22T14:58:12.787Z","type":"message"}
{"nick":"devsnek","message":"`function* filter(cb) { for (const item of this) { if (cb(item)) yield item; } }`","date":"2018-10-22T14:58:37.165Z","type":"message"}
{"nick":"devsnek","message":"this itertools thing is cool","date":"2018-10-22T14:59:27.993Z","type":"message"}
{"nick":"TabAtkins","message":"devsnek: Need more than just those two...","date":"2018-10-22T14:59:30.685Z","type":"message"}
{"nick":"devsnek","message":"sure","date":"2018-10-22T14:59:54.678Z","type":"message"}
{"nick":"devsnek","message":"the more the merrier","date":"2018-10-22T14:59:59.506Z","type":"message"}
{"nick":"TabAtkins","message":"What I mean tho, is that there's a lot of stuff we want to be able to call on iterators, including user-defined stuff. Can't scale that as actual isntalled methods (plus the whole smoosh() problem).","date":"2018-10-22T15:00:58.511Z","type":"message"}
{"nick":"TabAtkins","message":"Need a call operator, like `foo::bar(a,b,c)` which calls `bar.call(foo,a,b,c)`, to make it usable *and* generalizable.","date":"2018-10-22T15:01:41.822Z","type":"message"}
{"nick":"devsnek","message":"what's wrong with `bar(foo, a, b, c)`","date":"2018-10-22T15:02:10.725Z","type":"message"}
{"nick":"TabAtkins","message":"filter(map(filter(arr, ...), ...), ...)","date":"2018-10-22T15:02:44.123Z","type":"message"}
{"nick":"TabAtkins","message":"Grows backwards and requires wrapping on both ends.","date":"2018-10-22T15:02:52.235Z","type":"message"}
{"nick":"TabAtkins","message":"Versus arr::filter(...)::map(...)::filter(...)","date":"2018-10-22T15:03:04.923Z","type":"message"}
{"nick":"TabAtkins","message":"Same argument as for pipeline operator, just slots the \"topic\" into the `this` reference, rather than into one of the arguments.","date":"2018-10-22T15:03:41.829Z","type":"message"}
{"nick":"devsnek","message":"so like a bound pipeline operator","date":"2018-10-22T15:03:58.813Z","type":"message"}
{"nick":"devsnek","message":"yeah","date":"2018-10-22T15:04:12.346Z","type":"message"}
{"nick":"TabAtkins","message":"Yeah, writing `arr |> filter(#, ...) |> map(#, ...) |> filter(#, ...)` isn't much worse.","date":"2018-10-22T15:04:24.554Z","type":"message"}
{"nick":"TabAtkins","message":"But it is a *little bit* worse - you can't immediately reuse functions *already* written as methods.","date":"2018-10-22T15:04:50.260Z","type":"message"}
{"nick":"TabAtkins","message":"Like calling Array.prototype.slice() on an arbitrary iterable.","date":"2018-10-22T15:05:08.533Z","type":"message"}
{"nick":"TabAtkins","message":"You'd have to write a wrapper that takes the subject as an arg. JS itself could provide wrappers for all the Array built-ins, of course.","date":"2018-10-22T15:05:48.139Z","type":"message"}
{"nick":"devsnek","message":"aren't all the array builtins for operating on array like not iterable like","date":"2018-10-22T15:06:45.040Z","type":"message"}
{"nick":"akirose","reason":"Ping timeout: 240 seconds","date":"2018-10-22T15:08:27.449Z","type":"quit"}
{"nick":"akirose","date":"2018-10-22T15:09:05.113Z","type":"join"}
{"nick":"TabAtkins","message":"devsnek: Ah, yeah, right. ^_^ Well, consider the point still made, just for array-likes too.","date":"2018-10-22T15:25:40.941Z","type":"message"}
{"nick":"devsnek","message":"sure","date":"2018-10-22T15:25:47.211Z","type":"message"}
{"nick":"keith_miller","date":"2018-10-22T15:52:57.409Z","type":"join"}
