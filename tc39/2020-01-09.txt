{"nick":"itamarok","date":"2020-01-09T01:05:26.086Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 252 seconds","date":"2020-01-09T01:09:40.047Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T01:15:02.039Z","type":"quit"}
{"nick":"rkirsling","message":"whoa","date":"2020-01-09T01:37:42.919Z","type":"message"}
{"nick":"rkirsling","message":"links to `thisTimeValue` in the spec hard-change the domain to tc39.github.io","date":"2020-01-09T01:37:59.256Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T01:59:34.460Z","type":"quit"}
{"nick":"NotWoods6","date":"2020-01-09T02:08:13.112Z","type":"join"}
{"nick":"keith_miller","date":"2020-01-09T02:14:36.118Z","type":"join"}
{"nick":"NotWoods6","reason":"Quit: The Lounge - https://thelounge.chat","date":"2020-01-09T02:32:31.052Z","type":"quit"}
{"nick":"cybai","date":"2020-01-09T02:39:53.736Z","type":"join"}
{"nick":"cybai_","date":"2020-01-09T02:53:16.260Z","type":"join"}
{"nick":"itamarok","date":"2020-01-09T02:53:36.055Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 248 seconds","date":"2020-01-09T02:56:36.735Z","type":"quit"}
{"nick":"itamarok","reason":"Ping timeout: 252 seconds","date":"2020-01-09T02:57:50.034Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T03:29:18.573Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-09T03:41:39.134Z","type":"join"}
{"nick":"rkirsling","message":"what on earth","date":"2020-01-09T03:52:08.470Z","type":"message"}
{"nick":"rkirsling","message":"everything listed in here hard-links to tc39.github.io/ecma262 and everything else keeps the current page","date":"2020-01-09T03:52:53.164Z","type":"message"}
{"nick":"rkirsling","message":"https://github.com/bterlson/ecmarkup/blob/master/es6biblio.json","date":"2020-01-09T03:52:54.335Z","type":"message"}
{"nick":"rkirsling","message":"meaning that clicking `thisTimeValue` or `thisBooleanValue` always reloads the page","date":"2020-01-09T03:54:04.519Z","type":"message"}
{"nick":"rkirsling","message":"but `thisStringValue`, which isn't in there, is just fine","date":"2020-01-09T03:54:31.059Z","type":"message"}
{"nick":"ljharb","message":"ouch","date":"2020-01-09T03:58:59.563Z","type":"message"}
{"nick":"ljharb","message":"rkirsling: i wonder if they're in there for proposals, to link *those* properly","date":"2020-01-09T03:59:27.654Z","type":"message"}
{"nick":"rkirsling","message":"ohhh","date":"2020-01-09T04:00:23.697Z","type":"message"}
{"nick":"ljharb","message":"which means three things; thisStringValue *should* be in there; the domain needs to be updated for all of them; and also when running on the spec itself, those links should be relative, not absolute","date":"2020-01-09T04:01:08.707Z","type":"message"}
{"nick":"rkirsling","message":"agreed...","date":"2020-01-09T04:02:09.127Z","type":"message"}
{"nick":"ljharb","message":"but also i'd suspect that ideally, that \"biblio\" thing shouldn't be embedded in ecmarkup but should be fetched (at publish time if not at runtime) from a build artifact of the spec itself","date":"2020-01-09T04:02:54.021Z","type":"message"}
{"nick":"rkirsling","message":"yeah :-/","date":"2020-01-09T04:03:16.961Z","type":"message"}
{"nick":"ljharb","message":"are there other things in that json that are linked incorrectly in the actual spec?","date":"2020-01-09T04:04:23.558Z","type":"message"}
{"nick":"ljharb","message":"rkirsling: in terms of a short term fix: if there's any chance ecmarkup can override those biblio things via a CLI flag or something, or disable it, that'd be ideal","date":"2020-01-09T04:04:30.552Z","type":"message"}
{"nick":"rkirsling","message":"right, yeah","date":"2020-01-09T04:04:52.201Z","type":"message"}
{"nick":"rkirsling","message":"not sure if there's anything that's like, mispointed, say","date":"2020-01-09T04:05:15.197Z","type":"message"}
{"nick":"ljharb","message":"well, that has an absolute link but shouldn't","date":"2020-01-09T04:05:26.431Z","type":"message"}
{"nick":"rkirsling","message":"but it's surely possible since the last sync was for es2017","date":"2020-01-09T04:05:29.933Z","type":"message"}
{"nick":"ljharb","message":"right, but i'm wondering if all the things that were *in* es2017 are linked in this wrong way","date":"2020-01-09T04:05:44.777Z","type":"message"}
{"nick":"ljharb","message":"or if not, then why is thisTimeValue special","date":"2020-01-09T04:06:00.105Z","type":"message"}
{"nick":"cybai_","reason":"Remote host closed the connection","date":"2020-01-09T04:07:29.931Z","type":"quit"}
{"nick":"rkirsling","message":"I believe the answer is no; only those two have aoids","date":"2020-01-09T04:09:54.178Z","type":"message"}
{"nick":"rkirsling","message":"I don't actually know what an aoid is","date":"2020-01-09T04:10:06.120Z","type":"message"}
{"nick":"ljharb","message":"abstract operation id","date":"2020-01-09T04:10:29.379Z","type":"message"}
{"nick":"rkirsling","message":"ah cool","date":"2020-01-09T04:10:52.230Z","type":"message"}
{"nick":"rkirsling","message":"err sorry","date":"2020-01-09T04:11:08.986Z","type":"message"}
{"nick":"rkirsling","message":"that was not specific enough, what I meant to say is","date":"2020-01-09T04:11:22.732Z","type":"message"}
{"nick":"rkirsling","message":"those are the only two `<dfn>`s with an `aoid`","date":"2020-01-09T04:11:44.080Z","type":"message"}
{"nick":"rkirsling","message":"other elements are fine somehow(???)","date":"2020-01-09T04:11:55.398Z","type":"message"}
{"nick":"ljharb","message":"ah, so maybe it's just an ecmarkup bug with dfns that have aoids?","date":"2020-01-09T04:12:01.329Z","type":"message"}
{"nick":"ljharb","message":"can you file that on ecmarkup? :-)","date":"2020-01-09T04:12:09.735Z","type":"message"}
{"nick":"jmdyck","message":"thisStringValue also has dfn-with-aoid","date":"2020-01-09T04:14:04.755Z","type":"message"}
{"nick":"ljharb","message":"jmdyck: right, but ecmarkup's biblio.json hasn't been updated since es2017, and thisStringValue wasn't moved to be a proper abstract op until es2018 iirc","date":"2020-01-09T04:14:52.057Z","type":"message"}
{"nick":"drousso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T04:15:04.261Z","type":"quit"}
{"nick":"rkirsling","message":"this is gonna be hard to know because I don't know how that JSON is generated","date":"2020-01-09T04:15:15.310Z","type":"message"}
{"nick":"ljharb","message":"there's like 5 or 6 thisFooValue's, and in es2017 and earlier, i think only thisTimeValue and thisBooleanValue were proper abstract ops, markup-wise","date":"2020-01-09T04:15:19.784Z","type":"message"}
{"nick":"jmdyck","message":"yup, 6","date":"2020-01-09T04:15:28.898Z","type":"message"}
{"nick":"devsnek","message":"I don't understand why ThisXyxValue ops are special at all","date":"2020-01-09T04:15:42.915Z","type":"message"}
{"nick":"ljharb","message":"devsnek: they shouldn't be anymore","date":"2020-01-09T04:16:00.603Z","type":"message"}
{"nick":"ljharb","message":"devsnek: in es2017 and earlier tho, they were","date":"2020-01-09T04:16:10.287Z","type":"message"}
{"nick":"devsnek","message":"they start with a lowercase","date":"2020-01-09T04:16:11.815Z","type":"message"}
{"nick":"rkirsling","message":"like, I think something causes the _links_ to `thisTimeValue` to get \"namespaced\" with tc39.github.io/ecma262","date":"2020-01-09T04:16:14.259Z","type":"message"}
{"nick":"ljharb","message":"devsnek: true, that's the only thing that's unique","date":"2020-01-09T04:16:21.733Z","type":"message"}
{"nick":"jmdyck","message":"well, they're fairly special in that they don't have their own clause","date":"2020-01-09T04:16:24.900Z","type":"message"}
{"nick":"rkirsling","message":"but presumably the trigger point is not at the reference site but at the definition site","date":"2020-01-09T04:16:54.217Z","type":"message"}
{"nick":"rkirsling","message":"ugh","date":"2020-01-09T04:17:05.781Z","type":"message"}
{"nick":"rkirsling","message":"it's baffling because by staring at the JSON, it looks like RepeatMatcher should have the exact same problem","date":"2020-01-09T04:27:35.131Z","type":"message"}
{"nick":"rkirsling","message":"hence my thinking that <dfn> is problematic in particular","date":"2020-01-09T04:27:49.524Z","type":"message"}
{"nick":"rkirsling","message":"but if, running locally here, the *only* thing affecting that behavior is the JSON","date":"2020-01-09T04:28:32.725Z","type":"message"}
{"nick":"rkirsling","message":"then why is the problem not reflected in the JSON...","date":"2020-01-09T04:28:50.899Z","type":"message"}
{"nick":"itamarok","date":"2020-01-09T04:41:46.067Z","type":"join"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2020-01-09T04:45:37.584Z","type":"quit"}
{"nick":"itamarok","reason":"Ping timeout: 252 seconds","date":"2020-01-09T04:46:00.012Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2020-01-09T05:37:03.870Z","type":"quit"}
{"nick":"rkirsling","message":"huh","date":"2020-01-09T05:38:58.204Z","type":"message"}
{"nick":"rkirsling","message":"strangely enough, if I run `ecmarkup` with `--biblio` to produce the new copy, then drag that over to node_modules/ecmarkup and rebuild using it","date":"2020-01-09T05:40:07.732Z","type":"message"}
{"nick":"rkirsling","message":"then (1) the JSON is up-to-date and has tc39.es in it, of course, but (2) instead of *more* things hard-linking to tc39.es, everything seems to just use my local copy","date":"2020-01-09T05:41:20.162Z","type":"message"}
{"nick":"rkirsling","message":"no idea why that is but maybe we can just update ecmarkup then","date":"2020-01-09T05:41:36.465Z","type":"message"}
{"nick":"itamarok","date":"2020-01-09T05:45:23.736Z","type":"join"}
{"nick":"itamarok","reason":"Ping timeout: 248 seconds","date":"2020-01-09T05:49:56.778Z","type":"quit"}
{"nick":"NotWoods","date":"2020-01-09T05:53:48.580Z","type":"join"}
{"nick":"ljharb","message":"rkirsling: updating the build process in 262 is, atm, much easier than updating ecmarkup","date":"2020-01-09T06:01:19.576Z","type":"message"}
{"nick":"rkirsling","message":"ljharb: that's understandable, but there isn't a way to ignore node_modules/ecmarkup/es6biblio.json","date":"2020-01-09T06:07:29.688Z","type":"message"}
{"nick":"ljharb","message":"rkirsling: the build script could `mv` the new copy into node_modules and then rerun it","date":"2020-01-09T06:07:58.965Z","type":"message"}
{"nick":"rkirsling","message":"that is true but I think it would double the build time","date":"2020-01-09T06:09:08.288Z","type":"message"}
{"nick":"ljharb","message":"¯\\_(ツ)_/¯ it happens in ci","date":"2020-01-09T06:10:21.224Z","type":"message"}
{"nick":"ljharb","message":"and it's a temporary workaround anyways","date":"2020-01-09T06:10:33.435Z","type":"message"}
{"nick":"itamarok","date":"2020-01-09T06:15:30.032Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T06:23:54.265Z","type":"quit"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T06:37:06.857Z","type":"quit"}
{"nick":"rkirsling","message":"hrm, I'll pick this up again tomorrow","date":"2020-01-09T06:47:57.380Z","type":"message"}
{"nick":"gibson042","message":"ljharb: sorry for answering your question late, but those unexpected getSeconds() results derive from the fact that the time zone database has fractional-hour offsets for so-called \"local mean time\" of time zones before their official introduction. US time zones were introduced in 1883 (https://www.timeanddate.com/time/zone/usa#the ), so any dates before that will have offsets that are not necessarily an integer number of quarter-hours","date":"2020-01-09T07:02:44.190Z","type":"message"}
{"nick":"ljharb","message":"gibson042: wow ok, so that behavior is *correct*?","date":"2020-01-09T07:04:47.585Z","type":"message"}
{"nick":"gibson042","message":"yep, continget upon tzdata","date":"2020-01-09T07:05:12.345Z","type":"message"}
{"nick":"ljharb","message":"woof, ok","date":"2020-01-09T07:05:28.233Z","type":"message"}
{"nick":"gibson042","message":"a kind soul has exposed 2019c as npm packages, so you can actually explore it fairly conveniently: https://runkit.com/embed/dv5lqhvkipy7","date":"2020-01-09T07:06:33.187Z","type":"message"}
{"nick":"gibson042","message":"e.g., America/Los_Angeles was +07:52:58 until 1883-11-18T12:07:02.000 local time","date":"2020-01-09T07:07:28.712Z","type":"message"}
{"nick":"ljharb","message":"so it sounds like probably not having those fractional offsets is compliant with 262, but 402 requires applying them?","date":"2020-01-09T07:07:40.305Z","type":"message"}
{"nick":"gibson042","message":"it should be independent of 402","date":"2020-01-09T07:08:02.407Z","type":"message"}
{"nick":"ljharb","message":"so in 262, it's hand-wavy \"implementation-dependent\" stuff, or is there an explicit part about it?","date":"2020-01-09T07:08:34.700Z","type":"message"}
{"nick":"gibson042","message":"the former: https://tc39.es/ecma262/#sec-local-time-zone-adjustment","date":"2020-01-09T07:09:05.707Z","type":"message"}
{"nick":"gibson042","message":"\"offset of the local time zone from UTC measured in milliseconds at time represented by...\"","date":"2020-01-09T07:09:33.143Z","type":"message"}
{"nick":"gibson042","message":"in reality, that's a tzdb consultation","date":"2020-01-09T07:10:15.352Z","type":"message"}
{"nick":"ljharb","message":"thanks, that makes sense","date":"2020-01-09T07:11:23.809Z","type":"message"}
{"nick":"rkirsling","message":"oh wow, as soon as my head hit the pillow the situation with that biblio thing clicked","date":"2020-01-09T07:13:46.395Z","type":"message"}
{"nick":"rkirsling","message":"ljharb: if it's literally a \"bibliography\" for use in something that's *not* 262 (i.e. a spec proposal), then the current issue we're seeing I think amount to viewing the current spec as \"not 262\" by virtue of it not being ES2017","date":"2020-01-09T07:15:15.263Z","type":"message"}
{"nick":"rkirsling","message":"hence up-to-date JSON and empty JSON should have the same effect","date":"2020-01-09T07:15:56.314Z","type":"message"}
{"nick":"ljharb","message":"rkirsling: aha","date":"2020-01-09T07:16:31.257Z","type":"message"}
{"nick":"rkirsling","message":"so we should be able to do your \"skip biblio for 262 itself\" by `echo \"{}\" > node_modules/ecmarkup/es6biblio.json`","date":"2020-01-09T07:16:41.050Z","type":"message"}
{"nick":"ljharb","message":"awesoe","date":"2020-01-09T07:16:45.794Z","type":"message"}
{"nick":"ljharb","message":"let's do that in 262 as a workaround","date":"2020-01-09T07:16:49.578Z","type":"message"}
{"nick":"rkirsling","message":"👍 will PR tomorrow","date":"2020-01-09T07:17:02.339Z","type":"message"}
{"nick":"ljharb","message":"woot, ty","date":"2020-01-09T07:17:20.357Z","type":"message"}
{"nick":"mgol","date":"2020-01-09T08:00:32.097Z","type":"join"}
{"nick":"itamarok","date":"2020-01-09T08:11:44.586Z","type":"join"}
{"nick":"cybai","date":"2020-01-09T08:56:19.795Z","type":"join"}
{"nick":"cybai","reason":"Remote host closed the connection","date":"2020-01-09T09:30:25.203Z","type":"quit"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T09:42:28.773Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-09T09:47:13.915Z","type":"join"}
{"nick":"cybai","date":"2020-01-09T09:50:01.762Z","type":"join"}
{"nick":"cybai","reason":"Ping timeout: 248 seconds","date":"2020-01-09T09:54:12.793Z","type":"quit"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T10:03:49.220Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-09T10:04:22.487Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T10:07:58.144Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-09T10:08:11.727Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T12:20:07.523Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-09T12:20:44.915Z","type":"join"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T12:24:46.723Z","type":"quit"}
{"nick":"itamarok","reason":"Ping timeout: 240 seconds","date":"2020-01-09T12:24:50.963Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-09T12:29:49.546Z","type":"join"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2020-01-09T12:30:19.928Z","type":"quit"}
{"nick":"mgol","date":"2020-01-09T13:04:40.237Z","type":"join"}
{"nick":"jmdyck","date":"2020-01-09T13:11:53.225Z","type":"join"}
{"nick":"gibson042","date":"2020-01-09T13:28:04.579Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 268 seconds","date":"2020-01-09T13:34:06.569Z","type":"quit"}
{"nick":"gibson042","date":"2020-01-09T13:48:24.193Z","type":"join"}
{"nick":"cybai","date":"2020-01-09T14:00:33.923Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T14:40:28.504Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-09T14:41:06.495Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T14:55:23.272Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-09T14:55:36.958Z","type":"join"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T15:46:56.679Z","type":"quit"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2020-01-09T17:00:08.492Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T17:30:58.857Z","type":"quit"}
{"nick":"mgol","date":"2020-01-09T17:32:03.639Z","type":"join"}
{"nick":"gibson042","date":"2020-01-09T18:03:00.966Z","type":"join"}
{"nick":"keith_miller","date":"2020-01-09T18:04:30.262Z","type":"join"}
{"nick":"jwalden","date":"2020-01-09T18:07:17.394Z","type":"join"}
{"nick":"aradesh","date":"2020-01-09T18:32:41.325Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T18:42:29.572Z","type":"quit"}
{"nick":"mgol","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T18:46:51.422Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-09T19:00:31.844Z","type":"join"}
{"nick":"mgol","date":"2020-01-09T20:00:31.526Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T20:16:02.337Z","type":"quit"}
{"nick":"jwalden","message":"is there a particularly good reason that bigint literals are allowed as property names in object literals?","date":"2020-01-09T20:20:04.046Z","type":"message"}
{"nick":"jwalden","message":"I guess all numeric literals were already allowed (not just decimal)","date":"2020-01-09T20:21:16.047Z","type":"message"}
{"nick":"jwalden","message":"feels like mostly gratuitous implementer pain, tho","date":"2020-01-09T20:21:33.445Z","type":"message"}
{"nick":"drousso","date":"2020-01-09T20:31:06.532Z","type":"join"}
{"nick":"devsnek","message":"is it that difficult to implement? bigint literals are a distinct token so it should be straightforward","date":"2020-01-09T20:39:59.930Z","type":"message"}
{"nick":"keith_miller","date":"2020-01-09T20:55:12.392Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T21:01:06.004Z","type":"quit"}
{"nick":"jwalden","message":"it's not absolutely terrible, but we're having to do some extra effort to handle it now","date":"2020-01-09T21:06:22.154Z","type":"message"}
{"nick":"jwalden","message":"I'm not sure if that extra effort is from careless oversight or what, not following the bug closely enough","date":"2020-01-09T21:06:44.171Z","type":"message"}
{"nick":"keith_miller","date":"2020-01-09T21:08:18.234Z","type":"join"}
{"nick":"ljharb","message":"my guess is that the good reason would have been needed to deviate from the precedent, but no idea","date":"2020-01-09T21:09:52.517Z","type":"message"}
{"nick":"bathos","message":"They aren’t a distinct token — NumericLiteral is the token and it’s the static semantics of NumericValue that make the distinction","date":"2020-01-09T21:10:35.408Z","type":"message"}
{"nick":"devsnek","message":"bathos: i mean in implementations","date":"2020-01-09T21:10:59.102Z","type":"message"}
{"nick":"bathos","message":"implementations can and likely do realize it as a distinct token, yeah","date":"2020-01-09T21:11:10.642Z","type":"message"}
{"nick":"bathos","message":"what makes it undesirable for them to be legal there, though?","date":"2020-01-09T21:12:26.399Z","type":"message"}
{"nick":"devsnek","message":"they already have three forms","date":"2020-01-09T21:12:56.032Z","type":"message"}
{"nick":"devsnek","message":"identifier, numeric literal, and computed","date":"2020-01-09T21:13:11.740Z","type":"message"}
{"nick":"devsnek","message":"oh and functions","date":"2020-01-09T21:14:26.190Z","type":"message"}
{"nick":"bathos","message":"functions?","date":"2020-01-09T21:14:35.016Z","type":"message"}
{"nick":"devsnek","message":"`({ f() {} })`","date":"2020-01-09T21:15:03.094Z","type":"message"}
{"nick":"devsnek","message":"methods i guess","date":"2020-01-09T21:15:11.783Z","type":"message"}
{"nick":"bathos","message":"isn’t that just identifier?","date":"2020-01-09T21:15:21.035Z","type":"message"}
{"nick":"bathos","message":"e.g. `({ 1() {} })` is also legit","date":"2020-01-09T21:15:54.941Z","type":"message"}
{"nick":"ljharb","message":"1 isn't an identifier","date":"2020-01-09T21:16:01.122Z","type":"message"}
{"nick":"bathos","message":"right, I mean both are just uses of LiteralPropertyName","date":"2020-01-09T21:16:29.984Z","type":"message"}
{"nick":"bathos","message":"(iirc)","date":"2020-01-09T21:16:52.256Z","type":"message"}
{"nick":"devsnek","message":"anyway my point is that there's already a lot of stuff ther","date":"2020-01-09T21:17:55.382Z","type":"message"}
{"nick":"devsnek","message":"there*","date":"2020-01-09T21:17:57.166Z","type":"message"}
{"nick":"bathos","message":"i.e. in `({ XXX() {}, XXX: 1 })`, the XXX part is the property name bit which is common to both productions","date":"2020-01-09T21:18:11.529Z","type":"message"}
{"nick":"bathos","message":"yeah, I suppose I’d have thought disallowing one of the forms of numeric literal is ‘more’ rather than ‘less’ stuff to account for","date":"2020-01-09T21:18:38.852Z","type":"message"}
{"nick":"bathos","message":"it looks like both V8 and Spidermonkey don’t allow bigint property names actually","date":"2020-01-09T21:20:38.602Z","type":"message"}
{"nick":"gibson042","reason":"Ping timeout: 240 seconds","date":"2020-01-09T21:22:02.975Z","type":"quit"}
{"nick":"bathos","message":"so changing it in the spec to match that ought to be safe at least","date":"2020-01-09T21:22:04.278Z","type":"message"}
{"nick":"jwalden","message":"SpiderMonkey does allow it as of a super-recent (i.e. measured in hours) bugfix","date":"2020-01-09T21:46:20.321Z","type":"message"}
{"nick":"jwalden","message":"I was just trying to do the step back and consider whether this is sensible thing, that it does not appear anyone else had done","date":"2020-01-09T21:46:50.157Z","type":"message"}
{"nick":"jwalden","message":"given all the existing silliness that is accepted -- prefixes, fractional parts, separators, yadda yadda -- excluding just bigints is probably not obviously justified","date":"2020-01-09T21:47:48.239Z","type":"message"}
{"nick":"itamarok","date":"2020-01-09T21:50:03.117Z","type":"join"}
{"nick":"rkirsling","message":"I would feel surprised as a user if it threw, that's for sure","date":"2020-01-09T21:55:02.686Z","type":"message"}
{"nick":"bathos","message":"`({ 0x20000000000001: 1, 0x20000000000001n: 2 })` :)","date":"2020-01-09T21:55:18.845Z","type":"message"}
{"nick":"ljharb","message":"the \"n\" is for \"no\"","date":"2020-01-09T21:55:44.279Z","type":"message"}
{"nick":"bathos","message":"I smell an eslint rule","date":"2020-01-09T21:56:18.216Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T21:56:59.086Z","type":"quit"}
{"nick":"devsnek","message":"jmdyck: can you write a proxy such that it behaves exactly like an array","date":"2020-01-09T22:00:41.543Z","type":"message"}
{"nick":"devsnek","message":"i'm pretty sure you can","date":"2020-01-09T22:00:59.741Z","type":"message"}
{"nick":"ljharb","message":"setting aside Array.isArray, presumably","date":"2020-01-09T22:01:02.119Z","type":"message"}
{"nick":"devsnek","message":"well the argument is about how IsArray works","date":"2020-01-09T22:01:10.988Z","type":"message"}
{"nick":"devsnek","message":"if something is behaviourally identical to an array exotic object","date":"2020-01-09T22:01:23.579Z","type":"message"}
{"nick":"devsnek","message":"is it an array exotic object","date":"2020-01-09T22:01:27.018Z","type":"message"}
{"nick":"keith_miller","date":"2020-01-09T22:13:30.307Z","type":"join"}
{"nick":"rickbutton","message":"doesn't IsArray defer to the proxy's target?","date":"2020-01-09T22:16:36.960Z","type":"message"}
{"nick":"rickbutton","message":"so then, only if the proxy's target is an array","date":"2020-01-09T22:16:56.693Z","type":"message"}
{"nick":"devsnek","message":"rickbutton: the question is like, if something behaves exactly like an array","date":"2020-01-09T22:17:33.962Z","type":"message"}
{"nick":"devsnek","message":"should IsArray be true or false for it","date":"2020-01-09T22:17:42.526Z","type":"message"}
{"nick":"rickbutton","message":"oh i see","date":"2020-01-09T22:18:56.900Z","type":"message"}
{"nick":"devsnek","message":"i'd say there's a difference between an array exotic object","date":"2020-01-09T22:20:39.450Z","type":"message"}
{"nick":"devsnek","message":"and something that happens to behave like one","date":"2020-01-09T22:20:44.221Z","type":"message"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T22:25:31.872Z","type":"quit"}
{"nick":"itamarok","date":"2020-01-09T22:25:48.247Z","type":"join"}
{"nick":"aradesh","reason":"Quit: WeeChat 1.9.1","date":"2020-01-09T22:41:24.247Z","type":"quit"}
{"nick":"bathos","message":"formally, all IsArray establishes is a single, useless fact: that the object has a length property which is unconfigurable (though it does not guarantee it is a valid length)","date":"2020-01-09T22:54:35.152Z","type":"message"}
{"nick":"bathos","message":"the proxy-passthrough behavior kills everything else it could have told you","date":"2020-01-09T22:55:25.644Z","type":"message"}
{"nick":"bathos","message":"since that’s the sole thing that a proxy whose target IsArray could not change","date":"2020-01-09T22:55:50.071Z","type":"message"}
{"nick":"bathos","message":"@devsnek the spec agrees with you at least, since IsArray itself requires that distinction to exist","date":"2020-01-09T22:57:24.434Z","type":"message"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T23:00:56.555Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-09T23:06:51.220Z","type":"join"}
{"nick":"keith_miller","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2020-01-09T23:13:00.421Z","type":"quit"}
{"nick":"itamarok","reason":"Remote host closed the connection","date":"2020-01-09T23:13:35.111Z","type":"quit"}
{"nick":"keith_miller","date":"2020-01-09T23:21:33.206Z","type":"join"}
