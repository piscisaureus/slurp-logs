{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-03-28T00:39:44.970Z","type":"quit"}
{"nick":"xaxxon","date":"2018-03-28T00:40:36.719Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-28T01:44:08.628Z","type":"quit"}
{"nick":"stalled","reason":"Ping timeout: 240 seconds","date":"2018-03-28T02:02:21.503Z","type":"quit"}
{"nick":"Garbee","reason":"Quit: Connection closed for inactivity","date":"2018-03-28T03:26:31.969Z","type":"quit"}
{"nick":"xaxxon","reason":"Quit: xaxxon","date":"2018-03-28T04:28:45.248Z","type":"quit"}
{"nick":"xaxxon","date":"2018-03-28T05:38:47.427Z","type":"join"}
{"nick":"xaxxon","reason":"Ping timeout: 248 seconds","date":"2018-03-28T06:33:37.500Z","type":"quit"}
{"nick":"xaxxon","date":"2018-03-28T06:36:39.824Z","type":"join"}
{"nick":"stalled","date":"2018-03-28T10:08:48.783Z","type":"join"}
{"nick":"xaxxon","reason":"Quit: xaxxon","date":"2018-03-28T10:19:10.273Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-28T10:25:09.060Z","type":"quit"}
{"nick":"mylesborins","date":"2018-03-28T10:25:39.667Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (https://build.chromium.org/p/client.v8/builders/V8%20Linux64%20-%20builder/builds/32049 from 712b66da8168c36d350f2f7401f11440c8495830)","date":"2018-03-28T10:38:47.402Z","type":"message"}
{"nick":"AtumT","date":"2018-03-28T10:39:24.490Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by machenbach@google.com: closed (waiting for more breakages)","date":"2018-03-28T10:41:48.886Z","type":"message"}
{"nick":"bradleymeck","date":"2018-03-28T10:49:22.781Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@google.com: open","date":"2018-03-28T11:08:00.178Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2018-03-28T11:36:59.292Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-28T11:58:55.483Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (https://build.chromium.org/p/client.v8/builders/V8%20Linux64%20-%20builder/builds/32052 from 071cecc048b6cf1034ce0cd0902b8d3b9c743ee9)","date":"2018-03-28T12:15:32.412Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by machenbach@google.com: closed (machenbach fixing)","date":"2018-03-28T12:24:36.623Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@google.com: open","date":"2018-03-28T12:32:40.704Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (https://build.chromium.org/p/client.v8/builders/V8%20Mac64%20GC%20Stress/builds/187 from 61195eb6817727f6a6374b8bdf565c285af17cfb)","date":"2018-03-28T12:59:52.254Z","type":"message"}
{"nick":"bradleymeck","date":"2018-03-28T13:02:28.028Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by marja@chromium.org: open (reverted)","date":"2018-03-28T13:09:56.202Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@google.com: open","date":"2018-03-28T13:19:00.462Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (https://build.chromium.org/p/client.v8/builders/V8%20Mac64%20GC%20Stress/builds/188 from fd059bc4403a706d46a8f09475f19f03e0274b4c)","date":"2018-03-28T13:22:01.504Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@google.com: open","date":"2018-03-28T13:26:03.332Z","type":"message"}
{"nick":"RT|Chatzilla","reason":"Read error: Connection reset by peer","date":"2018-03-28T13:39:17.964Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2018-03-28T13:39:53.538Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-28T14:21:26.394Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-03-28T14:27:17.036Z","type":"join"}
{"nick":"Garbee","date":"2018-03-28T14:33:55.331Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-03-28T15:09:17.554Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-28T15:13:47.158Z","type":"quit"}
{"nick":"plutoniix","date":"2018-03-28T15:38:57.818Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2018-03-28T15:40:02.822Z","type":"quit"}
{"nick":"plutoniix","date":"2018-03-28T15:40:47.842Z","type":"join"}
{"nick":"bradleymeck","date":"2018-03-28T15:46:53.877Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (https://build.chromium.org/p/client.v8/builders/V8%20Mac64%20GC%20Stress/builds/196 from 3f6686c2c58a8ce63198977fe08ec9a416cf8b78)","date":"2018-03-28T16:17:23.732Z","type":"message"}
{"nick":"mylesborins","date":"2018-03-28T16:28:44.743Z","type":"join"}
{"nick":"Wes-","message":"Hey, folks, I'm looking at pushing binary distros of my embedding around to other linuces.  Seeing errors like this:Mar 27 16:32:38 localhost kernel: traps: dcp-miner-v8[12641] trap invalid opcode ip:564266c71302 sp:7fff809322c8 error:0 in dcp-miner-v8[5642665c8000+7c5000]","date":"2018-03-28T16:34:52.223Z","type":"message"}
{"nick":"Wes-","message":"Is this because I didn't build the binary blobs on the target machine?","date":"2018-03-28T16:35:10.965Z","type":"message"}
{"nick":"Wes-","message":"(Are those blobs supposed to be portable?)","date":"2018-03-28T16:36:17.286Z","type":"message"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2018-03-28T16:38:21.519Z","type":"quit"}
{"nick":"caitp","message":"Wes-: it may not be a startup issue at all","date":"2018-03-28T16:39:28.703Z","type":"message"}
{"nick":"caitp","message":"ah.. there is platform specific code in the snapshot though","date":"2018-03-28T16:41:24.251Z","type":"message"}
{"nick":"caitp","message":"afaik","date":"2018-03-28T16:41:28.202Z","type":"message"}
{"nick":"devsnek","message":"I would assume that too cuz it's basically a fancy heap snapshot right","date":"2018-03-28T16:42:58.115Z","type":"message"}
{"nick":"caitp","message":"my understanding of the snapshot is pretty limited compared to the experts, I think there are bits that are just serialized in a portable way, but things like builtins and code objects would not be in that category afaik","date":"2018-03-28T16:44:53.381Z","type":"message"}
{"nick":"Wes-","message":"Hm. Looks like in my case it was caused by being out of disk space. Whoops.  But this is a useful discussion, nevertheless.","date":"2018-03-28T16:46:45.060Z","type":"message"}
{"nick":"Wes-","message":"I have been planning to bury those within executable binaries at some point, under the assumption if the arch, kernel major.minor and libc major.minor match then I should be good to go.  Bad idead?","date":"2018-03-28T16:47:33.858Z","type":"message"}
{"nick":"Wes-","message":"(Used to deploying on Solaris where ABI compat is really good......still using a version of xemacs from 1996, for example, lol)","date":"2018-03-28T16:47:57.037Z","type":"message"}
{"nick":"Wes-","message":"I guess this is what Chrome does, so it should be okay?","date":"2018-03-28T16:48:52.347Z","type":"message"}
{"nick":"caitp","message":"afaik, stuff in the snapshot shouldn't care about ABI, because all the v8 generated code basically uses v8's own JS calling convention or stub calling conventions","date":"2018-03-28T16:48:55.209Z","type":"message"}
{"nick":"Wes-","message":"caitp: That makes sense.  The suggestion that the v8 devs are using their own calling convention also makes a lot of sense from an implementation:speed POV","date":"2018-03-28T16:49:42.544Z","type":"message"}
{"nick":"caitp","message":"there are cases where snapshotted builtin code calls into C++, but it should always have a fairly narrow calling convention to enter C++ from generated code","date":"2018-03-28T16:50:54.804Z","type":"message"}
{"nick":"Wes-","message":"Actually, that might make it easier to emit code for x86 without having to relative branch trampolines....wish I had time to dig into this stuff more deeply","date":"2018-03-28T16:51:00.484Z","type":"message"}
{"nick":"Wes-","message":"caitp++ ","date":"2018-03-28T16:51:15.471Z","type":"message"}
{"nick":"caitp","message":"which _may_ be enough to escape ABI differences between versions of GCC","date":"2018-03-28T16:51:19.830Z","type":"message"}
{"nick":"Wes-","message":"caitp: If they stuck with the arch C ABI they'd be totally safe from GCC / clang C++ ABI changes.  You can bounce from C ABI to C++ ABI easily enough if you don't need polymorphism.","date":"2018-03-28T16:52:05.212Z","type":"message"}
{"nick":"caitp","message":"there are probably a few cases where you can run into direct calls into C++ code which returns a double or float, and then you might run into trouble (some of the math builtins rely on code that behaves like that I think)","date":"2018-03-28T16:52:25.967Z","type":"message"}
{"nick":"Wes-","message":"caitp: Ah, yes, that has the potential to be exciting on platforms where sizeof(int) != sizeof(double).","date":"2018-03-28T16:54:01.932Z","type":"message"}
{"nick":"caitp","message":"or hard vs soft float ABI, or any number of other things","date":"2018-03-28T16:54:57.597Z","type":"message"}
{"nick":"caitp","message":"computers right... how do they even work","date":"2018-03-28T16:55:32.635Z","type":"message"}
{"nick":"Wes-","message":"caitp: I hear it has something to do with turtles","date":"2018-03-28T17:00:13.978Z","type":"message"}
{"nick":"devsnek","message":"if i'm doing script streaming","date":"2018-03-28T17:00:26.599Z","type":"message"}
{"nick":"devsnek","message":"where do i get the Local<String> for the compile call","date":"2018-03-28T17:00:36.459Z","type":"message"}
{"nick":"devsnek","message":"am i expected to build it in GetMoreData or something","date":"2018-03-28T17:01:11.343Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-28T17:03:00.406Z","type":"quit"}
{"nick":"caitp","message":"whenever I have a question about the API, I usually go to cs.chromium.org and figure out what blink does","date":"2018-03-28T17:04:31.563Z","type":"message"}
{"nick":"caitp","message":"where the magic mostly happens in src/third_party/WebKit/Source/bindings/","date":"2018-03-28T17:05:18.521Z","type":"message"}
{"nick":"devsnek","message":"yea but webkit abstracts everything so much","date":"2018-03-28T17:05:42.737Z","type":"message"}
{"nick":"devsnek","message":"its hard to follow","date":"2018-03-28T17:05:54.954Z","type":"message"}
{"nick":"caitp","message":"that's why I use cs.chromium.org instead of grep, for the cross-referencing","date":"2018-03-28T17:06:11.491Z","type":"message"}
{"nick":"devsnek","message":"having hotlinked functions doesn't help too much","date":"2018-03-28T17:07:18.574Z","type":"message"}
{"nick":"devsnek","message":"if you have to read the entire codebase anyway","date":"2018-03-28T17:07:25.209Z","type":"message"}
{"nick":"cloudshu","date":"2018-03-28T17:12:29.781Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by buildbot@chromium.org: Tree is open (Automatic: ヽ(^。^)ノ)","date":"2018-03-28T17:12:52.318Z","type":"message"}
{"nick":"bradleymeck","date":"2018-03-28T17:30:50.011Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-28T17:35:54.389Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-03-28T17:36:23.596Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-28T17:54:37.176Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-03-28T17:55:10.342Z","type":"join"}
{"nick":"devsnek","message":"how come you can't produce a code cache from CompileModule","date":"2018-03-28T18:00:47.006Z","type":"message"}
{"nick":"aklein","message":"devsnek: purely historical reasons (and \"no one's done the work yet\", the usual software engineering reason)","date":"2018-03-28T18:01:36.720Z","type":"message"}
{"nick":"devsnek","message":"i recall hashseed telling me at some point about a change to producing code cache data","date":"2018-03-28T18:02:00.039Z","type":"message"}
{"nick":"aklein","message":"that and streaming support for modules are both TODOs","date":"2018-03-28T18:02:04.926Z","type":"message"}
{"nick":"devsnek","message":"like it could be done retroactively","date":"2018-03-28T18:02:06.481Z","type":"message"}
{"nick":"aklein","message":"yeah, I think there's a new API for that","date":"2018-03-28T18:02:16.680Z","type":"message"}
{"nick":"aklein","message":"where you say \"hey I think I compiled this before, can you give me the code cache?\"","date":"2018-03-28T18:02:28.874Z","type":"message"}
{"nick":"devsnek","message":"i've been reading through v8.h and i can't figure this out lol","date":"2018-03-28T18:02:29.090Z","type":"message"}
{"nick":"devsnek","message":"yeah i can't find the message from him telling me what it was","date":"2018-03-28T18:03:47.749Z","type":"message"}
{"nick":"devsnek","message":"all i see is GetCodeCache which doesn't appears to just return a property which may be a nullptr","date":"2018-03-28T18:04:11.829Z","type":"message"}
{"nick":"devsnek","message":"thats the \"old\" api afaict","date":"2018-03-28T18:04:20.656Z","type":"message"}
{"nick":"aklein","message":"devsnek: https://cs.chromium.org/chromium/src/v8/include/v8.h?rcl=e8a11bdc997ea913761b9a61d8edfb73fa51b96a&l=1579","date":"2018-03-28T18:04:28.978Z","type":"message"}
{"nick":"devsnek","message":"oooo","date":"2018-03-28T18:04:47.736Z","type":"message"}
{"nick":"devsnek","message":"so as long as i hold on to my UnboundScript instance i can call that at any time?","date":"2018-03-28T18:05:09.397Z","type":"message"}
{"nick":"aklein","message":"devsnek: I think so?","date":"2018-03-28T18:05:30.609Z","type":"message"}
{"nick":"aklein","message":"this is all new to me too","date":"2018-03-28T18:05:33.738Z","type":"message"}
{"nick":"devsnek","message":"who works on code cache stuff","date":"2018-03-28T18:05:54.710Z","type":"message"}
{"nick":"devsnek","message":"hashseed i assume?","date":"2018-03-28T18:05:57.518Z","type":"message"}
{"nick":"aklein","message":"historically yes","date":"2018-03-28T18:38:38.066Z","type":"message"}
{"nick":"aklein","message":"the latest stuff was done by mythria","date":"2018-03-28T18:38:49.170Z","type":"message"}
{"nick":"aklein","message":"devsnek: looks like d8 has some support if you want some sample usage","date":"2018-03-28T18:47:50.184Z","type":"message"}
{"nick":"zv","reason":"Quit: WeeChat 1.9","date":"2018-03-28T20:57:03.369Z","type":"quit"}
{"nick":"zv","date":"2018-03-28T21:26:28.040Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2018-03-28T21:58:47.654Z","type":"quit"}
{"nick":"xaxxon","date":"2018-03-28T22:02:47.917Z","type":"join"}
{"nick":"RT|Chatzilla","date":"2018-03-28T22:20:03.764Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-03-28T22:57:10.480Z","type":"quit"}
{"nick":"xaxxon","reason":"Ping timeout: 240 seconds","date":"2018-03-28T23:25:57.844Z","type":"quit"}
