{"nick":"plutoniix","date":"2018-04-26T01:23:27.463Z","type":"join"}
{"nick":"devsnek","message":"does anyone know how a v8 eternal that has been set could be empty","date":"2018-04-26T01:38:07.103Z","type":"message"}
{"nick":"Guest26011","reason":"Quit: Lost terminal","date":"2018-04-26T01:42:33.945Z","type":"quit"}
{"nick":"devsnek","message":"caitp: do you know anything about eternal handles?","date":"2018-04-26T01:45:33.755Z","type":"message"}
{"nick":"caitp","message":"could be that you're setting it during snapshot creation and the eternal handle set from the snapshot isn't being deserialized?","date":"2018-04-26T01:46:49.695Z","type":"message"}
{"nick":"devsnek","message":"i'm not doing any snapshots","date":"2018-04-26T01:46:56.010Z","type":"message"}
{"nick":"caitp","message":"then, no idea","date":"2018-04-26T01:47:03.438Z","type":"message"}
{"nick":"devsnek","message":"i set it and then after that every call to IsEmpty is true","date":"2018-04-26T01:47:18.397Z","type":"message"}
{"nick":"caitp","message":"immediately after it?","date":"2018-04-26T01:47:31.982Z","type":"message"}
{"nick":"devsnek","message":"as soon as the scope i set it in closes","date":"2018-04-26T01:47:33.554Z","type":"message"}
{"nick":"devsnek","message":"i think*","date":"2018-04-26T01:47:38.510Z","type":"message"}
{"nick":"devsnek","message":"its hard to like actually test that","date":"2018-04-26T01:47:44.716Z","type":"message"}
{"nick":"devsnek","message":"but if i do like `eternal.Set(...); eternal.IsEmpty()` its false","date":"2018-04-26T01:48:24.959Z","type":"message"}
{"nick":"devsnek","message":"then like a tick later i go to grab the function i stored in it","date":"2018-04-26T01:48:42.081Z","type":"message"}
{"nick":"devsnek","message":"and the eternal is empty","date":"2018-04-26T01:48:44.864Z","type":"message"}
{"nick":"caitp","message":"can you point to this code on your github?","date":"2018-04-26T01:48:46.938Z","type":"message"}
{"nick":"devsnek","message":"sure","date":"2018-04-26T01:48:55.899Z","type":"message"}
{"nick":"devsnek","message":"https://github.com/devsnek/ivan/blob/master/src/ivan_util.cc#L72","date":"2018-04-26T01:49:11.245Z","type":"message"}
{"nick":"devsnek","message":"also another interesting thing","date":"2018-04-26T01:49:14.506Z","type":"message"}
{"nick":"devsnek","message":"i have two eternals","date":"2018-04-26T01:49:17.419Z","type":"message"}
{"nick":"devsnek","message":"one of them works fine","date":"2018-04-26T01:49:20.004Z","type":"message"}
{"nick":"devsnek","message":"i call the eternal here https://github.com/devsnek/ivan/blob/master/src/ivan.h#L125","date":"2018-04-26T01:49:36.405Z","type":"message"}
{"nick":"devsnek","message":"https://www.irccloud.com/pastebin/xNjDr0dr/","date":"2018-04-26T01:49:56.963Z","type":"message"}
{"nick":"devsnek","message":"test/a.js is in the repo but it isn't that important","date":"2018-04-26T01:50:09.047Z","type":"message"}
{"nick":"caitp","message":"is it always the same isolate?","date":"2018-04-26T01:52:36.291Z","type":"message"}
{"nick":"devsnek","message":"yea i only have one isolate","date":"2018-04-26T01:52:43.532Z","type":"message"}
{"nick":"devsnek","message":"i haven't graduated to working on multithreading yet :p","date":"2018-04-26T01:53:15.770Z","type":"message"}
{"nick":"caitp","message":"what about the js calling your C++ functions","date":"2018-04-26T01:55:53.467Z","type":"message"}
{"nick":"devsnek","message":"wdym","date":"2018-04-26T01:55:58.782Z","type":"message"}
{"nick":"caitp","message":"a.js","date":"2018-04-26T01:56:07.590Z","type":"message"}
{"nick":"devsnek","message":"a.js doesn't call those","date":"2018-04-26T01:56:14.090Z","type":"message"}
{"nick":"devsnek","message":"they're both called in lib/ivan.js","date":"2018-04-26T01:56:18.115Z","type":"message"}
{"nick":"caitp","message":"I'd still like to see the test itself, but I'll take a look at ivan.js","date":"2018-04-26T01:56:37.971Z","type":"message"}
{"nick":"devsnek","message":"https://github.com/devsnek/ivan/blob/master/test/a.js","date":"2018-04-26T01:56:47.509Z","type":"message"}
{"nick":"devsnek","message":"its not much of a test","date":"2018-04-26T01:56:51.966Z","type":"message"}
{"nick":"devsnek","message":"i just pulled the latest lkgr and i'm building it now... maybe there was just some bug","date":"2018-04-26T01:57:42.226Z","type":"message"}
{"nick":"devsnek","message":"fingers crossed","date":"2018-04-26T01:57:48.144Z","type":"message"}
{"nick":"devsnek","message":"or maybe you'll spot some dumb mistake i made","date":"2018-04-26T01:57:53.556Z","type":"message"}
{"nick":"caitp","message":"i've been busy with webkit lately so I'm not sure about any recent fixes to that in v8","date":"2018-04-26T01:58:36.843Z","type":"message"}
{"nick":"devsnek","message":"i'm still hopeful i've just got some stupid mistake somewhere ðŸ˜¢","date":"2018-04-26T02:02:20.863Z","type":"message"}
{"nick":"caitp","message":"it might be good to add a string to the printf in InternalCallbackScope to see where each one is happening from --- I only see 2 uses of it on github, and I'm guessing it's not the one in ivan_plaform.cc, bbut not 100% sure","date":"2018-04-26T02:06:58.809Z","type":"message"}
{"nick":"caitp","message":"still, hard to say what it is... need to inspect what is happening with Eternalandles","date":"2018-04-26T02:07:25.935Z","type":"message"}
{"nick":"s1341_","date":"2018-04-26T02:08:09.785Z","type":"join"}
{"nick":"littledan_","date":"2018-04-26T02:08:40.873Z","type":"join"}
{"nick":"Garbee_","date":"2018-04-26T02:08:53.842Z","type":"join"}
{"nick":"devsnek_","date":"2018-04-26T02:09:00.864Z","type":"join"}
{"nick":"s1341","reason":"Ping timeout: 256 seconds","date":"2018-04-26T02:12:50.162Z","type":"quit"}
{"nick":"Garbee","reason":"Ping timeout: 256 seconds","date":"2018-04-26T02:12:50.162Z","type":"quit"}
{"nick":"devsnek","reason":"Ping timeout: 256 seconds","date":"2018-04-26T02:12:50.518Z","type":"quit"}
{"nick":"littledan","reason":"Ping timeout: 256 seconds","date":"2018-04-26T02:12:51.466Z","type":"quit"}
{"nick":"s1341_","new_nick":"s1341","date":"2018-04-26T02:12:53.733Z","type":"nick"}
{"nick":"Garbee_","new_nick":"Garbee","date":"2018-04-26T02:12:53.734Z","type":"nick"}
{"nick":"littledan_","new_nick":"littledan","date":"2018-04-26T02:12:53.734Z","type":"nick"}
{"nick":"devsnek_","new_nick":"devsnek","date":"2018-04-26T02:12:57.250Z","type":"nick"}
{"nick":"caitp","message":"I don't fully understand how EternalHandles works, since it looks like it doesn't prevent new space objects from being promoted, unless that's being prevented somewhere else? seems like that would make Eternal useless for not pretenured objects","date":"2018-04-26T02:14:38.622Z","type":"message"}
{"nick":"caitp","message":"you could try forcing it to be pretenured and see if that fixes it, I guess","date":"2018-04-26T02:15:03.489Z","type":"message"}
{"nick":"devsnek","message":"i dunno what any of that means","date":"2018-04-26T02:15:03.980Z","type":"message"}
{"nick":"devsnek","message":";-;","date":"2018-04-26T02:15:13.867Z","type":"message"}
{"nick":"devsnek","message":"caitp: is there some code i need to add in or some way i need to call this then?","date":"2018-04-26T02:16:01.021Z","type":"message"}
{"nick":"caitp","message":"I'm not sure the API gives you a direct way to allocate an object pretenure","date":"2018-04-26T02:16:23.617Z","type":"message"}
{"nick":"caitp","message":"but uh","date":"2018-04-26T02:16:26.970Z","type":"message"}
{"nick":"caitp","message":"let me see","date":"2018-04-26T02:16:28.970Z","type":"message"}
{"nick":"devsnek","message":"internal::FunctionLiteral::pretenure","date":"2018-04-26T02:16:36.764Z","type":"message"}
{"nick":"devsnek","message":"is the only thing","date":"2018-04-26T02:16:39.663Z","type":"message"}
{"nick":"Pablo[m]","reason":"Ping timeout: 245 seconds","date":"2018-04-26T02:16:52.807Z","type":"quit"}
{"nick":"devsnek","message":"i'm still not sure what pretenuring is","date":"2018-04-26T02:16:53.073Z","type":"message"}
{"nick":"caitp","message":"it's a generational GC, so new objects are usually put in \"new space\" and promoted to old space if they live long enough --- so they can move --- objects in old space can also move by compaction, etc","date":"2018-04-26T02:20:09.152Z","type":"message"}
{"nick":"caitp","message":"so because of that, it's unclear how we could expect `val_` pointer to keep being valid, unless it was updated bby EternalHandles --- but I don't see how that's happening","date":"2018-04-26T02:20:32.232Z","type":"message"}
{"nick":"caitp","message":"the v8 codebase is kind of a pain to read","date":"2018-04-26T02:20:39.357Z","type":"message"}
{"nick":"devsnek","message":"so this could be some v8 bug","date":"2018-04-26T02:20:45.444Z","type":"message"}
{"nick":"caitp","message":"well, I'm not sure","date":"2018-04-26T02:20:51.665Z","type":"message"}
{"nick":"devsnek","message":"cuz all that should be transparent to v8 public api right","date":"2018-04-26T02:20:56.118Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2018-04-26T02:21:04.547Z","type":"quit"}
{"nick":"caitp","message":"I'm definitely not the heap expert :( it's cool stuff but I don't really have the expertise in that area","date":"2018-04-26T02:21:10.206Z","type":"message"}
{"nick":"devsnek","message":"and i have even less hehe","date":"2018-04-26T02:24:20.535Z","type":"message"}
{"nick":"devsnek","message":"do persistents handle the heap movement?","date":"2018-04-26T02:24:43.318Z","type":"message"}
{"nick":"caitp","message":"I think the difference between eternal and persistent is that Persistent objects aren't heap roots, so they can be collected? but otherwise, it's really, really hard to tell what is going on in the heap","date":"2018-04-26T02:29:33.526Z","type":"message"}
{"nick":"caitp","message":"you might want to try using an older version of v8 just to see if a bug was introduced at some point","date":"2018-04-26T02:30:44.888Z","type":"message"}
{"nick":"devsnek","message":"persistent is also empty","date":"2018-04-26T02:30:46.779Z","type":"message"}
{"nick":"devsnek","message":"i suppose i can try checking out like 6.7","date":"2018-04-26T02:31:14.064Z","type":"message"}
{"nick":"caitp","message":"what about dynamic linking","date":"2018-04-26T02:34:09.495Z","type":"message"}
{"nick":"caitp","message":"are you doing any of that in this thing? is it possible that you ave more than one copy of the persistent in different object files or libraries?","date":"2018-04-26T02:34:31.657Z","type":"message"}
{"nick":"devsnek","message":"i compile some static libraries ","date":"2018-04-26T02:35:23.527Z","type":"message"}
{"nick":"devsnek","message":"v8_monolithic target","date":"2018-04-26T02:35:26.884Z","type":"message"}
{"nick":"devsnek","message":"and i actually just rebuilt it","date":"2018-04-26T02:35:37.814Z","type":"message"}
{"nick":"caitp","message":"I dunno, but it's late, I have to go","date":"2018-04-26T02:37:31.890Z","type":"message"}
{"nick":"caitp","message":"good luck, you might want to try posting on v8-users aobut it","date":"2018-04-26T02:37:45.122Z","type":"message"}
{"nick":"devsnek","message":"thanks","date":"2018-04-26T02:38:12.414Z","type":"message"}
{"nick":"plutoniix","date":"2018-04-26T03:18:11.594Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2018-04-26T03:23:18.039Z","type":"quit"}
{"nick":"chrisdickinson","reason":"Ping timeout: 256 seconds","date":"2018-04-26T05:53:32.701Z","type":"quit"}
{"nick":"chrisdickinson","date":"2018-04-26T05:53:53.853Z","type":"join"}
{"nick":"plutoniix","date":"2018-04-26T06:32:23.915Z","type":"join"}
{"nick":"Pablo[m]","date":"2018-04-26T08:49:39.605Z","type":"join"}
{"nick":"Pablo[m]","reason":"Ping timeout: 240 seconds","date":"2018-04-26T09:39:21.839Z","type":"quit"}
{"nick":"Pablo[m]","date":"2018-04-26T10:19:51.826Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-04-26T10:25:09.124Z","type":"quit"}
{"nick":"mylesborins","date":"2018-04-26T10:25:39.733Z","type":"join"}
{"nick":"AtumT","date":"2018-04-26T11:00:09.213Z","type":"join"}
{"nick":"plutoniix","reason":"Remote host closed the connection","date":"2018-04-26T11:50:45.878Z","type":"quit"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (https://ci.chromium.org/buildbot/client.v8.ports/V8%20Mips%20-%20builder/16733 from f5d308510aaaa52893ca8c1ec271ad88b6c8cc8a)","date":"2018-04-26T13:09:44.854Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by jgruber@chromium.org: closed (jgruber fixing https://ci.chromium.org/buildbot/client.v8.ports/V8%20Mips%20-%20builder/16733 from f5d308510aaaa52893ca8c1ec271ad88b6c8cc8a)","date":"2018-04-26T13:11:45.737Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00033\u0002Tree opened\u000f by jgruber@chromium.org: open","date":"2018-04-26T13:16:48.018Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (https://ci.chromium.org/buildbot/client.v8/V8%20Linux64%20-%20custom%20snapshot%20-%20debug/21175 from 9b2bb40448a9a00d2946b021bd5af09ee5b9f066)","date":"2018-04-26T13:42:59.610Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00033\u0002Tree opened\u000f by jgruber@chromium.org: open","date":"2018-04-26T13:43:59.998Z","type":"message"}
{"nick":"dobson","reason":"Quit: Leaving","date":"2018-04-26T15:03:48.970Z","type":"quit"}
{"nick":"dobson","date":"2018-04-26T15:07:24.176Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Read error: Connection reset by peer","date":"2018-04-26T16:51:45.000Z","type":"quit"}
{"nick":"seventh","date":"2018-04-26T17:26:11.497Z","type":"join"}
{"nick":"Wes-","date":"2018-04-26T17:58:35.214Z","type":"join"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (https://ci.chromium.org/buildbot/client.v8.ports/V8%20Arm/6945 from b66226828fdc3b2c02a02b5a2a9e64ea0c92432e)","date":"2018-04-26T18:57:26.796Z","type":"message"}
{"nick":"seventh","reason":"Remote host closed the connection","date":"2018-04-26T19:28:34.425Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2018-04-26T22:34:55.707Z","type":"join"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-04-26T23:20:13.259Z","type":"quit"}
