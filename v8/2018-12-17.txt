{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-12-17T00:24:02.383Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2018-12-17T11:01:42.410Z","type":"quit"}
{"nick":"cloudshu","date":"2018-12-17T15:52:24.391Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2016020300]","date":"2018-12-17T16:09:24.966Z","type":"quit"}
{"nick":"yan","date":"2018-12-17T19:55:12.844Z","type":"join"}
{"nick":"yan","message":"I'm trying to better understand the JIT; is it possible to force v8 to emit native code of a specific function for a specific set of arguments, bypassing normal instrumentation?","date":"2018-12-17T19:55:56.506Z","type":"message"}
{"nick":"AtumT","date":"2018-12-17T20:18:27.529Z","type":"join"}
{"nick":"yan","message":"I wrote a helper to pull out the code from a JSFunction, but the code doesn't change as i call the function with varied arg types","date":"2018-12-17T20:46:25.463Z","type":"message"}
{"nick":"aklein","message":"yan: v8 only generates one chunk of optimized code for a given function, so it wouldn't change in such cases. only when it's inlined do we do such specialization","date":"2018-12-17T20:56:11.916Z","type":"message"}
{"nick":"yan","message":"aklein: is it possible to force inlining?","date":"2018-12-17T20:57:04.162Z","type":"message"}
{"nick":"aklein","message":"yan: the usual way we do this in tests is to warm up the type feedback by running the (outer) function a couple times, and then using %OptimizeFunctionOnNextCall to trigger optimization","date":"2018-12-17T20:58:30.308Z","type":"message"}
{"nick":"aklein","message":"(needs --allow-natives-syntax as well)","date":"2018-12-17T20:58:47.830Z","type":"message"}
{"nick":"yan","message":"that's already how i'm dumping it. is there anything special about the shape of the outer function, or can it be as simple as forwarding args to inner function?","date":"2018-12-17T20:59:46.436Z","type":"message"}
{"nick":"yan","message":"something like: function outer(f, argArray) { return f.apply(f, argArray); }, and then call outer() ~40 times","date":"2018-12-17T21:00:23.288Z","type":"message"}
{"nick":"yan","message":"aklein: can it be that the compiler thread isn't emitting code between the function being primed and me dumping code?","date":"2018-12-17T21:05:42.855Z","type":"message"}
{"nick":"zv","reason":"Ping timeout: 264 seconds","date":"2018-12-17T21:49:52.149Z","type":"quit"}
{"nick":"yan","message":"aklein: i suspect it has to do with how i invoke the function. i have: \"driver() { outer() { inner(); } } }\", so i think driver() is being inlined, which is just a call to outer(), which inner() from being inlined into outer()","date":"2018-12-17T22:17:23.681Z","type":"message"}
{"nick":"RT|Chatzilla","date":"2018-12-17T22:27:44.264Z","type":"join"}
{"nick":"zv","date":"2018-12-17T23:08:28.727Z","type":"join"}
{"nick":"plutoniix","date":"2018-12-17T23:30:33.768Z","type":"join"}
{"nick":"AtumT","reason":"Quit: AtumT","date":"2018-12-17T23:51:53.473Z","type":"quit"}
