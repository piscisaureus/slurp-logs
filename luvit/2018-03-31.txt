{"nick":"Tenrys","reason":"Read error: Connection reset by peer","date":"2018-03-31T00:23:06.532Z","type":"quit"}
{"nick":"creationix","message":"I decided 64-bitops are too much trouble for now.  Went for blake2s instead. https://github.com/creationix/luajit-blake2s","date":"2018-03-31T02:44:06.313Z","type":"message"}
{"nick":"creationix","message":"my target hardware is usually 32-bit arm anyway","date":"2018-03-31T02:44:15.006Z","type":"message"}
{"nick":"creationix","message":"protip when converting a lua string to an `uint8[?]` ctype.  Don't pass in the string as the initializer unless your string will never be GCed","date":"2018-03-31T02:58:29.817Z","type":"message"}
{"nick":"creationix","message":"the ctype references the string's data, but doesn't keep it from being collecte","date":"2018-03-31T02:58:46.204Z","type":"message"}
{"nick":"creationix","message":"I ended up manually copying the data to prevent segfaults at gc","date":"2018-03-31T02:59:15.050Z","type":"message"}
{"nick":"creationix","message":"For example `data = ffi.new('uint_t[?]', #str, str)` does work, but is dangerous.","date":"2018-03-31T02:59:50.965Z","type":"message"}
{"nick":"creationix","message":"better `data = ffi.new('uint8_t[?]', #str) ffi.copy(data, str, #str)`","date":"2018-03-31T03:00:22.083Z","type":"message"}
{"nick":"daurnimator","message":"creationix: why not bind e.g. strdup","date":"2018-03-31T03:30:50.701Z","type":"message"}
{"nick":"creationix","message":"how would that help?","date":"2018-03-31T03:50:07.673Z","type":"message"}
{"nick":"creationix","message":"I'm just trying to convert a lua string into a ctype","date":"2018-03-31T03:50:17.882Z","type":"message"}
{"nick":"creationix","message":"I wonder if that segfault is a bug in luajit.  It probably shouldn't crash when GCing the string","date":"2018-03-31T03:52:24.861Z","type":"message"}
{"nick":"daurnimator","message":"creationix: because if you're going to make the allocation+copy, you might as well use the C function for it and not have it count towards luajit memory limit","date":"2018-03-31T04:00:17.477Z","type":"message"}
{"nick":"daurnimator","message":"and raw pointers are smaller IIRC","date":"2018-03-31T04:00:25.360Z","type":"message"}
{"nick":"creationix","message":"true, but I like being able to use ffi.sizeof on the ctype","date":"2018-03-31T04:00:56.430Z","type":"message"}
{"nick":"creationix","message":"it's more like what rust calls a slice","date":"2018-03-31T04:01:06.844Z","type":"message"}
{"nick":"daurnimator","message":"creationix: then consider having a weak table from data to string?","date":"2018-03-31T04:09:19.668Z","type":"message"}
{"nick":"Tenrys","date":"2018-03-31T05:17:01.239Z","type":"join"}
{"nick":"Tenrys","reason":"Read error: Connection reset by peer","date":"2018-03-31T13:29:53.734Z","type":"quit"}
{"nick":"Soni","message":"creationix: you use luvit on pi often?","date":"2018-03-31T14:58:47.003Z","type":"message"}
{"nick":"erlbot--","reason":"Remote host closed the connection","date":"2018-03-31T15:35:31.293Z","type":"quit"}
{"nick":"erlbot--","date":"2018-03-31T15:37:12.875Z","type":"join"}
{"nick":"erlbot--","reason":"Remote host closed the connection","date":"2018-03-31T15:50:49.403Z","type":"quit"}
{"nick":"erlbot--","date":"2018-03-31T15:51:12.348Z","type":"join"}
